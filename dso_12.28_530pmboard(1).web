<board name="DEV - DSO 13"><table name="Core" globalid="620e4b8b-1b1d-4ae0-84eb-5c44ba848b05" form="0" static="0" incidentindependent="1"><tablefieldlist><field name="dataid" datatype="int identity" label="DataID"><source type="system" datatype="int identity">WebEOC</source><source type="view" datatype="int">744</source><source type="view" datatype="int">746</source><source type="view" datatype="int">745</source><source type="view" datatype="int">747</source><source type="view" datatype="int">748</source><source type="view" datatype="int">749</source><source type="view" datatype="int">755</source><source type="view" datatype="int">788</source><source type="view" datatype="int">907</source></field><field name="incidentid" datatype="int" label="Incident"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">744</source><source type="view" datatype="int">746</source><source type="view" datatype="int">745</source><source type="view" datatype="int">747</source><source type="view" datatype="int">748</source><source type="view" datatype="int">749</source><source type="view" datatype="int">755</source><source type="view" datatype="int">788</source><source type="view" datatype="int">907</source></field><field name="userid" datatype="int" label="User"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">744</source><source type="view" datatype="int">746</source><source type="view" datatype="int">745</source><source type="view" datatype="int">747</source><source type="view" datatype="int">748</source><source type="view" datatype="int">749</source><source type="view" datatype="int">755</source><source type="view" datatype="int">788</source><source type="view" datatype="int">907</source></field><field name="positionid" datatype="int" label="Position"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">744</source><source type="view" datatype="int">746</source><source type="view" datatype="int">745</source><source type="view" datatype="int">747</source><source type="view" datatype="int">748</source><source type="view" datatype="int">749</source><source type="view" datatype="int">755</source><source type="view" datatype="int">788</source><source type="view" datatype="int">907</source></field><field name="prevdataid" datatype="int" label="Previous Data ID"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">744</source><source type="view" datatype="int">746</source><source type="view" datatype="int">745</source><source type="view" datatype="int">747</source><source type="view" datatype="int">748</source><source type="view" datatype="int">749</source><source type="view" datatype="int">755</source><source type="view" datatype="int">788</source><source type="view" datatype="int">907</source></field><field name="entrydate" datatype="datetime" label="Entry date"><source type="system" datatype="datetime">WebEOC</source><source type="view" datatype="datetime">744</source><source type="view" datatype="datetime">746</source><source type="view" datatype="datetime">745</source><source type="view" datatype="datetime">747</source><source type="view" datatype="datetime">748</source><source type="view" datatype="datetime">749</source><source type="view" datatype="datetime">755</source><source type="view" datatype="datetime">788</source><source type="view" datatype="datetime">907</source></field><field name="globalid" datatype="nvarchar" length="40"><source type="system" datatype="nvarchar" length="40">WebEOC</source></field><field name="subscribername" datatype="nvarchar" length="500" label="Subscriber"><source type="system" datatype="nvarchar" length="500">WebEOC</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">745</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">748</source><source type="view" datatype="nvarchar" length="500">749</source><source type="view" datatype="nvarchar" length="500">755</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="jurisdictionType" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="100">744</source><source type="view" datatype="nvarchar" length="100">746</source><source type="view" datatype="nvarchar" length="100">747</source><source type="view" datatype="nvarchar" length="500">755</source><source type="view" datatype="nvarchar" length="100">788</source><source type="view" datatype="nvarchar" length="100">907</source></field><field name="county" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">755</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="city" datatype="nvarchar" length="500" label="" list="DSO Cities"><source type="view" datatype="nvarchar" length="500" list="DSO Cities">744</source><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">755</source><source type="view" datatype="nvarchar" length="500" list="DSO Cities">788</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="type" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="nfip" datatype="nvarchar" length="100" label=""><source type="view" datatype="nvarchar" length="100">746</source><source type="view" datatype="nvarchar" length="100">747</source><source type="view" datatype="nvarchar" length="100">788</source><source type="view" datatype="nvarchar" length="100">744</source><source type="view" datatype="nvarchar" length="100">907</source></field><field name="declarationIssued" datatype="nvarchar" length="100" label=""><source type="view" datatype="nvarchar" length="100">746</source><source type="view" datatype="nvarchar" length="100">747</source><source type="view" datatype="nvarchar" length="100">788</source><source type="view" datatype="nvarchar" length="100">744</source><source type="view" datatype="nvarchar" length="100">907</source></field><field name="contactPerson" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="address" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="phone" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="fax" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="pager" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="dutyPhone" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sfhAffected" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sfhMinorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sfhMajorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sfhDestroyed" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sfhCovByInsurance" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mhAffected" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mhMinorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mhMajorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mhDestroyed" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mhCovByInsurance" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mfuAffected" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mfuMinorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mfuMajorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mfuDestroyed" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mfuCovByInsurance" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="totalsAffected" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="totalsMinorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="totalsMajorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="totalsDestroyed" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="totalsCovByInsurance" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="numberMinorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="coveredMinorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="totalMinorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="numberMajorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="coveredMajorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="totalMajorDamage" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="numberTotal" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="coveredTotal" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="totalTotal" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="businessesCeased" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="businessesEconomicInjury" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="numberUnemployed" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sitesDebrisClearance" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCostDebrisClearance" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insuranceDebrisClearance" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sitesEmergency" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCostEmergency" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insuranceEmergency" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sitesRoadPaved" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCostRoadPaved" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insuranceRoadPaved" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sitesWaterControlFacilities" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCostWaterControlFacilities" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insuranceWaterControlFacilities" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sitesBuildingsEquipment" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCostBuildingsEquipment" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insuranceBuildingsEquipment" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sitesUtilitySystems" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCostUtilitySystems" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insuranceUtilitySystems" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sitesOther" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCostOther" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insuranceOther" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sitesTotals" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCostTotals" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insuranceTotals" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="annualMaintenanceBudget" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="startOfFiscalYear" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility01" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites01" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost01" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance01" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility02" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites02" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost02" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance02" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility03" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites03" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost03" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance03" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility04" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites04" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost04" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance04" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility05" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites05" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost05" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance05" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility06" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites06" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost06" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance06" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility07" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites07" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost07" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance07" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility08" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites08" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost08" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance08" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility09" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites09" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost09" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance09" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility10" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites10" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost10" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance10" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility11" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites11" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost11" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance11" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility12" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites12" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost12" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance12" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility13" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites13" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost13" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance13" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility14" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites14" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost14" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance14" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="orgFacility15" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sites15" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCost15" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insurance15" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sitesOtherTotal" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="repairCostTotal" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="insuranceCostTotal" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="submitterName" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="submitterEmail" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sortCountyOrder" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="sortCityOrder" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="updated" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="homesIsolated" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="mobilePhone" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="population" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="submitedDateTime" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="continuing" datatype="nvarchar" length="100" label=""><source type="view" datatype="nvarchar" length="100">746</source><source type="view" datatype="nvarchar" length="100">747</source><source type="view" datatype="nvarchar" length="100">788</source><source type="view" datatype="nvarchar" length="100">744</source><source type="view" datatype="nvarchar" length="100">907</source></field><field name="hidden" datatype="nvarchar" length="100" label=""><source type="view" datatype="nvarchar" length="100">746</source><source type="view" datatype="nvarchar" length="100">745</source><source type="view" datatype="nvarchar" length="100">747</source><source type="view" datatype="nvarchar" length="100">749</source><source type="view" datatype="nvarchar" length="100">755</source><source type="view" datatype="nvarchar" length="100">788</source><source type="view" datatype="nvarchar" length="100">744</source><source type="view" datatype="nvarchar" length="100">907</source></field><field name="webeocIncident" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">755</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="dateOfDisaster1" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">755</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="notes" datatype="ntext" label=""><source type="view" datatype="ntext" length="">746</source><source type="view" datatype="ntext" length="">747</source><source type="view" datatype="ntext" length="">788</source><source type="view" datatype="ntext" length="">744</source><source type="view" datatype="ntext" length="">907</source></field><field name="cat13" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="dateOfDisaster2" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">755</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat01" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat02" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat03" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat04" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat05" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat06" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat07" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat08" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat09" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat10" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat11" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat12" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat14" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="cat15" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="contactPersonTitle" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="incidentName" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="additionalEmails" datatype="nvarchar" label="" length="500"><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="key" datatype="nvarchar" length="500"></field><field name="editKey" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">748</source><source type="view" datatype="nvarchar" length="500">755</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="socProcessed" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source><source type="view" datatype="nvarchar" length="500">755</source><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="dsoDisable" datatype="nvarchar" length="100" label=""><source type="view" datatype="nvarchar" length="100">755</source><source type="view" datatype="nvarchar" length="100">788</source><source type="view" datatype="nvarchar" length="100">744</source><source type="view" datatype="nvarchar" length="100">907</source></field><field name="entryType" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">746</source><source type="view" datatype="nvarchar" length="500">747</source></field><field name="DSOdropOPS" label="" datatype="nvarchar" length="500"></field><field name="jurisdictionTypeOPS" label="" datatype="nvarchar" length="100"></field><field name="tester" label="" datatype="nvarchar" length="500"></field><field name="notesOPS" label="" datatype="ntext"><source type="view" datatype="ntext" length="">755</source></field><field name="countyEmail" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="ddcEmail" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="emailTo" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="emailSubject" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">788</source><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="emailBody" label="" datatype="ntext"><source type="view" datatype="ntext" length="">788</source><source type="view" datatype="ntext" length="">744</source><source type="view" datatype="ntext" length="">907</source></field><field name="fakeDataLink" label="" datatype="nvarchar" length="100"></field><field name="submitterEmailHidden" label="" datatype="nvarchar" length="500"></field><field name="additionalEmailsHidden" label="" datatype="nvarchar" length="500"></field><field name="countyEmailHidden" label="" datatype="nvarchar" length="500"></field><field name="ddcEmailHidden" label="" datatype="nvarchar" length="500"></field><field name="totalsCovByInsurance2" label="" datatype="nvarchar" length="500"></field><field name="copyCity" label="" datatype="ntext"></field><field name="cityTmp" label="" datatype="ntext"><source type="view" datatype="ntext" length="">744</source><source type="view" datatype="ntext" length="">788</source><source type="view" datatype="ntext" length="">907</source></field><field name="copyCounty" label="" datatype="ntext"></field><field name="other" label="" datatype="nvarchar" length="500"></field><field name="dsoSelected" label="" datatype="nvarchar" length="100"><source type="view" datatype="nvarchar" length="100">788</source><source type="view" datatype="nvarchar" length="100">744</source><source type="view" datatype="nvarchar" length="100">907</source></field><field name="testTestTextField" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">744</source></field><field name="totalJurisdictions" label="" datatype="int" length="4"></field><field name="incidentList" label="" datatype="nvarchar" length="500"></field><field name="fk_table_111" label="" datatype="int"></field><field name="copyFK" label="" datatype="ntext"></field><field name="impactedCountiesDSO" label="" datatype="ntext"></field><field name="dateDecRec" label="" datatype="ntext"></field><field name="declarationIssuedState" label="" datatype="nvarchar" length="100"></field><field name="dateDecRecState" label="" datatype="ntext"></field><field name="declarationIssuedFederal" label="" datatype="nvarchar" length="100"></field><field name="dateDecRecFederal" label="" datatype="ntext"></field><field name="countyLetter" label="" datatype="nvarchar" length="100"></field><field name="ack1" label="" datatype="ntext"></field><field name="assistanceRequested" label="" datatype="ntext"></field><field name="assistanceRequestedDate" label="" datatype="ntext"></field><field name="ack2" label="" datatype="ntext"></field><field name="iaInitialContactDate" label="" datatype="ntext"></field><field name="iaPDAScheduled" label="" datatype="ntext"></field><field name="iaPDAComplete" label="" datatype="ntext"></field><field name="IAComments" label="" datatype="ntext"></field><field name="paPDAScheduled" label="" datatype="ntext"></field><field name="paPDAComplete" label="" datatype="ntext"></field><field name="PAComments" label="" datatype="ntext"></field><field name="decAttachment" label="" datatype="int" length="4" file="true"></field><field name="letterAttachment" label="" datatype="int" length="4" file="true"></field><field name="otherAttachment" label="" datatype="int" length="4" file="true"></field><field name="hide" label="" datatype="nvarchar" length="100"></field><field name="dateTimeUpdate" label="" datatype="nvarchar" length="500"></field><field name="currentChangeLog" label="" datatype="ntext"></field><field name="otherValue" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="city2" label="" datatype="ntext"><source type="view" datatype="ntext" length="">744</source><source type="view" datatype="ntext" length="">907</source></field><field name="DSOisSelected" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="countyCopyDSO" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">744</source><source type="view" datatype="nvarchar" length="500">907</source></field><field name="fk_table_112" label="" datatype="int"></field><field name="fk_table_" label="" datatype="int"></field><field name="totalsAffectedTrump" label="" datatype="nvarchar" length="500"></field><field name="totalsMinorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="totalsMajorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="totalsDestroyedTrump" label="" datatype="nvarchar" length="500"></field><field name="totalsCovByInsuranceTrump" label="" datatype="nvarchar" length="500"></field><field name="submitterName2" label="" datatype="nvarchar" length="500"></field><field name="sfhAffectedTrump" label="" datatype="nvarchar" length="500"></field><field name="sfhMinorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="sfhMajorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="sfhDestroyedTrump" label="" datatype="nvarchar" length="500"></field><field name="sfhCovByInsuranceTrump" label="" datatype="nvarchar" length="500"></field><field name="mhAffectedTrump" label="" datatype="nvarchar" length="500"></field><field name="mhMinorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="mhMajorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="mhDestroyedTrump" label="" datatype="nvarchar" length="500"></field><field name="mhCovByInsuranceTrump" label="" datatype="nvarchar" length="500"></field><field name="mfuAffectedTrump" label="" datatype="nvarchar" length="500"></field><field name="mfuMinorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="mfuMajorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="mfuDestroyedTrump" label="" datatype="nvarchar" length="500"></field><field name="mfuCovByInsuranceTrump" label="" datatype="nvarchar" length="500"></field><field name="numberMinorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="coveredMinorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="totalMinorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="numberMajorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="coveredMajorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="totalMajorDamageTrump" label="" datatype="nvarchar" length="500"></field><field name="numberTotalTrump" label="" datatype="nvarchar" length="500"></field><field name="coveredTotalTrump" label="" datatype="nvarchar" length="500"></field><field name="totalTotalTrump" label="" datatype="nvarchar" length="500"></field><field name="businessesCeasedTrump" label="" datatype="nvarchar" length="500"></field><field name="businessesEconomicInjuryTrump" label="" datatype="nvarchar" length="500"></field><field name="numberUnemployedTrump" label="" datatype="nvarchar" length="500"></field><field name="sitesDebrisClearanceTrump" label="" datatype="nvarchar" length="500"></field><field name="repairCostDebrisClearanceTrump" label="" datatype="nvarchar" length="500"></field><field name="insuranceDebrisClearanceTrump" label="" datatype="nvarchar" length="500"></field><field name="sitesEmergencyTrump" label="" datatype="nvarchar" length="500"></field><field name="repairCostEmergencyTrump" label="" datatype="nvarchar" length="500"></field><field name="insuranceEmergencyTrump" label="" datatype="nvarchar" length="500"></field><field name="sitesRoadPavedTrump" label="" datatype="nvarchar" length="500"></field><field name="repairCostRoadPavedTrump" label="" datatype="nvarchar" length="500"></field><field name="insuranceRoadPavedTrump" label="" datatype="nvarchar" length="500"></field><field name="sitesWaterControlFacilitiesTrump" label="" datatype="nvarchar" length="500"></field><field name="repairCostWaterControlFacilitiesTrump" label="" datatype="nvarchar" length="500"></field><field name="insuranceWaterControlFacilitiesTrump" label="" datatype="nvarchar" length="500"></field><field name="sitesBuildingsEquipmentTrump" label="" datatype="nvarchar" length="500"></field><field name="repairCostBuildingsEquipmentTrump" label="" datatype="nvarchar" length="500"></field><field name="insuranceBuildingsEquipmentTrump" label="" datatype="nvarchar" length="500"></field><field name="sitesUtilitySystemsTrump" label="" datatype="nvarchar" length="500"></field><field name="repairCostUtilitySystemsTrump" label="" datatype="nvarchar" length="500"></field><field name="insuranceUtilitySystemsTrump" label="" datatype="nvarchar" length="500"></field><field name="sitesOtherTrump" label="" datatype="nvarchar" length="500"></field><field name="repairCostOtherTrump" label="" datatype="nvarchar" length="500"></field><field name="insuranceOtherTrump" label="" datatype="nvarchar" length="500"></field><field name="annualMaintenanceBudgetTrump" label="" datatype="nvarchar" length="500"></field><field name="startOfFiscalYearTrump" label="" datatype="nvarchar" length="500"></field><field name="sitesTotalsTrump" label="" datatype="nvarchar" length="500"></field><field name="repairCostTotalsTrump" label="" datatype="nvarchar" length="500"></field><field name="insuranceTotalsTrump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility01Trump" label="" datatype="nvarchar" length="500"></field><field name="cat01Trump" label="" datatype="nvarchar" length="500"></field><field name="sites01Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost01Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance01Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility02Trump" label="" datatype="nvarchar" length="500"></field><field name="cat02Trump" label="" datatype="nvarchar" length="500"></field><field name="sites02Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost02Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance02Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility03Trump" label="" datatype="nvarchar" length="500"></field><field name="cat03Trump" label="" datatype="nvarchar" length="500"></field><field name="sites03Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost03Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance03Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility04Trump" label="" datatype="nvarchar" length="500"></field><field name="cat04Trump" label="" datatype="nvarchar" length="500"></field><field name="sites04Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost04Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance04Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility05Trump" label="" datatype="nvarchar" length="500"></field><field name="cat05Trump" label="" datatype="nvarchar" length="500"></field><field name="sites05Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost05Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance05Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility06Trump" label="" datatype="nvarchar" length="500"></field><field name="cat06Trump" label="" datatype="nvarchar" length="500"></field><field name="sites06Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost06Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance06Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility07Trump" label="" datatype="nvarchar" length="500"></field><field name="cat07Trump" label="" datatype="nvarchar" length="500"></field><field name="sites07Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost07Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance07Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility08Trump" label="" datatype="nvarchar" length="500"></field><field name="cat08Trump" label="" datatype="nvarchar" length="500"></field><field name="sites08Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost08Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance08Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility09Trump" label="" datatype="nvarchar" length="500"></field><field name="cat09Trump" label="" datatype="nvarchar" length="500"></field><field name="sites09Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost09Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance09Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility10Trump" label="" datatype="nvarchar" length="500"></field><field name="cat10Trump" label="" datatype="nvarchar" length="500"></field><field name="sites10Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost10Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance10Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility11Trump" label="" datatype="nvarchar" length="500"></field><field name="cat11Trump" label="" datatype="nvarchar" length="500"></field><field name="sites11Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost11Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance11Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility12Trump" label="" datatype="nvarchar" length="500"></field><field name="cat12Trump" label="" datatype="nvarchar" length="500"></field><field name="sites12Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost12Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance12Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility13Trump" label="" datatype="nvarchar" length="500"></field><field name="cat13Trump" label="" datatype="nvarchar" length="500"></field><field name="sites13Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost13Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance13Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility14Trump" label="" datatype="nvarchar" length="500"></field><field name="cat14Trump" label="" datatype="nvarchar" length="500"></field><field name="sites14Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost14Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance14Trump" label="" datatype="nvarchar" length="500"></field><field name="orgFacility15Trump" label="" datatype="nvarchar" length="500"></field><field name="cat15Trump" label="" datatype="nvarchar" length="500"></field><field name="sites15Trump" label="" datatype="nvarchar" length="500"></field><field name="repairCost15Trump" label="" datatype="nvarchar" length="500"></field><field name="insurance15Trump" label="" datatype="nvarchar" length="500"></field><field name="sitesOtherTotalTrump" label="" datatype="nvarchar" length="500"></field><field name="repairCostTotalTrump" label="" datatype="nvarchar" length="500"></field><field name="insuranceCostTotalTrump" label="" datatype="nvarchar" length="500"></field><field name="homesIsolatedTrump" label="" datatype="nvarchar" length="500"></field><field name="sfhAffectedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sfhMinorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sfhMajorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sfhDestroyedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sfhCovByInsuranceMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="mhAffectedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="mhMinorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="mhMajorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="mhDestroyedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="mhCovByInsuranceMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="mfuAffectedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="mfuMinorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="mfuMajorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="mfuDestroyedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="mfuCovByInsuranceMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="totalsAffectedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="totalsMinorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="totalsMajorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="totalsDestroyedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="totalsCovByInsuranceMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="homesIsolatedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="numberMinorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="coveredMinorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="totalMinorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="numberMajorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="coveredMajorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="totalMajorDamageMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="numberTotalMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="coveredTotalMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="totalTotalMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="businessesCeasedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="businessesEconomicInjuryMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="numberUnemployedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sitesDebrisClearanceMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCostDebrisClearanceMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insuranceDebrisClearanceMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sitesEmergencyMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCostEmergencyMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insuranceEmergencyMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sitesRoadPavedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCostRoadPavedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insuranceRoadPavedMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sitesWaterControlFacilitiesMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCostWaterControlFacilitiesMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insuranceWaterControlFacilitiesMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sitesBuildingsEquipmentMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCostBuildingsEquipmentMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insuranceBuildingsEquipmentMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sitesUtilitySystemsMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCostUtilitySystemsMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insuranceUtilitySystemsMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sitesOtherMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCostOtherMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insuranceOtherMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sitesTotalsMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCostTotalsMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insuranceTotalsMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="annualMaintenanceBudgetMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="startOfFiscalYearMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility01MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat01MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites01MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost01MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance01MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility02MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat02MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites02MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost02MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance02MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility03MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat03MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites03MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost03MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance03MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility04MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat04MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites04MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost04MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance04MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility05MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat05MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites05MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost05MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance05MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility06MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat06MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites06MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost06MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance06MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility07MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat07MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites07MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost07MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance07MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility08MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat08MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites08MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost08MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance08MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility09MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat09MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites09MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost09MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance09MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility10MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat10MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites10MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost10MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance10MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility11MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat11MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites11MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost11MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance11MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility12MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat12MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites12MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost12MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance12MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility13MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat13MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites13MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost13MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance13MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility14MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat14MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites14MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost14MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance14MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="orgFacility15MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="cat15MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sites15MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCost15MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insurance15MasterDSO" label="" datatype="nvarchar" length="500"></field><field name="sitesOtherTotalMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="repairCostTotalMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="insuranceCostTotalMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="countyMasterDSO" label="" datatype="nvarchar" length="500"></field><field name="masterDSOThisIs" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">907</source><source type="view" datatype="nvarchar" length="500">744</source></field><field name="stateThreshold" label="" datatype="nvarchar" length="500"></field></tablefieldlist></table><table name="Supplemental" globalid="ce242b05-4eae-4c66-9c65-65cf2592a817" form="0" static="0" incidentindependent="1"><tablefieldlist><field name="dataid" datatype="int identity" label="DataID"><source type="system" datatype="int identity">WebEOC</source><source type="view" datatype="int">750</source><source type="view" datatype="int">751</source><source type="view" datatype="int">752</source><source type="view" datatype="int">756</source><source type="view" datatype="int">757</source><source type="view" datatype="int">906</source></field><field name="incidentid" datatype="int" label="Incident"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">750</source><source type="view" datatype="int">751</source><source type="view" datatype="int">752</source><source type="view" datatype="int">756</source><source type="view" datatype="int">757</source><source type="view" datatype="int">906</source></field><field name="userid" datatype="int" label="User"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">750</source><source type="view" datatype="int">751</source><source type="view" datatype="int">752</source><source type="view" datatype="int">756</source><source type="view" datatype="int">757</source><source type="view" datatype="int">906</source></field><field name="positionid" datatype="int" label="Position"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">750</source><source type="view" datatype="int">751</source><source type="view" datatype="int">752</source><source type="view" datatype="int">756</source><source type="view" datatype="int">757</source><source type="view" datatype="int">906</source></field><field name="prevdataid" datatype="int" label="Previous Data ID"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">750</source><source type="view" datatype="int">751</source><source type="view" datatype="int">752</source><source type="view" datatype="int">756</source><source type="view" datatype="int">757</source><source type="view" datatype="int">906</source></field><field name="entrydate" datatype="datetime" label="Entry date"><source type="system" datatype="datetime">WebEOC</source><source type="view" datatype="datetime">750</source><source type="view" datatype="datetime">751</source><source type="view" datatype="datetime">752</source><source type="view" datatype="datetime">756</source><source type="view" datatype="datetime">757</source><source type="view" datatype="datetime">906</source></field><field name="globalid" datatype="nvarchar" length="40"><source type="system" datatype="nvarchar" length="40">WebEOC</source></field><field name="subscribername" datatype="nvarchar" length="500" label="Subscriber"><source type="system" datatype="nvarchar" length="500">WebEOC</source><source type="view" datatype="nvarchar" length="500">750</source><source type="view" datatype="nvarchar" length="500">751</source><source type="view" datatype="nvarchar" length="500">752</source><source type="view" datatype="nvarchar" length="500">756</source><source type="view" datatype="nvarchar" length="500">757</source><source type="view" datatype="nvarchar" length="500">906</source></field><field name="county" datatype="nvarchar" length="500" list="" label=""><source type="view" datatype="nvarchar" length="500">751</source><source type="view" datatype="nvarchar" length="500">752</source></field><field name="countyDeclared" datatype="nvarchar" length="500" list=""></field><field name="countyLetter" datatype="nvarchar" length="100" label=""><source type="view" datatype="nvarchar" length="100">752</source></field><field name="letterAttachment" datatype="int" length="4" file="true" label=""><source type="view" datatype="int" length="4" file="true">752</source></field><field name="decAttachment" datatype="int" length="4" file="true" label=""><source type="view" datatype="int" length="4" file="true">752</source></field><field name="otherAttachment" datatype="int" length="4" file="true" label=""><source type="view" datatype="int" length="4" file="true">752</source></field><field name="returnLocalDecLetter" datatype="nvarchar" length="500"></field><field name="returnLetterToGovDate" datatype="nvarchar" length="500"></field><field name="incidentPeriod" datatype="nvarchar" length="500"></field><field name="locDecRec" datatype="ntext"></field><field name="impactedCountiesDSO" datatype="ntext" label=""><source type="view" datatype="ntext" length="">752</source></field><field name="requestPacketComplete" datatype="nvarchar" length="100"></field><field name="iaPDAScheduled" datatype="ntext" label=""><source type="view" datatype="ntext" length="">752</source></field><field name="iaPDAComplete" datatype="ntext" label=""><source type="view" datatype="ntext" length="">752</source></field><field name="paPDAScheduled" datatype="ntext" label=""><source type="view" datatype="ntext" length="">752</source></field><field name="paPDAComplete" datatype="ntext" label=""><source type="view" datatype="ntext" length="">752</source></field><field name="flashRptRec" datatype="nvarchar" length="500"></field><field name="dsoAcknowledgeLetterSent" datatype="nvarchar" length="500"></field><field name="AcknowledgeLetterSent1" datatype="nvarchar" label="" length="500"></field><field name="AcknowledgeLetterSent2" datatype="nvarchar" label="" length="500"></field><field name="requestLetterRec1" datatype="nvarchar" length="100"></field><field name="AcknowledgeLetterSent3" datatype="nvarchar" length="500"></field><field name="hide" datatype="nvarchar" length="100" label=""><source type="view" datatype="nvarchar" length="100">752</source></field><field name="sortCountyOrder" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">752</source></field><field name="sortCityOrder" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">752</source></field><field name="jurisdictionType" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">751</source><source type="view" datatype="nvarchar" length="100">752</source></field><field name="city" datatype="nvarchar" length="500" list="DSO Cities" label=""><source type="view" datatype="nvarchar" length="500">751</source><source type="view" datatype="nvarchar" length="500" list="DSO Cities">752</source></field><field name="updated" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">751</source><source type="view" datatype="nvarchar" length="500">752</source></field><field name="assistanceRequested" datatype="ntext" label=""><source type="view" datatype="ntext" length="">752</source></field><field name="assistanceRequestedDate" datatype="ntext" label=""><source type="view" datatype="ntext" length="">752</source></field><field name="dsoConfirmationNumber" datatype="nvarchar" length="500"></field><field name="iaInitialContactDate" datatype="ntext" label=""><source type="view" datatype="ntext" length="">752</source></field><field name="iaPdaRequested" datatype="nvarchar" label="" length="500"></field><field name="paPdaRequested" datatype="nvarchar" label="" length="500"></field><field name="attachDSO" datatype="nvarchar" length="500"></field><field name="dsoYesNo" datatype="nvarchar" length="100" label=""><source type="view" datatype="nvarchar" length="100">752</source></field><field name="dsoDropdown" datatype="nvarchar" length="500"></field><field name="pickDSO" datatype="nvarchar" length="500"></field><field name="declarationIssued" datatype="nvarchar" length="100" label=""><source type="view" datatype="nvarchar" length="100">752</source></field><field name="totalJursidictions" datatype="nvarchar" length="500"></field><field name="dateDecRec" datatype="ntext" label=""><source type="view" datatype="ntext" length="">752</source></field><field name="dataidPete" datatype="nvarchar" length="500"></field><field name="incidentName" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">752</source></field><field name="incidentName2" datatype="nvarchar" length="500" label=""></field><field name="incidentList" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">752</source></field><field name="currentChangeLog" datatype="ntext" label=""><source type="view" datatype="ntext" length="">750</source><source type="view" datatype="ntext" length="">752</source></field><field name="dateTimeUpdate" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">750</source><source type="view" datatype="nvarchar" length="500">752</source></field><field name="status" datatype="nvarchar" length="500" label=""></field><field name="currentChangeLog2" datatype="ntext"></field><field name="dateTimeUpdate2" datatype="nvarchar" length="500"></field><field name="jurisdictionType1" label="" datatype="nvarchar" length="100"></field><field name="jurisdictionType2" label="" datatype="nvarchar" length="100"></field><field name="dsoYesNo1" label="" datatype="nvarchar" length="100"></field><field name="dsoYesNo2" label="" datatype="nvarchar" length="100"></field><field name="incidentName3" label="" datatype="nvarchar" length="500"></field><field name="incidentNameTmp" label="" datatype="nvarchar" length="500"></field><field name="femaCheckbox" label="" datatype="nvarchar" length="100"></field><field name="totalJurisdictions" label="" datatype="int" length="4"><source type="view" datatype="int" length="4">752</source></field><field name="femaCheckboxV2" label="" datatype="nvarchar" length="100"><source type="view" datatype="nvarchar" length="100">757</source><source type="view" datatype="nvarchar" length="100">752</source></field><field name="femaCheckboxV1" label="" datatype="nvarchar" length="100"><source type="view" datatype="nvarchar" length="100">756</source><source type="view" datatype="nvarchar" length="100">752</source></field><field name="ack1" label="" datatype="ntext"><source type="view" datatype="ntext" length="">752</source></field><field name="ack2" label="" datatype="ntext"><source type="view" datatype="ntext" length="">752</source></field><field name="IAComments" label="" datatype="ntext"><source type="view" datatype="ntext" length="">756</source><source type="view" datatype="ntext" length="">752</source></field><field name="PAComments" label="" datatype="ntext"><source type="view" datatype="ntext" length="">757</source><source type="view" datatype="ntext" length="">752</source></field><field name="PAxField" label="" datatype="ntext"></field><field name="femaDeclaration" label="" datatype="nvarchar" length="100"><source type="view" datatype="nvarchar" length="100">756</source><source type="view" datatype="nvarchar" length="100">757</source></field><field name="femaDeclarationComments" label="" datatype="ntext"><source type="view" datatype="ntext" length="">756</source></field><field name="sbaDeclaration" label="" datatype="nvarchar" length="100"><source type="view" datatype="nvarchar" length="100">756</source></field><field name="sbaDeclarationComments" label="" datatype="ntext"><source type="view" datatype="ntext" length="">756</source></field><field name="femaDeclaration2" label="" datatype="nvarchar" length="100"></field><field name="femaDeclarationComments2" label="" datatype="ntext"><source type="view" datatype="ntext" length="">757</source></field><field name="declarationIssuedState" label="" datatype="nvarchar" length="100"><source type="view" datatype="nvarchar" length="100">752</source></field><field name="dateDecRecState" label="" datatype="ntext"><source type="view" datatype="ntext" length="">752</source></field><field name="declarationIssuedFederal" label="" datatype="nvarchar" length="100"><source type="view" datatype="nvarchar" length="100">752</source></field><field name="dateDecRecFederal" label="" datatype="ntext"><source type="view" datatype="ntext" length="">752</source></field><field name="cityTmp2" label="" datatype="ntext"></field><field name="cityTmp" label="" datatype="ntext"><source type="view" datatype="ntext" length="">752</source></field><field name="countyTmp" label="" datatype="ntext"></field><field name="fk_table_111" label="" datatype="int"><source type="view" datatype="int">752</source><source type="view" datatype="int">906</source></field><field name="webeocIncident" label="" datatype="nvarchar" length="500"></field><field name="copyFK" label="" datatype="ntext"><source type="view" datatype="ntext" length="">752</source></field><field name="fk_table_" label="" datatype="int"></field><field name="other" label="" datatype="nvarchar" length="500"></field><field name="otherValue" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">752</source></field><field name="dummyList" label="" datatype="nvarchar" length="500"></field><field name="city2" label="" datatype="ntext"><source type="view" datatype="ntext" length="">752</source></field><field name="city3" label="" datatype="ntext"></field><field name="countyCopy" label="" datatype="nvarchar" length="500"></field><field name="DSOisSelected2" label="" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">752</source><source type="view" datatype="nvarchar" length="500">906</source></field><field name="submitedDateTime" label="" datatype="nvarchar" length="500"></field><field name="editKey" label="" datatype="nvarchar" length="500"></field><field name="dsoSelected" label="" datatype="nvarchar" length="100"></field><field name="testTestTextField" label="" datatype="nvarchar" length="500"></field><field name="DSOisSelected" label="" datatype="nvarchar" length="500"></field><field name="countyCopyDSO" label="" datatype="nvarchar" length="500"></field><field name="population" label="" datatype="nvarchar" length="500"></field><field name="type" label="" datatype="nvarchar" length="500"></field><field name="nfip" label="" datatype="nvarchar" length="100"></field><field name="dateOfDisaster1" label="" datatype="nvarchar" length="500"></field><field name="dateOfDisaster2" label="" datatype="nvarchar" length="500"></field><field name="continuing" label="" datatype="nvarchar" length="100"></field><field name="contactPerson" label="" datatype="nvarchar" length="500"></field><field name="contactPersonTitle" label="" datatype="nvarchar" length="500"></field><field name="address" label="" datatype="nvarchar" length="500"></field><field name="phone" label="" datatype="nvarchar" length="500"></field><field name="mobilePhone" label="" datatype="nvarchar" length="500"></field><field name="fax" label="" datatype="nvarchar" length="500"></field><field name="pager" label="" datatype="nvarchar" length="500"></field><field name="dutyPhone" label="" datatype="nvarchar" length="500"></field><field name="sfhAffected" label="" datatype="nvarchar" length="500"></field><field name="sfhMinorDamage" label="" datatype="nvarchar" length="500"></field><field name="sfhMajorDamage" label="" datatype="nvarchar" length="500"></field><field name="sfhDestroyed" label="" datatype="nvarchar" length="500"></field><field name="sfhCovByInsurance" label="" datatype="nvarchar" length="500"></field><field name="mhAffected" label="" datatype="nvarchar" length="500"></field><field name="mhMinorDamage" label="" datatype="nvarchar" length="500"></field><field name="mhMajorDamage" label="" datatype="nvarchar" length="500"></field><field name="mhDestroyed" label="" datatype="nvarchar" length="500"></field><field name="mhCovByInsurance" label="" datatype="nvarchar" length="500"></field><field name="mfuAffected" label="" datatype="nvarchar" length="500"></field><field name="mfuMinorDamage" label="" datatype="nvarchar" length="500"></field><field name="mfuMajorDamage" label="" datatype="nvarchar" length="500"></field><field name="mfuDestroyed" label="" datatype="nvarchar" length="500"></field><field name="mfuCovByInsurance" label="" datatype="nvarchar" length="500"></field><field name="totalsAffected" label="" datatype="nvarchar" length="500"></field><field name="totalsMinorDamage" label="" datatype="nvarchar" length="500"></field><field name="totalsMajorDamage" label="" datatype="nvarchar" length="500"></field><field name="totalsDestroyed" label="" datatype="nvarchar" length="500"></field><field name="totalsCovByInsurance" label="" datatype="nvarchar" length="500"></field><field name="homesIsolated" label="" datatype="nvarchar" length="500"></field><field name="numberMinorDamage" label="" datatype="nvarchar" length="500"></field><field name="coveredMinorDamage" label="" datatype="nvarchar" length="500"></field><field name="totalMinorDamage" label="" datatype="nvarchar" length="500"></field><field name="numberMajorDamage" label="" datatype="nvarchar" length="500"></field><field name="coveredMajorDamage" label="" datatype="nvarchar" length="500"></field><field name="totalMajorDamage" label="" datatype="nvarchar" length="500"></field><field name="numberTotal" label="" datatype="nvarchar" length="500"></field><field name="coveredTotal" label="" datatype="nvarchar" length="500"></field><field name="totalTotal" label="" datatype="nvarchar" length="500"></field><field name="businessesCeased" label="" datatype="nvarchar" length="500"></field><field name="businessesEconomicInjury" label="" datatype="nvarchar" length="500"></field><field name="numberUnemployed" label="" datatype="nvarchar" length="500"></field><field name="sitesDebrisClearance" label="" datatype="nvarchar" length="500"></field><field name="repairCostDebrisClearance" label="" datatype="nvarchar" length="500"></field><field name="insuranceDebrisClearance" label="" datatype="nvarchar" length="500"></field><field name="sitesEmergency" label="" datatype="nvarchar" length="500"></field><field name="repairCostEmergency" label="" datatype="nvarchar" length="500"></field><field name="insuranceEmergency" label="" datatype="nvarchar" length="500"></field><field name="sitesRoadPaved" label="" datatype="nvarchar" length="500"></field><field name="repairCostRoadPaved" label="" datatype="nvarchar" length="500"></field><field name="insuranceRoadPaved" label="" datatype="nvarchar" length="500"></field><field name="sitesWaterControlFacilities" label="" datatype="nvarchar" length="500"></field><field name="repairCostWaterControlFacilities" label="" datatype="nvarchar" length="500"></field><field name="insuranceWaterControlFacilities" label="" datatype="nvarchar" length="500"></field><field name="sitesBuildingsEquipment" label="" datatype="nvarchar" length="500"></field><field name="repairCostBuildingsEquipment" label="" datatype="nvarchar" length="500"></field><field name="insuranceBuildingsEquipment" label="" datatype="nvarchar" length="500"></field><field name="sitesUtilitySystems" label="" datatype="nvarchar" length="500"></field><field name="repairCostUtilitySystems" label="" datatype="nvarchar" length="500"></field><field name="insuranceUtilitySystems" label="" datatype="nvarchar" length="500"></field><field name="sitesOther" label="" datatype="nvarchar" length="500"></field><field name="repairCostOther" label="" datatype="nvarchar" length="500"></field><field name="insuranceOther" label="" datatype="nvarchar" length="500"></field><field name="sitesTotals" label="" datatype="nvarchar" length="500"></field><field name="repairCostTotals" label="" datatype="nvarchar" length="500"></field><field name="insuranceTotals" label="" datatype="nvarchar" length="500"></field><field name="annualMaintenanceBudget" label="" datatype="nvarchar" length="500"></field><field name="startOfFiscalYear" label="" datatype="nvarchar" length="500"></field><field name="orgFacility01" label="" datatype="nvarchar" length="500"></field><field name="cat01" label="" datatype="nvarchar" length="500"></field><field name="sites01" label="" datatype="nvarchar" length="500"></field><field name="repairCost01" label="" datatype="nvarchar" length="500"></field><field name="insurance01" label="" datatype="nvarchar" length="500"></field><field name="orgFacility02" label="" datatype="nvarchar" length="500"></field><field name="cat02" label="" datatype="nvarchar" length="500"></field><field name="sites02" label="" datatype="nvarchar" length="500"></field><field name="repairCost02" label="" datatype="nvarchar" length="500"></field><field name="insurance02" label="" datatype="nvarchar" length="500"></field><field name="orgFacility03" label="" datatype="nvarchar" length="500"></field><field name="cat03" label="" datatype="nvarchar" length="500"></field><field name="sites03" label="" datatype="nvarchar" length="500"></field><field name="repairCost03" label="" datatype="nvarchar" length="500"></field><field name="insurance03" label="" datatype="nvarchar" length="500"></field><field name="orgFacility04" label="" datatype="nvarchar" length="500"></field><field name="cat04" label="" datatype="nvarchar" length="500"></field><field name="sites04" label="" datatype="nvarchar" length="500"></field><field name="repairCost04" label="" datatype="nvarchar" length="500"></field><field name="insurance04" label="" datatype="nvarchar" length="500"></field><field name="orgFacility05" label="" datatype="nvarchar" length="500"></field><field name="cat05" label="" datatype="nvarchar" length="500"></field><field name="sites05" label="" datatype="nvarchar" length="500"></field><field name="repairCost05" label="" datatype="nvarchar" length="500"></field><field name="insurance05" label="" datatype="nvarchar" length="500"></field><field name="orgFacility06" label="" datatype="nvarchar" length="500"></field><field name="cat06" label="" datatype="nvarchar" length="500"></field><field name="sites06" label="" datatype="nvarchar" length="500"></field><field name="repairCost06" label="" datatype="nvarchar" length="500"></field><field name="insurance06" label="" datatype="nvarchar" length="500"></field><field name="orgFacility07" label="" datatype="nvarchar" length="500"></field><field name="cat07" label="" datatype="nvarchar" length="500"></field><field name="sites07" label="" datatype="nvarchar" length="500"></field><field name="repairCost07" label="" datatype="nvarchar" length="500"></field><field name="insurance07" label="" datatype="nvarchar" length="500"></field><field name="orgFacility08" label="" datatype="nvarchar" length="500"></field><field name="cat08" label="" datatype="nvarchar" length="500"></field><field name="sites08" label="" datatype="nvarchar" length="500"></field><field name="repairCost08" label="" datatype="nvarchar" length="500"></field><field name="insurance08" label="" datatype="nvarchar" length="500"></field><field name="orgFacility09" label="" datatype="nvarchar" length="500"></field><field name="cat09" label="" datatype="nvarchar" length="500"></field><field name="sites09" label="" datatype="nvarchar" length="500"></field><field name="repairCost09" label="" datatype="nvarchar" length="500"></field><field name="insurance09" label="" datatype="nvarchar" length="500"></field><field name="orgFacility10" label="" datatype="nvarchar" length="500"></field><field name="cat10" label="" datatype="nvarchar" length="500"></field><field name="sites10" label="" datatype="nvarchar" length="500"></field><field name="repairCost10" label="" datatype="nvarchar" length="500"></field><field name="insurance10" label="" datatype="nvarchar" length="500"></field><field name="orgFacility11" label="" datatype="nvarchar" length="500"></field><field name="cat11" label="" datatype="nvarchar" length="500"></field><field name="sites11" label="" datatype="nvarchar" length="500"></field><field name="repairCost11" label="" datatype="nvarchar" length="500"></field><field name="insurance11" label="" datatype="nvarchar" length="500"></field><field name="orgFacility12" label="" datatype="nvarchar" length="500"></field><field name="cat12" label="" datatype="nvarchar" length="500"></field><field name="sites12" label="" datatype="nvarchar" length="500"></field><field name="repairCost12" label="" datatype="nvarchar" length="500"></field><field name="insurance12" label="" datatype="nvarchar" length="500"></field><field name="orgFacility13" label="" datatype="nvarchar" length="500"></field><field name="cat13" label="" datatype="nvarchar" length="500"></field><field name="sites13" label="" datatype="nvarchar" length="500"></field><field name="repairCost13" label="" datatype="nvarchar" length="500"></field><field name="insurance13" label="" datatype="nvarchar" length="500"></field><field name="orgFacility14" label="" datatype="nvarchar" length="500"></field><field name="cat14" label="" datatype="nvarchar" length="500"></field><field name="sites14" label="" datatype="nvarchar" length="500"></field><field name="repairCost14" label="" datatype="nvarchar" length="500"></field><field name="insurance14" label="" datatype="nvarchar" length="500"></field><field name="orgFacility15" label="" datatype="nvarchar" length="500"></field><field name="cat15" label="" datatype="nvarchar" length="500"></field><field name="sites15" label="" datatype="nvarchar" length="500"></field><field name="repairCost15" label="" datatype="nvarchar" length="500"></field><field name="insurance15" label="" datatype="nvarchar" length="500"></field><field name="sitesOtherTotal" label="" datatype="nvarchar" length="500"></field><field name="repairCostTotal" label="" datatype="nvarchar" length="500"></field><field name="insuranceCostTotal" label="" datatype="nvarchar" length="500"></field><field name="notes" label="" datatype="ntext"></field><field name="submitterName" label="" datatype="nvarchar" length="500"></field><field name="submitterEmail" label="" datatype="nvarchar" length="500"></field><field name="countyEmail" label="" datatype="nvarchar" length="500"></field><field name="ddcEmail" label="" datatype="nvarchar" length="500"></field><field name="additionalEmails" label="" datatype="nvarchar" length="500"></field><field name="emailTo" label="" datatype="nvarchar" length="500"></field><field name="emailSubject" label="" datatype="nvarchar" length="500"></field><field name="emailBody" label="" datatype="ntext"></field><field name="socProcessed" label="" datatype="nvarchar" length="500"></field><field name="dsoDisable" label="" datatype="nvarchar" length="100"></field><field name="hidden" label="" datatype="nvarchar" length="100"></field><field name="copyFKCounty" label="" datatype="ntext"><source type="view" datatype="ntext" length="">752</source></field></tablefieldlist></table><table name="DSO Audit" globalid="63655129-f9d4-4c5e-b5d8-773a649ac5f0" form="0" static="0" incidentindependent="1"><tablefieldlist><field name="dataid" datatype="int identity" label="DataID"><source type="system" datatype="int identity">WebEOC</source><source type="view" datatype="int">753</source><source type="view" datatype="int">754</source></field><field name="incidentid" datatype="int" label="Incident"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">753</source><source type="view" datatype="int">754</source></field><field name="userid" datatype="int" label="User"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">753</source><source type="view" datatype="int">754</source></field><field name="positionid" datatype="int" label="Position"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">753</source><source type="view" datatype="int">754</source></field><field name="prevdataid" datatype="int" label="Previous Data ID"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">753</source><source type="view" datatype="int">754</source></field><field name="entrydate" datatype="datetime" label="Entry date"><source type="system" datatype="datetime">WebEOC</source><source type="view" datatype="datetime">753</source><source type="view" datatype="datetime">754</source></field><field name="globalid" datatype="nvarchar" length="40"><source type="system" datatype="nvarchar" length="40">WebEOC</source></field><field name="subscribername" datatype="nvarchar" length="500" label="Subscriber"><source type="system" datatype="nvarchar" length="500">WebEOC</source><source type="view" datatype="nvarchar" length="500">753</source><source type="view" datatype="nvarchar" length="500">754</source></field><field name="auditUser" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">753</source></field><field name="dateTime" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">753</source></field><field name="audit" datatype="ntext" label=""><source type="view" datatype="ntext" length="">753</source></field><field name="saveDateTime" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">754</source></field><field name="currentUser" datatype="nvarchar" length="500" label=""><source type="view" datatype="nvarchar" length="500">754</source></field><field name="msg" datatype="ntext" label=""><source type="view" datatype="ntext" length="">754</source></field><field name="username" datatype="nvarchar" length="500"></field><field name="saveDateTime2" datatype="nvarchar" length="500"></field><field name="currentUser2" datatype="nvarchar" length="500"></field><field name="msg2" datatype="ntext"></field><field name="fk_table_111" label="" datatype="int"><source type="view" datatype="int">753</source></field><field name="fk_table_112" label="" datatype="int"><source type="view" datatype="int">754</source></field></tablefieldlist></table><table name="Bubble History Table" globalid="d48850ef-ef25-499f-a50c-41ccb93aa097" form="0" static="0" incidentindependent="1"><tablefieldlist><field name="dataid" datatype="int identity"><source type="system" datatype="int identity">WebEOC</source><source type="view" datatype="int">16877</source></field><field name="incidentid" datatype="int"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">16877</source></field><field name="userid" datatype="int"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">16877</source></field><field name="positionid" datatype="int"><source type="system" datatype="int">WebEOC</source><source type="view" datatype="int">16877</source></field><field name="prevdataid" datatype="int"><source type="system" datatype="int">WebEOC</source></field><field name="entrydate" datatype="datetime"><source type="system" datatype="datetime">WebEOC</source><source type="view" datatype="datetime">16877</source></field><field name="globalid" datatype="nvarchar" length="40"><source type="system" datatype="nvarchar" length="40">WebEOC</source></field><field name="subscribername" datatype="nvarchar" length="500"><source type="system" datatype="nvarchar" length="500">WebEOC</source><source type="view" datatype="nvarchar" length="500">16877</source></field><field name="saveDateTime" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">16877</source></field><field name="currentUser" datatype="nvarchar" length="500"><source type="view" datatype="nvarchar" length="500">16877</source></field><field name="msg" datatype="ntext"><source type="view" datatype="ntext" length="">16877</source></field></tablefieldlist></table><view tablename="Core" name="Input (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="50d89d3f-0019-47d4-a202-1cb3571dfdad" assignable="1"><lists oldlistname="DSO Cities" listname="DSO Cities" sblist="0" listguid="379C8EED-D6C1-4DAE-B6CB-0DC4D09C75C9" depth="0" comments=""><listitems name="Gregory" listvalue="" ordervalue="432" listitemid="2630" islist="0"/><listitems name="Grey Forest" listvalue="" ordervalue="433" listitemid="2631" islist="0"/><listitems name="Groesbeck" listvalue="" ordervalue="434" listitemid="2632" islist="0"/><listitems name="Groom" listvalue="" ordervalue="435" listitemid="2633" islist="0"/><listitems name="Groves" listvalue="" ordervalue="436" listitemid="2634" islist="0"/><listitems name="Groveton" listvalue="" ordervalue="437" listitemid="2635" islist="0"/><listitems name="Gruver" listvalue="" ordervalue="438" listitemid="2636" islist="0"/><listitems name="Gun Barrel City" listvalue="" ordervalue="439" listitemid="2637" islist="0"/><listitems name="Gunter" listvalue="" ordervalue="440" listitemid="2638" islist="0"/><listitems name="Gustine" listvalue="" ordervalue="441" listitemid="2639" islist="0"/><listitems name="Hackberry" listvalue="" ordervalue="442" listitemid="2640" islist="0"/><listitems name="Hale Center" listvalue="" ordervalue="443" listitemid="2641" islist="0"/><listitems name="Hallettsville" listvalue="" ordervalue="444" listitemid="2642" islist="0"/><listitems name="Hallsburg" listvalue="" ordervalue="445" listitemid="2643" islist="0"/><listitems name="Hallsville" listvalue="" ordervalue="446" listitemid="2644" islist="0"/><listitems name="Haltom City" listvalue="" ordervalue="447" listitemid="2645" islist="0"/><listitems name="Hamilton" listvalue="" ordervalue="448" listitemid="2646" islist="0"/><listitems name="Hamlin" listvalue="" ordervalue="449" listitemid="2647" islist="0"/><listitems name="Happy" listvalue="" ordervalue="450" listitemid="2648" islist="0"/><listitems name="Hardin" listvalue="" ordervalue="451" listitemid="2649" islist="0"/><listitems name="Harker Heights" listvalue="" ordervalue="452" listitemid="2650" islist="0"/><listitems name="Harlingen" listvalue="" ordervalue="453" listitemid="2651" islist="0"/><listitems name="Hart" listvalue="" ordervalue="454" listitemid="2652" islist="0"/><listitems name="Haskell" listvalue="" ordervalue="455" listitemid="2653" islist="0"/><listitems name="Haslet" listvalue="" ordervalue="456" listitemid="2654" islist="0"/><listitems name="Hawk Cove" listvalue="" ordervalue="457" listitemid="2655" islist="0"/><listitems name="Hawkins" listvalue="" ordervalue="458" listitemid="2656" islist="0"/><listitems name="Hawley" listvalue="" ordervalue="459" listitemid="2657" islist="0"/><listitems name="Hays" listvalue="" ordervalue="460" listitemid="2658" islist="0"/><listitems name="Hearne" listvalue="" ordervalue="461" listitemid="2659" islist="0"/><listitems name="Heath" listvalue="" ordervalue="462" listitemid="2660" islist="0"/><listitems name="Hebron" listvalue="" ordervalue="463" listitemid="2661" islist="0"/><listitems name="Hedley" listvalue="" ordervalue="464" listitemid="2662" islist="0"/><listitems name="Hedwig Village" listvalue="" ordervalue="465" listitemid="2663" islist="0"/><listitems name="Helotes" listvalue="" ordervalue="466" listitemid="2664" islist="0"/><listitems name="Hemphill" listvalue="" ordervalue="467" listitemid="2665" islist="0"/><listitems name="Hempstead" listvalue="" ordervalue="468" listitemid="2666" islist="0"/><listitems name="Henderson" listvalue="" ordervalue="469" listitemid="2667" islist="0"/><listitems name="Henrietta" listvalue="" ordervalue="470" listitemid="2668" islist="0"/><listitems name="Hereford" listvalue="" ordervalue="471" listitemid="2669" islist="0"/><listitems name="Hewitt" listvalue="" ordervalue="472" listitemid="2670" islist="0"/><listitems name="Hickory Creek" listvalue="" ordervalue="473" listitemid="2671" islist="0"/><listitems name="Hico" listvalue="" ordervalue="474" listitemid="2672" islist="0"/><listitems name="Hidalgo" listvalue="" ordervalue="475" listitemid="2673" islist="0"/><listitems name="Hideaway" listvalue="" ordervalue="476" listitemid="2674" islist="0"/><listitems name="Higgins" listvalue="" ordervalue="477" listitemid="2675" islist="0"/><listitems name="Highland Haven" listvalue="" ordervalue="478" listitemid="2676" islist="0"/><listitems name="Highland Park" listvalue="" ordervalue="479" listitemid="2677" islist="0"/><listitems name="Highland Village" listvalue="" ordervalue="480" listitemid="2678" islist="0"/><listitems name="Hill Country Village" listvalue="" ordervalue="481" listitemid="2679" islist="0"/><listitems name="Hillcrest Village" listvalue="" ordervalue="482" listitemid="2680" islist="0"/><listitems name="Hillsboro" listvalue="" ordervalue="483" listitemid="2681" islist="0"/><listitems name="Hilshire Village" listvalue="" ordervalue="484" listitemid="2682" islist="0"/><listitems name="Hitchcock" listvalue="" ordervalue="485" listitemid="2683" islist="0"/><listitems name="Holiday Lakes" listvalue="" ordervalue="486" listitemid="2684" islist="0"/><listitems name="Holland" listvalue="" ordervalue="487" listitemid="2685" islist="0"/><listitems name="Holliday" listvalue="" ordervalue="488" listitemid="2686" islist="0"/><listitems name="Hollywood Park" listvalue="" ordervalue="489" listitemid="2687" islist="0"/><listitems name="Hondo" listvalue="" ordervalue="490" listitemid="2688" islist="0"/><listitems name="Honey Grove" listvalue="" ordervalue="491" listitemid="2689" islist="0"/><listitems name="Hooks" listvalue="" ordervalue="492" listitemid="2690" islist="0"/><listitems name="Horizon City" listvalue="" ordervalue="493" listitemid="2691" islist="0"/><listitems name="Horseshoe Bay" listvalue="" ordervalue="494" listitemid="2692" islist="0"/><listitems name="Houston" listvalue="" ordervalue="495" listitemid="2693" islist="0"/><listitems name="Howardwick" listvalue="" ordervalue="496" listitemid="2694" islist="0"/><listitems name="Howe" listvalue="" ordervalue="497" listitemid="2695" islist="0"/><listitems name="Hubbard" listvalue="" ordervalue="498" listitemid="2696" islist="0"/><listitems name="Hudson" listvalue="" ordervalue="499" listitemid="2697" islist="0"/><listitems name="Hudson Oaks" listvalue="" ordervalue="500" listitemid="2698" islist="0"/><listitems name="Hughes Springs" listvalue="" ordervalue="501" listitemid="2699" islist="0"/><listitems name="Humble" listvalue="" ordervalue="502" listitemid="2700" islist="0"/><listitems name="Hunters Creek Village" listvalue="" ordervalue="503" listitemid="2701" islist="0"/><listitems name="Huntington" listvalue="" ordervalue="504" listitemid="2702" islist="0"/><listitems name="Huntsville" listvalue="" ordervalue="505" listitemid="2703" islist="0"/><listitems name="Hurst" listvalue="" ordervalue="506" listitemid="2704" islist="0"/><listitems name="Hutchins" listvalue="" ordervalue="507" listitemid="2705" islist="0"/><listitems name="Hutto" listvalue="" ordervalue="508" listitemid="2706" islist="0"/><listitems name="Huxley" listvalue="" ordervalue="509" listitemid="2707" islist="0"/><listitems name="Idalou" listvalue="" ordervalue="510" listitemid="2708" islist="0"/><listitems name="Impact" listvalue="" ordervalue="511" listitemid="2709" islist="0"/><listitems name="Indian Lake" listvalue="" ordervalue="512" listitemid="2710" islist="0"/><listitems name="Industry" listvalue="" ordervalue="513" listitemid="2711" islist="0"/><listitems name="Ingleside" listvalue="" ordervalue="514" listitemid="2712" islist="0"/><listitems name="Ingleside On The Bay" listvalue="" ordervalue="515" listitemid="2713" islist="0"/><listitems name="Ingram" listvalue="" ordervalue="516" listitemid="2714" islist="0"/><listitems name="Iola" listvalue="" ordervalue="517" listitemid="2715" islist="0"/><listitems name="Iowa Colony" listvalue="" ordervalue="518" listitemid="2716" islist="0"/><listitems name="Iowa Park" listvalue="" ordervalue="519" listitemid="2717" islist="0"/><listitems name="Iraan" listvalue="" ordervalue="520" listitemid="2718" islist="0"/><listitems name="Iredell" listvalue="" ordervalue="521" listitemid="2719" islist="0"/><listitems name="Irving" listvalue="" ordervalue="522" listitemid="2720" islist="0"/><listitems name="Italy" listvalue="" ordervalue="523" listitemid="2721" islist="0"/><listitems name="Itasca" listvalue="" ordervalue="524" listitemid="2722" islist="0"/><listitems name="Ivanhoe" listvalue="" ordervalue="525" listitemid="2723" islist="0"/><listitems name="Jacinto City" listvalue="" ordervalue="526" listitemid="2724" islist="0"/><listitems name="Jacksboro" listvalue="" ordervalue="527" listitemid="2725" islist="0"/><listitems name="Jacksonville" listvalue="" ordervalue="528" listitemid="2726" islist="0"/><listitems name="Jamaica Beach" listvalue="" ordervalue="529" listitemid="2727" islist="0"/><listitems name="Jarrell" listvalue="" ordervalue="530" listitemid="2728" islist="0"/><listitems name="Jasper" listvalue="" ordervalue="531" listitemid="2729" islist="0"/><listitems name="Jayton" listvalue="" ordervalue="532" listitemid="2730" islist="0"/><listitems name="Jefferson" listvalue="" ordervalue="533" listitemid="2731" islist="0"/><listitems name="Jersey Village" listvalue="" ordervalue="534" listitemid="2732" islist="0"/><listitems name="Jewett" listvalue="" ordervalue="535" listitemid="2733" islist="0"/><listitems name="Joaquin" listvalue="" ordervalue="536" listitemid="2734" islist="0"/><listitems name="Johnson City" listvalue="" ordervalue="537" listitemid="2735" islist="0"/><listitems name="Jolly" listvalue="" ordervalue="538" listitemid="2736" islist="0"/><listitems name="Jones Creek" listvalue="" ordervalue="539" listitemid="2737" islist="0"/><listitems name="Jonestown" listvalue="" ordervalue="540" listitemid="2738" islist="0"/><listitems name="Josephine" listvalue="" ordervalue="541" listitemid="2739" islist="0"/><listitems name="Joshua" listvalue="" ordervalue="542" listitemid="2740" islist="0"/><listitems name="Jourdanton" listvalue="" ordervalue="543" listitemid="2741" islist="0"/><listitems name="Junction" listvalue="" ordervalue="544" listitemid="2742" islist="0"/><listitems name="Justin" listvalue="" ordervalue="545" listitemid="2743" islist="0"/><listitems name="Karnes City" listvalue="" ordervalue="546" listitemid="2744" islist="0"/><listitems name="Katy" listvalue="" ordervalue="547" listitemid="2745" islist="0"/><listitems name="Kaufman" listvalue="" ordervalue="548" listitemid="2746" islist="0"/><listitems name="Keene" listvalue="" ordervalue="549" listitemid="2747" islist="0"/><listitems name="Keller" listvalue="" ordervalue="550" listitemid="2748" islist="0"/><listitems name="Kemah" listvalue="" ordervalue="551" listitemid="2749" islist="0"/><listitems name="Kemp" listvalue="" ordervalue="552" listitemid="2750" islist="0"/><listitems name="Kempner" listvalue="" ordervalue="553" listitemid="2751" islist="0"/><listitems name="Kendleton" listvalue="" ordervalue="554" listitemid="2752" islist="0"/><listitems name="Kenedy" listvalue="" ordervalue="555" listitemid="2753" islist="0"/><listitems name="Kenefick" listvalue="" ordervalue="556" listitemid="2754" islist="0"/><listitems name="Kennard" listvalue="" ordervalue="557" listitemid="2755" islist="0"/><listitems name="Kennedale" listvalue="" ordervalue="558" listitemid="2756" islist="0"/><listitems name="Kerens" listvalue="" ordervalue="559" listitemid="2757" islist="0"/><listitems name="Kermit" listvalue="" ordervalue="560" listitemid="2758" islist="0"/><listitems name="Kerrville" listvalue="" ordervalue="561" listitemid="2759" islist="0"/><listitems name="Kilgore" listvalue="" ordervalue="562" listitemid="2760" islist="0"/><listitems name="Killeen" listvalue="" ordervalue="563" listitemid="2761" islist="0"/><listitems name="Kingsville" listvalue="" ordervalue="564" listitemid="2762" islist="0"/><listitems name="Kirby" listvalue="" ordervalue="565" listitemid="2763" islist="0"/><listitems name="Kirbyville" listvalue="" ordervalue="566" listitemid="2764" islist="0"/><listitems name="Kirvin" listvalue="" ordervalue="567" listitemid="2765" islist="0"/><listitems name="Knollwood" listvalue="" ordervalue="568" listitemid="2766" islist="0"/><listitems name="Knox City" listvalue="" ordervalue="569" listitemid="2767" islist="0"/><listitems name="Kosse" listvalue="" ordervalue="570" listitemid="2768" islist="0"/><listitems name="Kountze" listvalue="" ordervalue="571" listitemid="2769" islist="0"/><listitems name="Kress" listvalue="" ordervalue="572" listitemid="2770" islist="0"/><listitems name="Krugerville" listvalue="" ordervalue="573" listitemid="2771" islist="0"/><listitems name="Krum" listvalue="" ordervalue="574" listitemid="2772" islist="0"/><listitems name="Kurten" listvalue="" ordervalue="575" listitemid="2773" islist="0"/><listitems name="Kyle" listvalue="" ordervalue="576" listitemid="2774" islist="0"/><listitems name="La Feria" listvalue="" ordervalue="577" listitemid="2775" islist="0"/><listitems name="La Grange" listvalue="" ordervalue="578" listitemid="2776" islist="0"/><listitems name="La Grulla" listvalue="" ordervalue="579" listitemid="2777" islist="0"/><listitems name="La Joya" listvalue="" ordervalue="580" listitemid="2778" islist="0"/><listitems name="La Marque" listvalue="" ordervalue="581" listitemid="2779" islist="0"/><listitems name="La Porte" listvalue="" ordervalue="582" listitemid="2780" islist="0"/><listitems name="La Vernia" listvalue="" ordervalue="583" listitemid="2781" islist="0"/><listitems name="La Villa" listvalue="" ordervalue="584" listitemid="2782" islist="0"/><listitems name="La Ward" listvalue="" ordervalue="585" listitemid="2783" islist="0"/><listitems name="LaCoste" listvalue="" ordervalue="586" listitemid="2784" islist="0"/><listitems name="Lacy-Lakeview" listvalue="" ordervalue="587" listitemid="2785" islist="0"/><listitems name="Ladonia" listvalue="" ordervalue="588" listitemid="2786" islist="0"/><listitems name="Lago Vista" listvalue="" ordervalue="589" listitemid="2787" islist="0"/><listitems name="Laguna Vista" listvalue="" ordervalue="590" listitemid="2788" islist="0"/><listitems name="Lake Bridgeport" listvalue="" ordervalue="591" listitemid="2789" islist="0"/><listitems name="Lake City" listvalue="" ordervalue="592" listitemid="2790" islist="0"/><listitems name="Lake Dallas" listvalue="" ordervalue="593" listitemid="2791" islist="0"/><listitems name="Lake Jackson" listvalue="" ordervalue="594" listitemid="2792" islist="0"/><listitems name="Lake Tanglewood" listvalue="" ordervalue="595" listitemid="2793" islist="0"/><listitems name="Lake Worth" listvalue="" ordervalue="596" listitemid="2794" islist="0"/><listitems name="Lakeport" listvalue="" ordervalue="597" listitemid="2795" islist="0"/><listitems name="Lakeside (San Patricio)" listvalue="" ordervalue="598" listitemid="2796" islist="0"/><listitems name="Lakeside (Tarrant)" listvalue="" ordervalue="599" listitemid="2797" islist="0"/><listitems name="Lakeside City" listvalue="" ordervalue="600" listitemid="2798" islist="0"/><listitems name="Lakeview" listvalue="" ordervalue="601" listitemid="2799" islist="0"/><listitems name="Lakeway" listvalue="" ordervalue="602" listitemid="2800" islist="0"/><listitems name="Lakewood Village" listvalue="" ordervalue="603" listitemid="2801" islist="0"/><listitems name="Lamesa" listvalue="" ordervalue="604" listitemid="2802" islist="0"/><listitems name="Lampasas" listvalue="" ordervalue="605" listitemid="2803" islist="0"/><listitems name="Lancaster" listvalue="" ordervalue="606" listitemid="2804" islist="0"/><listitems name="Laredo" listvalue="" ordervalue="607" listitemid="2805" islist="0"/><listitems name="Latexo" listvalue="" ordervalue="608" listitemid="2806" islist="0"/><listitems name="Lavon" listvalue="" ordervalue="609" listitemid="2807" islist="0"/><listitems name="Lawn" listvalue="" ordervalue="610" listitemid="2808" islist="0"/><listitems name="League City" listvalue="" ordervalue="611" listitemid="2809" islist="0"/><listitems name="Leakey" listvalue="" ordervalue="612" listitemid="2810" islist="0"/><listitems name="Leander" listvalue="" ordervalue="613" listitemid="2811" islist="0"/><listitems name="Leary" listvalue="" ordervalue="614" listitemid="2812" islist="0"/><listitems name="Lefors" listvalue="" ordervalue="615" listitemid="2813" islist="0"/><listitems name="Leon Valley" listvalue="" ordervalue="616" listitemid="2814" islist="0"/><listitems name="Leona" listvalue="" ordervalue="617" listitemid="2815" islist="0"/><listitems name="Leonard" listvalue="" ordervalue="618" listitemid="2816" islist="0"/><listitems name="Leroy" listvalue="" ordervalue="619" listitemid="2817" islist="0"/><listitems name="Levelland" listvalue="" ordervalue="620" listitemid="2818" islist="0"/><listitems name="Lewisville" listvalue="" ordervalue="621" listitemid="2819" islist="0"/><listitems name="Lexington" listvalue="" ordervalue="622" listitemid="2820" islist="0"/><listitems name="Liberty" listvalue="" ordervalue="623" listitemid="2821" islist="0"/><listitems name="Liberty Hill" listvalue="" ordervalue="624" listitemid="2822" islist="0"/><listitems name="Lincoln Park" listvalue="" ordervalue="625" listitemid="2823" islist="0"/><listitems name="Lindale" listvalue="" ordervalue="626" listitemid="2824" islist="0"/><listitems name="Linden" listvalue="" ordervalue="627" listitemid="2825" islist="0"/><listitems name="Lindsay" listvalue="" ordervalue="628" listitemid="2826" islist="0"/><listitems name="Lipan" listvalue="" ordervalue="629" listitemid="2827" islist="0"/><listitems name="Little Elm" listvalue="" ordervalue="630" listitemid="2828" islist="0"/><listitems name="Little River Academy" listvalue="" ordervalue="631" listitemid="2829" islist="0"/><listitems name="Littlefield" listvalue="" ordervalue="632" listitemid="2830" islist="0"/><listitems name="Live Oak" listvalue="" ordervalue="633" listitemid="2831" islist="0"/><listitems name="Liverpool" listvalue="" ordervalue="634" listitemid="2832" islist="0"/><listitems name="Livingston" listvalue="" ordervalue="635" listitemid="2833" islist="0"/><listitems name="Llano" listvalue="" ordervalue="636" listitemid="2834" islist="0"/><listitems name="Lockhart" listvalue="" ordervalue="637" listitemid="2835" islist="0"/><listitems name="Lockney" listvalue="" ordervalue="638" listitemid="2836" islist="0"/><listitems name="Log Cabin" listvalue="" ordervalue="639" listitemid="2837" islist="0"/><listitems name="Lometa" listvalue="" ordervalue="640" listitemid="2838" islist="0"/><listitems name="Lone Oak" listvalue="" ordervalue="641" listitemid="2839" islist="0"/><listitems name="Lone Star" listvalue="" ordervalue="642" listitemid="2840" islist="0"/><listitems name="Longview" listvalue="" ordervalue="643" listitemid="2841" islist="0"/><listitems name="Loraine" listvalue="" ordervalue="644" listitemid="2842" islist="0"/><listitems name="Lorena" listvalue="" ordervalue="645" listitemid="2843" islist="0"/><listitems name="Select One" listvalue="" ordervalue="1" listitemid="2199" islist="0"/><listitems name="Unincorporated Areas" listvalue="" ordervalue="2" listitemid="2200" islist="0"/><listitems name="Abbott" listvalue="" ordervalue="3" listitemid="2201" islist="0"/><listitems name="Abernathy" listvalue="" ordervalue="4" listitemid="2202" islist="0"/><listitems name="Abilene" listvalue="" ordervalue="5" listitemid="2203" islist="0"/><listitems name="Ackerly" listvalue="" ordervalue="6" listitemid="2204" islist="0"/><listitems name="Addison" listvalue="" ordervalue="7" listitemid="2205" islist="0"/><listitems name="Adrian" listvalue="" ordervalue="8" listitemid="2206" islist="0"/><listitems name="Agua Dulce" listvalue="" ordervalue="9" listitemid="2207" islist="0"/><listitems name="Alamo" listvalue="" ordervalue="10" listitemid="2208" islist="0"/><listitems name="Alamo Heights" listvalue="" ordervalue="11" listitemid="2209" islist="0"/><listitems name="Alba" listvalue="" ordervalue="12" listitemid="2210" islist="0"/><listitems name="Albany" listvalue="" ordervalue="13" listitemid="2211" islist="0"/><listitems name="Aledo" listvalue="" ordervalue="14" listitemid="2212" islist="0"/><listitems name="Alice" listvalue="" ordervalue="15" listitemid="2213" islist="0"/><listitems name="Allen" listvalue="" ordervalue="16" listitemid="2214" islist="0"/><listitems name="Alma" listvalue="" ordervalue="17" listitemid="2215" islist="0"/><listitems name="Alpine" listvalue="" ordervalue="18" listitemid="2216" islist="0"/><listitems name="Alto" listvalue="" ordervalue="19" listitemid="2217" islist="0"/><listitems name="Alton" listvalue="" ordervalue="20" listitemid="2218" islist="0"/><listitems name="Alvarado" listvalue="" ordervalue="21" listitemid="2219" islist="0"/><listitems name="Alvin" listvalue="" ordervalue="22" listitemid="2220" islist="0"/><listitems name="Alvord" listvalue="" ordervalue="23" listitemid="2221" islist="0"/><listitems name="Amarillo" listvalue="" ordervalue="24" listitemid="2222" islist="0"/><listitems name="Ames" listvalue="" ordervalue="25" listitemid="2223" islist="0"/><listitems name="Amherst" listvalue="" ordervalue="26" listitemid="2224" islist="0"/><listitems name="Anahuac" listvalue="" ordervalue="27" listitemid="2225" islist="0"/><listitems name="Anderson" listvalue="" ordervalue="28" listitemid="2226" islist="0"/><listitems name="Andrews" listvalue="" ordervalue="29" listitemid="2227" islist="0"/><listitems name="Angleton" listvalue="" ordervalue="30" listitemid="2228" islist="0"/><listitems name="Angus" listvalue="" ordervalue="31" listitemid="2229" islist="0"/><listitems name="Anna" listvalue="" ordervalue="32" listitemid="2230" islist="0"/><listitems name="Annetta" listvalue="" ordervalue="33" listitemid="2231" islist="0"/><listitems name="Annetta North" listvalue="" ordervalue="34" listitemid="2232" islist="0"/><listitems name="Annetta South" listvalue="" ordervalue="35" listitemid="2233" islist="0"/><listitems name="Annona" listvalue="" ordervalue="36" listitemid="2234" islist="0"/><listitems name="Anson" listvalue="" ordervalue="37" listitemid="2235" islist="0"/><listitems name="Anthony" listvalue="" ordervalue="38" listitemid="2236" islist="0"/><listitems name="Anton" listvalue="" ordervalue="39" listitemid="2237" islist="0"/><listitems name="Appleby" listvalue="" ordervalue="40" listitemid="2238" islist="0"/><listitems name="Aquilla" listvalue="" ordervalue="41" listitemid="2239" islist="0"/><listitems name="Aransas Pass" listvalue="" ordervalue="42" listitemid="2240" islist="0"/><listitems name="Archer City" listvalue="" ordervalue="43" listitemid="2241" islist="0"/><listitems name="Arcola" listvalue="" ordervalue="44" listitemid="2242" islist="0"/><listitems name="Argyle" listvalue="" ordervalue="45" listitemid="2243" islist="0"/><listitems name="Arlington" listvalue="" ordervalue="46" listitemid="2244" islist="0"/><listitems name="Arp" listvalue="" ordervalue="47" listitemid="2245" islist="0"/><listitems name="Asherton" listvalue="" ordervalue="48" listitemid="2246" islist="0"/><listitems name="Aspermont" listvalue="" ordervalue="49" listitemid="2247" islist="0"/><listitems name="Athens" listvalue="" ordervalue="50" listitemid="2248" islist="0"/><listitems name="Atlanta" listvalue="" ordervalue="51" listitemid="2249" islist="0"/><listitems name="Aubrey" listvalue="" ordervalue="52" listitemid="2250" islist="0"/><listitems name="Aurora" listvalue="" ordervalue="53" listitemid="2251" islist="0"/><listitems name="Austin" listvalue="" ordervalue="54" listitemid="2252" islist="0"/><listitems name="Austwell" listvalue="" ordervalue="55" listitemid="2253" islist="0"/><listitems name="Avery" listvalue="" ordervalue="56" listitemid="2254" islist="0"/><listitems name="Avinger" listvalue="" ordervalue="57" listitemid="2255" islist="0"/><listitems name="Azle" listvalue="" ordervalue="58" listitemid="2256" islist="0"/><listitems name="Bailey" listvalue="" ordervalue="59" listitemid="2257" islist="0"/><listitems name="Bailey's Prairie" listvalue="" ordervalue="60" listitemid="2258" islist="0"/><listitems name="Baird" listvalue="" ordervalue="61" listitemid="2259" islist="0"/><listitems name="Balch Springs" listvalue="" ordervalue="62" listitemid="2260" islist="0"/><listitems name="Balcones Heights" listvalue="" ordervalue="63" listitemid="2261" islist="0"/><listitems name="Ballinger" listvalue="" ordervalue="64" listitemid="2262" islist="0"/><listitems name="Balmorhea" listvalue="" ordervalue="65" listitemid="2263" islist="0"/><listitems name="Bandera" listvalue="" ordervalue="66" listitemid="2264" islist="0"/><listitems name="Bangs" listvalue="" ordervalue="67" listitemid="2265" islist="0"/><listitems name="Bardwell" listvalue="" ordervalue="68" listitemid="2266" islist="0"/><listitems name="Barry" listvalue="" ordervalue="69" listitemid="2267" islist="0"/><listitems name="Barstow" listvalue="" ordervalue="70" listitemid="2268" islist="0"/><listitems name="Bartlett" listvalue="" ordervalue="71" listitemid="2269" islist="0"/><listitems name="Bartonville" listvalue="" ordervalue="72" listitemid="2270" islist="0"/><listitems name="Bastrop" listvalue="" ordervalue="73" listitemid="2271" islist="0"/><listitems name="Bay City" listvalue="" ordervalue="74" listitemid="2272" islist="0"/><listitems name="Bayou Vista" listvalue="" ordervalue="75" listitemid="2273" islist="0"/><listitems name="Bayside" listvalue="" ordervalue="76" listitemid="2274" islist="0"/><listitems name="Baytown" listvalue="" ordervalue="77" listitemid="2275" islist="0"/><listitems name="Bayview" listvalue="" ordervalue="78" listitemid="2276" islist="0"/><listitems name="Beach City" listvalue="" ordervalue="79" listitemid="2277" islist="0"/><listitems name="Bear Creek" listvalue="" ordervalue="80" listitemid="2278" islist="0"/><listitems name="Beasley" listvalue="" ordervalue="81" listitemid="2279" islist="0"/><listitems name="Beaumont" listvalue="" ordervalue="82" listitemid="2280" islist="0"/><listitems name="Beckville" listvalue="" ordervalue="83" listitemid="2281" islist="0"/><listitems name="Bedford" listvalue="" ordervalue="84" listitemid="2282" islist="0"/><listitems name="Bedias" listvalue="" ordervalue="85" listitemid="2283" islist="0"/><listitems name="Bee Cave" listvalue="" ordervalue="86" listitemid="2284" islist="0"/><listitems name="Beeville" listvalue="" ordervalue="87" listitemid="2285" islist="0"/><listitems name="Bellaire" listvalue="" ordervalue="88" listitemid="2286" islist="0"/><listitems name="Bellevue" listvalue="" ordervalue="89" listitemid="2287" islist="0"/><listitems name="Bellmead" listvalue="" ordervalue="90" listitemid="2288" islist="0"/><listitems name="Bells" listvalue="" ordervalue="91" listitemid="2289" islist="0"/><listitems name="Bellville" listvalue="" ordervalue="92" listitemid="2290" islist="0"/><listitems name="Belton" listvalue="" ordervalue="93" listitemid="2291" islist="0"/><listitems name="Benavides" listvalue="" ordervalue="94" listitemid="2292" islist="0"/><listitems name="Benbrook" listvalue="" ordervalue="95" listitemid="2293" islist="0"/><listitems name="Benjamin" listvalue="" ordervalue="96" listitemid="2294" islist="0"/><listitems name="Berryville" listvalue="" ordervalue="97" listitemid="2295" islist="0"/><listitems name="Bertram" listvalue="" ordervalue="98" listitemid="2296" islist="0"/><listitems name="Beverly Hills" listvalue="" ordervalue="99" listitemid="2297" islist="0"/><listitems name="Bevil Oaks" listvalue="" ordervalue="100" listitemid="2298" islist="0"/><listitems name="Big Lake" listvalue="" ordervalue="101" listitemid="2299" islist="0"/><listitems name="Big Sandy" listvalue="" ordervalue="102" listitemid="2300" islist="0"/><listitems name="Big Spring" listvalue="" ordervalue="103" listitemid="2301" islist="0"/><listitems name="Big Wells" listvalue="" ordervalue="104" listitemid="2302" islist="0"/><listitems name="Bishop" listvalue="" ordervalue="105" listitemid="2303" islist="0"/><listitems name="Bishop Hills" listvalue="" ordervalue="106" listitemid="2304" islist="0"/><listitems name="Blackwell" listvalue="" ordervalue="107" listitemid="2305" islist="0"/><listitems name="Blanco" listvalue="" ordervalue="108" listitemid="2306" islist="0"/><listitems name="Blanket" listvalue="" ordervalue="109" listitemid="2307" islist="0"/><listitems name="Bloomburg" listvalue="" ordervalue="110" listitemid="2308" islist="0"/><listitems name="Blooming Grove" listvalue="" ordervalue="111" listitemid="2309" islist="0"/><listitems name="Blossom" listvalue="" ordervalue="112" listitemid="2310" islist="0"/><listitems name="Blue Mound" listvalue="" ordervalue="113" listitemid="2311" islist="0"/><listitems name="Blue Ridge" listvalue="" ordervalue="114" listitemid="2312" islist="0"/><listitems name="Blum" listvalue="" ordervalue="115" listitemid="2313" islist="0"/><listitems name="Boerne" listvalue="" ordervalue="116" listitemid="2314" islist="0"/><listitems name="Bogata" listvalue="" ordervalue="117" listitemid="2315" islist="0"/><listitems name="Bonham" listvalue="" ordervalue="118" listitemid="2316" islist="0"/><listitems name="Bonney" listvalue="" ordervalue="119" listitemid="2317" islist="0"/><listitems name="Booker" listvalue="" ordervalue="120" listitemid="2318" islist="0"/><listitems name="Borger" listvalue="" ordervalue="121" listitemid="2319" islist="0"/><listitems name="Bovina" listvalue="" ordervalue="122" listitemid="2320" islist="0"/><listitems name="Bowie" listvalue="" ordervalue="123" listitemid="2321" islist="0"/><listitems name="Boyd" listvalue="" ordervalue="124" listitemid="2322" islist="0"/><listitems name="Brackettville" listvalue="" ordervalue="125" listitemid="2323" islist="0"/><listitems name="Brady" listvalue="" ordervalue="126" listitemid="2324" islist="0"/><listitems name="Brazoria" listvalue="" ordervalue="127" listitemid="2325" islist="0"/><listitems name="Brazos Bend" listvalue="" ordervalue="128" listitemid="2326" islist="0"/><listitems name="Brazos Country" listvalue="" ordervalue="129" listitemid="2327" islist="0"/><listitems name="Breckenridge" listvalue="" ordervalue="130" listitemid="2328" islist="0"/><listitems name="Bremond" listvalue="" ordervalue="131" listitemid="2329" islist="0"/><listitems name="Brenham" listvalue="" ordervalue="132" listitemid="2330" islist="0"/><listitems name="Briarcliff" listvalue="" ordervalue="133" listitemid="2331" islist="0"/><listitems name="Briaroaks" listvalue="" ordervalue="134" listitemid="2332" islist="0"/><listitems name="Bridge City" listvalue="" ordervalue="135" listitemid="2333" islist="0"/><listitems name="Bridgeport" listvalue="" ordervalue="136" listitemid="2334" islist="0"/><listitems name="Broaddus" listvalue="" ordervalue="137" listitemid="2335" islist="0"/><listitems name="Bronte" listvalue="" ordervalue="138" listitemid="2336" islist="0"/><listitems name="Brookshire" listvalue="" ordervalue="139" listitemid="2337" islist="0"/><listitems name="Brookside Village" listvalue="" ordervalue="140" listitemid="2338" islist="0"/><listitems name="Browndell" listvalue="" ordervalue="141" listitemid="2339" islist="0"/><listitems name="Brownfield" listvalue="" ordervalue="142" listitemid="2340" islist="0"/><listitems name="Brownsboro" listvalue="" ordervalue="143" listitemid="2341" islist="0"/><listitems name="Brownsville" listvalue="" ordervalue="144" listitemid="2342" islist="0"/><listitems name="Brownwood" listvalue="" ordervalue="145" listitemid="2343" islist="0"/><listitems name="Bruceville-Eddy" listvalue="" ordervalue="146" listitemid="2344" islist="0"/><listitems name="Bryan" listvalue="" ordervalue="147" listitemid="2345" islist="0"/><listitems name="Bryson" listvalue="" ordervalue="148" listitemid="2346" islist="0"/><listitems name="Buckholts" listvalue="" ordervalue="149" listitemid="2347" islist="0"/><listitems name="Buda" listvalue="" ordervalue="150" listitemid="2348" islist="0"/><listitems name="Buffalo" listvalue="" ordervalue="151" listitemid="2349" islist="0"/><listitems name="Buffalo Gap" listvalue="" ordervalue="152" listitemid="2350" islist="0"/><listitems name="Buffalo Springs" listvalue="" ordervalue="153" listitemid="2351" islist="0"/><listitems name="Bullard" listvalue="" ordervalue="154" listitemid="2352" islist="0"/><listitems name="Bulverde" listvalue="" ordervalue="155" listitemid="2353" islist="0"/><listitems name="Bunker Hill Village" listvalue="" ordervalue="156" listitemid="2354" islist="0"/><listitems name="Burkburnett" listvalue="" ordervalue="157" listitemid="2355" islist="0"/><listitems name="Burke" listvalue="" ordervalue="158" listitemid="2356" islist="0"/><listitems name="Burleson" listvalue="" ordervalue="159" listitemid="2357" islist="0"/><listitems name="Burnet" listvalue="" ordervalue="160" listitemid="2358" islist="0"/><listitems name="Burton" listvalue="" ordervalue="161" listitemid="2359" islist="0"/><listitems name="Byers" listvalue="" ordervalue="162" listitemid="2360" islist="0"/><listitems name="Bynum" listvalue="" ordervalue="163" listitemid="2361" islist="0"/><listitems name="Cactus" listvalue="" ordervalue="164" listitemid="2362" islist="0"/><listitems name="Caddo Mills" listvalue="" ordervalue="165" listitemid="2363" islist="0"/><listitems name="Caldwell" listvalue="" ordervalue="166" listitemid="2364" islist="0"/><listitems name="Callisburg" listvalue="" ordervalue="167" listitemid="2365" islist="0"/><listitems name="Calvert" listvalue="" ordervalue="168" listitemid="2366" islist="0"/><listitems name="Cameron" listvalue="" ordervalue="169" listitemid="2367" islist="0"/><listitems name="Camp Wood" listvalue="" ordervalue="170" listitemid="2368" islist="0"/><listitems name="Campbell" listvalue="" ordervalue="171" listitemid="2369" islist="0"/><listitems name="Canadian" listvalue="" ordervalue="172" listitemid="2370" islist="0"/><listitems name="Caney City" listvalue="" ordervalue="173" listitemid="2371" islist="0"/><listitems name="Canton" listvalue="" ordervalue="174" listitemid="2372" islist="0"/><listitems name="Canyon" listvalue="" ordervalue="175" listitemid="2373" islist="0"/><listitems name="Carbon" listvalue="" ordervalue="176" listitemid="2374" islist="0"/><listitems name="Carl's Corner" listvalue="" ordervalue="177" listitemid="2375" islist="0"/><listitems name="Carmine" listvalue="" ordervalue="178" listitemid="2376" islist="0"/><listitems name="Carrizo Springs" listvalue="" ordervalue="179" listitemid="2377" islist="0"/><listitems name="Carrollton" listvalue="" ordervalue="180" listitemid="2378" islist="0"/><listitems name="Carthage" listvalue="" ordervalue="181" listitemid="2379" islist="0"/><listitems name="Cashion" listvalue="" ordervalue="182" listitemid="2380" islist="0"/><listitems name="Castle Hills" listvalue="" ordervalue="183" listitemid="2381" islist="0"/><listitems name="Castroville" listvalue="" ordervalue="184" listitemid="2382" islist="0"/><listitems name="Cedar Hill" listvalue="" ordervalue="185" listitemid="2383" islist="0"/><listitems name="Cedar Park" listvalue="" ordervalue="186" listitemid="2384" islist="0"/><listitems name="Celeste" listvalue="" ordervalue="187" listitemid="2385" islist="0"/><listitems name="Celina" listvalue="" ordervalue="188" listitemid="2386" islist="0"/><listitems name="Center" listvalue="" ordervalue="189" listitemid="2387" islist="0"/><listitems name="Centerville" listvalue="" ordervalue="190" listitemid="2388" islist="0"/><listitems name="Chandler" listvalue="" ordervalue="191" listitemid="2389" islist="0"/><listitems name="Channing" listvalue="" ordervalue="192" listitemid="2390" islist="0"/><listitems name="Charlotte" listvalue="" ordervalue="193" listitemid="2391" islist="0"/><listitems name="Chester" listvalue="" ordervalue="194" listitemid="2392" islist="0"/><listitems name="Chico" listvalue="" ordervalue="195" listitemid="2393" islist="0"/><listitems name="Childress" listvalue="" ordervalue="196" listitemid="2394" islist="0"/><listitems name="Chillicothe" listvalue="" ordervalue="197" listitemid="2395" islist="0"/><listitems name="China" listvalue="" ordervalue="198" listitemid="2396" islist="0"/><listitems name="China Grove" listvalue="" ordervalue="199" listitemid="2397" islist="0"/><listitems name="Chireno" listvalue="" ordervalue="200" listitemid="2398" islist="0"/><listitems name="Christine" listvalue="" ordervalue="201" listitemid="2399" islist="0"/><listitems name="Cibolo" listvalue="" ordervalue="202" listitemid="2400" islist="0"/><listitems name="Cisco" listvalue="" ordervalue="203" listitemid="2401" islist="0"/><listitems name="Clarendon" listvalue="" ordervalue="204" listitemid="2402" islist="0"/><listitems name="Clarksville" listvalue="" ordervalue="205" listitemid="2403" islist="0"/><listitems name="Clarksville City" listvalue="" ordervalue="206" listitemid="2404" islist="0"/><listitems name="Claude" listvalue="" ordervalue="207" listitemid="2405" islist="0"/><listitems name="Clear Lake Shores" listvalue="" ordervalue="208" listitemid="2406" islist="0"/><listitems name="Cleburne" listvalue="" ordervalue="209" listitemid="2407" islist="0"/><listitems name="Cleveland" listvalue="" ordervalue="210" listitemid="2408" islist="0"/><listitems name="Clifton" listvalue="" ordervalue="211" listitemid="2409" islist="0"/><listitems name="Clint" listvalue="" ordervalue="212" listitemid="2410" islist="0"/><listitems name="Clute" listvalue="" ordervalue="213" listitemid="2411" islist="0"/><listitems name="Clyde" listvalue="" ordervalue="214" listitemid="2412" islist="0"/><listitems name="Coahoma" listvalue="" ordervalue="215" listitemid="2413" islist="0"/><listitems name="Cockrell Hill" listvalue="" ordervalue="216" listitemid="2414" islist="0"/><listitems name="Coffee City" listvalue="" ordervalue="217" listitemid="2415" islist="0"/><listitems name="Coldspring" listvalue="" ordervalue="218" listitemid="2416" islist="0"/><listitems name="Coleman" listvalue="" ordervalue="219" listitemid="2417" islist="0"/><listitems name="College Station" listvalue="" ordervalue="220" listitemid="2418" islist="0"/><listitems name="Colleyville" listvalue="" ordervalue="221" listitemid="2419" islist="0"/><listitems name="Collinsville" listvalue="" ordervalue="222" listitemid="2420" islist="0"/><listitems name="Colmesneil" listvalue="" ordervalue="223" listitemid="2421" islist="0"/><listitems name="Colorado City" listvalue="" ordervalue="224" listitemid="2422" islist="0"/><listitems name="Columbus" listvalue="" ordervalue="225" listitemid="2423" islist="0"/><listitems name="Comanche" listvalue="" ordervalue="226" listitemid="2424" islist="0"/><listitems name="Combes" listvalue="" ordervalue="227" listitemid="2425" islist="0"/><listitems name="Combine" listvalue="" ordervalue="228" listitemid="2426" islist="0"/><listitems name="Commerce" listvalue="" ordervalue="229" listitemid="2427" islist="0"/><listitems name="Como" listvalue="" ordervalue="230" listitemid="2428" islist="0"/><listitems name="Conroe" listvalue="" ordervalue="231" listitemid="2429" islist="0"/><listitems name="Converse" listvalue="" ordervalue="232" listitemid="2430" islist="0"/><listitems name="Cool" listvalue="" ordervalue="233" listitemid="2431" islist="0"/><listitems name="Coolidge" listvalue="" ordervalue="234" listitemid="2432" islist="0"/><listitems name="Cooper" listvalue="" ordervalue="235" listitemid="2433" islist="0"/><listitems name="Coppell" listvalue="" ordervalue="236" listitemid="2434" islist="0"/><listitems name="Copper Canyon" listvalue="" ordervalue="237" listitemid="2435" islist="0"/><listitems name="Copperas Cove" listvalue="" ordervalue="238" listitemid="2436" islist="0"/><listitems name="Corinth" listvalue="" ordervalue="239" listitemid="2437" islist="0"/><listitems name="Corpus Christi" listvalue="" ordervalue="240" listitemid="2438" islist="0"/><listitems name="Corral City" listvalue="" ordervalue="241" listitemid="2439" islist="0"/><listitems name="Corrigan" listvalue="" ordervalue="242" listitemid="2440" islist="0"/><listitems name="Corsicana" listvalue="" ordervalue="243" listitemid="2441" islist="0"/><listitems name="Cottonwood" listvalue="" ordervalue="244" listitemid="2442" islist="0"/><listitems name="Cottonwood Shores" listvalue="" ordervalue="245" listitemid="2443" islist="0"/><listitems name="Cotulla" listvalue="" ordervalue="246" listitemid="2444" islist="0"/><listitems name="Cove" listvalue="" ordervalue="247" listitemid="2445" islist="0"/><listitems name="Covington" listvalue="" ordervalue="248" listitemid="2446" islist="0"/><listitems name="Crandall" listvalue="" ordervalue="249" listitemid="2447" islist="0"/><listitems name="Crane" listvalue="" ordervalue="250" listitemid="2448" islist="0"/><listitems name="Cranfills Gap" listvalue="" ordervalue="251" listitemid="2449" islist="0"/><listitems name="Crawford" listvalue="" ordervalue="252" listitemid="2450" islist="0"/><listitems name="Creedmoor" listvalue="" ordervalue="253" listitemid="2451" islist="0"/><listitems name="Cresson" listvalue="" ordervalue="254" listitemid="2452" islist="0"/><listitems name="Crockett" listvalue="" ordervalue="255" listitemid="2453" islist="0"/><listitems name="Crosbyton" listvalue="" ordervalue="256" listitemid="2454" islist="0"/><listitems name="Cross Plains" listvalue="" ordervalue="257" listitemid="2455" islist="0"/><listitems name="Cross Roads" listvalue="" ordervalue="258" listitemid="2456" islist="0"/><listitems name="Cross Timber" listvalue="" ordervalue="259" listitemid="2457" islist="0"/><listitems name="Crowell" listvalue="" ordervalue="260" listitemid="2458" islist="0"/><listitems name="Crowley" listvalue="" ordervalue="261" listitemid="2459" islist="0"/><listitems name="Crystal City" listvalue="" ordervalue="262" listitemid="2460" islist="0"/><listitems name="Cuero" listvalue="" ordervalue="263" listitemid="2461" islist="0"/><listitems name="Cumby" listvalue="" ordervalue="264" listitemid="2462" islist="0"/><listitems name="Cuney" listvalue="" ordervalue="265" listitemid="2463" islist="0"/><listitems name="Cushing" listvalue="" ordervalue="266" listitemid="2464" islist="0"/><listitems name="Cut and Shoot" listvalue="" ordervalue="267" listitemid="2465" islist="0"/><listitems name="Daingerfield" listvalue="" ordervalue="268" listitemid="2466" islist="0"/><listitems name="Daisetta" listvalue="" ordervalue="269" listitemid="2467" islist="0"/><listitems name="Dalhart" listvalue="" ordervalue="270" listitemid="2468" islist="0"/><listitems name="Dallas" listvalue="" ordervalue="271" listitemid="2469" islist="0"/><listitems name="Dalworthington Gardens" listvalue="" ordervalue="272" listitemid="2470" islist="0"/><listitems name="Danbury" listvalue="" ordervalue="273" listitemid="2471" islist="0"/><listitems name="Darrouzett" listvalue="" ordervalue="274" listitemid="2472" islist="0"/><listitems name="Dawson" listvalue="" ordervalue="275" listitemid="2473" islist="0"/><listitems name="Dayton" listvalue="" ordervalue="276" listitemid="2474" islist="0"/><listitems name="Dayton Lakes" listvalue="" ordervalue="277" listitemid="2475" islist="0"/><listitems name="De Leon" listvalue="" ordervalue="278" listitemid="2476" islist="0"/><listitems name="Dean" listvalue="" ordervalue="279" listitemid="2477" islist="0"/><listitems name="Decatur" listvalue="" ordervalue="280" listitemid="2478" islist="0"/><listitems name="DeCordova" listvalue="" ordervalue="281" listitemid="2479" islist="0"/><listitems name="Deer Park" listvalue="" ordervalue="282" listitemid="2480" islist="0"/><listitems name="DeKalb" listvalue="" ordervalue="283" listitemid="2481" islist="0"/><listitems name="Del Rio" listvalue="" ordervalue="284" listitemid="2482" islist="0"/><listitems name="Dell City" listvalue="" ordervalue="285" listitemid="2483" islist="0"/><listitems name="Denison" listvalue="" ordervalue="286" listitemid="2484" islist="0"/><listitems name="Denton" listvalue="" ordervalue="287" listitemid="2485" islist="0"/><listitems name="Denver City" listvalue="" ordervalue="288" listitemid="2486" islist="0"/><listitems name="Deport" listvalue="" ordervalue="289" listitemid="2487" islist="0"/><listitems name="DeSoto" listvalue="" ordervalue="290" listitemid="2488" islist="0"/><listitems name="Detroit" listvalue="" ordervalue="291" listitemid="2489" islist="0"/><listitems name="Devers" listvalue="" ordervalue="292" listitemid="2490" islist="0"/><listitems name="Devine" listvalue="" ordervalue="293" listitemid="2491" islist="0"/><listitems name="Diboll" listvalue="" ordervalue="294" listitemid="2492" islist="0"/><listitems name="Dickens" listvalue="" ordervalue="295" listitemid="2493" islist="0"/><listitems name="Dickinson" listvalue="" ordervalue="296" listitemid="2494" islist="0"/><listitems name="Dilley" listvalue="" ordervalue="297" listitemid="2495" islist="0"/><listitems name="Dimmitt" listvalue="" ordervalue="298" listitemid="2496" islist="0"/><listitems name="Dish" listvalue="" ordervalue="299" listitemid="2497" islist="0"/><listitems name="Dodd City" listvalue="" ordervalue="300" listitemid="2498" islist="0"/><listitems name="Dodson" listvalue="" ordervalue="301" listitemid="2499" islist="0"/><listitems name="Domino" listvalue="" ordervalue="302" listitemid="2500" islist="0"/><listitems name="Donna" listvalue="" ordervalue="303" listitemid="2501" islist="0"/><listitems name="Dorchester" listvalue="" ordervalue="304" listitemid="2502" islist="0"/><listitems name="Double Oak" listvalue="" ordervalue="305" listitemid="2503" islist="0"/><listitems name="Douglassville" listvalue="" ordervalue="306" listitemid="2504" islist="0"/><listitems name="Dripping Springs" listvalue="" ordervalue="307" listitemid="2505" islist="0"/><listitems name="Driscoll" listvalue="" ordervalue="308" listitemid="2506" islist="0"/><listitems name="Dublin" listvalue="" ordervalue="309" listitemid="2507" islist="0"/><listitems name="Dumas" listvalue="" ordervalue="310" listitemid="2508" islist="0"/><listitems name="Duncanville" listvalue="" ordervalue="311" listitemid="2509" islist="0"/><listitems name="Eagle Lake" listvalue="" ordervalue="312" listitemid="2510" islist="0"/><listitems name="Eagle Pass" listvalue="" ordervalue="313" listitemid="2511" islist="0"/><listitems name="Early" listvalue="" ordervalue="314" listitemid="2512" islist="0"/><listitems name="Earth" listvalue="" ordervalue="315" listitemid="2513" islist="0"/><listitems name="East Bernard" listvalue="" ordervalue="316" listitemid="2514" islist="0"/><listitems name="East Mountain" listvalue="" ordervalue="317" listitemid="2515" islist="0"/><listitems name="East Tawakoni" listvalue="" ordervalue="318" listitemid="2516" islist="0"/><listitems name="Eastland" listvalue="" ordervalue="319" listitemid="2517" islist="0"/><listitems name="Easton" listvalue="" ordervalue="320" listitemid="2518" islist="0"/><listitems name="Ector" listvalue="" ordervalue="321" listitemid="2519" islist="0"/><listitems name="Edcouch" listvalue="" ordervalue="322" listitemid="2520" islist="0"/><listitems name="Eden" listvalue="" ordervalue="323" listitemid="2521" islist="0"/><listitems name="Edgecliff" listvalue="" ordervalue="324" listitemid="2522" islist="0"/><listitems name="Edgewood" listvalue="" ordervalue="325" listitemid="2523" islist="0"/><listitems name="Edinburg" listvalue="" ordervalue="326" listitemid="2524" islist="0"/><listitems name="Edmonson" listvalue="" ordervalue="327" listitemid="2525" islist="0"/><listitems name="Edna" listvalue="" ordervalue="328" listitemid="2526" islist="0"/><listitems name="Edom" listvalue="" ordervalue="329" listitemid="2527" islist="0"/><listitems name="El Campo" listvalue="" ordervalue="330" listitemid="2528" islist="0"/><listitems name="El Cenizo" listvalue="" ordervalue="331" listitemid="2529" islist="0"/><listitems name="El Lago" listvalue="" ordervalue="332" listitemid="2530" islist="0"/><listitems name="El Paso" listvalue="" ordervalue="333" listitemid="2531" islist="0"/><listitems name="Eldorado" listvalue="" ordervalue="334" listitemid="2532" islist="0"/><listitems name="Electra" listvalue="" ordervalue="335" listitemid="2533" islist="0"/><listitems name="Elgin" listvalue="" ordervalue="336" listitemid="2534" islist="0"/><listitems name="Elkhart" listvalue="" ordervalue="337" listitemid="2535" islist="0"/><listitems name="Elmendorf" listvalue="" ordervalue="338" listitemid="2536" islist="0"/><listitems name="Elsa" listvalue="" ordervalue="339" listitemid="2537" islist="0"/><listitems name="Emhouse" listvalue="" ordervalue="340" listitemid="2538" islist="0"/><listitems name="Emory" listvalue="" ordervalue="341" listitemid="2539" islist="0"/><listitems name="Enchanted Oaks" listvalue="" ordervalue="342" listitemid="2540" islist="0"/><listitems name="Encinal" listvalue="" ordervalue="343" listitemid="2541" islist="0"/><listitems name="Ennis" listvalue="" ordervalue="344" listitemid="2542" islist="0"/><listitems name="Escobares" listvalue="" ordervalue="345" listitemid="2543" islist="0"/><listitems name="Estelline" listvalue="" ordervalue="346" listitemid="2544" islist="0"/><listitems name="Euless" listvalue="" ordervalue="347" listitemid="2545" islist="0"/><listitems name="Eureka" listvalue="" ordervalue="348" listitemid="2546" islist="0"/><listitems name="Eustace" listvalue="" ordervalue="349" listitemid="2547" islist="0"/><listitems name="Evant" listvalue="" ordervalue="350" listitemid="2548" islist="0"/><listitems name="Everman" listvalue="" ordervalue="351" listitemid="2549" islist="0"/><listitems name="Fair Oaks Ranch" listvalue="" ordervalue="352" listitemid="2550" islist="0"/><listitems name="Fairchilds" listvalue="" ordervalue="353" listitemid="2551" islist="0"/><listitems name="Fairfield" listvalue="" ordervalue="354" listitemid="2552" islist="0"/><listitems name="Fairview" listvalue="" ordervalue="355" listitemid="2553" islist="0"/><listitems name="Falfurrias" listvalue="" ordervalue="356" listitemid="2554" islist="0"/><listitems name="Falls City" listvalue="" ordervalue="357" listitemid="2555" islist="0"/><listitems name="Farmers Branch" listvalue="" ordervalue="358" listitemid="2556" islist="0"/><listitems name="Farmersville" listvalue="" ordervalue="359" listitemid="2557" islist="0"/><listitems name="Farwell" listvalue="" ordervalue="360" listitemid="2558" islist="0"/><listitems name="Fate" listvalue="" ordervalue="361" listitemid="2559" islist="0"/><listitems name="Fayetteville" listvalue="" ordervalue="362" listitemid="2560" islist="0"/><listitems name="Ferris" listvalue="" ordervalue="363" listitemid="2561" islist="0"/><listitems name="Flatonia" listvalue="" ordervalue="364" listitemid="2562" islist="0"/><listitems name="Florence" listvalue="" ordervalue="365" listitemid="2563" islist="0"/><listitems name="Floresville" listvalue="" ordervalue="366" listitemid="2564" islist="0"/><listitems name="Flower Mound" listvalue="" ordervalue="367" listitemid="2565" islist="0"/><listitems name="Floydada" listvalue="" ordervalue="368" listitemid="2566" islist="0"/><listitems name="Follett" listvalue="" ordervalue="369" listitemid="2567" islist="0"/><listitems name="Forest Hill" listvalue="" ordervalue="370" listitemid="2568" islist="0"/><listitems name="Forney" listvalue="" ordervalue="371" listitemid="2569" islist="0"/><listitems name="Forsan" listvalue="" ordervalue="372" listitemid="2570" islist="0"/><listitems name="Fort Stockton" listvalue="" ordervalue="373" listitemid="2571" islist="0"/><listitems name="Fort Worth" listvalue="" ordervalue="374" listitemid="2572" islist="0"/><listitems name="Franklin" listvalue="" ordervalue="375" listitemid="2573" islist="0"/><listitems name="Frankston" listvalue="" ordervalue="376" listitemid="2574" islist="0"/><listitems name="Fredericksburg" listvalue="" ordervalue="377" listitemid="2575" islist="0"/><listitems name="Freeport" listvalue="" ordervalue="378" listitemid="2576" islist="0"/><listitems name="Freer" listvalue="" ordervalue="379" listitemid="2577" islist="0"/><listitems name="Friendswood" listvalue="" ordervalue="380" listitemid="2578" islist="0"/><listitems name="Friona" listvalue="" ordervalue="381" listitemid="2579" islist="0"/><listitems name="Frisco" listvalue="" ordervalue="382" listitemid="2580" islist="0"/><listitems name="Fritch" listvalue="" ordervalue="383" listitemid="2581" islist="0"/><listitems name="Frost" listvalue="" ordervalue="384" listitemid="2582" islist="0"/><listitems name="Fruitvale" listvalue="" ordervalue="385" listitemid="2583" islist="0"/><listitems name="Fulshear" listvalue="" ordervalue="386" listitemid="2584" islist="0"/><listitems name="Fulton" listvalue="" ordervalue="387" listitemid="2585" islist="0"/><listitems name="Gainesville" listvalue="" ordervalue="388" listitemid="2586" islist="0"/><listitems name="Galena Park" listvalue="" ordervalue="389" listitemid="2587" islist="0"/><listitems name="Gallatin" listvalue="" ordervalue="390" listitemid="2588" islist="0"/><listitems name="Galveston" listvalue="" ordervalue="391" listitemid="2589" islist="0"/><listitems name="Ganado" listvalue="" ordervalue="392" listitemid="2590" islist="0"/><listitems name="Garden Ridge" listvalue="" ordervalue="393" listitemid="2591" islist="0"/><listitems name="Garland" listvalue="" ordervalue="394" listitemid="2592" islist="0"/><listitems name="Garrett" listvalue="" ordervalue="395" listitemid="2593" islist="0"/><listitems name="Garrison" listvalue="" ordervalue="396" listitemid="2594" islist="0"/><listitems name="Gary" listvalue="" ordervalue="397" listitemid="2595" islist="0"/><listitems name="Gatesville" listvalue="" ordervalue="398" listitemid="2596" islist="0"/><listitems name="George West" listvalue="" ordervalue="399" listitemid="2597" islist="0"/><listitems name="Georgetown" listvalue="" ordervalue="400" listitemid="2598" islist="0"/><listitems name="Gholson" listvalue="" ordervalue="401" listitemid="2599" islist="0"/><listitems name="Giddings" listvalue="" ordervalue="402" listitemid="2600" islist="0"/><listitems name="Gilmer" listvalue="" ordervalue="403" listitemid="2601" islist="0"/><listitems name="Gladewater" listvalue="" ordervalue="404" listitemid="2602" islist="0"/><listitems name="Glen Rose" listvalue="" ordervalue="405" listitemid="2603" islist="0"/><listitems name="Glenn Heights" listvalue="" ordervalue="406" listitemid="2604" islist="0"/><listitems name="Godley" listvalue="" ordervalue="407" listitemid="2605" islist="0"/><listitems name="Goldsmith" listvalue="" ordervalue="408" listitemid="2606" islist="0"/><listitems name="Goldthwaite" listvalue="" ordervalue="409" listitemid="2607" islist="0"/><listitems name="Goliad" listvalue="" ordervalue="410" listitemid="2608" islist="0"/><listitems name="Golinda" listvalue="" ordervalue="411" listitemid="2609" islist="0"/><listitems name="Gonzales" listvalue="" ordervalue="412" listitemid="2610" islist="0"/><listitems name="Goodlow" listvalue="" ordervalue="413" listitemid="2611" islist="0"/><listitems name="Goodrich" listvalue="" ordervalue="414" listitemid="2612" islist="0"/><listitems name="Gordon" listvalue="" ordervalue="415" listitemid="2613" islist="0"/><listitems name="Goree" listvalue="" ordervalue="416" listitemid="2614" islist="0"/><listitems name="Gorman" listvalue="" ordervalue="417" listitemid="2615" islist="0"/><listitems name="Graford" listvalue="" ordervalue="418" listitemid="2616" islist="0"/><listitems name="Graham" listvalue="" ordervalue="419" listitemid="2617" islist="0"/><listitems name="Granbury" listvalue="" ordervalue="420" listitemid="2618" islist="0"/><listitems name="Grand Prairie" listvalue="" ordervalue="421" listitemid="2619" islist="0"/><listitems name="Grand Saline" listvalue="" ordervalue="422" listitemid="2620" islist="0"/><listitems name="Grandfalls" listvalue="" ordervalue="423" listitemid="2621" islist="0"/><listitems name="Grandview" listvalue="" ordervalue="424" listitemid="2622" islist="0"/><listitems name="Granger" listvalue="" ordervalue="425" listitemid="2623" islist="0"/><listitems name="Granite Shoals" listvalue="" ordervalue="426" listitemid="2624" islist="0"/><listitems name="Granjeno" listvalue="" ordervalue="427" listitemid="2625" islist="0"/><listitems name="Grapeland" listvalue="" ordervalue="428" listitemid="2626" islist="0"/><listitems name="Grapevine" listvalue="" ordervalue="429" listitemid="2627" islist="0"/><listitems name="Grays Prairie" listvalue="" ordervalue="430" listitemid="2628" islist="0"/><listitems name="Greenville" listvalue="" ordervalue="431" listitemid="2629" islist="0"/><listitems name="Lorenzo" listvalue="" ordervalue="646" listitemid="2844" islist="0"/><listitems name="Los Fresnos" listvalue="" ordervalue="647" listitemid="2845" islist="0"/><listitems name="Los Indios" listvalue="" ordervalue="648" listitemid="2846" islist="0"/><listitems name="Los Ybanez" listvalue="" ordervalue="649" listitemid="2847" islist="0"/><listitems name="Lott" listvalue="" ordervalue="650" listitemid="2848" islist="0"/><listitems name="Lovelady" listvalue="" ordervalue="651" listitemid="2849" islist="0"/><listitems name="Lowry Crossing" listvalue="" ordervalue="652" listitemid="2850" islist="0"/><listitems name="Lubbock" listvalue="" ordervalue="653" listitemid="2851" islist="0"/><listitems name="Lucas" listvalue="" ordervalue="654" listitemid="2852" islist="0"/><listitems name="Lueders" listvalue="" ordervalue="655" listitemid="2853" islist="0"/><listitems name="Lufkin" listvalue="" ordervalue="656" listitemid="2854" islist="0"/><listitems name="Luling" listvalue="" ordervalue="657" listitemid="2855" islist="0"/><listitems name="Lumberton" listvalue="" ordervalue="658" listitemid="2856" islist="0"/><listitems name="Lyford" listvalue="" ordervalue="659" listitemid="2857" islist="0"/><listitems name="Lytle" listvalue="" ordervalue="660" listitemid="2858" islist="0"/><listitems name="Mabank" listvalue="" ordervalue="661" listitemid="2859" islist="0"/><listitems name="Madisonville" listvalue="" ordervalue="662" listitemid="2860" islist="0"/><listitems name="Magnolia" listvalue="" ordervalue="663" listitemid="2861" islist="0"/><listitems name="Malakoff" listvalue="" ordervalue="664" listitemid="2862" islist="0"/><listitems name="Malone" listvalue="" ordervalue="665" listitemid="2863" islist="0"/><listitems name="Manor" listvalue="" ordervalue="666" listitemid="2864" islist="0"/><listitems name="Mansfield" listvalue="" ordervalue="667" listitemid="2865" islist="0"/><listitems name="Manvel" listvalue="" ordervalue="668" listitemid="2866" islist="0"/><listitems name="Marble Falls" listvalue="" ordervalue="669" listitemid="2867" islist="0"/><listitems name="Marfa" listvalue="" ordervalue="670" listitemid="2868" islist="0"/><listitems name="Marietta" listvalue="" ordervalue="671" listitemid="2869" islist="0"/><listitems name="Marion" listvalue="" ordervalue="672" listitemid="2870" islist="0"/><listitems name="Marlin" listvalue="" ordervalue="673" listitemid="2871" islist="0"/><listitems name="Marquez" listvalue="" ordervalue="674" listitemid="2872" islist="0"/><listitems name="Marshall" listvalue="" ordervalue="675" listitemid="2873" islist="0"/><listitems name="Mart" listvalue="" ordervalue="676" listitemid="2874" islist="0"/><listitems name="Martindale" listvalue="" ordervalue="677" listitemid="2875" islist="0"/><listitems name="Mason" listvalue="" ordervalue="678" listitemid="2876" islist="0"/><listitems name="Matador" listvalue="" ordervalue="679" listitemid="2877" islist="0"/><listitems name="Mathis" listvalue="" ordervalue="680" listitemid="2878" islist="0"/><listitems name="Maud" listvalue="" ordervalue="681" listitemid="2879" islist="0"/><listitems name="Maypearl" listvalue="" ordervalue="682" listitemid="2880" islist="0"/><listitems name="McAllen" listvalue="" ordervalue="683" listitemid="2881" islist="0"/><listitems name="McCamey" listvalue="" ordervalue="684" listitemid="2882" islist="0"/><listitems name="McGregor" listvalue="" ordervalue="685" listitemid="2883" islist="0"/><listitems name="McKinney" listvalue="" ordervalue="686" listitemid="2884" islist="0"/><listitems name="McLean" listvalue="" ordervalue="687" listitemid="2885" islist="0"/><listitems name="McLendon-Chisholm" listvalue="" ordervalue="688" listitemid="2886" islist="0"/><listitems name="Meadow" listvalue="" ordervalue="689" listitemid="2887" islist="0"/><listitems name="Meadowlakes" listvalue="" ordervalue="690" listitemid="2888" islist="0"/><listitems name="Meadows Place" listvalue="" ordervalue="691" listitemid="2889" islist="0"/><listitems name="Megargel" listvalue="" ordervalue="692" listitemid="2890" islist="0"/><listitems name="Melissa" listvalue="" ordervalue="693" listitemid="2891" islist="0"/><listitems name="Melvin" listvalue="" ordervalue="694" listitemid="2892" islist="0"/><listitems name="Memphis" listvalue="" ordervalue="695" listitemid="2893" islist="0"/><listitems name="Menard" listvalue="" ordervalue="696" listitemid="2894" islist="0"/><listitems name="Mercedes" listvalue="" ordervalue="697" listitemid="2895" islist="0"/><listitems name="Meridian" listvalue="" ordervalue="698" listitemid="2896" islist="0"/><listitems name="Merkel" listvalue="" ordervalue="699" listitemid="2897" islist="0"/><listitems name="Mertens" listvalue="" ordervalue="700" listitemid="2898" islist="0"/><listitems name="Mertzon" listvalue="" ordervalue="701" listitemid="2899" islist="0"/><listitems name="Mesquite" listvalue="" ordervalue="702" listitemid="2900" islist="0"/><listitems name="Mexia" listvalue="" ordervalue="703" listitemid="2901" islist="0"/><listitems name="Miami" listvalue="" ordervalue="704" listitemid="2902" islist="0"/><listitems name="Midland" listvalue="" ordervalue="705" listitemid="2903" islist="0"/><listitems name="Midlothian" listvalue="" ordervalue="706" listitemid="2904" islist="0"/><listitems name="Midway" listvalue="" ordervalue="707" listitemid="2905" islist="0"/><listitems name="Milano" listvalue="" ordervalue="708" listitemid="2906" islist="0"/><listitems name="Mildred" listvalue="" ordervalue="709" listitemid="2907" islist="0"/><listitems name="Miles" listvalue="" ordervalue="710" listitemid="2908" islist="0"/><listitems name="Milford" listvalue="" ordervalue="711" listitemid="2909" islist="0"/><listitems name="Miller's Cove" listvalue="" ordervalue="712" listitemid="2910" islist="0"/><listitems name="Millsap" listvalue="" ordervalue="713" listitemid="2911" islist="0"/><listitems name="Mineola" listvalue="" ordervalue="714" listitemid="2912" islist="0"/><listitems name="Mineral Wells" listvalue="" ordervalue="715" listitemid="2913" islist="0"/><listitems name="Mingus" listvalue="" ordervalue="716" listitemid="2914" islist="0"/><listitems name="Mission" listvalue="" ordervalue="717" listitemid="2915" islist="0"/><listitems name="Missouri City" listvalue="" ordervalue="718" listitemid="2916" islist="0"/><listitems name="Mobeetie" listvalue="" ordervalue="719" listitemid="2917" islist="0"/><listitems name="Mobile City" listvalue="" ordervalue="720" listitemid="2918" islist="0"/><listitems name="Monahans" listvalue="" ordervalue="721" listitemid="2919" islist="0"/><listitems name="Mont Belvieu" listvalue="" ordervalue="722" listitemid="2920" islist="0"/><listitems name="Montgomery" listvalue="" ordervalue="723" listitemid="2921" islist="0"/><listitems name="Moody" listvalue="" ordervalue="724" listitemid="2922" islist="0"/><listitems name="Moore Station" listvalue="" ordervalue="725" listitemid="2923" islist="0"/><listitems name="Moran" listvalue="" ordervalue="726" listitemid="2924" islist="0"/><listitems name="Morgan" listvalue="" ordervalue="727" listitemid="2925" islist="0"/><listitems name="Morgan's Point" listvalue="" ordervalue="728" listitemid="2926" islist="0"/><listitems name="Morgan's Point Resort" listvalue="" ordervalue="729" listitemid="2927" islist="0"/><listitems name="Morton" listvalue="" ordervalue="730" listitemid="2928" islist="0"/><listitems name="Moulton" listvalue="" ordervalue="731" listitemid="2929" islist="0"/><listitems name="Mount Calm" listvalue="" ordervalue="732" listitemid="2930" islist="0"/><listitems name="Mount Enterprise" listvalue="" ordervalue="733" listitemid="2931" islist="0"/><listitems name="Mount Pleasant" listvalue="" ordervalue="734" listitemid="2932" islist="0"/><listitems name="Mount Vernon" listvalue="" ordervalue="735" listitemid="2933" islist="0"/><listitems name="Mountain City" listvalue="" ordervalue="736" listitemid="2934" islist="0"/><listitems name="Muenster" listvalue="" ordervalue="737" listitemid="2935" islist="0"/><listitems name="Muleshoe" listvalue="" ordervalue="738" listitemid="2936" islist="0"/><listitems name="Mullin" listvalue="" ordervalue="739" listitemid="2937" islist="0"/><listitems name="Munday" listvalue="" ordervalue="740" listitemid="2938" islist="0"/><listitems name="Murchison" listvalue="" ordervalue="741" listitemid="2939" islist="0"/><listitems name="Murphy" listvalue="" ordervalue="742" listitemid="2940" islist="0"/><listitems name="Mustang" listvalue="" ordervalue="743" listitemid="2941" islist="0"/><listitems name="Mustang Ridge" listvalue="" ordervalue="744" listitemid="2942" islist="0"/><listitems name="Nacogdoches" listvalue="" ordervalue="745" listitemid="2943" islist="0"/><listitems name="Naples" listvalue="" ordervalue="746" listitemid="2944" islist="0"/><listitems name="Nash" listvalue="" ordervalue="747" listitemid="2945" islist="0"/><listitems name="Nassau Bay" listvalue="" ordervalue="748" listitemid="2946" islist="0"/><listitems name="Natalia" listvalue="" ordervalue="749" listitemid="2947" islist="0"/><listitems name="Navarro" listvalue="" ordervalue="750" listitemid="2948" islist="0"/><listitems name="Navasota" listvalue="" ordervalue="751" listitemid="2949" islist="0"/><listitems name="Nazareth" listvalue="" ordervalue="752" listitemid="2950" islist="0"/><listitems name="Nederland" listvalue="" ordervalue="753" listitemid="2951" islist="0"/><listitems name="Needville" listvalue="" ordervalue="754" listitemid="2952" islist="0"/><listitems name="Nesbitt" listvalue="" ordervalue="755" listitemid="2953" islist="0"/><listitems name="Nevada" listvalue="" ordervalue="756" listitemid="2954" islist="0"/><listitems name="New Berlin" listvalue="" ordervalue="757" listitemid="2955" islist="0"/><listitems name="New Boston" listvalue="" ordervalue="758" listitemid="2956" islist="0"/><listitems name="New Braunfels" listvalue="" ordervalue="759" listitemid="2957" islist="0"/><listitems name="New Chapel Hill" listvalue="" ordervalue="760" listitemid="2958" islist="0"/><listitems name="New Deal" listvalue="" ordervalue="761" listitemid="2959" islist="0"/><listitems name="New Fairview" listvalue="" ordervalue="762" listitemid="2960" islist="0"/><listitems name="New Home" listvalue="" ordervalue="763" listitemid="2961" islist="0"/><listitems name="New Hope" listvalue="" ordervalue="764" listitemid="2962" islist="0"/><listitems name="New London" listvalue="" ordervalue="765" listitemid="2963" islist="0"/><listitems name="New Summerfield" listvalue="" ordervalue="766" listitemid="2964" islist="0"/><listitems name="New Waverly" listvalue="" ordervalue="767" listitemid="2965" islist="0"/><listitems name="Newark" listvalue="" ordervalue="768" listitemid="2966" islist="0"/><listitems name="Newcastle" listvalue="" ordervalue="769" listitemid="2967" islist="0"/><listitems name="Newton" listvalue="" ordervalue="770" listitemid="2968" islist="0"/><listitems name="Neylandville" listvalue="" ordervalue="771" listitemid="2969" islist="0"/><listitems name="Niederwald" listvalue="" ordervalue="772" listitemid="2970" islist="0"/><listitems name="Nixon" listvalue="" ordervalue="773" listitemid="2971" islist="0"/><listitems name="Nocona" listvalue="" ordervalue="774" listitemid="2972" islist="0"/><listitems name="Nolanville" listvalue="" ordervalue="775" listitemid="2973" islist="0"/><listitems name="Nome" listvalue="" ordervalue="776" listitemid="2974" islist="0"/><listitems name="Noonday" listvalue="" ordervalue="777" listitemid="2975" islist="0"/><listitems name="Nordheim" listvalue="" ordervalue="778" listitemid="2976" islist="0"/><listitems name="Normangee" listvalue="" ordervalue="779" listitemid="2977" islist="0"/><listitems name="North Cleveland" listvalue="" ordervalue="780" listitemid="2978" islist="0"/><listitems name="North Richland Hills" listvalue="" ordervalue="781" listitemid="2979" islist="0"/><listitems name="Northlake" listvalue="" ordervalue="782" listitemid="2980" islist="0"/><listitems name="Novice" listvalue="" ordervalue="783" listitemid="2981" islist="0"/><listitems name="Oak Grove" listvalue="" ordervalue="784" listitemid="2982" islist="0"/><listitems name="Oak Leaf" listvalue="" ordervalue="785" listitemid="2983" islist="0"/><listitems name="Oak Point" listvalue="" ordervalue="786" listitemid="2984" islist="0"/><listitems name="Oak Ridge (Cooke)" listvalue="" ordervalue="787" listitemid="2985" islist="0"/><listitems name="Oak Ridge (Kaufman)" listvalue="" ordervalue="788" listitemid="2986" islist="0"/><listitems name="Oak Ridge North" listvalue="" ordervalue="789" listitemid="2987" islist="0"/><listitems name="Oak Valley" listvalue="" ordervalue="790" listitemid="2988" islist="0"/><listitems name="Oakwood" listvalue="" ordervalue="791" listitemid="2989" islist="0"/><listitems name="O'Brien" listvalue="" ordervalue="792" listitemid="2990" islist="0"/><listitems name="Odem" listvalue="" ordervalue="793" listitemid="2991" islist="0"/><listitems name="Odessa" listvalue="" ordervalue="794" listitemid="2992" islist="0"/><listitems name="O'Donnell" listvalue="" ordervalue="795" listitemid="2993" islist="0"/><listitems name="Oglesby" listvalue="" ordervalue="796" listitemid="2994" islist="0"/><listitems name="Old River-Winfree" listvalue="" ordervalue="797" listitemid="2995" islist="0"/><listitems name="Olmos Park" listvalue="" ordervalue="798" listitemid="2996" islist="0"/><listitems name="Olney" listvalue="" ordervalue="799" listitemid="2997" islist="0"/><listitems name="Olton" listvalue="" ordervalue="800" listitemid="2998" islist="0"/><listitems name="Omaha" listvalue="" ordervalue="801" listitemid="2999" islist="0"/><listitems name="Onalaska" listvalue="" ordervalue="802" listitemid="3000" islist="0"/><listitems name="Opdyke West" listvalue="" ordervalue="803" listitemid="3001" islist="0"/><listitems name="Orange" listvalue="" ordervalue="804" listitemid="3002" islist="0"/><listitems name="Orange Grove" listvalue="" ordervalue="805" listitemid="3003" islist="0"/><listitems name="Orchard" listvalue="" ordervalue="806" listitemid="3004" islist="0"/><listitems name="Ore City" listvalue="" ordervalue="807" listitemid="3005" islist="0"/><listitems name="Overton" listvalue="" ordervalue="808" listitemid="3006" islist="0"/><listitems name="Ovilla" listvalue="" ordervalue="809" listitemid="3007" islist="0"/><listitems name="Oyster Creek" listvalue="" ordervalue="810" listitemid="3008" islist="0"/><listitems name="Paducah" listvalue="" ordervalue="811" listitemid="3009" islist="0"/><listitems name="Paint Rock" listvalue="" ordervalue="812" listitemid="3010" islist="0"/><listitems name="Palacios" listvalue="" ordervalue="813" listitemid="3011" islist="0"/><listitems name="Palestine" listvalue="" ordervalue="814" listitemid="3012" islist="0"/><listitems name="Palisades" listvalue="" ordervalue="815" listitemid="3013" islist="0"/><listitems name="Palm Valley" listvalue="" ordervalue="816" listitemid="3014" islist="0"/><listitems name="Palmer" listvalue="" ordervalue="817" listitemid="3015" islist="0"/><listitems name="Palmhurst" listvalue="" ordervalue="818" listitemid="3016" islist="0"/><listitems name="Palmview" listvalue="" ordervalue="819" listitemid="3017" islist="0"/><listitems name="Pampa" listvalue="" ordervalue="820" listitemid="3018" islist="0"/><listitems name="Panhandle" listvalue="" ordervalue="821" listitemid="3019" islist="0"/><listitems name="Panorama Village" listvalue="" ordervalue="822" listitemid="3020" islist="0"/><listitems name="Pantego" listvalue="" ordervalue="823" listitemid="3021" islist="0"/><listitems name="Paradise" listvalue="" ordervalue="824" listitemid="3022" islist="0"/><listitems name="Paris" listvalue="" ordervalue="825" listitemid="3023" islist="0"/><listitems name="Parker" listvalue="" ordervalue="826" listitemid="3024" islist="0"/><listitems name="Pasadena" listvalue="" ordervalue="827" listitemid="3025" islist="0"/><listitems name="Pattison" listvalue="" ordervalue="828" listitemid="3026" islist="0"/><listitems name="Patton Village" listvalue="" ordervalue="829" listitemid="3027" islist="0"/><listitems name="Payne Springs" listvalue="" ordervalue="830" listitemid="3028" islist="0"/><listitems name="Pearland" listvalue="" ordervalue="831" listitemid="3029" islist="0"/><listitems name="Pearsall" listvalue="" ordervalue="832" listitemid="3030" islist="0"/><listitems name="Pecan Gap" listvalue="" ordervalue="833" listitemid="3031" islist="0"/><listitems name="Pecan Hill" listvalue="" ordervalue="834" listitemid="3032" islist="0"/><listitems name="Pecos" listvalue="" ordervalue="835" listitemid="3033" islist="0"/><listitems name="Pelican Bay" listvalue="" ordervalue="836" listitemid="3034" islist="0"/><listitems name="Penelope" listvalue="" ordervalue="837" listitemid="3035" islist="0"/><listitems name="Penitas" listvalue="" ordervalue="838" listitemid="3036" islist="0"/><listitems name="Perryton" listvalue="" ordervalue="839" listitemid="3037" islist="0"/><listitems name="Petersburg" listvalue="" ordervalue="840" listitemid="3038" islist="0"/><listitems name="Petrolia" listvalue="" ordervalue="841" listitemid="3039" islist="0"/><listitems name="Petronila" listvalue="" ordervalue="842" listitemid="3040" islist="0"/><listitems name="Pflugerville" listvalue="" ordervalue="843" listitemid="3041" islist="0"/><listitems name="Pharr" listvalue="" ordervalue="844" listitemid="3042" islist="0"/><listitems name="Pilot Point" listvalue="" ordervalue="845" listitemid="3043" islist="0"/><listitems name="Pine Forest" listvalue="" ordervalue="846" listitemid="3044" islist="0"/><listitems name="Pine Island" listvalue="" ordervalue="847" listitemid="3045" islist="0"/><listitems name="Pinehurst" listvalue="" ordervalue="848" listitemid="3046" islist="0"/><listitems name="Pineland" listvalue="" ordervalue="849" listitemid="3047" islist="0"/><listitems name="Piney Point Village" listvalue="" ordervalue="850" listitemid="3048" islist="0"/><listitems name="Pittsburg" listvalue="" ordervalue="851" listitemid="3049" islist="0"/><listitems name="Plains" listvalue="" ordervalue="852" listitemid="3050" islist="0"/><listitems name="Plainview" listvalue="" ordervalue="853" listitemid="3051" islist="0"/><listitems name="Plano" listvalue="" ordervalue="854" listitemid="3052" islist="0"/><listitems name="Pleak" listvalue="" ordervalue="855" listitemid="3053" islist="0"/><listitems name="Pleasant Valley" listvalue="" ordervalue="856" listitemid="3054" islist="0"/><listitems name="Pleasanton" listvalue="" ordervalue="857" listitemid="3055" islist="0"/><listitems name="Plum Grove" listvalue="" ordervalue="858" listitemid="3056" islist="0"/><listitems name="Point" listvalue="" ordervalue="859" listitemid="3057" islist="0"/><listitems name="Point Blank" listvalue="" ordervalue="860" listitemid="3058" islist="0"/><listitems name="Point Comfort" listvalue="" ordervalue="861" listitemid="3059" islist="0"/><listitems name="Point Venture" listvalue="" ordervalue="862" listitemid="3060" islist="0"/><listitems name="Ponder" listvalue="" ordervalue="863" listitemid="3061" islist="0"/><listitems name="Port Aransas" listvalue="" ordervalue="864" listitemid="3062" islist="0"/><listitems name="Port Arthur" listvalue="" ordervalue="865" listitemid="3063" islist="0"/><listitems name="Port Isabel" listvalue="" ordervalue="866" listitemid="3064" islist="0"/><listitems name="Port Lavaca" listvalue="" ordervalue="867" listitemid="3065" islist="0"/><listitems name="Port Neches" listvalue="" ordervalue="868" listitemid="3066" islist="0"/><listitems name="Portland" listvalue="" ordervalue="869" listitemid="3067" islist="0"/><listitems name="Post" listvalue="" ordervalue="870" listitemid="3068" islist="0"/><listitems name="Post Oak Bend" listvalue="" ordervalue="871" listitemid="3069" islist="0"/><listitems name="Poteet" listvalue="" ordervalue="872" listitemid="3070" islist="0"/><listitems name="Poth" listvalue="" ordervalue="873" listitemid="3071" islist="0"/><listitems name="Pottsboro" listvalue="" ordervalue="874" listitemid="3072" islist="0"/><listitems name="Powell" listvalue="" ordervalue="875" listitemid="3073" islist="0"/><listitems name="Poynor" listvalue="" ordervalue="876" listitemid="3074" islist="0"/><listitems name="Prairie View" listvalue="" ordervalue="877" listitemid="3075" islist="0"/><listitems name="Premont" listvalue="" ordervalue="878" listitemid="3076" islist="0"/><listitems name="Presidio" listvalue="" ordervalue="879" listitemid="3077" islist="0"/><listitems name="Primera" listvalue="" ordervalue="880" listitemid="3078" islist="0"/><listitems name="Princeton" listvalue="" ordervalue="881" listitemid="3079" islist="0"/><listitems name="Progreso" listvalue="" ordervalue="882" listitemid="3080" islist="0"/><listitems name="Progreso Lakes" listvalue="" ordervalue="883" listitemid="3081" islist="0"/><listitems name="Prosper" listvalue="" ordervalue="884" listitemid="3082" islist="0"/><listitems name="Providence Village" listvalue="" ordervalue="885" listitemid="3083" islist="0"/><listitems name="Putnam" listvalue="" ordervalue="886" listitemid="3084" islist="0"/><listitems name="Pyote" listvalue="" ordervalue="887" listitemid="3085" islist="0"/><listitems name="Quanah" listvalue="" ordervalue="888" listitemid="3086" islist="0"/><listitems name="Queen City" listvalue="" ordervalue="889" listitemid="3087" islist="0"/><listitems name="Quinlan" listvalue="" ordervalue="890" listitemid="3088" islist="0"/><listitems name="Quintana" listvalue="" ordervalue="891" listitemid="3089" islist="0"/><listitems name="Quitaque" listvalue="" ordervalue="892" listitemid="3090" islist="0"/><listitems name="Quitman" listvalue="" ordervalue="893" listitemid="3091" islist="0"/><listitems name="Ralls" listvalue="" ordervalue="894" listitemid="3092" islist="0"/><listitems name="Rancho Viejo" listvalue="" ordervalue="895" listitemid="3093" islist="0"/><listitems name="Ranger" listvalue="" ordervalue="896" listitemid="3094" islist="0"/><listitems name="Rangerville" listvalue="" ordervalue="897" listitemid="3095" islist="0"/><listitems name="Rankin" listvalue="" ordervalue="898" listitemid="3096" islist="0"/><listitems name="Ransom Canyon" listvalue="" ordervalue="899" listitemid="3097" islist="0"/><listitems name="Ravenna" listvalue="" ordervalue="900" listitemid="3098" islist="0"/><listitems name="Raymondville" listvalue="" ordervalue="901" listitemid="3099" islist="0"/><listitems name="Red Lick" listvalue="" ordervalue="902" listitemid="3100" islist="0"/><listitems name="Red Oak" listvalue="" ordervalue="903" listitemid="3101" islist="0"/><listitems name="Redwater" listvalue="" ordervalue="904" listitemid="3102" islist="0"/><listitems name="Refugio" listvalue="" ordervalue="905" listitemid="3103" islist="0"/><listitems name="Reklaw" listvalue="" ordervalue="906" listitemid="3104" islist="0"/><listitems name="Reno (Lamar)" listvalue="" ordervalue="907" listitemid="3105" islist="0"/><listitems name="Reno (Parker)" listvalue="" ordervalue="908" listitemid="3106" islist="0"/><listitems name="Retreat" listvalue="" ordervalue="909" listitemid="3107" islist="0"/><listitems name="Rhome" listvalue="" ordervalue="910" listitemid="3108" islist="0"/><listitems name="Rice" listvalue="" ordervalue="911" listitemid="3109" islist="0"/><listitems name="Richardson" listvalue="" ordervalue="912" listitemid="3110" islist="0"/><listitems name="Richland" listvalue="" ordervalue="913" listitemid="3111" islist="0"/><listitems name="Richland Hills" listvalue="" ordervalue="914" listitemid="3112" islist="0"/><listitems name="Richland Springs" listvalue="" ordervalue="915" listitemid="3113" islist="0"/><listitems name="Richmond" listvalue="" ordervalue="916" listitemid="3114" islist="0"/><listitems name="Richwood" listvalue="" ordervalue="917" listitemid="3115" islist="0"/><listitems name="Riesel" listvalue="" ordervalue="918" listitemid="3116" islist="0"/><listitems name="Rio Bravo" listvalue="" ordervalue="919" listitemid="3117" islist="0"/><listitems name="Rio Grande City" listvalue="" ordervalue="920" listitemid="3118" islist="0"/><listitems name="Rio Hondo" listvalue="" ordervalue="921" listitemid="3119" islist="0"/><listitems name="Rio Vista" listvalue="" ordervalue="922" listitemid="3120" islist="0"/><listitems name="Rising Star" listvalue="" ordervalue="923" listitemid="3121" islist="0"/><listitems name="River Oaks" listvalue="" ordervalue="924" listitemid="3122" islist="0"/><listitems name="Riverside" listvalue="" ordervalue="925" listitemid="3123" islist="0"/><listitems name="Roanoke" listvalue="" ordervalue="926" listitemid="3124" islist="0"/><listitems name="Roaring Springs" listvalue="" ordervalue="927" listitemid="3125" islist="0"/><listitems name="Robert Lee" listvalue="" ordervalue="928" listitemid="3126" islist="0"/><listitems name="Robinson" listvalue="" ordervalue="929" listitemid="3127" islist="0"/><listitems name="Robstown" listvalue="" ordervalue="930" listitemid="3128" islist="0"/><listitems name="Roby" listvalue="" ordervalue="931" listitemid="3129" islist="0"/><listitems name="Rochester" listvalue="" ordervalue="932" listitemid="3130" islist="0"/><listitems name="Rockdale" listvalue="" ordervalue="933" listitemid="3131" islist="0"/><listitems name="Rockport" listvalue="" ordervalue="934" listitemid="3132" islist="0"/><listitems name="Rocksprings" listvalue="" ordervalue="935" listitemid="3133" islist="0"/><listitems name="Rockwall" listvalue="" ordervalue="936" listitemid="3134" islist="0"/><listitems name="Rocky Mound" listvalue="" ordervalue="937" listitemid="3135" islist="0"/><listitems name="Rogers" listvalue="" ordervalue="938" listitemid="3136" islist="0"/><listitems name="Rollingwood" listvalue="" ordervalue="939" listitemid="3137" islist="0"/><listitems name="Roma" listvalue="" ordervalue="940" listitemid="3138" islist="0"/><listitems name="Roman Forest" listvalue="" ordervalue="941" listitemid="3139" islist="0"/><listitems name="Ropesville" listvalue="" ordervalue="942" listitemid="3140" islist="0"/><listitems name="Roscoe" listvalue="" ordervalue="943" listitemid="3141" islist="0"/><listitems name="Rose City" listvalue="" ordervalue="944" listitemid="3142" islist="0"/><listitems name="Rose Hill Acres" listvalue="" ordervalue="945" listitemid="3143" islist="0"/><listitems name="Rosebud" listvalue="" ordervalue="946" listitemid="3144" islist="0"/><listitems name="Rosenberg" listvalue="" ordervalue="947" listitemid="3145" islist="0"/><listitems name="Ross" listvalue="" ordervalue="948" listitemid="3146" islist="0"/><listitems name="Rosser" listvalue="" ordervalue="949" listitemid="3147" islist="0"/><listitems name="Rotan" listvalue="" ordervalue="950" listitemid="3148" islist="0"/><listitems name="Round Mountain" listvalue="" ordervalue="951" listitemid="3149" islist="0"/><listitems name="Round Rock" listvalue="" ordervalue="952" listitemid="3150" islist="0"/><listitems name="Round Top" listvalue="" ordervalue="953" listitemid="3151" islist="0"/><listitems name="Rowlett" listvalue="" ordervalue="954" listitemid="3152" islist="0"/><listitems name="Roxton" listvalue="" ordervalue="955" listitemid="3153" islist="0"/><listitems name="Royse City" listvalue="" ordervalue="956" listitemid="3154" islist="0"/><listitems name="Rule" listvalue="" ordervalue="957" listitemid="3155" islist="0"/><listitems name="Runaway Bay" listvalue="" ordervalue="958" listitemid="3156" islist="0"/><listitems name="Runge" listvalue="" ordervalue="959" listitemid="3157" islist="0"/><listitems name="Rusk" listvalue="" ordervalue="960" listitemid="3158" islist="0"/><listitems name="Sabinal" listvalue="" ordervalue="961" listitemid="3159" islist="0"/><listitems name="Sachse" listvalue="" ordervalue="962" listitemid="3160" islist="0"/><listitems name="Sadler" listvalue="" ordervalue="963" listitemid="3161" islist="0"/><listitems name="Saginaw" listvalue="" ordervalue="964" listitemid="3162" islist="0"/><listitems name="Saint Hedwig" listvalue="" ordervalue="965" listitemid="3163" islist="0"/><listitems name="Saint Jo" listvalue="" ordervalue="966" listitemid="3164" islist="0"/><listitems name="Saint Paul" listvalue="" ordervalue="967" listitemid="3165" islist="0"/><listitems name="Salado" listvalue="" ordervalue="968" listitemid="3166" islist="0"/><listitems name="San Angelo" listvalue="" ordervalue="969" listitemid="3167" islist="0"/><listitems name="San Antonio" listvalue="" ordervalue="970" listitemid="3168" islist="0"/><listitems name="San Augustine" listvalue="" ordervalue="971" listitemid="3169" islist="0"/><listitems name="San Benito" listvalue="" ordervalue="972" listitemid="3170" islist="0"/><listitems name="San Diego" listvalue="" ordervalue="973" listitemid="3171" islist="0"/><listitems name="San Felipe" listvalue="" ordervalue="974" listitemid="3172" islist="0"/><listitems name="San Juan" listvalue="" ordervalue="975" listitemid="3173" islist="0"/><listitems name="San Leanna" listvalue="" ordervalue="976" listitemid="3174" islist="0"/><listitems name="San Marcos" listvalue="" ordervalue="977" listitemid="3175" islist="0"/><listitems name="San Patricio" listvalue="" ordervalue="978" listitemid="3176" islist="0"/><listitems name="San Perlita" listvalue="" ordervalue="979" listitemid="3177" islist="0"/><listitems name="San Saba" listvalue="" ordervalue="980" listitemid="3178" islist="0"/><listitems name="Sanctuary" listvalue="" ordervalue="981" listitemid="3179" islist="0"/><listitems name="Sandy Point" listvalue="" ordervalue="982" listitemid="3180" islist="0"/><listitems name="Sanford" listvalue="" ordervalue="983" listitemid="3181" islist="0"/><listitems name="Sanger" listvalue="" ordervalue="984" listitemid="3182" islist="0"/><listitems name="Sansom Park" listvalue="" ordervalue="985" listitemid="3183" islist="0"/><listitems name="Santa Anna" listvalue="" ordervalue="986" listitemid="3184" islist="0"/><listitems name="Santa Clara" listvalue="" ordervalue="987" listitemid="3185" islist="0"/><listitems name="Santa Fe" listvalue="" ordervalue="988" listitemid="3186" islist="0"/><listitems name="Santa Rosa" listvalue="" ordervalue="989" listitemid="3187" islist="0"/><listitems name="Savoy" listvalue="" ordervalue="990" listitemid="3188" islist="0"/><listitems name="Schertz" listvalue="" ordervalue="991" listitemid="3189" islist="0"/><listitems name="Schulenburg" listvalue="" ordervalue="992" listitemid="3190" islist="0"/><listitems name="Scotland" listvalue="" ordervalue="993" listitemid="3191" islist="0"/><listitems name="Scottsville" listvalue="" ordervalue="994" listitemid="3192" islist="0"/><listitems name="Scurry" listvalue="" ordervalue="995" listitemid="3193" islist="0"/><listitems name="Seabrook" listvalue="" ordervalue="996" listitemid="3194" islist="0"/><listitems name="Seadrift" listvalue="" ordervalue="997" listitemid="3195" islist="0"/><listitems name="Seagoville" listvalue="" ordervalue="998" listitemid="3196" islist="0"/><listitems name="Seagraves" listvalue="" ordervalue="999" listitemid="3197" islist="0"/><listitems name="Sealy" listvalue="" ordervalue="1000" listitemid="3198" islist="0"/><listitems name="Seguin" listvalue="" ordervalue="1001" listitemid="3199" islist="0"/><listitems name="Selma" listvalue="" ordervalue="1002" listitemid="3200" islist="0"/><listitems name="Seminole" listvalue="" ordervalue="1003" listitemid="3201" islist="0"/><listitems name="Seven Oaks" listvalue="" ordervalue="1004" listitemid="3202" islist="0"/><listitems name="Seven Points" listvalue="" ordervalue="1005" listitemid="3203" islist="0"/><listitems name="Seymour" listvalue="" ordervalue="1006" listitemid="3204" islist="0"/><listitems name="Shady Shores" listvalue="" ordervalue="1007" listitemid="3205" islist="0"/><listitems name="Shallowater" listvalue="" ordervalue="1008" listitemid="3206" islist="0"/><listitems name="Shamrock" listvalue="" ordervalue="1009" listitemid="3207" islist="0"/><listitems name="Shavano Park" listvalue="" ordervalue="1010" listitemid="3208" islist="0"/><listitems name="Shenandoah" listvalue="" ordervalue="1011" listitemid="3209" islist="0"/><listitems name="Shepherd" listvalue="" ordervalue="1012" listitemid="3210" islist="0"/><listitems name="Sherman" listvalue="" ordervalue="1013" listitemid="3211" islist="0"/><listitems name="Shiner" listvalue="" ordervalue="1014" listitemid="3212" islist="0"/><listitems name="Shoreacres" listvalue="" ordervalue="1015" listitemid="3213" islist="0"/><listitems name="Silsbee" listvalue="" ordervalue="1016" listitemid="3214" islist="0"/><listitems name="Silverton" listvalue="" ordervalue="1017" listitemid="3215" islist="0"/><listitems name="Simonton" listvalue="" ordervalue="1018" listitemid="3216" islist="0"/><listitems name="Sinton" listvalue="" ordervalue="1019" listitemid="3217" islist="0"/><listitems name="Skellytown" listvalue="" ordervalue="1020" listitemid="3218" islist="0"/><listitems name="Slaton" listvalue="" ordervalue="1021" listitemid="3219" islist="0"/><listitems name="Smiley" listvalue="" ordervalue="1022" listitemid="3220" islist="0"/><listitems name="Smithville" listvalue="" ordervalue="1023" listitemid="3221" islist="0"/><listitems name="Smyer" listvalue="" ordervalue="1024" listitemid="3222" islist="0"/><listitems name="Snook" listvalue="" ordervalue="1025" listitemid="3223" islist="0"/><listitems name="Snyder" listvalue="" ordervalue="1026" listitemid="3224" islist="0"/><listitems name="Socorro" listvalue="" ordervalue="1027" listitemid="3225" islist="0"/><listitems name="Somerset" listvalue="" ordervalue="1028" listitemid="3226" islist="0"/><listitems name="Somerville" listvalue="" ordervalue="1029" listitemid="3227" islist="0"/><listitems name="Sonora" listvalue="" ordervalue="1030" listitemid="3228" islist="0"/><listitems name="Sour Lake" listvalue="" ordervalue="1031" listitemid="3229" islist="0"/><listitems name="South Houston" listvalue="" ordervalue="1032" listitemid="3230" islist="0"/><listitems name="South Mountain" listvalue="" ordervalue="1033" listitemid="3231" islist="0"/><listitems name="South Padre Island" listvalue="" ordervalue="1034" listitemid="3232" islist="0"/><listitems name="Southlake" listvalue="" ordervalue="1035" listitemid="3233" islist="0"/><listitems name="Southmayd" listvalue="" ordervalue="1036" listitemid="3234" islist="0"/><listitems name="Southside Place" listvalue="" ordervalue="1037" listitemid="3235" islist="0"/><listitems name="Spearman" listvalue="" ordervalue="1038" listitemid="3236" islist="0"/><listitems name="Splendora" listvalue="" ordervalue="1039" listitemid="3237" islist="0"/><listitems name="Spofford" listvalue="" ordervalue="1040" listitemid="3238" islist="0"/><listitems name="Spring Valley" listvalue="" ordervalue="1041" listitemid="3239" islist="0"/><listitems name="Springlake" listvalue="" ordervalue="1042" listitemid="3240" islist="0"/><listitems name="Springtown" listvalue="" ordervalue="1043" listitemid="3241" islist="0"/><listitems name="Spur" listvalue="" ordervalue="1044" listitemid="3242" islist="0"/><listitems name="Stafford" listvalue="" ordervalue="1045" listitemid="3243" islist="0"/><listitems name="Stagecoach" listvalue="" ordervalue="1046" listitemid="3244" islist="0"/><listitems name="Stamford" listvalue="" ordervalue="1047" listitemid="3245" islist="0"/><listitems name="Stanton" listvalue="" ordervalue="1048" listitemid="3246" islist="0"/><listitems name="Staples" listvalue="" ordervalue="1049" listitemid="3247" islist="0"/><listitems name="Star Harbor" listvalue="" ordervalue="1050" listitemid="3248" islist="0"/><listitems name="Stephenville" listvalue="" ordervalue="1051" listitemid="3249" islist="0"/><listitems name="Sterling City" listvalue="" ordervalue="1052" listitemid="3250" islist="0"/><listitems name="Stinnett" listvalue="" ordervalue="1053" listitemid="3251" islist="0"/><listitems name="Stockdale" listvalue="" ordervalue="1054" listitemid="3252" islist="0"/><listitems name="Stratford" listvalue="" ordervalue="1055" listitemid="3253" islist="0"/><listitems name="Strawn" listvalue="" ordervalue="1056" listitemid="3254" islist="0"/><listitems name="Streetman" listvalue="" ordervalue="1057" listitemid="3255" islist="0"/><listitems name="Sudan" listvalue="" ordervalue="1058" listitemid="3256" islist="0"/><listitems name="Sugar Land" listvalue="" ordervalue="1059" listitemid="3257" islist="0"/><listitems name="Sullivan City" listvalue="" ordervalue="1060" listitemid="3258" islist="0"/><listitems name="Sulphur Springs" listvalue="" ordervalue="1061" listitemid="3259" islist="0"/><listitems name="Sun Valley" listvalue="" ordervalue="1062" listitemid="3260" islist="0"/><listitems name="Sundown" listvalue="" ordervalue="1063" listitemid="3261" islist="0"/><listitems name="Sunnyvale" listvalue="" ordervalue="1064" listitemid="3262" islist="0"/><listitems name="Sunray" listvalue="" ordervalue="1065" listitemid="3263" islist="0"/><listitems name="Sunrise Beach Village" listvalue="" ordervalue="1066" listitemid="3264" islist="0"/><listitems name="Sunset Valley" listvalue="" ordervalue="1067" listitemid="3265" islist="0"/><listitems name="Surfside Beach" listvalue="" ordervalue="1068" listitemid="3266" islist="0"/><listitems name="Sweeny" listvalue="" ordervalue="1069" listitemid="3267" islist="0"/><listitems name="Sweetwater" listvalue="" ordervalue="1070" listitemid="3268" islist="0"/><listitems name="Taft" listvalue="" ordervalue="1071" listitemid="3269" islist="0"/><listitems name="Tahoka" listvalue="" ordervalue="1072" listitemid="3270" islist="0"/><listitems name="Talco" listvalue="" ordervalue="1073" listitemid="3271" islist="0"/><listitems name="Talty" listvalue="" ordervalue="1074" listitemid="3272" islist="0"/><listitems name="Tatum" listvalue="" ordervalue="1075" listitemid="3273" islist="0"/><listitems name="Taylor" listvalue="" ordervalue="1076" listitemid="3274" islist="0"/><listitems name="Taylor Lake Village" listvalue="" ordervalue="1077" listitemid="3275" islist="0"/><listitems name="Taylor Landing" listvalue="" ordervalue="1078" listitemid="3276" islist="0"/><listitems name="Teague" listvalue="" ordervalue="1079" listitemid="3277" islist="0"/><listitems name="Tehuacana" listvalue="" ordervalue="1080" listitemid="3278" islist="0"/><listitems name="Temple" listvalue="" ordervalue="1081" listitemid="3279" islist="0"/><listitems name="Tenaha" listvalue="" ordervalue="1082" listitemid="3280" islist="0"/><listitems name="Terrell" listvalue="" ordervalue="1083" listitemid="3281" islist="0"/><listitems name="Terrell Hills" listvalue="" ordervalue="1084" listitemid="3282" islist="0"/><listitems name="Texarkana" listvalue="" ordervalue="1085" listitemid="3283" islist="0"/><listitems name="Texas City" listvalue="" ordervalue="1086" listitemid="3284" islist="0"/><listitems name="Texhoma" listvalue="" ordervalue="1087" listitemid="3285" islist="0"/><listitems name="Texline" listvalue="" ordervalue="1088" listitemid="3286" islist="0"/><listitems name="The Colony" listvalue="" ordervalue="1089" listitemid="3287" islist="0"/><listitems name="Thompsons" listvalue="" ordervalue="1090" listitemid="3288" islist="0"/><listitems name="Thorndale" listvalue="" ordervalue="1091" listitemid="3289" islist="0"/><listitems name="Thornton" listvalue="" ordervalue="1092" listitemid="3290" islist="0"/><listitems name="Thorntonville" listvalue="" ordervalue="1093" listitemid="3291" islist="0"/><listitems name="Thrall" listvalue="" ordervalue="1094" listitemid="3292" islist="0"/><listitems name="Three Rivers" listvalue="" ordervalue="1095" listitemid="3293" islist="0"/><listitems name="Throckmorton" listvalue="" ordervalue="1096" listitemid="3294" islist="0"/><listitems name="Tiki Island" listvalue="" ordervalue="1097" listitemid="3295" islist="0"/><listitems name="Timbercreek Canyon" listvalue="" ordervalue="1098" listitemid="3296" islist="0"/><listitems name="Timpson" listvalue="" ordervalue="1099" listitemid="3297" islist="0"/><listitems name="Tioga" listvalue="" ordervalue="1100" listitemid="3298" islist="0"/><listitems name="Tira" listvalue="" ordervalue="1101" listitemid="3299" islist="0"/><listitems name="Toco" listvalue="" ordervalue="1102" listitemid="3300" islist="0"/><listitems name="Todd Mission" listvalue="" ordervalue="1103" listitemid="3301" islist="0"/><listitems name="Tolar" listvalue="" ordervalue="1104" listitemid="3302" islist="0"/><listitems name="Tom Bean" listvalue="" ordervalue="1105" listitemid="3303" islist="0"/><listitems name="Tomball" listvalue="" ordervalue="1106" listitemid="3304" islist="0"/><listitems name="Tool" listvalue="" ordervalue="1107" listitemid="3305" islist="0"/><listitems name="Toyah" listvalue="" ordervalue="1108" listitemid="3306" islist="0"/><listitems name="Trent" listvalue="" ordervalue="1109" listitemid="3307" islist="0"/><listitems name="Trenton" listvalue="" ordervalue="1110" listitemid="3308" islist="0"/><listitems name="Trinidad" listvalue="" ordervalue="1111" listitemid="3309" islist="0"/><listitems name="Trinity" listvalue="" ordervalue="1112" listitemid="3310" islist="0"/><listitems name="Trophy Club" listvalue="" ordervalue="1113" listitemid="3311" islist="0"/><listitems name="Troup" listvalue="" ordervalue="1114" listitemid="3312" islist="0"/><listitems name="Troy" listvalue="" ordervalue="1115" listitemid="3313" islist="0"/><listitems name="Tulia" listvalue="" ordervalue="1116" listitemid="3314" islist="0"/><listitems name="Turkey" listvalue="" ordervalue="1117" listitemid="3315" islist="0"/><listitems name="Tuscola" listvalue="" ordervalue="1118" listitemid="3316" islist="0"/><listitems name="Tye" listvalue="" ordervalue="1119" listitemid="3317" islist="0"/><listitems name="Tyler" listvalue="" ordervalue="1120" listitemid="3318" islist="0"/><listitems name="Uhland" listvalue="" ordervalue="1121" listitemid="3319" islist="0"/><listitems name="Uncertain" listvalue="" ordervalue="1122" listitemid="3320" islist="0"/><listitems name="Union Grove" listvalue="" ordervalue="1123" listitemid="3321" islist="0"/><listitems name="Union Valley" listvalue="" ordervalue="1124" listitemid="3322" islist="0"/><listitems name="Universal City" listvalue="" ordervalue="1125" listitemid="3323" islist="0"/><listitems name="University Park" listvalue="" ordervalue="1126" listitemid="3324" islist="0"/><listitems name="Uvalde" listvalue="" ordervalue="1127" listitemid="3325" islist="0"/><listitems name="Valentine" listvalue="" ordervalue="1128" listitemid="3326" islist="0"/><listitems name="Valley Mills" listvalue="" ordervalue="1129" listitemid="3327" islist="0"/><listitems name="Valley View" listvalue="" ordervalue="1130" listitemid="3328" islist="0"/><listitems name="Van" listvalue="" ordervalue="1131" listitemid="3329" islist="0"/><listitems name="Van Alstyne" listvalue="" ordervalue="1132" listitemid="3330" islist="0"/><listitems name="Van Horn" listvalue="" ordervalue="1133" listitemid="3331" islist="0"/><listitems name="Vega" listvalue="" ordervalue="1134" listitemid="3332" islist="0"/><listitems name="Venus" listvalue="" ordervalue="1135" listitemid="3333" islist="0"/><listitems name="Vernon" listvalue="" ordervalue="1136" listitemid="3334" islist="0"/><listitems name="Victoria" listvalue="" ordervalue="1137" listitemid="3335" islist="0"/><listitems name="Vidor" listvalue="" ordervalue="1138" listitemid="3336" islist="0"/><listitems name="Village of The Hills" listvalue="" ordervalue="1139" listitemid="3337" islist="0"/><listitems name="Villiage of Volente" listvalue="" ordervalue="1140" listitemid="3338" islist="0"/><listitems name="Vinton" listvalue="" ordervalue="1141" listitemid="3339" islist="0"/><listitems name="Von Ormy" listvalue="" ordervalue="1142" listitemid="3340" islist="0"/><listitems name="Waco" listvalue="" ordervalue="1143" listitemid="3341" islist="0"/><listitems name="Waelder" listvalue="" ordervalue="1144" listitemid="3342" islist="0"/><listitems name="Wake Village" listvalue="" ordervalue="1145" listitemid="3343" islist="0"/><listitems name="Waller" listvalue="" ordervalue="1146" listitemid="3344" islist="0"/><listitems name="Wallis" listvalue="" ordervalue="1147" listitemid="3345" islist="0"/><listitems name="Walnut Springs" listvalue="" ordervalue="1148" listitemid="3346" islist="0"/><listitems name="Warren City" listvalue="" ordervalue="1149" listitemid="3347" islist="0"/><listitems name="Waskom" listvalue="" ordervalue="1150" listitemid="3348" islist="0"/><listitems name="Watauga" listvalue="" ordervalue="1151" listitemid="3349" islist="0"/><listitems name="Waxahachie" listvalue="" ordervalue="1152" listitemid="3350" islist="0"/><listitems name="Weatherford" listvalue="" ordervalue="1153" listitemid="3351" islist="0"/><listitems name="Webberville" listvalue="" ordervalue="1154" listitemid="3352" islist="0"/><listitems name="Webster" listvalue="" ordervalue="1155" listitemid="3353" islist="0"/><listitems name="Weimar" listvalue="" ordervalue="1156" listitemid="3354" islist="0"/><listitems name="Weinert" listvalue="" ordervalue="1157" listitemid="3355" islist="0"/><listitems name="Weir" listvalue="" ordervalue="1158" listitemid="3356" islist="0"/><listitems name="Wellington" listvalue="" ordervalue="1159" listitemid="3357" islist="0"/><listitems name="Wellman" listvalue="" ordervalue="1160" listitemid="3358" islist="0"/><listitems name="Wells" listvalue="" ordervalue="1161" listitemid="3359" islist="0"/><listitems name="Weslaco" listvalue="" ordervalue="1162" listitemid="3360" islist="0"/><listitems name="West" listvalue="" ordervalue="1163" listitemid="3361" islist="0"/><listitems name="West Columbia" listvalue="" ordervalue="1164" listitemid="3362" islist="0"/><listitems name="West Lake Hills" listvalue="" ordervalue="1165" listitemid="3363" islist="0"/><listitems name="West Orange" listvalue="" ordervalue="1166" listitemid="3364" islist="0"/><listitems name="West Tawakoni" listvalue="" ordervalue="1167" listitemid="3365" islist="0"/><listitems name="West University Place" listvalue="" ordervalue="1168" listitemid="3366" islist="0"/><listitems name="Westbrook" listvalue="" ordervalue="1169" listitemid="3367" islist="0"/><listitems name="Westlake" listvalue="" ordervalue="1170" listitemid="3368" islist="0"/><listitems name="Weston" listvalue="" ordervalue="1171" listitemid="3369" islist="0"/><listitems name="Weston Lakes" listvalue="" ordervalue="1172" listitemid="3370" islist="0"/><listitems name="Westover Hills" listvalue="" ordervalue="1173" listitemid="3371" islist="0"/><listitems name="Westworth Village" listvalue="" ordervalue="1174" listitemid="3372" islist="0"/><listitems name="Wharton" listvalue="" ordervalue="1175" listitemid="3373" islist="0"/><listitems name="Wheeler" listvalue="" ordervalue="1176" listitemid="3374" islist="0"/><listitems name="White Deer" listvalue="" ordervalue="1177" listitemid="3375" islist="0"/><listitems name="White Oak" listvalue="" ordervalue="1178" listitemid="3376" islist="0"/><listitems name="White Settlement" listvalue="" ordervalue="1179" listitemid="3377" islist="0"/><listitems name="Whiteface" listvalue="" ordervalue="1180" listitemid="3378" islist="0"/><listitems name="Whitehouse" listvalue="" ordervalue="1181" listitemid="3379" islist="0"/><listitems name="Whitesboro" listvalue="" ordervalue="1182" listitemid="3380" islist="0"/><listitems name="Whitewright" listvalue="" ordervalue="1183" listitemid="3381" islist="0"/><listitems name="Whitney" listvalue="" ordervalue="1184" listitemid="3382" islist="0"/><listitems name="Wichita Falls" listvalue="" ordervalue="1185" listitemid="3383" islist="0"/><listitems name="Wickett" listvalue="" ordervalue="1186" listitemid="3384" islist="0"/><listitems name="Willis" listvalue="" ordervalue="1187" listitemid="3385" islist="0"/><listitems name="Willow Park" listvalue="" ordervalue="1188" listitemid="3386" islist="0"/><listitems name="Wills Point" listvalue="" ordervalue="1189" listitemid="3387" islist="0"/><listitems name="Wilmer" listvalue="" ordervalue="1190" listitemid="3388" islist="0"/><listitems name="Wilson" listvalue="" ordervalue="1191" listitemid="3389" islist="0"/><listitems name="Wimberley" listvalue="" ordervalue="1192" listitemid="3390" islist="0"/><listitems name="Windcrest" listvalue="" ordervalue="1193" listitemid="3391" islist="0"/><listitems name="Windom" listvalue="" ordervalue="1194" listitemid="3392" islist="0"/><listitems name="Windthorst" listvalue="" ordervalue="1195" listitemid="3393" islist="0"/><listitems name="Winfield" listvalue="" ordervalue="1196" listitemid="3394" islist="0"/><listitems name="Wink" listvalue="" ordervalue="1197" listitemid="3395" islist="0"/><listitems name="Winnsboro" listvalue="" ordervalue="1198" listitemid="3396" islist="0"/><listitems name="Winona" listvalue="" ordervalue="1199" listitemid="3397" islist="0"/><listitems name="Winters" listvalue="" ordervalue="1200" listitemid="3398" islist="0"/><listitems name="Wixon Valley" listvalue="" ordervalue="1201" listitemid="3399" islist="0"/><listitems name="Wolfe City" listvalue="" ordervalue="1202" listitemid="3400" islist="0"/><listitems name="Wolfforth" listvalue="" ordervalue="1203" listitemid="3401" islist="0"/><listitems name="Woodbranch Village" listvalue="" ordervalue="1204" listitemid="3402" islist="0"/><listitems name="Woodcreek" listvalue="" ordervalue="1205" listitemid="3403" islist="0"/><listitems name="Woodloch" listvalue="" ordervalue="1206" listitemid="3404" islist="0"/><listitems name="Woodsboro" listvalue="" ordervalue="1207" listitemid="3405" islist="0"/><listitems name="Woodson" listvalue="" ordervalue="1208" listitemid="3406" islist="0"/><listitems name="Woodville" listvalue="" ordervalue="1209" listitemid="3407" islist="0"/><listitems name="Woodway" listvalue="" ordervalue="1210" listitemid="3408" islist="0"/><listitems name="Wortham" listvalue="" ordervalue="1211" listitemid="3409" islist="0"/><listitems name="Wylie" listvalue="" ordervalue="1212" listitemid="3410" islist="0"/><listitems name="Yantis" listvalue="" ordervalue="1213" listitemid="3411" islist="0"/><listitems name="Yoakum" listvalue="" ordervalue="1214" listitemid="3412" islist="0"/><listitems name="Yorktown" listvalue="" ordervalue="1215" listitemid="3413" islist="0"/><listitems name="Zavalla" listvalue="" ordervalue="1216" listitemid="3414" islist="0"/></lists><html version="6" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><head><title>DSO Form</title><!--this works--><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/jquery.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.js" /><style type="text/css"> 
        #container {  margin: 50px;
        }
        .form-group.required .control-label:after {
  content:"*";
  color:red;
}

    </style><script type="text/javascript">
                var cityArrayCopy = [];
      var cats = true;
            var scribe = { 
            status: 0,
            autoRun: function () { },
            baseArray: [],
            changesMade: false,
            Evaluation: function() {
    var a=[];
    for(var i=0; i &lt; scribe.fields4History.length; i++) {
      var b=document.getElementsByName(scribe.fields4History[i][0]);
      for(var k=0; k &lt; b.length; k++) {
        var result=[];
        if(b[k].tagName==="SELECT") {
            var ms = b[k].selectedOptions;
            var msr =[];
            for(var msi=0; msi &lt; ms.length; ms++){
               msr.push(ms[msi].text);
            }
             result.push(scribe.fields4History[i][1]);
             result.push(msr.join(','));   
        } else if (b[k].type==="radio" || b[k].type==="checkbox") {
          result.push(scribe.fields4History[i][1]);
          if(b[k].checked===true) {
            result.push('Selected');
          } else {
            result.push('Not Selected');
          }
        } else {
          result.push(scribe.fields4History[i][1]);
          result.push(b[k].value);
        }
        a.push(result);
        
      }
    }
    return a;
            },
            inicialReview: function () {
                scribe.baseArray = scribe.Evaluation();
            },
            postReview: function () {
                var p = [];
                var f = scribe.Evaluation();
                for (var i = 0; i &lt; f.length; i++) {
                    if (f[i][1] !== scribe.baseArray[i][1]) {
                        p.push(f[i][0] + ': ' + f[i][1]);
                    }
                }
                p = p.join('\r\n');
                if (p.length &gt; 0) { scribe.changesMade = true; } else {
                document.getElementById('cancelbtn').click();
                //cancels unedited save
                }
                return p;
            }
        };
        function removeOptions(obj) {
            if (obj == null) return;
            if (obj.options == null) return;
            obj.options.length = 0;
        }

        function iaAverage() {
   var a1 = document.getElementById("sfhCovByInsurance").value;
   var a2 = document.getElementById("mhCovByInsurance").value;
   var a3 = document.getElementById("mfuCovByInsurance").value;
   var num = 0;
   if (a1 != ("" || 0)) {
       num += 1
   } else {
       a1 = 0;
   };
   if (a2 != ("" || 0)) {
       num += 1
   } else {
       a2 = 0;
   };
   if (a3 != ("" || 0)) {
       num += 1
   } else {
       a3 = 0;
   };
   var avg = (parseFloat(a1) + parseFloat(a2) + parseFloat(a3)) / num;
   if (num === 0) {
    document.getElementById("totalsCovByInsurance").value = '';
       return false;

   } else {
       document.getElementById("totalsCovByInsurance").value = avg;
   }
}


       function autoSum() {
            var fields = ["totalsAffected", "totalsMinorDamage", "totalsMajorDamage", "totalsDestroyed", "numberTotal", "coveredTotal", "totalTotal", "sitesTotals", "repairCostTotals", "insuranceTotals", "sitesOtherTotal", "repairCostTotal", "insuranceCostTotal"];
            for (var i = 0; i &lt; fields.length; i++) {
                var objs = document.getElementsByClassName(fields[i]);
                for (var h = 0; h &lt; objs.length; h++) {
                    objs[h].idByClass = fields[i];
                    objs[h].onblur = function () {
                        var t = 0;
                        var a = document.getElementsByClassName(this.idByClass);
                        for (var b = 0; b &lt; a.length; b++) {
                            if (a[b].value != '') {
                                var u = removeNonNumber(a[b].value);
                                t+= parseFloat(u);
                                a[b].value = comma(u);
                                /*if (isNaN(a[b].value) === false) {
                                    t += parseFloat(a[b].value)
                                }
                                else {
                                    numError(a[b].value);
                                    a[b].value = 0;

                                }*/
                            }
                        }
                        document.getElementById(this.idByClass).value = comma(t);
                        console.log('sums run');
                    };
                }
            }
        }
        
        function removeNonNumber(a) {
            a = a.replace(/[^0-9.-]+/g, '');
            var t = 0;
            if (a != '') {
                if (isNaN(a) === false) {
                    t += parseFloat(a)
                } else {
                    return 0;

                }
            }
            return t.toFixed(2);
        }
        function comma(x) {
            if (isNaN(x) === true || x == "") {
                x == undefined ? x = '' : x = x;
                return x;
            }
            x = parseFloat(x).toFixed(2);
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            //return x;
        }
        function commandInfoWindow(clickedId, title, message) {
            $('#' + clickedId).click(function () {
                BootstrapDialog.show({
                    title: title,
                    message: function (dialog) {
                        var $content = $(message);
                        return $content;
                    },

                });
            })

        }

        function addOption(select, optionTxt, selected) {
            var option = document.createElement("option");
            option.text = optionTxt;
            option.id = optionTxt;
            option.selected = selected;
            try {
                select.add(option, null);
            }
            catch (ex) {
                select.add(option);
            }
        }

//the code below works, it is just too long to be the correct color
        var cityMatrix = [["Hill", "Abbott"], ["Hale", "Abernathy"], ["Lubbock", "Abernathy"], ["Jones", "Abilene"], ["Taylor", "Abilene"], ["Dawson", "Ackerly"], ["Martin", "Ackerly"], ["Collin", "Addison"], ["Dallas", "Addison"], ["Oldham", "Adrian"], ["Nueces", "Agua Dulce"], ["Hidalgo", "Alamo"], ["Bexar", "Alamo Heights"], ["Wood", "Alba"], ["Rains", "Alba"], ["Shackelford", "Albany"], ["Parker", "Aledo"], ["Jim Wells", "Alice"], ["Collin", "Allen"], ["Ellis", "Alma"], ["Brewster", "Alpine"], ["Cherokee", "Alto"], ["Hidalgo", "Alton"], ["Johnson", "Alvarado"], ["Brazoria", "Alvin"], ["Galveston", "Alvin"], ["Wise", "Alvord"], ["Potter", "Amarillo"], ["Randall", "Amarillo"], ["Liberty", "Ames"], ["Lamb", "Amherst"], ["Chambers", "Anahuac"], ["Grimes", "Anderson"], ["Andrews", "Andrews"], ["Brazoria", "Angleton"], ["Navarro", "Angus"], ["Collin", "Anna"], ["Parker", "Annetta"], ["Parker", "Annetta North"], ["Parker", "Annetta South"], ["Red River", "Annona"], ["Jones", "Anson"], ["El Paso", "Anthony"], ["Hockley", "Anton"], ["Nacogdoches", "Appleby"], ["Hill", "Aquilla"], ["Aransas", "Aransas Pass"], ["San Patricio", "Aransas Pass"], ["Nueces", "Aransas Pass"], ["Archer", "Archer City"], ["Fort Bend", "Arcola"], ["Denton", "Argyle"], ["Tarrant", "Arlington"], ["Smith", "Arp"], ["Dimmit", "Asherton"], ["Stonewall", "Aspermont"], ["Henderson", "Athens"], ["Cass", "Atlanta"], ["Denton", "Aubrey"], ["Wise", "Aurora"], ["Williamson", "Austin"], ["Travis", "Austin"], ["Hays", "Austin"], ["Refugio", "Austwell"], ["Red River", "Avery"], ["Cass", "Avinger"], ["Parker", "Azle"], ["Tarrant", "Azle"], ["Fannin", "Bailey"], ["Brazoria", "Bailey's Prairie"], ["Callahan", "Baird"], ["Dallas", "Balch Springs"], ["Bexar", "Balcones Heights"], ["Runnels", "Ballinger"], ["Reeves", "Balmorhea"], ["Bandera", "Bandera"], ["Brown", "Bangs"], ["Ellis", "Bardwell"], ["Navarro", "Barry"], ["Ward", "Barstow"], ["Williamson", "Bartlett"], ["Bell", "Bartlett"], ["Denton", "Bartonville"], ["Bastrop", "Bastrop"], ["Matagorda", "Bay City"], ["Galveston", "Bayou Vista"], ["Refugio", "Bayside"], ["Harris", "Baytown"], ["Chambers", "Baytown"], ["Cameron", "Bayview"], ["Chambers", "Beach City"], ["Hays", "Bear Creek"], ["Fort Bend", "Beasley"], ["Jefferson", "Beaumont"], ["Hardin", "Beaumont"], ["Orange", "Beaumont"], ["Panola", "Beckville"], ["Tarrant", "Bedford"], ["Grimes", "Bedias"], ["Travis", "Bee Cave"], ["Bee", "Beeville"], ["Harris", "Bellaire"], ["Clay", "Bellevue"], ["McLennan", "Bellmead"], ["Grayson", "Bells"], ["Austin", "Bellville"], ["Bell", "Belton"], ["Duval", "Benavides"], ["Tarrant", "Benbrook"], ["Knox", "Benjamin"], ["Henderson", "Berryville"], ["Burnet", "Bertram"], ["McLennan", "Beverly Hills"], ["Jefferson", "Bevil Oaks"], ["Hardin", "Bevil Oaks"], ["Reagan", "Big Lake"], ["Upshur", "Big Sandy"], ["Howard", "Big Spring"], ["Dimmit", "Big Wells"], ["Nueces", "Bishop"], ["Potter", "Bishop Hills"], ["Coke", "Blackwell"], ["Nolan", "Blackwell"], ["Blanco", "Blanco"], ["Brown", "Blanket"], ["Cass", "Bloomburg"], ["Navarro", "Blooming Grove"], ["Lamar", "Blossom"], ["Tarrant", "Blue Mound"], ["Collin", "Blue Ridge"], ["Hill", "Blum"], ["Kendall", "Boerne"], ["Red River", "Bogata"], ["Fannin", "Bonham"], ["Brazoria", "Bonney"], ["Ochiltree", "Booker"], ["Lipscomb", "Booker"], ["Hutchinson", "Borger"], ["Parmer", "Bovina"], ["Montague", "Bowie"], ["Wise", "Boyd"], ["Kinney", "Brackettville"], ["McCulloch", "Brady"], ["Brazoria", "Brazoria"], ["Hood", "Brazos Bend"], ["Austin", "Brazos Country"], ["Stephens", "Breckenridge"], ["Robertson", "Bremond"], ["Washington", "Brenham"], ["Travis", "Briarcliff"], ["Johnson", "Briaroaks"], ["Orange", "Bridge City"], ["Wise", "Bridgeport"], ["San Augustine", "Broaddus"], ["Coke", "Bronte"], ["Waller", "Brookshire"], ["Harris", "Brookside Village"], ["Brazoria", "Brookside Village"], ["Jasper", "Browndell"], ["Terry", "Brownfield"], ["Henderson", "Brownsboro"], ["Cameron", "Brownsville"], ["Brown", "Brownwood"], ["McLennan", "Bruceville-Eddy"], ["Falls", "Bruceville-Eddy"], ["Brazos", "Bryan"], ["Jack", "Bryson"], ["Milam", "Buckholts"], ["Hays", "Buda"], ["Leon", "Buffalo"], ["Taylor", "Buffalo Gap"], ["Lubbock", "Buffalo Springs"], ["Smith", "Bullard"], ["Cherokee", "Bullard"], ["Comal", "Bulverde"], ["Harris", "Bunker Hill Village"], ["Wichita", "Burkburnett"], ["Angelina", "Burke"], ["Tarrant", "Burleson"], ["Johnson", "Burleson"], ["Burnet", "Burnet"], ["Washington", "Burton"], ["Clay", "Byers"], ["Hill", "Bynum"], ["Sherman", "Cactus"], ["Moore", "Cactus"], ["Hunt", "Caddo Mills"], ["Burleson", "Caldwell"], ["Cooke", "Callisburg"], ["Robertson", "Calvert"], ["Milam", "Cameron"], ["Real", "Camp Wood"], ["Hunt", "Campbell"], ["Hemphill", "Canadian"], ["Henderson", "Caney City"], ["Van Zandt", "Canton"], ["Randall", "Canyon"], ["Eastland", "Carbon"], ["Hill", "Carl's Corner"], ["Washington", "Carmine"], ["Fayette", "Carmine"], ["Dimmit", "Carrizo Springs"], ["Denton", "Carrollton"], ["Collin", "Carrollton"], ["Dallas", "Carrollton"], ["Panola", "Carthage"], ["Wichita", "Cashion"], ["Bexar", "Castle Hills"], ["Medina", "Castroville"], ["Dallas", "Cedar Hill"], ["Ellis", "Cedar Hill"], ["Williamson", "Cedar Park"], ["Travis", "Cedar Park"], ["Hunt", "Celeste"], ["Denton", "Celina"], ["Collin", "Celina"], ["Grayson", "Celina"], ["Shelby", "Center"], ["Leon", "Centerville"], ["Henderson", "Chandler"], ["Hartley", "Channing"], ["Atascosa", "Charlotte"], ["Tyler", "Chester"], ["Wise", "Chico"], ["Childress", "Childress"], ["Hardeman", "Chillicothe"], ["Jefferson", "China"], ["Bexar", "China Grove"], ["Nacogdoches", "Chireno"], ["Atascosa", "Christine"], ["Guadalupe", "Cibolo"], ["Bexar", "Cibolo"], ["Eastland", "Cisco"], ["Donley", "Clarendon"], ["Red River", "Clarksville"], ["Upshur", "Clarksville City"], ["Gregg", "Clarksville City"], ["Armstrong", "Claude"], ["Galveston", "Clear Lake Shores"], ["Johnson", "Cleburne"], ["Liberty", "Cleveland"], ["Bosque", "Clifton"], ["El Paso", "Clint"], ["Brazoria", "Clute"], ["Callahan", "Clyde"], ["Howard", "Coahoma"], ["Dallas", "Cockrell Hill"], ["Henderson", "Coffee City"], ["San Jacinto", "Coldspring"], ["Coleman", "Coleman"], ["Brazos", "College Station"], ["Tarrant", "Colleyville"], ["Grayson", "Collinsville"], ["Tyler", "Colmesneil"], ["Mitchell", "Colorado City"], ["Colorado", "Columbus"], ["Comanche", "Comanche"], ["Cameron", "Combes"], ["Dallas", "Combine"], ["Kaufman", "Combine"], ["Hunt", "Commerce"], ["Hopkins", "Como"], ["Montgomery", "Conroe"], ["Bexar", "Converse"], ["Parker", "Cool"], ["Limestone", "Coolidge"], ["Delta", "Cooper"], ["Denton", "Coppell"], ["Dallas", "Coppell"], ["Tarrant", "Coppell"], ["Denton", "Copper Canyon"], ["Coryell", "Copperas Cove"], ["Lampasas", "Copperas Cove"], ["Bell", "Copperas Cove"], ["Denton", "Corinth"], ["Aransas", "Corpus Christi"], ["San Patricio", "Corpus Christi"], ["Nueces", "Corpus Christi"], ["Kleberg", "Corpus Christi"], ["Denton", "Corral City"], ["Polk", "Corrigan"], ["Navarro", "Corsicana"], ["Kaufman", "Cottonwood"], ["Burnet", "Cottonwood Shores"], ["La Salle", "Cotulla"], ["Chambers", "Cove"], ["Hill", "Covington"], ["Kaufman", "Crandall"], ["Crane", "Crane"], ["Bosque", "Cranfills Gap"], ["McLennan", "Crawford"], ["Travis", "Creedmoor"], ["Hays", "Creedmoor"], ["Parker", "Cresson"], ["Hood", "Cresson"], ["Johnson", "Cresson"], ["Houston", "Crockett"], ["Crosby", "Crosbyton"], ["Callahan", "Cross Plains"], ["Denton", "Cross Roads"], ["Johnson", "Cross Timber"], ["Foard", "Crowell"], ["Tarrant", "Crowley"], ["Johnson", "Crowley"], ["Zavala", "Crystal City"], ["DeWitt", "Cuero"], ["Hopkins", "Cumby"], ["Cherokee", "Cuney"], ["Nacogdoches", "Cushing"], ["Montgomery", "Cut and Shoot"], ["Morris", "Daingerfield"], ["Liberty", "Daisetta"], ["Dallam", "Dalhart"], ["Hartley", "Dalhart"], ["Denton", "Dallas"], ["Collin", "Dallas"], ["Rockwall", "Dallas"], ["Dallas", "Dallas"], ["Kaufman", "Dallas"], ["Tarrant", "Dalworthington Gardens"], ["Brazoria", "Danbury"], ["Lipscomb", "Darrouzett"], ["Navarro", "Dawson"], ["Liberty", "Dayton"], ["Liberty", "Dayton Lakes"], ["Comanche", "De Leon"], ["Clay", "Dean"], ["Wise", "Decatur"], ["Hood", "DeCordova"], ["Harris", "Deer Park"], ["Bowie", "DeKalb"], ["Val Verde", "Del Rio"], ["Hudspeth", "Dell City"], ["Grayson", "Denison"], ["Denton", "Denton"], ["Gaines", "Denver City"], ["Yoakum", "Denver City"], ["Red River", "Deport"], ["Lamar", "Deport"], ["Dallas", "DeSoto"], ["Red River", "Detroit"], ["Liberty", "Devers"], ["Medina", "Devine"], ["Angelina", "Diboll"], ["Dickens", "Dickens"], ["Galveston", "Dickinson"], ["Frio", "Dilley"], ["Castro", "Dimmitt"], ["Denton", "Dish"], ["Fannin", "Dodd City"], ["Collingsworth", "Dodson"], ["Cass", "Domino"], ["Hidalgo", "Donna"], ["Grayson", "Dorchester"], ["Denton", "Double Oak"], ["Cass", "Douglassville"], ["Hays", "Dripping Springs"], ["Nueces", "Driscoll"], ["Erath", "Dublin"], ["Moore", "Dumas"], ["Dallas", "Duncanville"], ["Colorado", "Eagle Lake"], ["Maverick", "Eagle Pass"], ["Brown", "Early"], ["Lamb", "Earth"], ["Fort Bend", "East Bernard"], ["Wharton", "East Bernard"], ["Upshur", "East Mountain"], ["Gregg", "East Mountain"], ["Rains", "East Tawakoni"], ["Eastland", "Eastland"], ["Gregg", "Easton"], ["Rusk", "Easton"], ["Fannin", "Ector"], ["Hidalgo", "Edcouch"], ["Concho", "Eden"], ["Tarrant", "Edgecliff"], ["Van Zandt", "Edgewood"], ["Hidalgo", "Edinburg"], ["Hale", "Edmonson"], ["Jackson", "Edna"], ["Van Zandt", "Edom"], ["Wharton", "El Campo"], ["Webb", "El Cenizo"], ["Harris", "El Lago"], ["El Paso", "El Paso"], ["Schleicher", "Eldorado"], ["Wichita", "Electra"], ["Travis", "Elgin"], ["Bastrop", "Elgin"], ["Anderson", "Elkhart"], ["Bexar", "Elmendorf"], ["Wilson", "Elmendorf"], ["Hidalgo", "Elsa"], ["Navarro", "Emhouse"], ["Rains", "Emory"], ["Henderson", "Enchanted Oaks"], ["La Salle", "Encinal"], ["Kaufman", "Ennis"], ["Ellis", "Ennis"], ["Starr", "Escobares"], ["Hall", "Estelline"], ["Dallas", "Euless"], ["Tarrant", "Euless"], ["Navarro", "Eureka"], ["Henderson", "Eustace"], ["Hamilton", "Evant"], ["Coryell", "Evant"], ["Tarrant", "Everman"], ["Kendall", "Fair Oaks Ranch"], ["Comal", "Fair Oaks Ranch"], ["Bexar", "Fair Oaks Ranch"], ["Fort Bend", "Fairchilds"], ["Freestone", "Fairfield"], ["Collin", "Fairview"], ["Brooks", "Falfurrias"], ["Karnes", "Falls City"], ["Dallas", "Farmers Branch"], ["Collin", "Farmersville"], ["Parmer", "Farwell"], ["Rockwall", "Fate"], ["Fayette", "Fayetteville"], ["Dallas", "Ferris"], ["Ellis", "Ferris"], ["Fayette", "Flatonia"], ["Williamson", "Florence"], ["Wilson", "Floresville"], ["Denton", "Flower Mound"], ["Tarrant", "Flower Mound"], ["Floyd", "Floydada"], ["Lipscomb", "Follett"], ["Tarrant", "Forest Hill"], ["Kaufman", "Forney"], ["Howard", "Forsan"], ["Pecos", "Fort Stockton"], ["Wise", "Fort Worth"], ["Denton", "Fort Worth"], ["Parker", "Fort Worth"], ["Dallas", "Fort Worth"], ["Tarrant", "Fort Worth"], ["Johnson", "Fort Worth"], ["Robertson", "Franklin"], ["Henderson", "Frankston"], ["Anderson", "Frankston"], ["Gillespie", "Fredericksburg"], ["Brazoria", "Freeport"], ["Duval", "Freer"], ["Harris", "Friendswood"], ["Brazoria", "Friendswood"], ["Galveston", "Friendswood"], ["Parmer", "Friona"], ["Denton", "Frisco"], ["Collin", "Frisco"], ["Moore", "Fritch"], ["Hutchinson", "Fritch"], ["Navarro", "Frost"], ["Van Zandt", "Fruitvale"], ["Fort Bend", "Fulshear"], ["Aransas", "Fulton"], ["Cooke", "Gainesville"], ["Harris", "Galena Park"], ["Cherokee", "Gallatin"], ["Galveston", "Galveston"], ["Jackson", "Ganado"], ["Comal", "Garden Ridge"], ["Collin", "Garland"], ["Dallas", "Garland"], ["Ellis", "Garrett"], ["Nacogdoches", "Garrison"], ["Panola", "Gary"], ["Coryell", "Gatesville"], ["Live Oak", "George West"], ["Williamson", "Georgetown"], ["McLennan", "Gholson"], ["Lee", "Giddings"], ["Upshur", "Gilmer"], ["Upshur", "Gladewater"], ["Gregg", "Gladewater"], ["Somervell", "Glen Rose"], ["Dallas", "Glenn Heights"], ["Ellis", "Glenn Heights"], ["Johnson", "Godley"], ["Ector", "Goldsmith"], ["Mills", "Goldthwaite"], ["Goliad", "Goliad"], ["McLennan", "Golinda"], ["Falls", "Golinda"], ["Gonzales", "Gonzales"], ["Navarro", "Goodlow"], ["Polk", "Goodrich"], ["Palo Pinto", "Gordon"], ["Knox", "Goree"], ["Eastland", "Gorman"], ["Comanche", "Gorman"], ["Palo Pinto", "Graford"], ["Young", "Graham"], ["Hood", "Granbury"], ["Dallas", "Grand Prairie"], ["Tarrant", "Grand Prairie"], ["Ellis", "Grand Prairie"], ["Van Zandt", "Grand Saline"], ["Ward", "Grandfalls"], ["Johnson", "Grandview"], ["Williamson", "Granger"], ["Burnet", "Granite Shoals"], ["Hidalgo", "Granjeno"], ["Houston", "Grapeland"], ["Denton", "Grapevine"], ["Dallas", "Grapevine"], ["Tarrant", "Grapevine"], ["Kaufman", "Grays Prairie"], ["Hunt", "Greenville"], ["San Patricio", "Gregory"], ["Bexar", "Grey Forest"], ["Limestone", "Groesbeck"], ["Carson", "Groom"], ["Jefferson", "Groves"], ["Trinity", "Groveton"], ["Hansford", "Gruver"], ["Henderson", "Gun Barrel City"], ["Grayson", "Gunter"], ["Comanche", "Gustine"], ["Denton", "Hackberry"], ["Hale", "Hale Center"], ["Lavaca", "Hallettsville"], ["McLennan", "Hallsburg"], ["Harrison", "Hallsville"], ["Tarrant", "Haltom City"], ["Hamilton", "Hamilton"], ["Fisher", "Hamlin"], ["Jones", "Hamlin"], ["Randall", "Happy"], ["Swisher", "Happy"], ["Liberty", "Hardin"], ["Bell", "Harker Heights"], ["Cameron", "Harlingen"], ["Castro", "Hart"], ["Haskell", "Haskell"], ["Denton", "Haslet"], ["Tarrant", "Haslet"], ["Hunt", "Hawk Cove"], ["Wood", "Hawkins"], ["Jones", "Hawley"], ["Hays", "Hays"], ["Robertson", "Hearne"], ["Rockwall", "Heath"], ["Kaufman", "Heath"], ["Denton", "Hebron"], ["Collin", "Hebron"], ["Donley", "Hedley"], ["Harris", "Hedwig Village"], ["Bexar", "Helotes"], ["Sabine", "Hemphill"], ["Waller", "Hempstead"], ["Rusk", "Henderson"], ["Clay", "Henrietta"], ["Deaf Smith", "Hereford"], ["McLennan", "Hewitt"], ["Denton", "Hickory Creek"], ["Hamilton", "Hico"], ["Hidalgo", "Hidalgo"], ["Smith", "Hideaway"], ["Lipscomb", "Higgins"], ["Burnet", "Highland Haven"], ["Dallas", "Highland Park"], ["Denton", "Highland Village"], ["Bexar", "Hill Country Village"], ["Brazoria", "Hillcrest Village"], ["Hill", "Hillsboro"], ["Harris", "Hilshire Village"], ["Brazoria", "Hitchcock"], ["Galveston", "Hitchcock"], ["Brazoria", "Holiday Lakes"], ["Bell", "Holland"], ["Archer", "Holliday"], ["Bexar", "Hollywood Park"], ["Medina", "Hondo"], ["Fannin", "Honey Grove"], ["Bowie", "Hooks"], ["El Paso", "Horizon City"], ["Burnet", "Horseshoe Bay"], ["Llano", "Horseshoe Bay"], ["Montgomery", "Houston"], ["Harris", "Houston"], ["Fort Bend", "Houston"], ["Brazoria", "Houston"], ["Donley", "Howardwick"], ["Grayson", "Howe"], ["Hill", "Hubbard"], ["Angelina", "Hudson"], ["Parker", "Hudson Oaks"], ["Morris", "Hughes Springs"], ["Cass", "Hughes Springs"], ["Harris", "Humble"], ["Harris", "Hunters Creek Village"], ["Angelina", "Huntington"], ["Walker", "Huntsville"], ["Tarrant", "Hurst"], ["Dallas", "Hutchins"], ["Williamson", "Hutto"], ["Shelby", "Huxley"], ["Lubbock", "Idalou"], ["Taylor", "Impact"], ["Cameron", "Indian Lake"], ["Austin", "Industry"], ["San Patricio", "Ingleside"], ["San Patricio", "Ingleside On The Bay"], ["Kerr", "Ingram"], ["Grimes", "Iola"], ["Brazoria", "Iowa Colony"], ["Wichita", "Iowa Park"], ["Pecos", "Iraan"], ["Bosque", "Iredell"], ["Dallas", "Irving"], ["Tarrant", "Irving"], ["Ellis", "Italy"], ["Hill", "Itasca"], ["Tyler", "Ivanhoe"], ["Harris", "Jacinto City"], ["Jack", "Jacksboro"], ["Cherokee", "Jacksonville"], ["Galveston", "Jamaica Beach"], ["Williamson", "Jarrell"], ["Jasper", "Jasper"], ["Kent", "Jayton"], ["Marion", "Jefferson"], ["Harris", "Jersey Village"], ["Leon", "Jewett"], ["Shelby", "Joaquin"], ["Blanco", "Johnson City"], ["Clay", "Jolly"], ["Brazoria", "Jones Creek"], ["Travis", "Jonestown"], ["Hunt", "Josephine"], ["Collin", "Josephine"], ["Johnson", "Joshua"], ["Atascosa", "Jourdanton"], ["Kimble", "Junction"], ["Denton", "Justin"], ["Karnes", "Karnes City"], ["Waller", "Katy"], ["Harris", "Katy"], ["Fort Bend", "Katy"], ["Kaufman", "Kaufman"], ["Johnson", "Keene"], ["Tarrant", "Keller"], ["Galveston", "Kemah"], ["Kaufman", "Kemp"], ["Lampasas", "Kempner"], ["Fort Bend", "Kendleton"], ["Karnes", "Kenedy"], ["Liberty", "Kenefick"], ["Houston", "Kennard"], ["Tarrant", "Kennedale"], ["Henderson", "Kerens"], ["Navarro", "Kerens"], ["Winkler", "Kermit"], ["Kerr", "Kerrville"], ["Gregg", "Kilgore"], ["Rusk", "Kilgore"], ["Coryell", "Killeen"], ["Bell", "Killeen"], ["Kleberg", "Kingsville"], ["Bexar", "Kirby"], ["Jasper", "Kirbyville"], ["Freestone", "Kirvin"], ["Grayson", "Knollwood"], ["Knox", "Knox City"], ["Limestone", "Kosse"], ["Hardin", "Kountze"], ["Swisher", "Kress"], ["Denton", "Krugerville"], ["Denton", "Krum"], ["Brazos", "Kurten"], ["Hays", "Kyle"], ["Cameron", "La Feria"], ["Fayette", "La Grange"], ["Starr", "La Grulla"], ["Hidalgo", "La Joya"], ["Galveston", "La Marque"], ["Harris", "La Porte"], ["Wilson", "La Vernia"], ["Hidalgo", "La Villa"], ["Jackson", "La Ward"], ["Medina", "LaCoste"], ["McLennan", "Lacy-Lakeview"], ["Fannin", "Ladonia"], ["Travis", "Lago Vista"], ["Cameron", "Laguna Vista"], ["Wise", "Lake Bridgeport"], ["San Patricio", "Lake City"], ["Denton", "Lake Dallas"], ["Brazoria", "Lake Jackson"], ["Randall", "Lake Tanglewood"], ["Tarrant", "Lake Worth"], ["Gregg", "Lakeport"], ["San Patricio", "Lakeside (San Patricio)"], ["Tarrant", "Lakeside (Tarrant)"], ["Wichita", "Lakeside City"], ["Archer", "Lakeside City"], ["Hall", "Lakeview"], ["Travis", "Lakeway"], ["Denton", "Lakewood Village"], ["Dawson", "Lamesa"], ["Lampasas", "Lampasas"], ["Dallas", "Lancaster"], ["Ellis", "Lancaster"], ["Webb", "Laredo"], ["Houston", "Latexo"], ["Collin", "Lavon"], ["Taylor", "Lawn"], ["Harris", "League City"], ["Brazoria", "League City"], ["Galveston", "League City"], ["Real", "Leakey"], ["Williamson", "Leander"], ["Travis", "Leander"], ["Bowie", "Leary"], ["Gray", "Lefors"], ["Bexar", "Leon Valley"], ["Leon", "Leona"], ["Fannin", "Leonard"], ["McLennan", "Leroy"], ["Hockley", "Levelland"], ["Denton", "Lewisville"], ["Lee", "Lexington"], ["Liberty", "Liberty"], ["Williamson", "Liberty Hill"], ["Denton", "Lincoln Park"], ["Smith", "Lindale"], ["Cass", "Linden"], ["Cooke", "Lindsay"], ["Hood", "Lipan"], ["Denton", "Little Elm"], ["Bell", "Little River Academy"], ["Lamb", "Littlefield"], ["Bexar", "Live Oak"], ["Brazoria", "Liverpool"], ["Polk", "Livingston"], ["Llano", "Llano"], ["Caldwell", "Lockhart"], ["Floyd", "Lockney"], ["Henderson", "Log Cabin"], ["Lampasas", "Lometa"], ["Hunt", "Lone Oak"], ["Morris", "Lone Star"], ["Harrison", "Longview"], ["Gregg", "Longview"], ["Mitchell", "Loraine"], ["McLennan", "Lorena"], ["Crosby", "Lorenzo"], ["Cameron", "Los Fresnos"], ["Cameron", "Los Indios"], ["Dawson", "Los Ybanez"], ["Falls", "Lott"], ["Houston", "Lovelady"], ["Collin", "Lowry Crossing"], ["Lubbock", "Lubbock"], ["Collin", "Lucas"], ["Jones", "Lueders"], ["Shackelford", "Lueders"], ["Angelina", "Lufkin"], ["Guadalupe", "Luling"], ["Caldwell", "Luling"], ["Hardin", "Lumberton"], ["Willacy", "Lyford"], ["Bexar", "Lytle"], ["Medina", "Lytle"], ["Atascosa", "Lytle"], ["Van Zandt", "Mabank"], ["Henderson", "Mabank"], ["Kaufman", "Mabank"], ["Madison", "Madisonville"], ["Montgomery", "Magnolia"], ["Henderson", "Malakoff"], ["Hill", "Malone"], ["Travis", "Manor"], ["Tarrant", "Mansfield"], ["Ellis", "Mansfield"], ["Johnson", "Mansfield"], ["Brazoria", "Manvel"], ["Burnet", "Marble Falls"], ["Presidio", "Marfa"], ["Cass", "Marietta"], ["Guadalupe", "Marion"], ["Falls", "Marlin"], ["Leon", "Marquez"], ["Harrison", "Marshall"], ["McLennan", "Mart"], ["Limestone", "Mart"], ["Guadalupe", "Martindale"], ["Caldwell", "Martindale"], ["Mason", "Mason"], ["Motley", "Matador"], ["San Patricio", "Mathis"], ["Bowie", "Maud"], ["Ellis", "Maypearl"], ["Hidalgo", "McAllen"], ["Upton", "McCamey"], ["Coryell", "McGregor"], ["McLennan", "McGregor"], ["Collin", "McKinney"], ["Gray", "McLean"], ["Rockwall", "McLendon-Chisholm"], ["Kaufman", "McLendon-Chisholm"], ["Terry", "Meadow"], ["Burnet", "Meadowlakes"], ["Harris", "Meadows Place"], ["Fort Bend", "Meadows Place"], ["Archer", "Megargel"], ["Collin", "Melissa"], ["McCulloch", "Melvin"], ["Hall", "Memphis"], ["Menard", "Menard"], ["Hidalgo", "Mercedes"], ["Bosque", "Meridian"], ["Taylor", "Merkel"], ["Hill", "Mertens"], ["Irion", "Mertzon"], ["Dallas", "Mesquite"], ["Kaufman", "Mesquite"], ["Limestone", "Mexia"], ["Roberts", "Miami"], ["Martin", "Midland"], ["Midland", "Midland"], ["Ellis", "Midlothian"], ["Madison", "Midway"], ["Milam", "Milano"], ["Navarro", "Mildred"], ["Runnels", "Miles"], ["Ellis", "Milford"], ["Titus", "Miller's Cove"], ["Parker", "Millsap"], ["Wood", "Mineola"], ["Palo Pinto", "Mineral Wells"], ["Parker", "Mineral Wells"], ["Palo Pinto", "Mingus"], ["Hidalgo", "Mission"], ["Harris", "Missouri City"], ["Fort Bend", "Missouri City"], ["Wheeler", "Mobeetie"], ["Rockwall", "Mobile City"], ["Winkler", "Monahans"], ["Ward", "Monahans"], ["Liberty", "Mont Belvieu"], ["Harris", "Mont Belvieu"], ["Chambers", "Mont Belvieu"], ["Montgomery", "Montgomery"], ["McLennan", "Moody"], ["Henderson", "Moore Station"], ["Shackelford", "Moran"], ["Bosque", "Morgan"], ["Harris", "Morgan's Point"], ["Bell", "Morgan's Point Resort"], ["Cochran", "Morton"], ["Lavaca", "Moulton"], ["Hill", "Mount Calm"], ["Rusk", "Mount Enterprise"], ["Titus", "Mount Pleasant"], ["Franklin", "Mount Vernon"], ["Hays", "Mountain City"], ["Cooke", "Muenster"], ["Bailey", "Muleshoe"], ["Mills", "Mullin"], ["Knox", "Munday"], ["Henderson", "Murchison"], ["Collin", "Murphy"], ["Navarro", "Mustang"], ["Travis", "Mustang Ridge"], ["Caldwell", "Mustang Ridge"], ["Nacogdoches", "Nacogdoches"], ["Morris", "Naples"], ["Bowie", "Nash"], ["Harris", "Nassau Bay"], ["Medina", "Natalia"], ["Navarro", "Navarro"], ["Brazos", "Navasota"], ["Grimes", "Navasota"], ["Castro", "Nazareth"], ["Jefferson", "Nederland"], ["Fort Bend", "Needville"], ["Harrison", "Nesbitt"], ["Collin", "Nevada"], ["Guadalupe", "New Berlin"], ["Bexar", "New Berlin"], ["Bowie", "New Boston"], ["Comal", "New Braunfels"], ["Guadalupe", "New Braunfels"], ["Smith", "New Chapel Hill"], ["Lubbock", "New Deal"], ["Wise", "New Fairview"], ["Lynn", "New Home"], ["Collin", "New Hope"], ["Rusk", "New London"], ["Cherokee", "New Summerfield"], ["Walker", "New Waverly"], ["Wise", "Newark"], ["Young", "Newcastle"], ["Newton", "Newton"], ["Hunt", "Neylandville"], ["Hays", "Niederwald"], ["Caldwell", "Niederwald"], ["Wilson", "Nixon"], ["Gonzales", "Nixon"], ["Montague", "Nocona"], ["Bell", "Nolanville"], ["Jefferson", "Nome"], ["Smith", "Noonday"], ["DeWitt", "Nordheim"], ["Leon", "Normangee"], ["Madison", "Normangee"], ["Liberty", "North Cleveland"], ["Tarrant", "North Richland Hills"], ["Denton", "Northlake"], ["Coleman", "Novice"], ["Kaufman", "Oak Grove"], ["Ellis", "Oak Leaf"], ["Denton", "Oak Point"], ["Cooke", "Oak Ridge (Cooke)"], ["Kaufman", "Oak Ridge (Kaufman)"], ["Montgomery", "Oak Ridge North"], ["Navarro", "Oak Valley"], ["Leon", "Oakwood"], ["Haskell", "O'Brien"], ["San Patricio", "Odem"], ["Ector", "Odessa"], ["Midland", "Odessa"], ["Dawson", "O'Donnell"], ["Lynn", "O'Donnell"], ["Coryell", "Oglesby"], ["Liberty", "Old River-Winfree"], ["Chambers", "Old River-Winfree"], ["Bexar", "Olmos Park"], ["Young", "Olney"], ["Lamb", "Olton"], ["Morris", "Omaha"], ["Polk", "Onalaska"], ["Hockley", "Opdyke West"], ["Orange", "Orange"], ["Jim Wells", "Orange Grove"], ["Fort Bend", "Orchard"], ["Upshur", "Ore City"], ["Marion", "Ore City"], ["Smith", "Overton"], ["Rusk", "Overton"], ["Dallas", "Ovilla"], ["Ellis", "Ovilla"], ["Brazoria", "Oyster Creek"], ["Cottle", "Paducah"], ["Concho", "Paint Rock"], ["Matagorda", "Palacios"], ["Anderson", "Palestine"], ["Randall", "Palisades"], ["Cameron", "Palm Valley"], ["Ellis", "Palmer"], ["Hidalgo", "Palmhurst"], ["Hidalgo", "Palmview"], ["Gray", "Pampa"], ["Carson", "Panhandle"], ["Montgomery", "Panorama Village"], ["Tarrant", "Pantego"], ["Wise", "Paradise"], ["Lamar", "Paris"], ["Collin", "Parker"], ["Harris", "Pasadena"], ["Waller", "Pattison"], ["Montgomery", "Patton Village"], ["Henderson", "Payne Springs"], ["Harris", "Pearland"], ["Fort Bend", "Pearland"], ["Brazoria", "Pearland"], ["Galveston", "Pearland"], ["Frio", "Pearsall"], ["Delta", "Pecan Gap"], ["Fannin", "Pecan Gap"], ["Ellis", "Pecan Hill"], ["Reeves", "Pecos"], ["Tarrant", "Pelican Bay"], ["Hill", "Penelope"], ["Hidalgo", "Penitas"], ["Ochiltree", "Perryton"], ["Hale", "Petersburg"], ["Clay", "Petrolia"], ["Nueces", "Petronila"], ["Williamson", "Pflugerville"], ["Travis", "Pflugerville"], ["Hidalgo", "Pharr"], ["Denton", "Pilot Point"], ["Collin", "Pilot Point"], ["Orange", "Pine Forest"], ["Waller", "Pine Island"], ["Orange", "Pinehurst"], ["Sabine", "Pineland"], ["Harris", "Piney Point Village"], ["Camp", "Pittsburg"], ["Yoakum", "Plains"], ["Hale", "Plainview"], ["Denton", "Plano"], ["Collin", "Plano"], ["Fort Bend", "Pleak"], ["Wichita", "Pleasant Valley"], ["Atascosa", "Pleasanton"], ["Montgomery", "Plum Grove"], ["Liberty", "Plum Grove"], ["Rains", "Point"], ["San Jacinto", "Point Blank"], ["Calhoun", "Point Comfort"], ["Travis", "Point Venture"], ["Denton", "Ponder"], ["Aransas", "Port Aransas"], ["Nueces", "Port Aransas"], ["Jefferson", "Port Arthur"], ["Orange", "Port Arthur"], ["Cameron", "Port Isabel"], ["Calhoun", "Port Lavaca"], ["Jefferson", "Port Neches"], ["San Patricio", "Portland"], ["Garza", "Post"], ["Kaufman", "Post Oak Bend"], ["Atascosa", "Poteet"], ["Wilson", "Poth"], ["Grayson", "Pottsboro"], ["Navarro", "Powell"], ["Henderson", "Poynor"], ["Waller", "Prairie View"], ["Jim Wells", "Premont"], ["Presidio", "Presidio"], ["Cameron", "Primera"], ["Collin", "Princeton"], ["Hidalgo", "Progreso"], ["Hidalgo", "Progreso Lakes"], ["Denton", "Prosper"], ["Collin", "Prosper"], ["Denton", "Providence Village"], ["Callahan", "Putnam"], ["Ward", "Pyote"], ["Hardeman", "Quanah"], ["Cass", "Queen City"], ["Hunt", "Quinlan"], ["Brazoria", "Quintana"], ["Briscoe", "Quitaque"], ["Wood", "Quitman"], ["Crosby", "Ralls"], ["Cameron", "Rancho Viejo"], ["Eastland", "Ranger"], ["Cameron", "Rangerville"], ["Upton", "Rankin"], ["Lubbock", "Ransom Canyon"], ["Fannin", "Ravenna"], ["Willacy", "Raymondville"], ["Bowie", "Red Lick"], ["Dallas", "Red Oak"], ["Ellis", "Red Oak"], ["Bowie", "Redwater"], ["Refugio", "Refugio"], ["Rusk", "Reklaw"], ["Cherokee", "Reklaw"], ["Lamar", "Reno (Lamar)"], ["Parker", "Reno (Parker)"], ["Tarrant", "Reno (Parker)"], ["Navarro", "Retreat"], ["Wise", "Rhome"], ["Ellis", "Rice"], ["Navarro", "Rice"], ["Collin", "Richardson"], ["Dallas", "Richardson"], ["Navarro", "Richland"], ["Tarrant", "Richland Hills"], ["San Saba", "Richland Springs"], ["Fort Bend", "Richmond"], ["Brazoria", "Richwood"], ["McLennan", "Riesel"], ["Webb", "Rio Bravo"], ["Starr", "Rio Grande City"], ["Cameron", "Rio Hondo"], ["Johnson", "Rio Vista"], ["Eastland", "Rising Star"], ["Tarrant", "River Oaks"], ["Walker", "Riverside"], ["Denton", "Roanoke"], ["Motley", "Roaring Springs"], ["Coke", "Robert Lee"], ["McLennan", "Robinson"], ["Nueces", "Robstown"], ["Fisher", "Roby"], ["Haskell", "Rochester"], ["Milam", "Rockdale"], ["Aransas", "Rockport"], ["Edwards", "Rocksprings"], ["Collin", "Rockwall"], ["Rockwall", "Rockwall"], ["Camp", "Rocky Mound"], ["Bell", "Rogers"], ["Travis", "Rollingwood"], ["Starr", "Roma"], ["Montgomery", "Roman Forest"], ["Hockley", "Ropesville"], ["Nolan", "Roscoe"], ["Orange", "Rose City"], ["Jefferson", "Rose Hill Acres"], ["Hardin", "Rose Hill Acres"], ["Falls", "Rosebud"], ["Fort Bend", "Rosenberg"], ["McLennan", "Ross"], ["Kaufman", "Rosser"], ["Fisher", "Rotan"], ["Blanco", "Round Mountain"], ["Williamson", "Round Rock"], ["Travis", "Round Rock"], ["Fayette", "Round Top"], ["Rockwall", "Rowlett"], ["Dallas", "Rowlett"], ["Lamar", "Roxton"], ["Hunt", "Royse City"], ["Collin", "Royse City"], ["Rockwall", "Royse City"], ["Haskell", "Rule"], ["Wise", "Runaway Bay"], ["Karnes", "Runge"], ["Cherokee", "Rusk"], ["Uvalde", "Sabinal"], ["Collin", "Sachse"], ["Dallas", "Sachse"], ["Grayson", "Sadler"], ["Tarrant", "Saginaw"], ["Bexar", "Saint Hedwig"], ["Montague", "Saint Jo"], ["Collin", "Saint Paul"], ["Bell", "Salado"], ["Tom Green", "San Angelo"], ["Comal", "San Antonio"], ["Bexar", "San Antonio"], ["Medina", "San Antonio"], ["San Augustine", "San Augustine"], ["Cameron", "San Benito"], ["Jim Wells", "San Diego"], ["Duval", "San Diego"], ["Austin", "San Felipe"], ["Hidalgo", "San Juan"], ["Travis", "San Leanna"], ["Guadalupe", "San Marcos"], ["Hays", "San Marcos"], ["Caldwell", "San Marcos"], ["San Patricio", "San Patricio"], ["Nueces", "San Patricio"], ["Willacy", "San Perlita"], ["San Saba", "San Saba"], ["Parker", "Sanctuary"], ["Brazoria", "Sandy Point"], ["Hutchinson", "Sanford"], ["Denton", "Sanger"], ["Cooke", "Sanger"], ["Tarrant", "Sansom Park"], ["Coleman", "Santa Anna"], ["Guadalupe", "Santa Clara"], ["Galveston", "Santa Fe"], ["Cameron", "Santa Rosa"], ["Fannin", "Savoy"], ["Comal", "Schertz"], ["Guadalupe", "Schertz"], ["Bexar", "Schertz"], ["Fayette", "Schulenburg"], ["Clay", "Scotland"], ["Archer", "Scotland"], ["Harrison", "Scottsville"], ["Kaufman", "Scurry"], ["Harris", "Seabrook"], ["Calhoun", "Seadrift"], ["Dallas", "Seagoville"], ["Kaufman", "Seagoville"], ["Gaines", "Seagraves"], ["Austin", "Sealy"], ["Guadalupe", "Seguin"], ["Comal", "Selma"], ["Guadalupe", "Selma"], ["Bexar", "Selma"], ["Gaines", "Seminole"], ["Polk", "Seven Oaks"], ["Henderson", "Seven Points"], ["Baylor", "Seymour"], ["Denton", "Shady Shores"], ["Lubbock", "Shallowater"], ["Wheeler", "Shamrock"], ["Bexar", "Shavano Park"], ["Montgomery", "Shenandoah"], ["San Jacinto", "Shepherd"], ["Grayson", "Sherman"], ["Lavaca", "Shiner"], ["Harris", "Shoreacres"], ["Hardin", "Silsbee"], ["Briscoe", "Silverton"], ["Fort Bend", "Simonton"], ["San Patricio", "Sinton"], ["Carson", "Skellytown"], ["Lubbock", "Slaton"], ["Gonzales", "Smiley"], ["Bastrop", "Smithville"], ["Hockley", "Smyer"], ["Burleson", "Snook"], ["Scurry", "Snyder"], ["El Paso", "Socorro"], ["Bexar", "Somerset"], ["Burleson", "Somerville"], ["Sutton", "Sonora"], ["Hardin", "Sour Lake"], ["Harris", "South Houston"], ["Coryell", "South Mountain"], ["Cameron", "South Padre Island"], ["Denton", "Southlake"], ["Tarrant", "Southlake"], ["Grayson", "Southmayd"], ["Harris", "Southside Place"], ["Hansford", "Spearman"], ["Montgomery", "Splendora"], ["Kinney", "Spofford"], ["Harris", "Spring Valley"], ["Lamb", "Springlake"], ["Parker", "Springtown"], ["Dickens", "Spur"], ["Harris", "Stafford"], ["Fort Bend", "Stafford"], ["Montgomery", "Stagecoach"], ["Haskell", "Stamford"], ["Jones", "Stamford"], ["Martin", "Stanton"], ["Guadalupe", "Staples"], ["Caldwell", "Staples"], ["Henderson", "Star Harbor"], ["Erath", "Stephenville"], ["Sterling", "Sterling City"], ["Hutchinson", "Stinnett"], ["Wilson", "Stockdale"], ["Sherman", "Stratford"], ["Palo Pinto", "Strawn"], ["Freestone", "Streetman"], ["Navarro", "Streetman"], ["Lamb", "Sudan"], ["Fort Bend", "Sugar Land"], ["Hidalgo", "Sullivan City"], ["Hopkins", "Sulphur Springs"], ["Lamar", "Sun Valley"], ["Hockley", "Sundown"], ["Dallas", "Sunnyvale"], ["Kaufman", "Sunnyvale"], ["Moore", "Sunray"], ["Burnet", "Sunrise Beach Village"], ["Llano", "Sunrise Beach Village"], ["Travis", "Sunset Valley"], ["Brazoria", "Surfside Beach"], ["Brazoria", "Sweeny"], ["Nolan", "Sweetwater"], ["San Patricio", "Taft"], ["Lynn", "Tahoka"], ["Titus", "Talco"], ["Kaufman", "Talty"], ["Rusk", "Tatum"], ["Panola", "Tatum"], ["Williamson", "Taylor"], ["Harris", "Taylor Lake Village"], ["Jefferson", "Taylor Landing"], ["Freestone", "Teague"], ["Limestone", "Tehuacana"], ["Bell", "Temple"], ["Shelby", "Tenaha"], ["Kaufman", "Terrell"], ["Bexar", "Terrell Hills"], ["Bowie", "Texarkana"], ["Chambers", "Texas City"], ["Galveston", "Texas City"], ["Sherman", "Texhoma"], ["Dallam", "Texline"], ["Denton", "The Colony"], ["Fort Bend", "Thompsons"], ["Williamson", "Thorndale"], ["Milam", "Thorndale"], ["Limestone", "Thornton"], ["Ward", "Thorntonville"], ["Williamson", "Thrall"], ["Live Oak", "Three Rivers"], ["Throckmorton", "Throckmorton"], ["Galveston", "Tiki Island"], ["Randall", "Timbercreek Canyon"], ["Shelby", "Timpson"], ["Grayson", "Tioga"], ["Hopkins", "Tira"], ["Lamar", "Toco"], ["Grimes", "Todd Mission"], ["Hood", "Tolar"], ["Grayson", "Tom Bean"], ["Montgomery", "Tomball"], ["Harris", "Tomball"], ["Henderson", "Tool"], ["Reeves", "Toyah"], ["Taylor", "Trent"], ["Grayson", "Trenton"], ["Fannin", "Trenton"], ["Henderson", "Trinidad"], ["Navarro", "Trinidad"], ["Trinity", "Trinity"], ["Denton", "Trophy Club"], ["Tarrant", "Trophy Club"], ["Smith", "Troup"], ["Cherokee", "Troup"], ["Bell", "Troy"], ["Swisher", "Tulia"], ["Hall", "Turkey"], ["Taylor", "Tuscola"], ["Taylor", "Tye"], ["Smith", "Tyler"], ["Hays", "Uhland"], ["Caldwell", "Uhland"], ["Harrison", "Uncertain"], ["Upshur", "Union Grove"], ["Hunt", "Union Valley"], ["Guadalupe", "Universal City"], ["Bexar", "Universal City"], ["Dallas", "University Park"], ["Uvalde", "Uvalde"], ["Jeff Davis", "Valentine"], ["Bosque", "Valley Mills"], ["McLennan", "Valley Mills"], ["Cooke", "Valley View"], ["Van Zandt", "Van"], ["Collin", "Van Alstyne"], ["Grayson", "Van Alstyne"], ["Culberson", "Van Horn"], ["Oldham", "Vega"], ["Ellis", "Venus"], ["Johnson", "Venus"], ["Wilbarger", "Vernon"], ["Victoria", "Victoria"], ["Orange", "Vidor"], ["Travis", "Village of The Hills"], ["Travis", "Villiage of Volente"], ["El Paso", "Vinton"], ["Bexar", "Von Ormy"], ["McLennan", "Waco"], ["Gonzales", "Waelder"], ["Bowie", "Wake Village"], ["Waller", "Waller"], ["Harris", "Waller"], ["Austin", "Wallis"], ["Bosque", "Walnut Springs"], ["Upshur", "Warren City"], ["Gregg", "Warren City"], ["Harrison", "Waskom"], ["Tarrant", "Watauga"], ["Ellis", "Waxahachie"], ["Parker", "Weatherford"], ["Travis", "Webberville"], ["Bastrop", "Webberville"], ["Harris", "Webster"], ["Galveston", "Webster"], ["Colorado", "Weimar"], ["Haskell", "Weinert"], ["Williamson", "Weir"], ["Collingsworth", "Wellington"], ["Terry", "Wellman"], ["Cherokee", "Wells"], ["Hidalgo", "Weslaco"], ["McLennan", "West"], ["Brazoria", "West Columbia"], ["Travis", "West Lake Hills"], ["Orange", "West Orange"], ["Hunt", "West Tawakoni"], ["Harris", "West University Place"], ["Mitchell", "Westbrook"], ["Denton", "Westlake"], ["Tarrant", "Westlake"], ["Collin", "Weston"], ["Fort Bend", "Weston Lakes"], ["Tarrant", "Westover Hills"], ["Tarrant", "Westworth Village"], ["Wharton", "Wharton"], ["Wheeler", "Wheeler"], ["Carson", "White Deer"], ["Gregg", "White Oak"], ["Tarrant", "White Settlement"], ["Cochran", "Whiteface"], ["Hockley", "Whiteface"], ["Smith", "Whitehouse"], ["Grayson", "Whitesboro"], ["Grayson", "Whitewright"], ["Fannin", "Whitewright"], ["Hill", "Whitney"], ["Wichita", "Wichita Falls"], ["Ward", "Wickett"], ["Montgomery", "Willis"], ["Parker", "Willow Park"], ["Van Zandt", "Wills Point"], ["Dallas", "Wilmer"], ["Lynn", "Wilson"], ["Hays", "Wimberley"], ["Bexar", "Windcrest"], ["Fannin", "Windom"], ["Clay", "Windthorst"], ["Archer", "Windthorst"], ["Titus", "Winfield"], ["Winkler", "Wink"], ["Franklin", "Winnsboro"], ["Wood", "Winnsboro"], ["Smith", "Winona"], ["Runnels", "Winters"], ["Brazos", "Wixon Valley"], ["Hunt", "Wolfe City"], ["Lubbock", "Wolfforth"], ["Montgomery", "Woodbranch Village"], ["Hays", "Woodcreek"], ["Montgomery", "Woodloch"], ["Refugio", "Woodsboro"], ["Throckmorton", "Woodson"], ["Tyler", "Woodville"], ["McLennan", "Woodway"], ["Freestone", "Wortham"], ["Limestone", "Wortham"], ["Collin", "Wylie"], ["Rockwall", "Wylie"], ["Dallas", "Wylie"], ["Wood", "Yantis"], ["Lavaca", "Yoakum"], ["DeWitt", "Yoakum"], ["DeWitt", "Yorktown"], ["Angelina", "Zavalla"]];


        var countyList = ["Anderson", "Andrews", "Angelina", "Aransas", "Archer", "Armstrong", "Atascosa", "Austin", "Bailey", "Bandera", "Bastrop", "Baylor", "Bee", "Bell", "Bexar", "Blanco", "Borden", "Bosque", "Bowie", "Brazoria", "Brazos", "Brewster", "Briscoe", "Brooks", "Brown", "Burleson", "Burnet", "Caldwell", "Calhoun", "Callahan", "Cameron", "Camp", "Carson", "Cass", "Castro", "Chambers", "Cherokee", "Childress", "Clay", "Cochran", "Coke", "Coleman", "Collin", "Collingsworth", "Colorado", "Comal", "Comanche", "Concho", "Cooke", "Coryell", "Cottle", "Crane", "Crockett", "Crosby", "Culberson", "Dallam", "Dallas", "Dawson", "Deaf Smith", "Delta", "Denton", "DeWitt", "Dickens", "Dimmit", "Donley", "Duval", "Eastland", "Ector", "Edwards", "El Paso", "Ellis", "Erath", "Falls", "Fannin", "Fayette", "Fisher", "Floyd", "Foard", "Fort Bend", "Franklin", "Freestone", "Frio", "Gaines", "Galveston", "Garza", "Gillespie", "Glasscock", "Goliad", "Gonzales", "Gray", "Grayson", "Gregg", "Grimes", "Guadalupe", "Hale", "Hall", "Hamilton", "Hansford", "Hardeman", "Hardin", "Harris", "Harrison", "Hartley", "Haskell", "Hays", "Hemphill", "Henderson", "Hidalgo", "Hill", "Hockley", "Hood", "Hopkins", "Houston", "Howard", "Hudspeth", "Hunt", "Hutchinson", "Irion", "Jack", "Jackson", "Jasper", "Jeff Davis", "Jefferson", "Jim Hogg", "Jim Wells", "Johnson", "Jones", "Karnes", "Kaufman", "Kendall", "Kenedy", "Kent", "Kerr", "Kimble", "King", "Kinney", "Kleberg", "Knox", "La Salle", "Lamar", "Lamb", "Lampasas", "Lavaca", "Lee", "Leon", "Liberty", "Limestone", "Lipscomb", "Live Oak", "Llano", "Loving", "Lubbock", "Lynn", "Madison", "Marion", "Martin", "Mason", "Matagorda", "Maverick", "McCulloch", "McLennan", "McMullen", "Medina", "Menard", "Midland", "Milam", "Mills", "Mitchell", "Montague", "Montgomery", "Moore", "Morris", "Motley", "Nacogdoches", "Navarro", "Newton", "Nolan", "Nueces", "Ochiltree", "Oldham", "Orange", "Palo Pinto", "Panola", "Parker", "Parmer", "Pecos", "Polk", "Potter", "Presidio", "Rains", "Randall", "Reagan", "Real", "Red River", "Reeves", "Refugio", "Roberts", "Robertson", "Rockwall", "Runnels", "Rusk", "Sabine", "San Augustine", "San Jacinto", "San Patricio", "San Saba", "Schleicher", "Scurry", "Shackelford", "Shelby", "Sherman", "Smith", "Somervell", "Starr", "Stephens", "Sterling", "Stonewall", "Sutton", "Swisher", "Tarrant", "Taylor", "Terrell", "Terry", "Throckmorton", "Titus", "Tom Green", "Travis", "Trinity", "Tyler", "Upshur", "Upton", "Uvalde", "Val Verde", "Van Zandt", "Victoria", "Walker", "Waller", "Ward", "Washington", "Webb", "Wharton", "Wheeler", "Wichita", "Wilbarger", "Willacy", "Williamson", "Wilson", "Winkler", "Wise", "Wood", "Yoakum", "Young", "Zapata", "Zavala"];
  
        function sortOrderCounty(co) {
            for (var i = 0; i &lt; countyList.length; i++) {
                if (co == countyList[i]) {
                    document.getElementById('sortCountyOrder').value = i;
                    if (document.getElementById('jurisdictionType1').checked == false) {
                        //document.getElementById('sortCityOrder').value = '';  //commented out 11/07/16 to stop city field from being blanked out on update
                    }
                    return;
                    
                }
            }
        }

        function sortOrderCity(ci) {
          var co="";
          var a  = document.getElementById('county');
          if(a.selectedIndex!=0){
            co=a.options[a.selectedIndex].text;
          }
            for (var i = 0; i &lt; cityMatrix.length; i++) {
                if (ci == cityMatrix[i][1] &amp;&amp; document.getElementById('jurisdictionType1').checked==true &amp;&amp; (co=="" || co == cityMatrix[i][0])){
                    document.getElementById('sortCityOrder').value = i;
                    return;
                }
                if (ci == cityMatrix[i][1] &amp;&amp; document.getElementById('jurisdictionType2').checked==true) {
                    document.getElementById('sortCityOrder').value = i;
                    return;
                }
            }
        }

       function consolidateEmails() {
          var a = [document.getElementsByName('submitterEmail')[0], document.getElementsByName('additionalEmails')[0], document.getElementsByName('countyEmail')[0], document.getElementsByName('ddcEmail')[0]];
          var b = [];
            for (var e =0; e&lt;a.length;e++) {
              if (a[e].value != "") {
          var f = a[e].value.split(',');
             for (var i = 0; i &lt; f.length; i++) {
        b.push(f[i]);
      }
    }
  }
        return b.join(',');
}

        function sendEmails(){
          var c = document.getElementsByName('city')[0];
          var cr=[];
          for(var i = 0; i&lt;c.options.length;i++){
            if(c.options[i].selected===true){
              cr.push(c.options[i].text)
            }
          }
          document.getElementsByName('emailSubject')[0].value='DSO for ' + document.getElementById('county').value + " / " + cr.join(', ') + " (" + document.getElementById('webeocIncident').value + ")";
          

          var body = "An Updated DSO # " + document.getElementById('editKey').value + " for " + document.getElementById('county').value + " / " + cr.join(', ') + " (" + document.getElementById('webeocIncident').value + ")" + " has been submitted to the SOC. \n\n" + "To update this request, go to https://olympus.soc.texas.gov/services/dso/default.aspx?key=" + document.getElementById('editKey').value + "\n\n" + 
                     "Please email soc@dps.texas.gov if you have any questions. \n\n" + " DO NOT REPLY";
        
        document.getElementsByName('emailBody')[0].value=body;
        document.getElementsByName('emailTo')[0].value=consolidateEmails();
        };


//Email val from DSOwebform

function validateEmail(email) {
            var str = email.replace(/\s/g, '');
var re = /\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}\b/g;
            return re.test(str);
        }

function finalEmailCheck() {
            var checkEmail = function (a) {
                for (var i = 0; i &lt; a.length; i++) {
                    if (a[i] != '' &amp;&amp; validateEmail(a[i]) == false) {alert('Please check your email format. Incomplete or extra characters may exist.');
                        return false;
                        
                    }
                }
            };
            var e = document.getElementById('submitterEmail').value.split(/[ ,;]+/);
            if(checkEmail(e) != false){
                document.getElementById('submitterEmail').value=e.join(',');
            };
            var b = document.getElementById('additionalEmails').value.split(/[ ,;]+/);
            if(checkEmail(b) != false){
                document.getElementById('additionalEmails').value=b.join(',');
            };
            var c = document.getElementById('countyEmail').value.split(/[ ,;]+/);
            if(checkEmail(c) != false){
                document.getElementById('countyEmail').value=c.join(',');
            };
            var d = document.getElementById('ddcEmail').value.split(/[ ,;]+/);
            if(checkEmail(d) != false){
                document.getElementById('ddcEmail').value=d.join(',');
            };

        }
 
        var updateDateTime=function() {
          var a=new Date();
          var b=(a.getMonth()+1)+"/"+pad(a.getDate())+"/"+a.getFullYear();

           b+=" "+pad(a.getHours())+":"+pad(a.getMinutes())+":"+pad(a.getSeconds());
           document.getElementById("updated").value=b;
}

        var pad=function(num) {
          if(num &lt; 10) {
            return "0" + num; 
  } else {
            return num; 
  }
}

      var submitDateTime=function() {
        var a=new Date();
        var b=(a.getMonth()+1)+"/"+pad(a.getDate())+"/"+a.getFullYear();

        b+=" "+pad(a.getHours())+":"+pad(a.getMinutes())+":"+pad(a.getSeconds());
        document.getElementById("submitedDateTime").value=b;
  
}

      function rebuildingCityCountyOptionsOnJTypeCheck(a) {
            $(a).on("click", function () {
                var coList = document.getElementById("county");
                removeOptions(coList);
                addOption(coList, 'Select One', true);
                for (var k = 0; k &lt; countyList.length; k++) {
                    addOption(coList, countyList[k], false);
                }
                var cityList = document.getElementById("city");
                removeOptions(cityList);
                addOption(cityList, "Select One", true);
                addOption(cityList, "Unincorporated Areas", false);
                for (var k = 0; k &lt; cityMatrix.length; k++) {
                    addOption(cityList, cityMatrix[k][1], false);
                }
                $("#sortCountyOrder").val(0);
                $("#sortCityOrder").val(0);
                $("#county").prop("disabled", false);
                $("#city").prop("disabled", false);
                addOption(cityList, "Other", false);
            });
        }

      function updateOrFirstTime(){
  if ('<xsl:value-of select="/data/@dataid" />'!=0){
               updateDateTime();
              

            } else {
                submitDateTime();
            }
}

       function selectOptionsIfExistsInArray() {
                    var textAreaValue = $("#cityTmp").val();
                    var textAreaValueSplit = textAreaValue.split(",");
                    cityArrayCopy = textAreaValueSplit;
                    $("#city").val("");
                    for(var i = 0; i &lt; cityArrayCopy.length; i++) {

                        $("[name = city] option").filter(function() {
                            return($(this).text() === cityArrayCopy[i]);
                        }).prop("selected", true);

                        $("#cityTmp").val("");
                        $("#city").focus();
                    }
                }

        function copySelectedOptionsToTextAreaAgain() {
                    var ccc =  document.getElementById("cityTmp").value;
                    document.getElementById("city2").value += ccc.replace(/[,]+/g,', ').trim();
              
                }

        function start() {


         
          if (document.getElementsByName('datalinkid')[0]){
            document.getElementsByName('datalinkid')[0].checked=true;
      } else { alert('The data links are not configured correctly. Please contact your local WebEOC Admin.');
}
//startOf: event actions


          $("input:text").focus(function() {
              $(this).select();
          }).blur(function() {
              $(this).val($(this).val().replace(/\$/g, ''));
             
          });
          
          countyEmailHideReveal();
          $("#notRealSave").click(function() {

          if($("#repairCost01").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost01", "#cat01", "#cat01");
          }
          if($("#cat01").val() !== "" &amp;&amp; $("#repairCost01").val() == "" ){
            $("#cat01").val("");            
          }
          if($("#repairCost02").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost02", "#cat02", "#cat02");
          }
          if($("#cat02").val() !== "" &amp;&amp; $("#repairCost02").val() == "" ){
            $("#cat02").val(""); 
          }
          if($("#repairCost03").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost03", "#cat03", "#cat03");
          }
          if($("#cat03").val() !== "" &amp;&amp; $("#repairCost03").val() == "" ){
            $("#cat03").val(""); 
          }
          if($("#repairCost04").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost04", "#cat04", "#cat04");
          }
          if($("#cat04").val() !== "" &amp;&amp; $("#repairCost04").val() == "" ){
            $("#cat04").val(""); 
          }
          if($("#repairCost05").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost05", "#cat05", "#cat05");
          }
          if($("#cat05").val() !== "" &amp;&amp; $("#repairCost05").val() == "" ){
            $("#cat05").val(""); 
          }
          if($("#repairCost06").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost06", "#cat06", "#cat06");
          }
          if($("#cat06").val() !== "" &amp;&amp; $("#repairCost06").val() == "" ){
            $("#cat06").val(""); 
          }
          if($("#repairCost07").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost07", "#cat07", "#cat07");
          }
          if($("#cat07").val() !== "" &amp;&amp; $("#repairCost07").val() == "" ){
            $("#cat07").val(""); 
          }
          if($("#repairCost08").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost08", "#cat08", "#cat08");
          }
          if($("#cat08").val() !== "" &amp;&amp; $("#repairCost08").val() == "" ){
            $("#cat08").val(""); 
          }
          if($("#repairCost09").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost09", "#cat09", "#cat09");
          }
          if($("#cat09").val() !== "" &amp;&amp; $("#repairCost09").val() == "" ){
            $("#cat09").val(""); 
          }
          if($("#repairCost10").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost10", "#cat10", "#cat10");
          }
          if($("#cat10").val() !== "" &amp;&amp; $("#repairCost10").val() == "" ){
            $("#cat10").val(""); 
          }
          if($("#repairCost11").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost11", "#cat11", "#cat11");
          }
          if($("#cat11").val() !== "" &amp;&amp; $("#repairCost11").val() == "" ){
            $("#cat11").val("");
          }
          if($("#repairCost12").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost12", "#cat12", "#cat12");
          }
          if($("#cat12").val() !== "" &amp;&amp; $("#repairCost12").val() == "" ){
            $("#cat12").val("");
          }
          if($("#repairCost13").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost13", "#cat13", "#cat13");
          }
          if($("#cat13").val() !== "" &amp;&amp; $("#repairCost13").val() == "" ){
            $("#cat13").val("");
          }
          if($("#repairCost14").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost14", "#cat14", "#cat14");
          }
          if($("#cat14").val() !== "" &amp;&amp; $("#repairCost14").val() == "" ){
            $("#cat14").val("");
          }
          if($("#repairCost15").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost15", "#cat15", "#cat15");
          }
          if($("#cat15").val() !== "" &amp;&amp; $("#repairCost15").val() == "" ){
            $("#cat15").val("");
          }


             if(!$(".jTypeCLASS").is(":checked")) {
                  alert("Please fill in the missing required field, Jurisdiction Type. Pick one City or County.");
                  $("#jurisdictionType1").focus().select();
      
                  return false;

              } else if($("#county").val() === "Select One"){
                alert("Please make a choice in the missing required field, County.");
                  $("#county").focus().select();
      
                  return false;

              } else if($("#city").val() === "Select One"){
                alert("Please make a choice in the missing required field, City.");
                  $("#city").focus().select();
      
                  return false;

              } else if($("#contactPerson").val() === "") {
                alert("Please fill in the missing required field, Contact Person.");
                  $("#contactPerson").focus().select();
      
                  return false;

              } else if($("#contactPersonTitle").val() === "") {
                alert("Please fill in the missing required field, Contact Person Title.");
                  $("#contactPersonTitle").focus().select();
      
                  return false;

              } else {
                if (cats === true){
                  copySelectedOptionsToTextAreaThenCopyTextAreaValueToArray();
                  copySelectedOptionsToTextAreaAgain();
                  updateOrFirstTime();
                  sendEmails();
                  fakeSubmit();
                } else {
                  return false;
                  
              } 
          }
             
          });
          //end of notRealSave click

          rebuildingCityCountyOptionsOnJTypeCheck("#jurisdictionType1");
          rebuildingCityCountyOptionsOnJTypeCheck("#jurisdictionType2");
           document.getElementById('editKey').value = document.getElementById('dataidSpan').getElementsByTagName('u')[0].innerHTML;
           popIncidentName();
           document.getElementById('jurisdictionType1').onchange=TypeJurisdiciton;
        document.getElementById('jurisdictionType2').onchange=TypeJurisdiciton;
            
            autoSum();
    if ('<xsl:value-of select="/data/@dataid" />'!=0){
            disableInputsIA();
            disableInputsPA();
            selectDSO();
            $("#city2").val("");
    }
           
            var counties = window.parent.window.parent.counties;
        var countieslist= document.getElementById('county');
        
        
       document.getElementById('city').onchange = function () {

                sortOrderCity(this.options[this.selectedIndex].text);
                var coList = document.getElementById("county");
                var coSelected = coList.options[coList.selectedIndex].text;
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(coList);
                    addOption(coList, 'Select One', true);
                    //document.getElementById("otherValueDiv").style.display = "none";
                    for (var k = 0; k &lt; countyList.length; k++) {
                        addOption(coList, countyList[k], false);

                    }
                } else if (this.options[this.selectedIndex].text == 'Unincorporated Areas') {document.getElementById('sortCityOrder').value='0';
                        //document.getElementById("otherValueDiv").style.display = "none";
                 } else if (this.options[this.selectedIndex].text == 'Other') {document.getElementById('sortCityOrder').value='99999';

                        document.getElementById("otherValueDiv").style.display = "";
                        $('#otherValue').focus();
 
                } else {
                    removeOptions(coList);
                    addOption(coList, 'Select One', false);
                   // document.getElementById("otherValueDiv").style.display = "none";
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        if (cityMatrix[k][1] === this.options[this.selectedIndex].text) {
                            var selected = false;
                            if (cityMatrix[k][0] == coSelected) { selected = true; }
                            addOption(coList, cityMatrix[k][0], selected);

                        }
                    }
                }


            }
       
       document.getElementById('county').onchange = function () {
                sortOrderCounty(this.options[this.selectedIndex].text);
                var cityList = document.getElementById("city");
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        addOption(cityList, cityMatrix[k][1], false);
                    }
                    addOption(cityList, "Other", false);
                } else {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    if(document.getElementById('jurisdictionType2').checked ==true){
                      addOption(cityList, "Unincorporated Areas", true);
                    } else {
                     //do nothing
                    }
                    for (var k = 0; k &lt; cityMatrix.length; k++) {

                        if (cityMatrix[k][0] === this.options[this.selectedIndex].text) {
                            addOption(cityList, cityMatrix[k][1], false);
                        }
                    }
                    addOption(cityList, "Other", false);
                }
            }
          
           
            $('.datepicker').datepicker();


            commandInfoWindow('affectedSpan', 'Affected', '<div><b>Structure is habitable.  Some minor damage may be eligible for assistance.  Look for the following:</b><ul><li>A few missing shingles;</li><li>Some broken windows;</li><li>Damage to cars;</li><li>Damage to Air Conditioner Compressor only;</li><li>Single Family/Multi Family Residences - 0” - 6” of water</li><li>Mobile Homes- Ground level to within 12” of bottom board.</li></ul></div>');
            commandInfoWindow('minorDamageSpan', 'Minor Damage', '<div><b>Structure is habitable with minor repairs.  Look for the following:</b><ul><li>Many missing shingles, broken windows and doors;</li><li>Siding loose, missing or damaged;</li><li>Minor shifting or settling of foundation;</li><li>Damaged septic systems (flood);</li><li>Single Family/Multi-Family Residences – 6” to 18” of water,</li><li>Mobile Homes- Within 12” of bottom board to 3” above floor level.</li></ul></div>');
            commandInfoWindow('majorDamageSpan', 'Major Damage', '<div><b>Structure is currently uninhabitable and extensive repair is required to make it habitable. Look for  the following:</b><ul><li>Portions of the roof, including decking, missing;</li><li>Twisted, bowed or cracked walls;</li><li>Penetration of structure by trees or cars, etc.;</li><li>Single Family/Multi Family Residences - 18” – 48” of water,</li><li>Mobile Homes – 3” – 12” above floor level.</li></ul></div>');
            commandInfoWindow('destroyedSpan', 'Destroyed', '<div><b>Structure is permanently uninhabitable and can not be repaired.  Look for the following:</b><ul><li>Structure gone, only foundation remains;</li><li>Major sections of walls missing or collapsed;</li><li>Entire roof gone with noticeable distortion of the walls;</li><li>Structure has shifted off of its foundation;</li><li>*Single Family/Multi-Family Residences - More than 48” of water;</li><li>*Mobile Homes - over 12" for mobile homes.</li><li>*requires further investigation</li></ul></div>');
            commandInfoWindow('insuranceSpan', 'Estimating Insurance', '<div><b>The following are general guidelines to estimating insurance coverage.</b><ul><li>Renters are less likely to have insurance.</li><li>Low income residents are less likely to have insurance.</li><li>Homeowners who are still paying off their mortgage will normally have the appropriate type of insurance.</li><li>Residents who are flooded and reside in an area that does not participate in the NFIP or in an area that has been sanctioned for NFIP code enforcement violations will not have flood insurance.</li><li>Residents who are flooded but whose property is not located in the Special Flood Hazard Area (SFHA) will probably not have flood insurance.</li></ul></div>');
            commandInfoWindow('businessesEconomicInjuryInfo', 'Business Economic Injury', '<div>SBA makes an economic injury declaration in reliance on a state certification that at least five small business concerns in a disaster area have suffered substantial economic injury as a result of the disaster and are in need of financial assistance not otherwise available on reasonable terms.<ul><li>Does not cover lost income</li><li>Businesses claiming the loss would have to provide financials and accounting records to prove the loss</li><li>Businesses compensated with insurance would have to prove their injury is substantial after insurance claims are paid</li></ul></div>')
            commandInfoWindow('emergencyProtectiveMeasuresInfo', 'Emergency Protective Measures', '<div>Includes response costs, protection of life &amp; property, and then um temporary repairs as examples</div>');
            commandInfoWindow('buildingEquipmentInfo', 'Building &amp; Equipment', '<div>Also includes vehicles and contents of buildings</div>');
            commandInfoWindow('cityInfo', 'City Options', '<div><ul><li>Multiple cities can be selected when reporting for the County by holding down the Ctrl while clicking on the city names.</li><li>If Other and multiple cities are needed, please choose Other first to reveal the Other text box. Fill in the State Park, Agency, Etc in the text field provided. Multiple cites can then be added on as needed.</li><li>Only a single city is allowed to be selected when filling the DSO out for a City.</li></ul></div>');
            commandInfoWindow('catAInfo','Category A: Debris Removal','<div>Clearance of trees and woody debris; certain building wreckage; damaged/ destroyed building contents; sand, mud, silt, and gravel; vehicles; and other disaster-related material deposited on public and, in very limited cases, private property.</div>');
            commandInfoWindow('catBInfo','Category B: Emergency Protective Measures','<div>Measures taken before, during, and after a disaster to eliminate/reduce an immediate threat to life, public health, or safety, or to eliminate/reduce an immediate threat of significant damage to improved public and private property through cost-effective measures.</div>');
            commandInfoWindow('catCInfo','Category C: Roads and Bridges','<div>Repair of roads, bridges, and associated features, such as shoulders, ditches, culverts, lighting, and signs.</div>');
            commandInfoWindow('catDInfo','Category D: Water Control Facilities','<div>Repair of drainage channels, pumping facilities, and some irrigation facilities. Repair of levees, dams, and flood control channels fall under Category D, but the eligibility of these facilities is restricted.</div>');
            commandInfoWindow('catEInfo','Category E: Buildings and Equipment','<div>Repair or replacement of buildings, including their contents and systems; heavy equipment; and vehicles.</div>');
            commandInfoWindow('catFInfo','Category F: Utilities','<div>Repair of water treatment and delivery systems; power generation facilities and distribution facilities; sewage collection and treatment facilities; and communications.</div>');
            commandInfoWindow('catGInfo','Category G: Parks, Recreational Facilities, and Other Facilities','<div>Repair and restoration of parks, playgrounds, pools, cemeteries, mass transit facilities, and beaches. This category also is used for any work or facility that cannot be characterized adequately by Categories A-F.</div>');
        
            scribe.fields4History = [
            ["webeocIncident", "WebEOC Incident"],
            ["county", "County"],
            ["city", "City"],
            ["type", "Incident Type"],
            ["cat01", "Other Category Type 01"],
            ["cat02", "Other Category Type 02"],
            ["cat03", "Other Category Type 03"],
            ["cat04", "Other Category Type 04"],
            ["cat05", "Other Category Type 05"],
            ["cat06", "Other Category Type 06"],
            ["cat07", "Other Category Type 07"],
            ["cat08", "Other Category Type 08"],
            ["cat09", "Other Category Type 09"],
            ["cat10", "Other Category Type 10"],
            ["cat11", "Other Category Type 11"],
            ["cat12", "Other Category Type 12"],
            ["cat13", "Other Category Type 13"],
            ["cat14", "Other Category Type 14"],
            ["cat15", "Other Category Type 15"],
            ["jurisdictionType", "Jurisdiction Type"],
            ["population", "Population"],
            ["nfip", "NFIP"],
            ["dateOfDisaster1", "State Date of Disaster"],
            ["dateOfDisaster2", "End Date of Disaster"],
            ["continuing", "Disaster Continuing"],
            ["declarationIssued", "Declaration Declared"],
            ["contactPerson", "Contact Person"],
            ["contactPersonTitle", "Contact Person Title"],
            ["address", "Address"],
            ["phone", "Phone"],
            ["mobilePhone", "Mobile Phone"],
            ["fax", "Fax"],
            ["pager", "Pager"],
            ["dutyPhone", "Duty Phone"],
            ["sfhAffected", "Single Faimly Homes Affected"],
            ["sfhMinorDamage", "Single Faimly Homes Minor"],
            ["sfhMajorDamage", "Single Faimly Homes Major"],
            ["sfhDestroyed", "Single Faimly Homes Destroyed"],
            ["sfhCovByInsurance", "Single Faimly Home Insured"],
            ["mhAffected", "Mobile Homes Affected"],
            ["mhMinorDamage", "Mobile Homes Minor "],
            ["mhMajorDamage", "Mobile Homes Major"],
            ["mhDestroyed", "Mobile Homes Destroyed"],
            ["mhCovByInsurance", "Mobile Home Insured"],
            ["mfuAffected", "Multi-Family Units Affected"],
            ["mfuMinorDamage", "Multi-Family Units Minor"],
            ["mfuMajorDamage", "Multi-Family Units  Major"],
            ["mfuDestroyed", "Multi-Family Units Insurance"],
            ["mfuCovByInsurance", "Multi-Family Units Affected"],
            ["totalsAffected", "Total Residental Affected"],
            ["totalsMinorDamage", "Total Residental Minor"],
            ["totalsMajorDamage", "Total Residental Major"],
            ["totalsDestroyed", "Total Residental Destroyed"],
            ["totalsCovByInsurance", "Total Residental Insured"],
            ["homesIsolated", "Homes Isolated"],
            ["numberMinorDamage", "Business Minor Damage"],
            ["coveredMinorDamage", "Business Minor Insured"],
            ["totalMinorDamage", "Business Minor Repair $"],
            ["numberMajorDamage", "Business Major Damage"],
            ["coveredMajorDamage", "Business Major Insured"],
            ["totalMajorDamage", "Business Major Repair $"],
            ["numberTotal", "Business Damaged"],
            ["coveredTotal", "Business Insured"],
            ["totalTotal", "Business Repair $"],
            ["businessesCeased", "Businesses Ceased Operations"],
            ["businessesEconomicInjury", "Nusinessess Economic Injury"],
            ["numberUnemployed", "Number Unemployed"],
            ["sitesDebrisClearance", "CAT A Sites"],
            ["repairCostDebrisClearance", "CAT A Estimated Cost"],
            ["insuranceDebrisClearance", "CAT A Insured"],
            ["sitesEmergency", "CAT B Sites"],
            ["repairCostEmergency", "CAT B Estimated Cost"],
            ["insuranceEmergency", "CAT B Insured"],
            ["sitesRoadPaved", "CAT C Sites"],
            ["repairCostRoadPaved", "CAT C Estimated Cost"],
            ["insuranceRoadPaved", "CAT C Insured"],
            ["sitesWaterControlFacilities", "CAT D Sites"],
            ["repairCostWaterControlFacilities", "CAT D Estimated Cost"],
            ["insuranceWaterControlFacilities", "CAT D Insured"],
            ["sitesBuildingsEquipment", "CAT E Sites"],
            ["repairCostBuildingsEquipment", "CAT E Estimated Cost"],
            ["insuranceBuildingsEquipment", "CAT E Insured"],
            ["sitesUtilitySystems", "CAT F Sites"],
            ["repairCostUtilitySystems", "CAT F Estimated Cost"],
            ["insuranceUtilitySystems", "CAT F Insured"],
            ["sitesOther", "CAT G Sites"],
            ["repairCostOther", "CAT G Estimated Cost"],
            ["insuranceOther", "CAT G Insured"],
            ["sitesTotals", "CAT Site Total"],
            ["repairCostTotals", "CAT Cost Total"],
            ["insuranceTotals", "CAT Insured Total"],
            ["annualMaintenanceBudget", "Annual Maintenace Budget"],
            ["startOfFiscalYear", "Start of Fiscal Year"],
            ["orgFacility01", "Other Facility 01"],
            ["sites01", "Other Sites 01"],
            ["repairCost01", "Other Repair Cost 01"],
            ["insurance01", "Other Insured 01"],
            ["orgFacility02", "Other Facility 02"],
            ["sites02", "Other Sites 02"],
            ["repairCost02", "Other Repair Cost 02"],
            ["insurance02", "Other Insured 02"],
            ["orgFacility03", "Other Facility 03"],
            ["sites03", "Other Sites 03"],
            ["repairCost03", "Other Repair Cost 03"],
            ["insurance03", "Other Insured 03"],
            ["orgFacility04", "Other Facility 04"],
            ["sites04", "Other Sites 04"],
            ["repairCost04", "Other Repair Cost 04"],
            ["insurance04", "Other Insured 04"],
            ["orgFacility05", "Other Facility 05"],
            ["sites05", "Other Sites 05"],
            ["repairCost05", "Other Repair Cost 05"],
            ["insurance05", "Other Insured 05"],
            ["orgFacility06", "Other Facility 06"],
            ["sites06", "Other Sites 06"],
            ["repairCost06", "Other Repair Cost 06"],
            ["insurance06", "Other Insured 06"],
            ["orgFacility07", "Other Facility 07"],
            ["sites07", "Other Sites 07"],
            ["repairCost07", "Other Repair Cost 07"],
            ["insurance07", "Other Insured 07"],
            ["orgFacility08", "Other Facility 08"],
            ["sites08", "Other Sites 08"],
            ["repairCost08", "Other Repair Cost 08"],
            ["insurance08", "Other Insured 08"],
            ["orgFacility09", "Other Facility 09"],
            ["sites09", "Other Sites 09"],
            ["repairCost09", "Other Repair Cost 09"],
            ["insurance09", "Other Insured 09"],
            ["orgFacility10", "Other Facility 10"],
            ["sites10", "Other Sites 10"],
            ["repairCost10", "Other Repair Cost 10"],
            ["insurance10", "Other Insured 10"],
            ["orgFacility11", "Other Facility 11"],
            ["sites11", "Other Sites 11"],
            ["repairCost11", "Other Repair Cost 11"],
            ["insurance11", "Other Insured 11"],
            ["orgFacility12", "Other Facility 12"],
            ["sites12", "Other Sites 12"],
            ["repairCost12", "Other Repair Cost 12"],
            ["insurance12", "Other Insured 12"],
            ["orgFacility13", "Other Facility 13"],
            ["sites13", "Other Sites 13"],
            ["repairCost13", "Other Repair Cost 13"],
            ["insurance13", "Other Insured 13"],
            ["orgFacility14", "Other Facility 14"],
            ["sites14", "Other Sites 14"],
            ["repairCost14", "Other Repair Cost 14"],
            ["insurance14", "Other Insured 14"],
            ["orgFacility15", "Other Facility 15"],
            ["sites15", "Other Sites 15"],
            ["repairCost15", "Other Repair Cost 15"],
            ["insurance15", "Other Insured 15"],
            ["sitesOtherTotal", "Other Sites Total"],
            ["repairCostTotal", "Other Repair Cost Total"],
            ["insuranceCostTotal", "Other Insured Total"],
            ["submitterName", "Submitter Name"],
            ["submitterEmail", "Submitter Email"],
            ["additionalEmails", "Additional Emails"],
            ["countyEmail", "County Email"],
            ["ddcEmail", "DDC Email"],
            ["notes", "Notes"],
              ["hidden","Hidden"],
              ["socProcessed","SOC Processed"]
            ];
            scribe.inicialReview();
            $("#county").prop("disabled", true);
            $("#city").prop("disabled", true);
            if ('<xsl:value-of select="/data/@dataid" />'!=0){

               $("#county").prop("disabled", false);
                $("#city").prop("disabled", false);
                copyCountyValueDSO();
                //startOf: doing stuff on update/edit
                var countySelectListOnUpdate = document.getElementById("county");
                sortOrderCounty(countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text);
                var cityList = document.getElementById("city");
                if (countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text == 'Select One') {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        addOption(cityList, cityMatrix[k][1], false);
                    }addOption(cityList, "Other", false);
                } else {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {

                        if (cityMatrix[k][0] === countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text) {
                            addOption(cityList, cityMatrix[k][1], false);
                        }
                    }addOption(cityList, "Other", false);
                }


                setTimeout(function() {
                  
                    selectOptionsIfExistsInArray();
                }, 1000);
            } 
            
            if($('#otherValue').val()!=''){
        document.getElementById("otherValueDiv").style.display = "";
    }
            
        }

        function copySelectedOptionsToTextAreaThenCopyTextAreaValueToArray() {
                    document.getElementById("cityTmp").value += $("#city").val();
                }



        function fakeSubmit() {
      
          var tf= document.getElementById('auditEmbed');
           if(tf.contentWindow){
              tf.contentWindow.document.getElementById('frameBody').contentWindow.frames.injectHistory(document.getElementsByName('dataid')[0].value,'<value-of select="/data/@username" />','<value-of select="/data/@currentdate" />'+' '+'<value-of select="/data/@currenttime" />',scribe.postReview());

          } else {
            tf.contentDocument.document.getElementById('frameBody').contentDocument.frames.injectHistory(document.getElementsByName('dataid')[0].value,'<value-of select="/data/@username" />','<value-of select="/data/@currentdate" />'+' '+'<value-of select="/data/@currenttime" />',scribe.postReview());
          }
        
        }

//this will work but something else is putting it there
        function removeUniAreas(){
          
          $("#city option:contains(Unincorporated Areas)").remove();
        }

        function TypeJurisdiciton(){
          var a = document.getElementById('jurisdictionType1');
        

          if(a.checked==true){
            
            
          document.getElementById('city').multiple=false;
          document.getElementById('city').size=1;
        } else {
          document.getElementById('city').multiple=true;
          document.getElementById('city').size=6;
          document.getElementById('sortCityOrder').value='0';
        }

      }

      function popIncidentName(){
        var first = document.getElementById('webeocIncident'),
          second = document.getElementById('incidentName');

          second.value = first.value;
}


      function countyEmailHideReveal() {
      if (document.getElementById('jurisdictionType1').checked ==true) {
      document.getElementById('countyEmailHide').style.display="";
      } else {
      document.getElementById('countyEmailHide').style.display="none";
    
 }
}


function validatingCatSelectOptionIfEstimatedIsNotEmpty(a, b, c) {
    if($(a).val() != "" &amp;&amp; $(b).val() === "") {
        alert("Please select a value for Cat A-G");
        $(c).focus().select();
        event.preventDefault();
        //maybe not in IE / safari ------NEEDS TEST
        //event.stopPropagation(); //this does not work in firefox, maybe not in IE / safari ------NEEDS TEST
        cats = false;
        console.log(cats);
        console.log("cats false above");
        console.log("validatingCatSelectOptionIfEstimatedIsNotEmpty runs and stops form");

    } else {
        cats = true;
         console.log(cats);
        console.log("cats true above");

        console.log("validatingCatSelectOptionIfEstimatedIsNotEmpty else finishes");
    }
}

Object.defineProperty(HTMLSelectElement.prototype, "selectedOptions", {
    get: (function() {
        try {
            document.querySelector(":checked");
            return function() {
                return this.querySelectorAll(":checked");
            };
        } catch (e) {
            return function() {
                if (!this.multiple) {
                    return this.selectedIndex &gt;= 0
                            ? [this.options[this.selectedIndex]] : [];
                }
                for (var i = 0, a = []; i &lt; this.options.length; i++)
                    if (this.options[i].selected) a.push(this.options[i]);
                return a;
                console.log(a);
                console.log("Object.defineProperty(HTMLSelectElement.prototype a ABOVE");
            };
        }
    })()
});


function saveButtonRuns(){
  console.log("real save button is clicked");
}


//add to webform? only on update
function disableInputsIA(){
  var a = document.getElementById('femaTestIA').textContent;
if (a[0]=='1'){
  $('input.lockTheseIA').attr('disabled', 'disabled');
} else {
  $('input.lockTheseIA').removeAttr('disabled');
}
}

function disableInputsPA(){
  var a = document.getElementById('femaTestPA').textContent;
if (a[0]=='1'){
  $('input.lockThesePA').attr('disabled', 'disabled');
} else {
  $('input.lockThesePA').removeAttr('disabled');
}
}

function selectDSO(){
    var aaa = document.getElementById('dsoSelectedTest').textContent;
    if (aaa[0]=='1'){
     $("#dsoSelected").prop("checked", true);
     $('#testTestTextField').val('Wootee');
     //alert('User must update something else by hand and save to save dsoSelected');     
    } else {
      $("#dsoSelected").prop("checked", false);
      //alert('User may or may not have to update something else by hand and save to save the unselecting of dsoSelected');
    }
}

function copyCountyValueDSO(){
   var firstCounty = document.getElementById('county'),//get from
   secondC = document.getElementById('countyCopyDSO');//put here

secondC.value = firstCounty.options[firstCounty.selectedIndex].text;

}
//this works like 9 times out of ten and then 1 time you need to edit the record manually and save and then it saves the checked and wootee value
//add to webform? only on update


        window.onload = start;
    </script></head><body><div class="container agencytemplate_boardbackground"><form role="form"><div class="content"><span style="display:none"><div id="femaTestIA"><relatedexpression name="femaIACheckTest" table="Supplemental">sum(case when femaCheckboxV1='Yes' then 1 else 0 end)
        </relatedexpression></div><div id="femaTestPA"><relatedexpression name="femaPACheckTest" table="Supplemental">sum(case when femaCheckboxV2='Yes' then 1 else 0 end)
        </relatedexpression></div></span><div id="hidden" style="display:nonea"><!--<div class="form-group form-inline">
              <label class="control-label" for="stateThreshold">stateThreshold:</label>
              <input name="stateThreshold" id="stateThreshold" type="text" style="form-control input-sm" value="40000000"/>
            </div>--><div class="form-group form-inline"><label class="control-label" for="masterDSOThisIs">masterDSOThisIs:</label><input name="masterDSOThisIs" id="masterDSOThisIs" type="text" style="form-control input-sm" value="" /></div><div class="form-group form-inline"><label class="control-label" for="sortCountyOrder">Sort County Order:</label><input name="sortCountyOrder" id="sortCountyOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="sortCityOrder">Sort City Order:</label><input name="sortCityOrder" id="sortCityOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="submitedDateTime">Submited DateTime:</label><input name="submitedDateTime" id="submitedDateTime" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="updated">Updated:</label><input name="updated" id="updated" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="incidentName">Incident Name:</label><input name="incidentName" id="incidentName" type="text" style="form-control input-sm" /></div><!--<div class="form-group form-inline">
                     <label class="control-label" for="additionalEmails"> Additional Emails:</label>
                     <input name="additionalEmails" id="additionalEmails" type="text" style="form-control input-sm"/>
                  </div>--><div class="form-group form-inline"><label class="control-label" for="editKey">editKey:</label><input name="editKey" id="editKey" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="dsoSelected">dsoSelected:</label><input name="dsoSelected" id="dsoSelected" type="checkbox" value="dsoSelected" style="form-control input-sm" /></div>

            DSO Yes/No's
            <div id="dsoSelectedTest"><relatedexpression name="dsoSelectedTestExp" table="Supplemental">case when dsoYesNo='Yes' then 1 else 0 end</relatedexpression></div><div id="testTestText"><input name="testTestTextField" id="testTestTextField" type="text" /></div><div class="form-group form-inline"><label class="control-label" for="DSOisSelected">DSOisSelected:</label><input type="text" name="DSOisSelected" value="" /></div><!--<div id="dsoSelectedTestBubble">
            <relatedexpression name="dsoSelectedTestBubbleExp" table="Supplemental">sum(case when fkID='Yes' then 1 else 0 end)</relatedexpression></div>--><span id="dataidSpan"><dataid table="Core" /></span></div><!--bb<foreignkey><dataid table="Supplemental"/></foreignkey>--><div id="container"><h1><span class="label label-default">Incident</span></h1><br /><!--<input type="text" name="incidentName3" id="incidentName3" class="form-control hide">
              <attribute name="value">
                <incidentname />
              </attribute>
            </input>--><div class="form-group form-inline"><label class="control-label" for="webeocIncident">Incident:</label><space /><input type="text" name="webeocIncident" id="webeocIncident" style="form-control input-sm" /></div><br /><h1><span class="label label-default">General</span></h1><br /><div class="form-group required form-inline" id="jurisdictionTypeDIV"><label id="jurisdictionTypeLabel" class="control-label" for="jurisdictionType">Jurisdiction Type:</label>
        City 
                     
                     
                     
                     
                     
                     <input id="jurisdictionType1" type="radio" class="form-control input-sm jTypeCLASS" name="jurisdictionType" value="City" onclick="countyEmailHideReveal();removeUniAreas()" />
        County 
                     
                     
                     
                     
                     
                     <input id="jurisdictionType2" type="radio" class="form-control input-sm jTypeCLASS" name="jurisdictionType" value="County" onclick="countyEmailHideReveal()" /></div><div class="form-group form-inline"><label class="control-label" for="county">County:</label><space /><select id="county" name="county" onblur="copyCountyValueDSO()"><option value="">Please Select:</option><option value="Anderson">Anderson</option><option value="Andrews">Andrews</option><option value="Angelina">Angelina</option><option value="Aransas">Aransas</option><option value="Archer">Archer</option><option value="Armstrong">Armstrong</option><option value="Atascosa">Atascosa</option><option value="Austin">Austin</option><option value="Bailey">Bailey</option><option value="Bandera">Bandera</option><option value="Bastrop">Bastrop</option><option value="Baylor">Baylor</option><option value="Bee">Bee</option><option value="Bell">Bell</option><option value="Bexar">Bexar</option><option value="Blanco">Blanco</option><option value="Borden">Borden</option><option value="Bosque">Bosque</option><option value="Bowie">Bowie</option><option value="Brazoria">Brazoria</option><option value="Brazos">Brazos</option><option value="Brewster">Brewster</option><option value="Briscoe">Briscoe</option><option value="Brooks">Brooks</option><option value="Brown">Brown</option><option value="Burleson">Burleson</option><option value="Burnet">Burnet</option><option value="Caldwell">Caldwell</option><option value="Calhoun">Calhoun</option><option value="Callahan">Callahan</option><option value="Cameron">Cameron</option><option value="Camp">Camp</option><option value="Carson">Carson</option><option value="Cass">Cass</option><option value="Castro">Castro</option><option value="Chambers">Chambers</option><option value="Cherokee">Cherokee</option><option value="Childress">Childress</option><option value="Clay">Clay</option><option value="Cochran">Cochran</option><option value="Coke">Coke</option><option value="Coleman">Coleman</option><option value="Collin">Collin</option><option value="Collingsworth">Collingsworth</option><option value="Colorado">Colorado</option><option value="Comal">Comal</option><option value="Comanche">Comanche</option><option value="Concho">Concho</option><option value="Cooke">Cooke</option><option value="Coryell">Coryell</option><option value="Cottle">Cottle</option><option value="Crane">Crane</option><option value="Crockett">Crockett</option><option value="Crosby">Crosby</option><option value="Culberson">Culberson</option><option value="Dallam">Dallam</option><option value="Dallas">Dallas</option><option value="Dawson">Dawson</option><option value="Deaf Smith">Deaf Smith</option><option value="Delta">Delta</option><option value="Denton">Denton</option><option value="DeWitt">DeWitt</option><option value="Dickens">Dickens</option><option value="Dimmit">Dimmit</option><option value="Donley">Donley</option><option value="Duval">Duval</option><option value="Eastland">Eastland</option><option value="Ector">Ector</option><option value="Edwards">Edwards</option><option value="El Paso">El Paso</option><option value="Ellis">Ellis</option><option value="Erath">Erath</option><option value="Falls">Falls</option><option value="Fannin">Fannin</option><option value="Fayette">Fayette</option><option value="Fisher">Fisher</option><option value="Floyd">Floyd</option><option value="Foard">Foard</option><option value="Fort Bend">Fort Bend</option><option value="Franklin">Franklin</option><option value="Freestone">Freestone</option><option value="Frio">Frio</option><option value="Gaines">Gaines</option><option value="Galveston">Galveston</option><option value="Garza">Garza</option><option value="Gillespie">Gillespie</option><option value="Glasscock">Glasscock</option><option value="Goliad">Goliad</option><option value="Gonzales">Gonzales</option><option value="Gray">Gray</option><option value="Grayson">Grayson</option><option value="Gregg">Gregg</option><option value="Grimes">Grimes</option><option value="Guadalupe">Guadalupe</option><option value="Hale">Hale</option><option value="Hall">Hall</option><option value="Hamilton">Hamilton</option><option value="Hansford">Hansford</option><option value="Hardeman">Hardeman</option><option value="Hardin">Hardin</option><option value="Harris">Harris</option><option value="Harrison">Harrison</option><option value="Hartley">Hartley</option><option value="Haskell">Haskell</option><option value="Hays">Hays</option><option value="Hemphill">Hemphill</option><option value="Henderson">Henderson</option><option value="Hidalgo">Hidalgo</option><option value="Hill">Hill</option><option value="Hockley">Hockley</option><option value="Hood">Hood</option><option value="Hopkins">Hopkins</option><option value="Houston">Houston</option><option value="Howard">Howard</option><option value="Hudspeth">Hudspeth</option><option value="Hunt">Hunt</option><option value="Hutchinson">Hutchinson</option><option value="Irion">Irion</option><option value="Jack">Jack</option><option value="Jackson">Jackson</option><option value="Jasper">Jasper</option><option value="Jeff Davis">Jeff Davis</option><option value="Jefferson">Jefferson</option><option value="Jim Hogg">Jim Hogg</option><option value="Jim Wells">Jim Wells</option><option value="Johnson">Johnson</option><option value="Jones">Jones</option><option value="Karnes">Karnes</option><option value="Kaufman">Kaufman</option><option value="Kendall">Kendall</option><option value="Kenedy">Kenedy</option><option value="Kent">Kent</option><option value="Kerr">Kerr</option><option value="Kimble">Kimble</option><option value="King">King</option><option value="Kinney">Kinney</option><option value="Kleberg">Kleberg</option><option value="Knox">Knox</option><option value="La Salle">La Salle</option><option value="Lamar">Lamar</option><option value="Lamb">Lamb</option><option value="Lampasas">Lampasas</option><option value="Lavaca">Lavaca</option><option value="Lee">Lee</option><option value="Leon">Leon</option><option value="Liberty">Liberty</option><option value="Limestone">Limestone</option><option value="Lipscomb">Lipscomb</option><option value="Live Oak">Live Oak</option><option value="Llano">Llano</option><option value="Loving">Loving</option><option value="Lubbock">Lubbock</option><option value="Lynn">Lynn</option><option value="Madison">Madison</option><option value="Marion">Marion</option><option value="Martin">Martin</option><option value="Mason">Mason</option><option value="Matagorda">Matagorda</option><option value="Maverick">Maverick</option><option value="McCulloch">McCulloch</option><option value="McLennan">McLennan</option><option value="McMullen">McMullen</option><option value="Medina">Medina</option><option value="Menard">Menard</option><option value="Midland">Midland</option><option value="Milam">Milam</option><option value="Mills">Mills</option><option value="Mitchell">Mitchell</option><option value="Montague">Montague</option><option value="Montgomery">Montgomery</option><option value="Moore">Moore</option><option value="Morris">Morris</option><option value="Motley">Motley</option><option value="Nacogdoches">Nacogdoches</option><option value="Navarro">Navarro</option><option value="Newton">Newton</option><option value="Nolan">Nolan</option><option value="Nueces">Nueces</option><option value="Ochiltree">Ochiltree</option><option value="Oldham">Oldham</option><option value="Orange">Orange</option><option value="Palo Pinto">Palo Pinto</option><option value="Panola">Panola</option><option value="Parker">Parker</option><option value="Parmer">Parmer</option><option value="Pecos">Pecos</option><option value="Polk">Polk</option><option value="Potter">Potter</option><option value="Presidio">Presidio</option><option value="Rains">Rains</option><option value="Randall">Randall</option><option value="Reagan">Reagan</option><option value="Real">Real</option><option value="Red River">Red River</option><option value="Reeves">Reeves</option><option value="Refugio">Refugio</option><option value="Roberts">Roberts</option><option value="Robertson">Robertson</option><option value="Rockwall">Rockwall</option><option value="Runnels">Runnels</option><option value="Rusk">Rusk</option><option value="Sabine">Sabine</option><option value="San Augustine">San Augustine</option><option value="San Jacinto">San Jacinto</option><option value="San Patricio">San Patricio</option><option value="San Saba">San Saba</option><option value="Schleicher">Schleicher</option><option value="Scurry">Scurry</option><option value="Shackelford">Shackelford</option><option value="Shelby">Shelby</option><option value="Sherman">Sherman</option><option value="Smith">Smith</option><option value="Somervell">Somervell</option><option value="Starr">Starr</option><option value="Stephens">Stephens</option><option value="Sterling">Sterling</option><option value="Stonewall">Stonewall</option><option value="Sutton">Sutton</option><option value="Swisher">Swisher</option><option value="Tarrant">Tarrant</option><option value="Taylor">Taylor</option><option value="Terrell">Terrell</option><option value="Terry">Terry</option><option value="Throckmorton">Throckmorton</option><option value="Titus">Titus</option><option value="Tom Green">Tom Green</option><option value="Travis">Travis</option><option value="Trinity">Trinity</option><option value="Tyler">Tyler</option><option value="Upshur">Upshur</option><option value="Upton">Upton</option><option value="Uvalde">Uvalde</option><option value="Val Verde">Val Verde</option><option value="Van Zandt">Van Zandt</option><option value="Victoria">Victoria</option><option value="Walker">Walker</option><option value="Waller">Waller</option><option value="Ward">Ward</option><option value="Washington">Washington</option><option value="Webb">Webb</option><option value="Wharton">Wharton</option><option value="Wheeler">Wheeler</option><option value="Wichita">Wichita</option><option value="Wilbarger">Wilbarger</option><option value="Willacy">Willacy</option><option value="Williamson">Williamson</option><option value="Wilson">Wilson</option><option value="Winkler">Winkler</option><option value="Wise">Wise</option><option value="Wood">Wood</option><option value="Yoakum">Yoakum</option><option value="Young">Young</option><option value="Zapata">Zapata</option><option value="Zavala">Zavala</option></select><!-- </select>--></div><div class="form-group form-inline"><input id="countyCopyDSO" name="countyCopyDSO" /></div><div class="form-group form-inline"><label class="control-label" for="city">City:</label><space /><span id="cityInfo" class="label label-info">i</span><space /><select size="4" name="city" list="DSO Cities" multiple="multiple" id="city" class="form-control"><option value="Select One">Select One</option><option value="Unincorporated Areas">Unincorporated Areas</option><option value="Abbott">Abbott</option><option value="Abernathy">Abernathy</option><option value="Abilene">Abilene</option><option value="Ackerly">Ackerly</option><option value="Addison">Addison</option><option value="Adrian">Adrian</option><option value="Agua Dulce">Agua Dulce</option><option value="Alamo">Alamo</option><option value="Alamo Heights">Alamo Heights</option><option value="Alba">Alba</option><option value="Albany">Albany</option><option value="Aledo">Aledo</option><option value="Alice">Alice</option><option value="Allen">Allen</option><option value="Alma">Alma</option><option value="Alpine">Alpine</option><option value="Alto">Alto</option><option value="Alton">Alton</option><option value="Alvarado">Alvarado</option><option value="Alvin">Alvin</option><option value="Alvord">Alvord</option><option value="Amarillo">Amarillo</option><option value="Ames">Ames</option><option value="Amherst">Amherst</option><option value="Anahuac">Anahuac</option><option value="Anderson">Anderson</option><option value="Andrews">Andrews</option><option value="Angleton">Angleton</option><option value="Angus">Angus</option><option value="Anna">Anna</option><option value="Annetta">Annetta</option><option value="Annetta North">Annetta North</option><option value="Annetta South">Annetta South</option><option value="Annona">Annona</option><option value="Anson">Anson</option><option value="Anthony">Anthony</option><option value="Anton">Anton</option><option value="Appleby">Appleby</option><option value="Aquilla">Aquilla</option><option value="Aransas Pass">Aransas Pass</option><option value="Archer City">Archer City</option><option value="Arcola">Arcola</option><option value="Argyle">Argyle</option><option value="Arlington">Arlington</option><option value="Arp">Arp</option><option value="Asherton">Asherton</option><option value="Aspermont">Aspermont</option><option value="Athens">Athens</option><option value="Atlanta">Atlanta</option><option value="Aubrey">Aubrey</option><option value="Aurora">Aurora</option><option value="Austin">Austin</option><option value="Austwell">Austwell</option><option value="Avery">Avery</option><option value="Avinger">Avinger</option><option value="Azle">Azle</option><option value="Bailey">Bailey</option><option value="Bailey's Prairie">Bailey's Prairie</option><option value="Baird">Baird</option><option value="Balch Springs">Balch Springs</option><option value="Balcones Heights">Balcones Heights</option><option value="Ballinger">Ballinger</option><option value="Balmorhea">Balmorhea</option><option value="Bandera">Bandera</option><option value="Bangs">Bangs</option><option value="Bardwell">Bardwell</option><option value="Barry">Barry</option><option value="Barstow">Barstow</option><option value="Bartlett">Bartlett</option><option value="Bartonville">Bartonville</option><option value="Bastrop">Bastrop</option><option value="Bay City">Bay City</option><option value="Bayou Vista">Bayou Vista</option><option value="Bayside">Bayside</option><option value="Baytown">Baytown</option><option value="Bayview">Bayview</option><option value="Beach City">Beach City</option><option value="Bear Creek">Bear Creek</option><option value="Beasley">Beasley</option><option value="Beaumont">Beaumont</option><option value="Beckville">Beckville</option><option value="Bedford">Bedford</option><option value="Bedias">Bedias</option><option value="Bee Cave">Bee Cave</option><option value="Beeville">Beeville</option><option value="Bellaire">Bellaire</option><option value="Bellevue">Bellevue</option><option value="Bellmead">Bellmead</option><option value="Bells">Bells</option><option value="Bellville">Bellville</option><option value="Belton">Belton</option><option value="Benavides">Benavides</option><option value="Benbrook">Benbrook</option><option value="Benjamin">Benjamin</option><option value="Berryville">Berryville</option><option value="Bertram">Bertram</option><option value="Beverly Hills">Beverly Hills</option><option value="Bevil Oaks">Bevil Oaks</option><option value="Big Lake">Big Lake</option><option value="Big Sandy">Big Sandy</option><option value="Big Spring">Big Spring</option><option value="Big Wells">Big Wells</option><option value="Bishop">Bishop</option><option value="Bishop Hills">Bishop Hills</option><option value="Blackwell">Blackwell</option><option value="Blanco">Blanco</option><option value="Blanket">Blanket</option><option value="Bloomburg">Bloomburg</option><option value="Blooming Grove">Blooming Grove</option><option value="Blossom">Blossom</option><option value="Blue Mound">Blue Mound</option><option value="Blue Ridge">Blue Ridge</option><option value="Blum">Blum</option><option value="Boerne">Boerne</option><option value="Bogata">Bogata</option><option value="Bonham">Bonham</option><option value="Bonney">Bonney</option><option value="Booker">Booker</option><option value="Borger">Borger</option><option value="Bovina">Bovina</option><option value="Bowie">Bowie</option><option value="Boyd">Boyd</option><option value="Brackettville">Brackettville</option><option value="Brady">Brady</option><option value="Brazoria">Brazoria</option><option value="Brazos Bend">Brazos Bend</option><option value="Brazos Country">Brazos Country</option><option value="Breckenridge">Breckenridge</option><option value="Bremond">Bremond</option><option value="Brenham">Brenham</option><option value="Briarcliff">Briarcliff</option><option value="Briaroaks">Briaroaks</option><option value="Bridge City">Bridge City</option><option value="Bridgeport">Bridgeport</option><option value="Broaddus">Broaddus</option><option value="Bronte">Bronte</option><option value="Brookshire">Brookshire</option><option value="Brookside Village">Brookside Village</option><option value="Browndell">Browndell</option><option value="Brownfield">Brownfield</option><option value="Brownsboro">Brownsboro</option><option value="Brownsville">Brownsville</option><option value="Brownwood">Brownwood</option><option value="Bruceville-Eddy">Bruceville-Eddy</option><option value="Bryan">Bryan</option><option value="Bryson">Bryson</option><option value="Buckholts">Buckholts</option><option value="Buda">Buda</option><option value="Buffalo">Buffalo</option><option value="Buffalo Gap">Buffalo Gap</option><option value="Buffalo Springs">Buffalo Springs</option><option value="Bullard">Bullard</option><option value="Bulverde">Bulverde</option><option value="Bunker Hill Village">Bunker Hill Village</option><option value="Burkburnett">Burkburnett</option><option value="Burke">Burke</option><option value="Burleson">Burleson</option><option value="Burnet">Burnet</option><option value="Burton">Burton</option><option value="Byers">Byers</option><option value="Bynum">Bynum</option><option value="Cactus">Cactus</option><option value="Caddo Mills">Caddo Mills</option><option value="Caldwell">Caldwell</option><option value="Callisburg">Callisburg</option><option value="Calvert">Calvert</option><option value="Cameron">Cameron</option><option value="Camp Wood">Camp Wood</option><option value="Campbell">Campbell</option><option value="Canadian">Canadian</option><option value="Caney City">Caney City</option><option value="Canton">Canton</option><option value="Canyon">Canyon</option><option value="Carbon">Carbon</option><option value="Carl's Corner">Carl's Corner</option><option value="Carmine">Carmine</option><option value="Carrizo Springs">Carrizo Springs</option><option value="Carrollton">Carrollton</option><option value="Carthage">Carthage</option><option value="Cashion">Cashion</option><option value="Castle Hills">Castle Hills</option><option value="Castroville">Castroville</option><option value="Cedar Hill">Cedar Hill</option><option value="Cedar Park">Cedar Park</option><option value="Celeste">Celeste</option><option value="Celina">Celina</option><option value="Center">Center</option><option value="Centerville">Centerville</option><option value="Chandler">Chandler</option><option value="Channing">Channing</option><option value="Charlotte">Charlotte</option><option value="Chester">Chester</option><option value="Chico">Chico</option><option value="Childress">Childress</option><option value="Chillicothe">Chillicothe</option><option value="China">China</option><option value="China Grove">China Grove</option><option value="Chireno">Chireno</option><option value="Christine">Christine</option><option value="Cibolo">Cibolo</option><option value="Cisco">Cisco</option><option value="Clarendon">Clarendon</option><option value="Clarksville">Clarksville</option><option value="Clarksville City">Clarksville City</option><option value="Claude">Claude</option><option value="Clear Lake Shores">Clear Lake Shores</option><option value="Cleburne">Cleburne</option><option value="Cleveland">Cleveland</option><option value="Clifton">Clifton</option><option value="Clint">Clint</option><option value="Clute">Clute</option><option value="Clyde">Clyde</option><option value="Coahoma">Coahoma</option><option value="Cockrell Hill">Cockrell Hill</option><option value="Coffee City">Coffee City</option><option value="Coldspring">Coldspring</option><option value="Coleman">Coleman</option><option value="College Station">College Station</option><option value="Colleyville">Colleyville</option><option value="Collinsville">Collinsville</option><option value="Colmesneil">Colmesneil</option><option value="Colorado City">Colorado City</option><option value="Columbus">Columbus</option><option value="Comanche">Comanche</option><option value="Combes">Combes</option><option value="Combine">Combine</option><option value="Commerce">Commerce</option><option value="Como">Como</option><option value="Conroe">Conroe</option><option value="Converse">Converse</option><option value="Cool">Cool</option><option value="Coolidge">Coolidge</option><option value="Cooper">Cooper</option><option value="Coppell">Coppell</option><option value="Copper Canyon">Copper Canyon</option><option value="Copperas Cove">Copperas Cove</option><option value="Corinth">Corinth</option><option value="Corpus Christi">Corpus Christi</option><option value="Corral City">Corral City</option><option value="Corrigan">Corrigan</option><option value="Corsicana">Corsicana</option><option value="Cottonwood">Cottonwood</option><option value="Cottonwood Shores">Cottonwood Shores</option><option value="Cotulla">Cotulla</option><option value="Cove">Cove</option><option value="Covington">Covington</option><option value="Crandall">Crandall</option><option value="Crane">Crane</option><option value="Cranfills Gap">Cranfills Gap</option><option value="Crawford">Crawford</option><option value="Creedmoor">Creedmoor</option><option value="Cresson">Cresson</option><option value="Crockett">Crockett</option><option value="Crosbyton">Crosbyton</option><option value="Cross Plains">Cross Plains</option><option value="Cross Roads">Cross Roads</option><option value="Cross Timber">Cross Timber</option><option value="Crowell">Crowell</option><option value="Crowley">Crowley</option><option value="Crystal City">Crystal City</option><option value="Cuero">Cuero</option><option value="Cumby">Cumby</option><option value="Cuney">Cuney</option><option value="Cushing">Cushing</option><option value="Cut and Shoot">Cut and Shoot</option><option value="Daingerfield">Daingerfield</option><option value="Daisetta">Daisetta</option><option value="Dalhart">Dalhart</option><option value="Dallas">Dallas</option><option value="Dalworthington Gardens">Dalworthington Gardens</option><option value="Danbury">Danbury</option><option value="Darrouzett">Darrouzett</option><option value="Dawson">Dawson</option><option value="Dayton">Dayton</option><option value="Dayton Lakes">Dayton Lakes</option><option value="De Leon">De Leon</option><option value="Dean">Dean</option><option value="Decatur">Decatur</option><option value="DeCordova">DeCordova</option><option value="Deer Park">Deer Park</option><option value="DeKalb">DeKalb</option><option value="Del Rio">Del Rio</option><option value="Dell City">Dell City</option><option value="Denison">Denison</option><option value="Denton">Denton</option><option value="Denver City">Denver City</option><option value="Deport">Deport</option><option value="DeSoto">DeSoto</option><option value="Detroit">Detroit</option><option value="Devers">Devers</option><option value="Devine">Devine</option><option value="Diboll">Diboll</option><option value="Dickens">Dickens</option><option value="Dickinson">Dickinson</option><option value="Dilley">Dilley</option><option value="Dimmitt">Dimmitt</option><option value="Dish">Dish</option><option value="Dodd City">Dodd City</option><option value="Dodson">Dodson</option><option value="Domino">Domino</option><option value="Donna">Donna</option><option value="Dorchester">Dorchester</option><option value="Double Oak">Double Oak</option><option value="Douglassville">Douglassville</option><option value="Dripping Springs">Dripping Springs</option><option value="Driscoll">Driscoll</option><option value="Dublin">Dublin</option><option value="Dumas">Dumas</option><option value="Duncanville">Duncanville</option><option value="Eagle Lake">Eagle Lake</option><option value="Eagle Pass">Eagle Pass</option><option value="Early">Early</option><option value="Earth">Earth</option><option value="East Bernard">East Bernard</option><option value="East Mountain">East Mountain</option><option value="East Tawakoni">East Tawakoni</option><option value="Eastland">Eastland</option><option value="Easton">Easton</option><option value="Ector">Ector</option><option value="Edcouch">Edcouch</option><option value="Eden">Eden</option><option value="Edgecliff">Edgecliff</option><option value="Edgewood">Edgewood</option><option value="Edinburg">Edinburg</option><option value="Edmonson">Edmonson</option><option value="Edna">Edna</option><option value="Edom">Edom</option><option value="El Campo">El Campo</option><option value="El Cenizo">El Cenizo</option><option value="El Lago">El Lago</option><option value="El Paso">El Paso</option><option value="Eldorado">Eldorado</option><option value="Electra">Electra</option><option value="Elgin">Elgin</option><option value="Elkhart">Elkhart</option><option value="Elmendorf">Elmendorf</option><option value="Elsa">Elsa</option><option value="Emhouse">Emhouse</option><option value="Emory">Emory</option><option value="Enchanted Oaks">Enchanted Oaks</option><option value="Encinal">Encinal</option><option value="Ennis">Ennis</option><option value="Escobares">Escobares</option><option value="Estelline">Estelline</option><option value="Euless">Euless</option><option value="Eureka">Eureka</option><option value="Eustace">Eustace</option><option value="Evant">Evant</option><option value="Everman">Everman</option><option value="Fair Oaks Ranch">Fair Oaks Ranch</option><option value="Fairchilds">Fairchilds</option><option value="Fairfield">Fairfield</option><option value="Fairview">Fairview</option><option value="Falfurrias">Falfurrias</option><option value="Falls City">Falls City</option><option value="Farmers Branch">Farmers Branch</option><option value="Farmersville">Farmersville</option><option value="Farwell">Farwell</option><option value="Fate">Fate</option><option value="Fayetteville">Fayetteville</option><option value="Ferris">Ferris</option><option value="Flatonia">Flatonia</option><option value="Florence">Florence</option><option value="Floresville">Floresville</option><option value="Flower Mound">Flower Mound</option><option value="Floydada">Floydada</option><option value="Follett">Follett</option><option value="Forest Hill">Forest Hill</option><option value="Forney">Forney</option><option value="Forsan">Forsan</option><option value="Fort Stockton">Fort Stockton</option><option value="Fort Worth">Fort Worth</option><option value="Franklin">Franklin</option><option value="Frankston">Frankston</option><option value="Fredericksburg">Fredericksburg</option><option value="Freeport">Freeport</option><option value="Freer">Freer</option><option value="Friendswood">Friendswood</option><option value="Friona">Friona</option><option value="Frisco">Frisco</option><option value="Fritch">Fritch</option><option value="Frost">Frost</option><option value="Fruitvale">Fruitvale</option><option value="Fulshear">Fulshear</option><option value="Fulton">Fulton</option><option value="Gainesville">Gainesville</option><option value="Galena Park">Galena Park</option><option value="Gallatin">Gallatin</option><option value="Galveston">Galveston</option><option value="Ganado">Ganado</option><option value="Garden Ridge">Garden Ridge</option><option value="Garland">Garland</option><option value="Garrett">Garrett</option><option value="Garrison">Garrison</option><option value="Gary">Gary</option><option value="Gatesville">Gatesville</option><option value="George West">George West</option><option value="Georgetown">Georgetown</option><option value="Gholson">Gholson</option><option value="Giddings">Giddings</option><option value="Gilmer">Gilmer</option><option value="Gladewater">Gladewater</option><option value="Glen Rose">Glen Rose</option><option value="Glenn Heights">Glenn Heights</option><option value="Godley">Godley</option><option value="Goldsmith">Goldsmith</option><option value="Goldthwaite">Goldthwaite</option><option value="Goliad">Goliad</option><option value="Golinda">Golinda</option><option value="Gonzales">Gonzales</option><option value="Goodlow">Goodlow</option><option value="Goodrich">Goodrich</option><option value="Gordon">Gordon</option><option value="Goree">Goree</option><option value="Gorman">Gorman</option><option value="Graford">Graford</option><option value="Graham">Graham</option><option value="Granbury">Granbury</option><option value="Grand Prairie">Grand Prairie</option><option value="Grand Saline">Grand Saline</option><option value="Grandfalls">Grandfalls</option><option value="Grandview">Grandview</option><option value="Granger">Granger</option><option value="Granite Shoals">Granite Shoals</option><option value="Granjeno">Granjeno</option><option value="Grapeland">Grapeland</option><option value="Grapevine">Grapevine</option><option value="Grays Prairie">Grays Prairie</option><option value="Greenville">Greenville</option><option value="Gregory">Gregory</option><option value="Grey Forest">Grey Forest</option><option value="Groesbeck">Groesbeck</option><option value="Groom">Groom</option><option value="Groves">Groves</option><option value="Groveton">Groveton</option><option value="Gruver">Gruver</option><option value="Gun Barrel City">Gun Barrel City</option><option value="Gunter">Gunter</option><option value="Gustine">Gustine</option><option value="Hackberry">Hackberry</option><option value="Hale Center">Hale Center</option><option value="Hallettsville">Hallettsville</option><option value="Hallsburg">Hallsburg</option><option value="Hallsville">Hallsville</option><option value="Haltom City">Haltom City</option><option value="Hamilton">Hamilton</option><option value="Hamlin">Hamlin</option><option value="Happy">Happy</option><option value="Hardin">Hardin</option><option value="Harker Heights">Harker Heights</option><option value="Harlingen">Harlingen</option><option value="Hart">Hart</option><option value="Haskell">Haskell</option><option value="Haslet">Haslet</option><option value="Hawk Cove">Hawk Cove</option><option value="Hawkins">Hawkins</option><option value="Hawley">Hawley</option><option value="Hays">Hays</option><option value="Hearne">Hearne</option><option value="Heath">Heath</option><option value="Hebron">Hebron</option><option value="Hedley">Hedley</option><option value="Hedwig Village">Hedwig Village</option><option value="Helotes">Helotes</option><option value="Hemphill">Hemphill</option><option value="Hempstead">Hempstead</option><option value="Henderson">Henderson</option><option value="Henrietta">Henrietta</option><option value="Hereford">Hereford</option><option value="Hewitt">Hewitt</option><option value="Hickory Creek">Hickory Creek</option><option value="Hico">Hico</option><option value="Hidalgo">Hidalgo</option><option value="Hideaway">Hideaway</option><option value="Higgins">Higgins</option><option value="Highland Haven">Highland Haven</option><option value="Highland Park">Highland Park</option><option value="Highland Village">Highland Village</option><option value="Hill Country Village">Hill Country Village</option><option value="Hillcrest Village">Hillcrest Village</option><option value="Hillsboro">Hillsboro</option><option value="Hilshire Village">Hilshire Village</option><option value="Hitchcock">Hitchcock</option><option value="Holiday Lakes">Holiday Lakes</option><option value="Holland">Holland</option><option value="Holliday">Holliday</option><option value="Hollywood Park">Hollywood Park</option><option value="Hondo">Hondo</option><option value="Honey Grove">Honey Grove</option><option value="Hooks">Hooks</option><option value="Horizon City">Horizon City</option><option value="Horseshoe Bay">Horseshoe Bay</option><option value="Houston">Houston</option><option value="Howardwick">Howardwick</option><option value="Howe">Howe</option><option value="Hubbard">Hubbard</option><option value="Hudson">Hudson</option><option value="Hudson Oaks">Hudson Oaks</option><option value="Hughes Springs">Hughes Springs</option><option value="Humble">Humble</option><option value="Hunters Creek Village">Hunters Creek Village</option><option value="Huntington">Huntington</option><option value="Huntsville">Huntsville</option><option value="Hurst">Hurst</option><option value="Hutchins">Hutchins</option><option value="Hutto">Hutto</option><option value="Huxley">Huxley</option><option value="Idalou">Idalou</option><option value="Impact">Impact</option><option value="Indian Lake">Indian Lake</option><option value="Industry">Industry</option><option value="Ingleside">Ingleside</option><option value="Ingleside On The Bay">Ingleside On The Bay</option><option value="Ingram">Ingram</option><option value="Iola">Iola</option><option value="Iowa Colony">Iowa Colony</option><option value="Iowa Park">Iowa Park</option><option value="Iraan">Iraan</option><option value="Iredell">Iredell</option><option value="Irving">Irving</option><option value="Italy">Italy</option><option value="Itasca">Itasca</option><option value="Ivanhoe">Ivanhoe</option><option value="Jacinto City">Jacinto City</option><option value="Jacksboro">Jacksboro</option><option value="Jacksonville">Jacksonville</option><option value="Jamaica Beach">Jamaica Beach</option><option value="Jarrell">Jarrell</option><option value="Jasper">Jasper</option><option value="Jayton">Jayton</option><option value="Jefferson">Jefferson</option><option value="Jersey Village">Jersey Village</option><option value="Jewett">Jewett</option><option value="Joaquin">Joaquin</option><option value="Johnson City">Johnson City</option><option value="Jolly">Jolly</option><option value="Jones Creek">Jones Creek</option><option value="Jonestown">Jonestown</option><option value="Josephine">Josephine</option><option value="Joshua">Joshua</option><option value="Jourdanton">Jourdanton</option><option value="Junction">Junction</option><option value="Justin">Justin</option><option value="Karnes City">Karnes City</option><option value="Katy">Katy</option><option value="Kaufman">Kaufman</option><option value="Keene">Keene</option><option value="Keller">Keller</option><option value="Kemah">Kemah</option><option value="Kemp">Kemp</option><option value="Kempner">Kempner</option><option value="Kendleton">Kendleton</option><option value="Kenedy">Kenedy</option><option value="Kenefick">Kenefick</option><option value="Kennard">Kennard</option><option value="Kennedale">Kennedale</option><option value="Kerens">Kerens</option><option value="Kermit">Kermit</option><option value="Kerrville">Kerrville</option><option value="Kilgore">Kilgore</option><option value="Killeen">Killeen</option><option value="Kingsville">Kingsville</option><option value="Kirby">Kirby</option><option value="Kirbyville">Kirbyville</option><option value="Kirvin">Kirvin</option><option value="Knollwood">Knollwood</option><option value="Knox City">Knox City</option><option value="Kosse">Kosse</option><option value="Kountze">Kountze</option><option value="Kress">Kress</option><option value="Krugerville">Krugerville</option><option value="Krum">Krum</option><option value="Kurten">Kurten</option><option value="Kyle">Kyle</option><option value="La Feria">La Feria</option><option value="La Grange">La Grange</option><option value="La Grulla">La Grulla</option><option value="La Joya">La Joya</option><option value="La Marque">La Marque</option><option value="La Porte">La Porte</option><option value="La Vernia">La Vernia</option><option value="La Villa">La Villa</option><option value="La Ward">La Ward</option><option value="LaCoste">LaCoste</option><option value="Lacy-Lakeview">Lacy-Lakeview</option><option value="Ladonia">Ladonia</option><option value="Lago Vista">Lago Vista</option><option value="Laguna Vista">Laguna Vista</option><option value="Lake Bridgeport">Lake Bridgeport</option><option value="Lake City">Lake City</option><option value="Lake Dallas">Lake Dallas</option><option value="Lake Jackson">Lake Jackson</option><option value="Lake Tanglewood">Lake Tanglewood</option><option value="Lake Worth">Lake Worth</option><option value="Lakeport">Lakeport</option><option value="Lakeside (San Patricio)">Lakeside (San Patricio)</option><option value="Lakeside (Tarrant)">Lakeside (Tarrant)</option><option value="Lakeside City">Lakeside City</option><option value="Lakeview">Lakeview</option><option value="Lakeway">Lakeway</option><option value="Lakewood Village">Lakewood Village</option><option value="Lamesa">Lamesa</option><option value="Lampasas">Lampasas</option><option value="Lancaster">Lancaster</option><option value="Laredo">Laredo</option><option value="Latexo">Latexo</option><option value="Lavon">Lavon</option><option value="Lawn">Lawn</option><option value="League City">League City</option><option value="Leakey">Leakey</option><option value="Leander">Leander</option><option value="Leary">Leary</option><option value="Lefors">Lefors</option><option value="Leon Valley">Leon Valley</option><option value="Leona">Leona</option><option value="Leonard">Leonard</option><option value="Leroy">Leroy</option><option value="Levelland">Levelland</option><option value="Lewisville">Lewisville</option><option value="Lexington">Lexington</option><option value="Liberty">Liberty</option><option value="Liberty Hill">Liberty Hill</option><option value="Lincoln Park">Lincoln Park</option><option value="Lindale">Lindale</option><option value="Linden">Linden</option><option value="Lindsay">Lindsay</option><option value="Lipan">Lipan</option><option value="Little Elm">Little Elm</option><option value="Little River Academy">Little River Academy</option><option value="Littlefield">Littlefield</option><option value="Live Oak">Live Oak</option><option value="Liverpool">Liverpool</option><option value="Livingston">Livingston</option><option value="Llano">Llano</option><option value="Lockhart">Lockhart</option><option value="Lockney">Lockney</option><option value="Log Cabin">Log Cabin</option><option value="Lometa">Lometa</option><option value="Lone Oak">Lone Oak</option><option value="Lone Star">Lone Star</option><option value="Longview">Longview</option><option value="Loraine">Loraine</option><option value="Lorena">Lorena</option><option value="Lorenzo">Lorenzo</option><option value="Los Fresnos">Los Fresnos</option><option value="Los Indios">Los Indios</option><option value="Los Ybanez">Los Ybanez</option><option value="Lott">Lott</option><option value="Lovelady">Lovelady</option><option value="Lowry Crossing">Lowry Crossing</option><option value="Lubbock">Lubbock</option><option value="Lucas">Lucas</option><option value="Lueders">Lueders</option><option value="Lufkin">Lufkin</option><option value="Luling">Luling</option><option value="Lumberton">Lumberton</option><option value="Lyford">Lyford</option><option value="Lytle">Lytle</option><option value="Mabank">Mabank</option><option value="Madisonville">Madisonville</option><option value="Magnolia">Magnolia</option><option value="Malakoff">Malakoff</option><option value="Malone">Malone</option><option value="Manor">Manor</option><option value="Mansfield">Mansfield</option><option value="Manvel">Manvel</option><option value="Marble Falls">Marble Falls</option><option value="Marfa">Marfa</option><option value="Marietta">Marietta</option><option value="Marion">Marion</option><option value="Marlin">Marlin</option><option value="Marquez">Marquez</option><option value="Marshall">Marshall</option><option value="Mart">Mart</option><option value="Martindale">Martindale</option><option value="Mason">Mason</option><option value="Matador">Matador</option><option value="Mathis">Mathis</option><option value="Maud">Maud</option><option value="Maypearl">Maypearl</option><option value="McAllen">McAllen</option><option value="McCamey">McCamey</option><option value="McGregor">McGregor</option><option value="McKinney">McKinney</option><option value="McLean">McLean</option><option value="McLendon-Chisholm">McLendon-Chisholm</option><option value="Meadow">Meadow</option><option value="Meadowlakes">Meadowlakes</option><option value="Meadows Place">Meadows Place</option><option value="Megargel">Megargel</option><option value="Melissa">Melissa</option><option value="Melvin">Melvin</option><option value="Memphis">Memphis</option><option value="Menard">Menard</option><option value="Mercedes">Mercedes</option><option value="Meridian">Meridian</option><option value="Merkel">Merkel</option><option value="Mertens">Mertens</option><option value="Mertzon">Mertzon</option><option value="Mesquite">Mesquite</option><option value="Mexia">Mexia</option><option value="Miami">Miami</option><option value="Midland">Midland</option><option value="Midlothian">Midlothian</option><option value="Midway">Midway</option><option value="Milano">Milano</option><option value="Mildred">Mildred</option><option value="Miles">Miles</option><option value="Milford">Milford</option><option value="Miller's Cove">Miller's Cove</option><option value="Millsap">Millsap</option><option value="Mineola">Mineola</option><option value="Mineral Wells">Mineral Wells</option><option value="Mingus">Mingus</option><option value="Mission">Mission</option><option value="Missouri City">Missouri City</option><option value="Mobeetie">Mobeetie</option><option value="Mobile City">Mobile City</option><option value="Monahans">Monahans</option><option value="Mont Belvieu">Mont Belvieu</option><option value="Montgomery">Montgomery</option><option value="Moody">Moody</option><option value="Moore Station">Moore Station</option><option value="Moran">Moran</option><option value="Morgan">Morgan</option><option value="Morgan's Point">Morgan's Point</option><option value="Morgan's Point Resort">Morgan's Point Resort</option><option value="Morton">Morton</option><option value="Moulton">Moulton</option><option value="Mount Calm">Mount Calm</option><option value="Mount Enterprise">Mount Enterprise</option><option value="Mount Pleasant">Mount Pleasant</option><option value="Mount Vernon">Mount Vernon</option><option value="Mountain City">Mountain City</option><option value="Muenster">Muenster</option><option value="Muleshoe">Muleshoe</option><option value="Mullin">Mullin</option><option value="Munday">Munday</option><option value="Murchison">Murchison</option><option value="Murphy">Murphy</option><option value="Mustang">Mustang</option><option value="Mustang Ridge">Mustang Ridge</option><option value="Nacogdoches">Nacogdoches</option><option value="Naples">Naples</option><option value="Nash">Nash</option><option value="Nassau Bay">Nassau Bay</option><option value="Natalia">Natalia</option><option value="Navarro">Navarro</option><option value="Navasota">Navasota</option><option value="Nazareth">Nazareth</option><option value="Nederland">Nederland</option><option value="Needville">Needville</option><option value="Nesbitt">Nesbitt</option><option value="Nevada">Nevada</option><option value="New Berlin">New Berlin</option><option value="New Boston">New Boston</option><option value="New Braunfels">New Braunfels</option><option value="New Chapel Hill">New Chapel Hill</option><option value="New Deal">New Deal</option><option value="New Fairview">New Fairview</option><option value="New Home">New Home</option><option value="New Hope">New Hope</option><option value="New London">New London</option><option value="New Summerfield">New Summerfield</option><option value="New Waverly">New Waverly</option><option value="Newark">Newark</option><option value="Newcastle">Newcastle</option><option value="Newton">Newton</option><option value="Neylandville">Neylandville</option><option value="Niederwald">Niederwald</option><option value="Nixon">Nixon</option><option value="Nocona">Nocona</option><option value="Nolanville">Nolanville</option><option value="Nome">Nome</option><option value="Noonday">Noonday</option><option value="Nordheim">Nordheim</option><option value="Normangee">Normangee</option><option value="North Cleveland">North Cleveland</option><option value="North Richland Hills">North Richland Hills</option><option value="Northlake">Northlake</option><option value="Novice">Novice</option><option value="Oak Grove">Oak Grove</option><option value="Oak Leaf">Oak Leaf</option><option value="Oak Point">Oak Point</option><option value="Oak Ridge (Cooke)">Oak Ridge (Cooke)</option><option value="Oak Ridge (Kaufman)">Oak Ridge (Kaufman)</option><option value="Oak Ridge North">Oak Ridge North</option><option value="Oak Valley">Oak Valley</option><option value="Oakwood">Oakwood</option><option value="O'Brien">O'Brien</option><option value="Odem">Odem</option><option value="Odessa">Odessa</option><option value="O'Donnell">O'Donnell</option><option value="Oglesby">Oglesby</option><option value="Old River-Winfree">Old River-Winfree</option><option value="Olmos Park">Olmos Park</option><option value="Olney">Olney</option><option value="Olton">Olton</option><option value="Omaha">Omaha</option><option value="Onalaska">Onalaska</option><option value="Opdyke West">Opdyke West</option><option value="Orange">Orange</option><option value="Orange Grove">Orange Grove</option><option value="Orchard">Orchard</option><option value="Ore City">Ore City</option><option value="Overton">Overton</option><option value="Ovilla">Ovilla</option><option value="Oyster Creek">Oyster Creek</option><option value="Paducah">Paducah</option><option value="Paint Rock">Paint Rock</option><option value="Palacios">Palacios</option><option value="Palestine">Palestine</option><option value="Palisades">Palisades</option><option value="Palm Valley">Palm Valley</option><option value="Palmer">Palmer</option><option value="Palmhurst">Palmhurst</option><option value="Palmview">Palmview</option><option value="Pampa">Pampa</option><option value="Panhandle">Panhandle</option><option value="Panorama Village">Panorama Village</option><option value="Pantego">Pantego</option><option value="Paradise">Paradise</option><option value="Paris">Paris</option><option value="Parker">Parker</option><option value="Pasadena">Pasadena</option><option value="Pattison">Pattison</option><option value="Patton Village">Patton Village</option><option value="Payne Springs">Payne Springs</option><option value="Pearland">Pearland</option><option value="Pearsall">Pearsall</option><option value="Pecan Gap">Pecan Gap</option><option value="Pecan Hill">Pecan Hill</option><option value="Pecos">Pecos</option><option value="Pelican Bay">Pelican Bay</option><option value="Penelope">Penelope</option><option value="Penitas">Penitas</option><option value="Perryton">Perryton</option><option value="Petersburg">Petersburg</option><option value="Petrolia">Petrolia</option><option value="Petronila">Petronila</option><option value="Pflugerville">Pflugerville</option><option value="Pharr">Pharr</option><option value="Pilot Point">Pilot Point</option><option value="Pine Forest">Pine Forest</option><option value="Pine Island">Pine Island</option><option value="Pinehurst">Pinehurst</option><option value="Pineland">Pineland</option><option value="Piney Point Village">Piney Point Village</option><option value="Pittsburg">Pittsburg</option><option value="Plains">Plains</option><option value="Plainview">Plainview</option><option value="Plano">Plano</option><option value="Pleak">Pleak</option><option value="Pleasant Valley">Pleasant Valley</option><option value="Pleasanton">Pleasanton</option><option value="Plum Grove">Plum Grove</option><option value="Point">Point</option><option value="Point Blank">Point Blank</option><option value="Point Comfort">Point Comfort</option><option value="Point Venture">Point Venture</option><option value="Ponder">Ponder</option><option value="Port Aransas">Port Aransas</option><option value="Port Arthur">Port Arthur</option><option value="Port Isabel">Port Isabel</option><option value="Port Lavaca">Port Lavaca</option><option value="Port Neches">Port Neches</option><option value="Portland">Portland</option><option value="Post">Post</option><option value="Post Oak Bend">Post Oak Bend</option><option value="Poteet">Poteet</option><option value="Poth">Poth</option><option value="Pottsboro">Pottsboro</option><option value="Powell">Powell</option><option value="Poynor">Poynor</option><option value="Prairie View">Prairie View</option><option value="Premont">Premont</option><option value="Presidio">Presidio</option><option value="Primera">Primera</option><option value="Princeton">Princeton</option><option value="Progreso">Progreso</option><option value="Progreso Lakes">Progreso Lakes</option><option value="Prosper">Prosper</option><option value="Providence Village">Providence Village</option><option value="Putnam">Putnam</option><option value="Pyote">Pyote</option><option value="Quanah">Quanah</option><option value="Queen City">Queen City</option><option value="Quinlan">Quinlan</option><option value="Quintana">Quintana</option><option value="Quitaque">Quitaque</option><option value="Quitman">Quitman</option><option value="Ralls">Ralls</option><option value="Rancho Viejo">Rancho Viejo</option><option value="Ranger">Ranger</option><option value="Rangerville">Rangerville</option><option value="Rankin">Rankin</option><option value="Ransom Canyon">Ransom Canyon</option><option value="Ravenna">Ravenna</option><option value="Raymondville">Raymondville</option><option value="Red Lick">Red Lick</option><option value="Red Oak">Red Oak</option><option value="Redwater">Redwater</option><option value="Refugio">Refugio</option><option value="Reklaw">Reklaw</option><option value="Reno (Lamar)">Reno (Lamar)</option><option value="Reno (Parker)">Reno (Parker)</option><option value="Retreat">Retreat</option><option value="Rhome">Rhome</option><option value="Rice">Rice</option><option value="Richardson">Richardson</option><option value="Richland">Richland</option><option value="Richland Hills">Richland Hills</option><option value="Richland Springs">Richland Springs</option><option value="Richmond">Richmond</option><option value="Richwood">Richwood</option><option value="Riesel">Riesel</option><option value="Rio Bravo">Rio Bravo</option><option value="Rio Grande City">Rio Grande City</option><option value="Rio Hondo">Rio Hondo</option><option value="Rio Vista">Rio Vista</option><option value="Rising Star">Rising Star</option><option value="River Oaks">River Oaks</option><option value="Riverside">Riverside</option><option value="Roanoke">Roanoke</option><option value="Roaring Springs">Roaring Springs</option><option value="Robert Lee">Robert Lee</option><option value="Robinson">Robinson</option><option value="Robstown">Robstown</option><option value="Roby">Roby</option><option value="Rochester">Rochester</option><option value="Rockdale">Rockdale</option><option value="Rockport">Rockport</option><option value="Rocksprings">Rocksprings</option><option value="Rockwall">Rockwall</option><option value="Rocky Mound">Rocky Mound</option><option value="Rogers">Rogers</option><option value="Rollingwood">Rollingwood</option><option value="Roma">Roma</option><option value="Roman Forest">Roman Forest</option><option value="Ropesville">Ropesville</option><option value="Roscoe">Roscoe</option><option value="Rose City">Rose City</option><option value="Rose Hill Acres">Rose Hill Acres</option><option value="Rosebud">Rosebud</option><option value="Rosenberg">Rosenberg</option><option value="Ross">Ross</option><option value="Rosser">Rosser</option><option value="Rotan">Rotan</option><option value="Round Mountain">Round Mountain</option><option value="Round Rock">Round Rock</option><option value="Round Top">Round Top</option><option value="Rowlett">Rowlett</option><option value="Roxton">Roxton</option><option value="Royse City">Royse City</option><option value="Rule">Rule</option><option value="Runaway Bay">Runaway Bay</option><option value="Runge">Runge</option><option value="Rusk">Rusk</option><option value="Sabinal">Sabinal</option><option value="Sachse">Sachse</option><option value="Sadler">Sadler</option><option value="Saginaw">Saginaw</option><option value="Saint Hedwig">Saint Hedwig</option><option value="Saint Jo">Saint Jo</option><option value="Saint Paul">Saint Paul</option><option value="Salado">Salado</option><option value="San Angelo">San Angelo</option><option value="San Antonio">San Antonio</option><option value="San Augustine">San Augustine</option><option value="San Benito">San Benito</option><option value="San Diego">San Diego</option><option value="San Felipe">San Felipe</option><option value="San Juan">San Juan</option><option value="San Leanna">San Leanna</option><option value="San Marcos">San Marcos</option><option value="San Patricio">San Patricio</option><option value="San Perlita">San Perlita</option><option value="San Saba">San Saba</option><option value="Sanctuary">Sanctuary</option><option value="Sandy Point">Sandy Point</option><option value="Sanford">Sanford</option><option value="Sanger">Sanger</option><option value="Sansom Park">Sansom Park</option><option value="Santa Anna">Santa Anna</option><option value="Santa Clara">Santa Clara</option><option value="Santa Fe">Santa Fe</option><option value="Santa Rosa">Santa Rosa</option><option value="Savoy">Savoy</option><option value="Schertz">Schertz</option><option value="Schulenburg">Schulenburg</option><option value="Scotland">Scotland</option><option value="Scottsville">Scottsville</option><option value="Scurry">Scurry</option><option value="Seabrook">Seabrook</option><option value="Seadrift">Seadrift</option><option value="Seagoville">Seagoville</option><option value="Seagraves">Seagraves</option><option value="Sealy">Sealy</option><option value="Seguin">Seguin</option><option value="Selma">Selma</option><option value="Seminole">Seminole</option><option value="Seven Oaks">Seven Oaks</option><option value="Seven Points">Seven Points</option><option value="Seymour">Seymour</option><option value="Shady Shores">Shady Shores</option><option value="Shallowater">Shallowater</option><option value="Shamrock">Shamrock</option><option value="Shavano Park">Shavano Park</option><option value="Shenandoah">Shenandoah</option><option value="Shepherd">Shepherd</option><option value="Sherman">Sherman</option><option value="Shiner">Shiner</option><option value="Shoreacres">Shoreacres</option><option value="Silsbee">Silsbee</option><option value="Silverton">Silverton</option><option value="Simonton">Simonton</option><option value="Sinton">Sinton</option><option value="Skellytown">Skellytown</option><option value="Slaton">Slaton</option><option value="Smiley">Smiley</option><option value="Smithville">Smithville</option><option value="Smyer">Smyer</option><option value="Snook">Snook</option><option value="Snyder">Snyder</option><option value="Socorro">Socorro</option><option value="Somerset">Somerset</option><option value="Somerville">Somerville</option><option value="Sonora">Sonora</option><option value="Sour Lake">Sour Lake</option><option value="South Houston">South Houston</option><option value="South Mountain">South Mountain</option><option value="South Padre Island">South Padre Island</option><option value="Southlake">Southlake</option><option value="Southmayd">Southmayd</option><option value="Southside Place">Southside Place</option><option value="Spearman">Spearman</option><option value="Splendora">Splendora</option><option value="Spofford">Spofford</option><option value="Spring Valley">Spring Valley</option><option value="Springlake">Springlake</option><option value="Springtown">Springtown</option><option value="Spur">Spur</option><option value="Stafford">Stafford</option><option value="Stagecoach">Stagecoach</option><option value="Stamford">Stamford</option><option value="Stanton">Stanton</option><option value="Staples">Staples</option><option value="Star Harbor">Star Harbor</option><option value="Stephenville">Stephenville</option><option value="Sterling City">Sterling City</option><option value="Stinnett">Stinnett</option><option value="Stockdale">Stockdale</option><option value="Stratford">Stratford</option><option value="Strawn">Strawn</option><option value="Streetman">Streetman</option><option value="Sudan">Sudan</option><option value="Sugar Land">Sugar Land</option><option value="Sullivan City">Sullivan City</option><option value="Sulphur Springs">Sulphur Springs</option><option value="Sun Valley">Sun Valley</option><option value="Sundown">Sundown</option><option value="Sunnyvale">Sunnyvale</option><option value="Sunray">Sunray</option><option value="Sunrise Beach Village">Sunrise Beach Village</option><option value="Sunset Valley">Sunset Valley</option><option value="Surfside Beach">Surfside Beach</option><option value="Sweeny">Sweeny</option><option value="Sweetwater">Sweetwater</option><option value="Taft">Taft</option><option value="Tahoka">Tahoka</option><option value="Talco">Talco</option><option value="Talty">Talty</option><option value="Tatum">Tatum</option><option value="Taylor">Taylor</option><option value="Taylor Lake Village">Taylor Lake Village</option><option value="Taylor Landing">Taylor Landing</option><option value="Teague">Teague</option><option value="Tehuacana">Tehuacana</option><option value="Temple">Temple</option><option value="Tenaha">Tenaha</option><option value="Terrell">Terrell</option><option value="Terrell Hills">Terrell Hills</option><option value="Texarkana">Texarkana</option><option value="Texas City">Texas City</option><option value="Texhoma">Texhoma</option><option value="Texline">Texline</option><option value="The Colony">The Colony</option><option value="Thompsons">Thompsons</option><option value="Thorndale">Thorndale</option><option value="Thornton">Thornton</option><option value="Thorntonville">Thorntonville</option><option value="Thrall">Thrall</option><option value="Three Rivers">Three Rivers</option><option value="Throckmorton">Throckmorton</option><option value="Tiki Island">Tiki Island</option><option value="Timbercreek Canyon">Timbercreek Canyon</option><option value="Timpson">Timpson</option><option value="Tioga">Tioga</option><option value="Tira">Tira</option><option value="Toco">Toco</option><option value="Todd Mission">Todd Mission</option><option value="Tolar">Tolar</option><option value="Tom Bean">Tom Bean</option><option value="Tomball">Tomball</option><option value="Tool">Tool</option><option value="Toyah">Toyah</option><option value="Trent">Trent</option><option value="Trenton">Trenton</option><option value="Trinidad">Trinidad</option><option value="Trinity">Trinity</option><option value="Trophy Club">Trophy Club</option><option value="Troup">Troup</option><option value="Troy">Troy</option><option value="Tulia">Tulia</option><option value="Turkey">Turkey</option><option value="Tuscola">Tuscola</option><option value="Tye">Tye</option><option value="Tyler">Tyler</option><option value="Uhland">Uhland</option><option value="Uncertain">Uncertain</option><option value="Union Grove">Union Grove</option><option value="Union Valley">Union Valley</option><option value="Universal City">Universal City</option><option value="University Park">University Park</option><option value="Uvalde">Uvalde</option><option value="Valentine">Valentine</option><option value="Valley Mills">Valley Mills</option><option value="Valley View">Valley View</option><option value="Van">Van</option><option value="Van Alstyne">Van Alstyne</option><option value="Van Horn">Van Horn</option><option value="Vega">Vega</option><option value="Venus">Venus</option><option value="Vernon">Vernon</option><option value="Victoria">Victoria</option><option value="Vidor">Vidor</option><option value="Village of The Hills">Village of The Hills</option><option value="Villiage of Volente">Villiage of Volente</option><option value="Vinton">Vinton</option><option value="Von Ormy">Von Ormy</option><option value="Waco">Waco</option><option value="Waelder">Waelder</option><option value="Wake Village">Wake Village</option><option value="Waller">Waller</option><option value="Wallis">Wallis</option><option value="Walnut Springs">Walnut Springs</option><option value="Warren City">Warren City</option><option value="Waskom">Waskom</option><option value="Watauga">Watauga</option><option value="Waxahachie">Waxahachie</option><option value="Weatherford">Weatherford</option><option value="Webberville">Webberville</option><option value="Webster">Webster</option><option value="Weimar">Weimar</option><option value="Weinert">Weinert</option><option value="Weir">Weir</option><option value="Wellington">Wellington</option><option value="Wellman">Wellman</option><option value="Wells">Wells</option><option value="Weslaco">Weslaco</option><option value="West">West</option><option value="West Columbia">West Columbia</option><option value="West Lake Hills">West Lake Hills</option><option value="West Orange">West Orange</option><option value="West Tawakoni">West Tawakoni</option><option value="West University Place">West University Place</option><option value="Westbrook">Westbrook</option><option value="Westlake">Westlake</option><option value="Weston">Weston</option><option value="Weston Lakes">Weston Lakes</option><option value="Westover Hills">Westover Hills</option><option value="Westworth Village">Westworth Village</option><option value="Wharton">Wharton</option><option value="Wheeler">Wheeler</option><option value="White Deer">White Deer</option><option value="White Oak">White Oak</option><option value="White Settlement">White Settlement</option><option value="Whiteface">Whiteface</option><option value="Whitehouse">Whitehouse</option><option value="Whitesboro">Whitesboro</option><option value="Whitewright">Whitewright</option><option value="Whitney">Whitney</option><option value="Wichita Falls">Wichita Falls</option><option value="Wickett">Wickett</option><option value="Willis">Willis</option><option value="Willow Park">Willow Park</option><option value="Wills Point">Wills Point</option><option value="Wilmer">Wilmer</option><option value="Wilson">Wilson</option><option value="Wimberley">Wimberley</option><option value="Windcrest">Windcrest</option><option value="Windom">Windom</option><option value="Windthorst">Windthorst</option><option value="Winfield">Winfield</option><option value="Wink">Wink</option><option value="Winnsboro">Winnsboro</option><option value="Winona">Winona</option><option value="Winters">Winters</option><option value="Wixon Valley">Wixon Valley</option><option value="Wolfe City">Wolfe City</option><option value="Wolfforth">Wolfforth</option><option value="Woodbranch Village">Woodbranch Village</option><option value="Woodcreek">Woodcreek</option><option value="Woodloch">Woodloch</option><option value="Woodsboro">Woodsboro</option><option value="Woodson">Woodson</option><option value="Woodville">Woodville</option><option value="Woodway">Woodway</option><option value="Wortham">Wortham</option><option value="Wylie">Wylie</option><option value="Yantis">Yantis</option><option value="Yoakum">Yoakum</option><option value="Yorktown">Yorktown</option><option value="Zavalla">Zavalla</option></select><br /><div id="otherValueDiv" class="form-group form-inline" style="display:none"><br /><label class="editOption control-label" for="otherValue">Please Write in State Park, Agency, Etc: </label><space /><br /><input type="text" name="otherValue" id="otherValue" style="form-control input-sm" /></div><!--<input type="text" name="city" style="form-control input-sm" />--></div><div class="form-group form-inline" style="display:nonea"><textarea id="cityTmp" name="cityTmp" /><br /><textarea id="city2" name="city2"></textarea></div><div class="form-group form-inline"><label class="control-label" for="population">Population:</label><space /><input name="population" id="population" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="type">Type:</label><space /><input name="type" id="type" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="nfip">If this is a flood event, does the City/County participate in the National Flood Insurance Program (NFIP)?:</label>
        Yes 
                     
                     
                     
                     
                     
                     <input id="nfip1" type="radio" style="form-control input-sm" name="nfip" value="Yes" />
        No 
                     
                     
                     
                     
                     
                     <input id="nfip2" type="radio" style="form-control input-sm" name="nfip" value="No" /></div><div class="form-group form-inline"><label class="control-label" for="dateOfDisaster">Inclusive dates of the disaster:</label><space /><input name="dateOfDisaster1" id="dateOfDisaster1" type="text" placeholder="Start Date" data-provide="datepicker" style="form-control input-sm datepicker" /> - 
                     
                     
                     
                     
                     
                     <input data-provide="datepicker" name="dateOfDisaster2" placeholder="End Date" style="form-control input-sm datepicker" /><span><space /><label class="control-label" for="Continuing">Continuing?</label><space /><input type="checkbox" name="continuing" id="continuing" value="Continuing" /></span></div><div class="form-group form-inline"><label class="control-label" for="declarationIssued">Was a local disaster declaration issued?:</label>
       Yes 
                     
                     
                     
                     
                     
                     <input id="declarationIssued1" type="radio" style="form-control input-sm" name="declarationIssued" value="Yes" />
       No 
                     
                     
                     
                     
                     
                     <input id="declarationIssued2" type="radio" style="form-control input-sm" name="declarationIssued" value="No" /></div><div class="form-group required form-inline"><label class="control-label" for="contactPerson">Contact Person:</label><space /><input name="contactPerson" id="contactPerson" type="text" class="form-control input-sm cPersonCLASS" /></div><div class="form-group required form-inline"><label class="control-label" for="contactPersonTitle">Contact Person Title:</label><space /><input name="contactPersonTitle" id="contactPersonTitle" type="text" class="form-control input-sm cPersonCLASS" runat="server" /></div><div class="form-group form-inline"><label class="control-label" for="address">Address:</label><space /><input name="address" id="address" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="phone">Phone:</label><space /><input name="phone" id="phone" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="mobilePhone">Mobile Phone:</label><space /><input name="mobilePhone" id="mobilePhone" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="fax">Fax:</label><space /><input name="fax" id="fax" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="pager">Pager:</label><space /><input name="pager" id="pager" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="dutyPhone">24-Hr Duty Officer/Sheriff's Office:</label><space /><input name="dutyPhone" id="dutyPhone" type="text" style="form-control input-sm" /></div><br /><h1><span class="label label-default">Individual Assistance</span></h1><h3><span class="label label-default">Residential Losses - Primary Residence Only</span></h3><br /><table class="table table-bordered"><tr><td>Type of Homes</td><td># Affected 
                           
                           
                           
                           
                           
                           <span id="affectedSpan" class="label label-info">i</span></td><td># Minor Damage 
                           
                           
                           
                           
                           
                           <span id="minorDamageSpan" class="label label-info">i</span></td><td># Major Damage 
                           
                           
                           
                           
                           
                           <span id="majorDamageSpan" class="label label-info">i</span></td><td># Destroyed 
                           
                           
                           
                           
                           
                           <span id="destroyedSpan" class="label label-info">i</span></td><td>% Covered by Insurance 
                           
                           
                           
                           
                           
                           <span id="insuranceSpan" class="label label-info">i</span></td></tr><tr><td>Single Family Homes</td><td><input name="sfhAffected" id="sfhAffected" type="text" placeholder="0" class="totalsAffected lockTheseIA" style="form-control input-sm totalsAffected" /></td><td><input name="sfhMinorDamage" id="sfhMinorDamage" type="text" placeholder="0" class="totalsMinorDamage lockTheseIA" style="form-control input-sm totalsMinorDamage" /></td><td><input name="sfhMajorDamage" id="sfhMajorDamage" type="text" placeholder="0" class="totalsMajorDamage lockTheseIA" style="form-control input-sm totalsMajorDamage" /></td><td><input name="sfhDestroyed" id="sfhDestroyed" type="text" placeholder="0" class="totalsDestroyed lockTheseIA" style="form-control input-sm totalsDestroyed" /></td><td><input name="sfhCovByInsurance" id="sfhCovByInsurance" type="text" placeholder="0" class="totalsCovByInsurance lockTheseIA" style="form-control input-sm totalsCovByInsurance" onBlur="iaAverage()" /></td><td>%</td></tr><tr><td>Mobile Homes</td><td><input name="mhAffected" id="mhAffected" type="text" placeholder="0" class="totalsAffected lockTheseIA" style="form-control input-sm totalsAffected" /></td><td><input name="mhMinorDamage" id="mhMinorDamage" type="text" placeholder="0" class="totalsMinorDamage lockTheseIA" style="form-control input-sm totalsMinorDamage" /></td><td><input name="mhMajorDamage" id="mhMajorDamage" type="text" placeholder="0" class="totalsMajorDamage lockTheseIA" style="form-control input-sm totalsMajorDamage" /></td><td><input name="mhDestroyed" id="mhDestroyed" type="text" placeholder="0" class="totalsDestroyed lockTheseIA" style="form-control input-sm totalsDestroyed" /></td><td><input name="mhCovByInsurance" id="mhCovByInsurance" type="text" placeholder="0" class="totalsCovByInsurance lockTheseIA" style="form-control input-sm totalsCovByInsurance" onBlur="iaAverage()" /></td><td>%</td></tr><tr><td>Multi-Family Units</td><td><input name="mfuAffected" id="mfuAffected" type="text" placeholder="0" class="totalsAffected lockTheseIA" style="form-control input-sm totalsAffected" /></td><td><input name="mfuMinorDamage" id="mfuMinorDamage" type="text" placeholder="0" class="totalsMinorDamage lockTheseIA" style="form-control input-sm totalsMinorDamage" /></td><td><input name="mfuMajorDamage" id="mfuMajorDamage" type="text" placeholder="0" class="totalsMajorDamage lockTheseIA" style="form-control input-sm totalsMajorDamage" /></td><td><input name="mfuDestroyed" id="mfuDestroyed" type="text" placeholder="0" class="totalsDestroyed lockTheseIA" style="form-control input-sm totalsDestroyed" /></td><td><input name="mfuCovByInsurance" id="mfuCovByInsurance" type="text" placeholder="0" class="totalsCovByInsurance lockTheseIA" style="form-control input-sm totalsCovByInsurance" onBlur="iaAverage()" /></td><td>%</td></tr><tr><td>Totals</td><td><input name="totalsAffected" id="totalsAffected" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsMinorDamage" id="totalsMinorDamage" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsMajorDamage" id="totalsMajorDamage" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsDestroyed" id="totalsDestroyed" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsCovByInsurance" id="totalsCovByInsurance" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td><td>%</td><!--<td>
                           <input name="totalsCovByInsurance2" id="totalsCovByInsurance2" type="text" placeholder="Average" style="form-control input-sm"/>
                        </td>
                        <td><button onclick="clearZeros()">GO</button></td>--></tr></table><div class="form-group form-inline"><label class="control-label" for="homesIsolated">Number of homes isolated due to road closure (high water, etc.): </label><space /><input name="homesIsolated" id="homesIsolated" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></div><br /><h1><span class="label label-default">Business Losses/Impacts:</span></h1><br /><table class="table table-bordered"><tr><td /><td># of Businesses</td><td># Covered by Adequate Insurance</td><td>$ Total Estimated Repair Cost</td></tr><tr><td>Minor Damage (less than 40%)</td><td><input name="numberMinorDamage" id="numberMinorDamage" type="text" placeholder="0" class="numberTotal lockTheseIA" style="form-control input-sm numberTotal" /></td><td><input name="coveredMinorDamage" id="coveredMinorDamage" type="text" placeholder="0" class="coveredTotal lockTheseIA" style="form-control input-sm coveredTotal" /></td><td>
                           $ <input name="totalMinorDamage" id="totalMinorDamage" type="text" placeholder="0" class="totalTotal lockTheseIA" style="form-control input-sm totalTotal" /></td></tr><tr><td>Major Damage (greater than 40%)</td><td><input name="numberMajorDamage" id="numberMajorDamage" type="text" placeholder="0" class="numberTotal lockTheseIA" style="form-control input-sm numberTotal" /></td><td><input name="coveredMajorDamage" id="coveredMajorDamage" type="text" placeholder="0" class="coveredTotal lockTheseIA" style="form-control input-sm coveredTotal" /></td><td>
                           $ <input name="totalMajorDamage" id="totalMajorDamage" type="text" placeholder="0" class="totalTotal lockTheseIA" style="form-control input-sm totalTotal" /></td></tr><tr><td>Totals</td><td><input name="numberTotal" id="numberTotal" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="coveredTotal" id="coveredTotal" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td><td>
                 $ <input name="totalTotal" id="totalTotal" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td></tr></table><div class="form-group form-inline"><label class="control-label" for="businessesCeased">How many businesses have ceased operations?: </label><space /><input name="businessesCeased" id="businessesCeased" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></div><div class="form-group form-inline"><label class="control-label" for="businessesEconomicInjury">How many businesses have experienced economic injury?: 
                        
                        
                        
                        
                        
                        <span id="businessesEconomicInjuryInfo" class="label label-info">i</span></label><space /><input name="businessesEconomicInjury" id="businessesEconomicInjury" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></div><div class="form-group form-inline"><label class="control-label" for="numberUnemployed">Estimated number of persons unemployed because of this disaster: </label><space /><input name="numberUnemployed" id="numberUnemployed" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /><space /><i>(Contact affected businesses and the local Texas Workforce Commission Office)</i></div><br /><h1><span class="label label-default">Public Assistance</span></h1><br /><table class="table table-bordered"><tr><td>Category</td><td># of Sites</td><td>$ Estimated Repair Costs</td><td>$ Anticipated Insurance*</td></tr><tr><td><span class="label label-default" id="catAInfo">A</span> Debris Clearance
                        
                        
                        
                        
                        
                        </td><td><input name="sitesDebrisClearance" id="sitesDebrisClearance" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostDebrisClearance" id="repairCostDebrisClearance" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceDebrisClearance" id="insuranceDebrisClearance" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catBInfo">B</span> Emergency Protective Measures 
                           
                           
                           
                           
                           
                           <span id="emergencyProtectiveMeasuresInfo" class="label label-info">i</span></td><td><input name="sitesEmergency" id="sitesEmergency" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostEmergency" id="repairCostEmergency" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceEmergency" id="insuranceEmergency" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catCInfo">C</span> Roads &amp; Bridges
                        
                        
                        
                        
                        
                        </td><td><input name="sitesRoadPaved" id="sitesRoadPaved" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostRoadPaved" id="repairCostRoadPaved" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceRoadPaved" id="insuranceRoadPaved" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catDInfo">D</span> Water Control Facilities 
                           
                           
                           
                           
                           
                           <br />(Dams, levees, dikes)

                        
                        
                        
                        
                        
                        </td><td><input name="sitesWaterControlFacilities" id="sitesWaterControlFacilities" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostWaterControlFacilities" id="repairCostWaterControlFacilities" type="text" class="repairCostTotals lockThesePA" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceWaterControlFacilities" id="insuranceWaterControlFacilities" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catEInfo">E</span> Buildings &amp; Equipment 
                           
                           
                           
                           
                           
                           <span id="buildingEquipmentInfo" class="label label-info">i</span></td><td><input name="sitesBuildingsEquipment" id="sitesBuildingsEquipment" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostBuildingsEquipment" id="repairCostBuildingsEquipment" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceBuildingsEquipment" id="insuranceBuildingsEquipment" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catFInfo">F</span> Public Utility Systems
                           
                           
                           
                           
                           
                           <br />
(Gas, Electric, Sewer, Water)

                        
                        
                        
                        
                        
                        </td><td><input name="sitesUtilitySystems" id="sitesUtilitySystems" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostUtilitySystems" id="repairCostUtilitySystems" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceUtilitySystems" id="insuranceUtilitySystems" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catGInfo">G</span>
            Other Types of Facilities
                           
                           
                           
                           
                           
                           <br />
(Recreational Facilities, Airports, etc.)

                        
                        
                        
                        
                        
                        </td><td><input name="sitesOther" id="sitesOther" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostOther" id="repairCostOther" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceOther" id="insuranceOther" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td>Totals
</td><td><input name="sitesTotals" id="sitesTotals" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="repairCostTotals" id="repairCostTotals" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="insuranceTotals" id="insuranceTotals" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td></tr></table><i>* Anticipated insurance is normally calculated by subtracting any deductible, depreciation or 
     uncoverable loss from the estimated repair cost.
</i><div class="form-group form-inline" /><div class="form-group form-inline"><label class="control-label" for="annualMaintenanceBudget">Total annual maintenance budget (i.e. Public Works, Road &amp; Bridge):</label><space />
                     $ <input name="annualMaintenanceBudget" id="annualMaintenanceBudget" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></div><div class="form-group form-inline"><label class="control-label" for="startOfFiscalYear">Start of Fiscal Year(Month):</label><space /><input name="startOfFiscalYear" id="startOfFiscalYear" type="text" style="form-control input-sm" class="lockThesePA" /></div><br /><h1><span class="label label-default">Other Eligible Entities</span></h1><br /><i>(Contact non-profit or governmental, medical, emergency, utility, educational, custodial care facilities, etc.)</i><div class="form-group form-inline" /><table class="table table-bordered"><tr><td>Organization / Facility</td><td>Cat A-G</td><td># of Sites</td><td>$ Estimated Repair Cost</td><td>$ Anticipated Insurance *</td></tr><tr><td><input name="orgFacility01" id="orgFacility01" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat01" id="cat01" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites01" id="sites01" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost01" id="repairCost01" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance01" id="insurance01" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility02" id="orgFacility02" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat02" id="cat02" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites02" id="sites02" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost02" id="repairCost02" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance02" id="insurance02" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility03" id="orgFacility03" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat03" id="cat03" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites03" id="sites03" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost03" id="repairCost03" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance03" id="insurance03" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility04" id="orgFacility04" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat04" id="cat04" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites04" id="sites04" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost04" id="repairCost04" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance04" id="insurance04" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility05" id="orgFacility05" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat05" id="cat05" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites05" id="sites05" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost05" id="repairCost05" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance05" id="insurance05" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility06" id="orgFacility06" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat06" id="cat06" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites06" id="sites06" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost06" id="repairCost06" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance06" id="insurance06" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility07" id="orgFacility07" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat07" id="cat07" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites07" id="sites07" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost07" id="repairCost07" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance07" id="insurance07" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility08" id="orgFacility08" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat08" id="cat08" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites08" id="sites08" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost08" id="repairCost08" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance08" id="insurance08" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility09" id="orgFacility09" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat09" id="cat09" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites09" id="sites09" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost09" id="repairCost09" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance09" id="insurance09" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility10" id="orgFacility10" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat10" id="cat10" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites10" id="sites10" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost10" id="repairCost10" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance10" id="insurance10" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility11" id="orgFacility11" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat11" id="cat11" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites11" id="sites11" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost11" id="repairCost11" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance11" id="insurance11" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility12" id="orgFacility12" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat12" id="cat12" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites12" id="sites12" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost12" id="repairCost12" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance12" id="insurance12" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility13" id="orgFacility13" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat13" id="cat13" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites13" id="sites13" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost13" id="repairCost13" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance13" id="insurance13" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility14" id="orgFacility14" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat14" id="cat14" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites14" id="sites14" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost14" id="repairCost14" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance14" id="insurance14" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility15" id="orgFacility15" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat15" id="cat15" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites15" id="sites15" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost15" id="repairCost15" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance15" id="insurance15" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td>Totals</td><td /><td><input name="sitesOtherTotal" id="sitesOtherTotal" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="repairCostTotal" id="repairCostTotal" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="insuranceCostTotal" id="insuranceCostTotal" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td></tr></table><div>
This form is for damage assessment reporting purposes only.  In accordance with the State Emergency Management Plan, if a Mayor/County Judge determines that a situation is of such severity and magnitude that an effective response is beyond the affected jurisdiction’s capability to recover, a letter outlining the disaster impact and the need for supplemental State and/or Federal assistance must accompany this DSO.
</div><br /><h1><span class="label label-default">General Notes</span></h1><br /><div class="form-group form-inline"><label class="control-label" for="notes">Notes:</label><space /><textarea name="notes" id="notes" style="form-control" /><!--<input name="notes" id="notes" type="text" style="form-control" Rows="5" TextMode="MultiLine"/>--></div><br /><h1><span class="label label-default">Submitter Information</span></h1><br /><div class="form-group form-inline"><label class="control-label" for="submitterName">Name:</label><space /><input name="submitterName" id="submitterName" type="text" style="width:300px" /></div><div /><i> If you include your email, a confirmation email will be sent to you.</i><div class="form-group form-inline" /><div class="form-group form-inline"><label class="control-label" for="submitterEmail">Email:</label><space /><input name="submitterEmail" id="submitterEmail" type="text" style="width:300px" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="submitterEmailHidden">Copies Email:</label>
                     <space/>
                     <input name="submitterEmailHidden" id="submitterEmailHidden" type="text" style="width:300px"/>
                  </div>--><div style="display:none" id="countyEmailHide" class="form-group form-inline"><label class="control-label" for="countyEmail">County Email:</label><space /><input name="countyEmail" id="countyEmail" type="text" style="width:300px" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="countyEmailHidden">Copies County Email:</label>
                     <space/>
                     <input name="countyEmailHidden" id="countyEmailHidden" type="text" style="width:300px"/>
                  </div>--><div id="ddcEmailshow" class="form-group form-inline"><label class="control-label" for="ddcEmail">DDC Email:</label><space /><input name="ddcEmail" id="ddcEmail" type="text" style="width:300px" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="ddcEmailHidden">Copies DDC Email:</label>
                     <space/>
                     <input name="ddcEmailHidden" id="ddcEmailHidden" type="text" style="width:300px"/>
                  </div>--><div class="form-group form-inline"><label class="control-label" for="additionalEmails">Additional Emails:</label><space /><input name="additionalEmails" id="additionalEmails" type="text" style="width:300px" placeholder="Separate multiple emails with a comma (,)" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="additionalEmailsHidden">Copies Additional Emails:</label>
                     <space/>
                     <input name="additionalEmailsHidden" id="additionalEmailsHidden" type="text" style="width:300px"/>
                  </div>--><!--added--><!--*email --></div><!--added--><div name="emailSection" class="form-group form-inline" style="display:none"><span id="emailCheckbox"><datalink name="Email links" /></span><!--<input type="checkbox" name="fakeDataLink" value="Yes"/>-->
                    To
                  
                  <input type="text" name="emailTo" size="200" value="" recipient="true" subject="false" message="false" receiver="false" notification="false" /><br />
                    Subject
                  
                  <input type="text" name="emailSubject" size="40" value="" recipient="false" subject="true" message="false" receiver="false" notification="false" /><br />
                    Body
                  
                  <textarea name="emailBody" rows="4" cols="40" recipient="false" subject="false" message="true" receiver="false" notification="false" /></div><div style="display:none"><h1><span class="label label-default">WebEOC DSO Admin Features</span></h1><div class="form-group form-inline"><label for="socProcessed">Soc Processing Options:</label><space /><select name="socProcessed" class="form-control" id="socProcessed"><option>Not Processed</option><option>Processed</option></select></div><div class="form-group form-inline"><label class="control-label" for="hidden">Disable Online Editing:</label><space /><input name="dsoDisable" id="dsoDisable" type="checkbox" style="form-control input-sm" value="Yes" /></div><div class="form-group form-inline"><label class="control-label" for="hidden">Cancel:</label><space /><input name="hidden" id="hidden" type="checkbox" style="form-control input-sm" value="Yes" /></div></div></div><fieldset><div class="form-group form-inline"><input type="button" class="btn btn-info" id="notRealSave" value="Save" /><space /><cancelbutton id="cancelbtn" class="btn btn-danger" /><space /><pdflink type="button" class="btn btn-warning">PDF</pdflink><space /><span><a href="javascript:window.print()"><button type="button" class="btn btn-info btn">Print</button></a></span><div style="display:none" id="saveButton"><savebutton /></div><div style="border-style:none;background-color:white"><embedview style="display:nonea;border-style:none" width="0.1px" height="0.1px" id="auditEmbed" view="DSO Audit Input (DO NOT ASSIGN)" /></div></div></fieldset></form></div></body></html></view><view tablename="Core" name="API DSO Update" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="36639d6d-9ade-4e3e-8565-43ec29e4d6ce" assignable="1"><html><head><style type="text/css">
  html, body, form, a, abbr, acronym, address, blockquote, caption, div, dd, dl, dt, fieldset, h1, h2, h3, h4, h5, h6, img, label, legend, li, ol, p, pre, span, table, tbody, td, tfoot, th, thead, tr, ul{border:0;margin:0;padding:0;}
  body{background-color:#d1d2d4;color:#000;margin:1.0em;font:normal 0.9em arial;}
  div.container{border:solid 1px;border-color:#0069aa;}
  div.content{margin:1em;}
  table.input{border-collapse:collapse;width:100%;empty-cells:show;}
  table.input td, table.input th{padding:0.1em 0.3em 0.1em 0.3em;}
  table.input th{text-align:right;}
  h1.heading{font-weight:normal;font-size:1.75em;padding:0.1em 0.5em 0.1em 0.5em;margin:0;border:solid 1px;color:#fff;
  background: #0069aa url(../images/gradient_35.png) repeat-x scroll left top;
  ;border-bottom-color:#606265;border-left-color:#009EFF;border-right-color:#606265;border-top-color:#009EFF;}
  .buttons{text-align:left;margin:1.0em;}
  .buttons button, .buttons input[type=submit], .buttons input[type=button], .buttons input[type=reset]{margin:0 0.2em 0 0.2em;}
</style></head><body><div class="container agencytemplate_boardbackground"><form><div class="content"><table class="input agencytemplate_tableentry"><tbody><tr><td align="right" width="25%" selected="false">hidden</td><td selected="true"><input type="checkbox" name="hidden" value="Yes" /></td></tr></tbody></table></div></form></div></body></html></view><view tablename="Core" name="API DSO Input" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="ea5d1141-bd44-408c-8e42-71bcc45208a1" assignable="1"><html><head><title>DSO Form</title><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/jquery.min.js"></script><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.js"></script><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.js"></script><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.js"></script><style type="text/css"> 
        #container {  margin: 50px;
        }
        .form-group.required .control-label:after {
  content:"*";
  color:red;
}
    </style><script type="text/javascript">
        function removeOptions(obj) {
            if (obj == null) return;
            if (obj.options == null) return;
            obj.options.length = 0;
        }
        function autoSum() {
            var fields = ["totalsAffected", "totalsMinorDamage", "totalsMajorDamage", "totalsDestroyed", "totalsCovByInsurance", "numberTotal", "coveredTotal", "totalTotal", "sitesTotals", "repairCostTotals", "insuranceTotals", "sitesOtherTotal", "repairCostTotal", "insuranceCostTotal"];
            for (var i = 0; i &lt; fields.length; i++) {
                var objs = document.getElementsByClassName(fields[i]);
                for (var h = 0; h &lt; objs.length; h++) {
                    objs[h].idByClass = fields[i];
                    objs[h].onblur = function () {

                        var t = 0;
                        var a = document.getElementsByClassName(this.idByClass);
                        for (var b = 0; b &lt; a.length; b++) {
                            if (a[b].value != '') {
                                t += parseFloat(a[b].value)
                            }
                        }
                        document.getElementById(this.idByClass).value = t.toFixed(2);;
                    }
                }
            }
        }
        function commandInfoWindow(clickedId, title, message) {
            $('#' + clickedId).click(function () {
                BootstrapDialog.show({
                    title: title,
                    message: function (dialog) {
                        var $content = $(message);
                        return $content;
                    },

                });
            })

        }

        function addOption(select, optionTxt, selected) {
            var option = document.createElement("option");
            option.text = optionTxt;
            option.id = optionTxt;
            option.selected = selected;
            try {
                select.add(option, null);
            }
            catch (ex) {
                select.add(option);
            }
        }
        var cityMatrix = [["Hill", "Abbott"], ["Hale", "Abernathy"], ["Lubbock", "Abernathy"], ["Jones", "Abilene"], ["Taylor", "Abilene"], ["Dawson", "Ackerly"], ["Martin", "Ackerly"], ["Collin", "Addison"], ["Dallas", "Addison"], ["Oldham", "Adrian"], ["Nueces", "Agua Dulce"], ["Hidalgo", "Alamo"], ["Bexar", "Alamo Heights"], ["Wood", "Alba"], ["Rains", "Alba"], ["Shackelford", "Albany"], ["Parker", "Aledo"], ["Jim Wells", "Alice"], ["Collin", "Allen"], ["Ellis", "Alma"], ["Brewster", "Alpine"], ["Cherokee", "Alto"], ["Hidalgo", "Alton"], ["Johnson", "Alvarado"], ["Brazoria", "Alvin"], ["Galveston", "Alvin"], ["Wise", "Alvord"], ["Potter", "Amarillo"], ["Randall", "Amarillo"], ["Liberty", "Ames"], ["Lamb", "Amherst"], ["Chambers", "Anahuac"], ["Grimes", "Anderson"], ["Andrews", "Andrews"], ["Brazoria", "Angleton"], ["Navarro", "Angus"], ["Collin", "Anna"], ["Parker", "Annetta"], ["Parker", "Annetta North"], ["Parker", "Annetta South"], ["Red River", "Annona"], ["Jones", "Anson"], ["El Paso", "Anthony"], ["Hockley", "Anton"], ["Nacogdoches", "Appleby"], ["Hill", "Aquilla"], ["Aransas", "Aransas Pass"], ["San Patricio", "Aransas Pass"], ["Nueces", "Aransas Pass"], ["Archer", "Archer City"], ["Fort Bend", "Arcola"], ["Denton", "Argyle"], ["Tarrant", "Arlington"], ["Smith", "Arp"], ["Dimmit", "Asherton"], ["Stonewall", "Aspermont"], ["Henderson", "Athens"], ["Cass", "Atlanta"], ["Denton", "Aubrey"], ["Wise", "Aurora"], ["Williamson", "Austin"], ["Travis", "Austin"], ["Hays", "Austin"], ["Refugio", "Austwell"], ["Red River", "Avery"], ["Cass", "Avinger"], ["Parker", "Azle"], ["Tarrant", "Azle"], ["Fannin", "Bailey"], ["Brazoria", "Bailey's Prairie"], ["Callahan", "Baird"], ["Dallas", "Balch Springs"], ["Bexar", "Balcones Heights"], ["Runnels", "Ballinger"], ["Reeves", "Balmorhea"], ["Bandera", "Bandera"], ["Brown", "Bangs"], ["Ellis", "Bardwell"], ["Navarro", "Barry"], ["Ward", "Barstow"], ["Williamson", "Bartlett"], ["Bell", "Bartlett"], ["Denton", "Bartonville"], ["Bastrop", "Bastrop"], ["Matagorda", "Bay City"], ["Galveston", "Bayou Vista"], ["Refugio", "Bayside"], ["Harris", "Baytown"], ["Chambers", "Baytown"], ["Cameron", "Bayview"], ["Chambers", "Beach City"], ["Hays", "Bear Creek"], ["Fort Bend", "Beasley"], ["Jefferson", "Beaumont"], ["Hardin", "Beaumont"], ["Orange", "Beaumont"], ["Panola", "Beckville"], ["Tarrant", "Bedford"], ["Grimes", "Bedias"], ["Travis", "Bee Cave"], ["Bee", "Beeville"], ["Harris", "Bellaire"], ["Clay", "Bellevue"], ["McLennan", "Bellmead"], ["Grayson", "Bells"], ["Austin", "Bellville"], ["Bell", "Belton"], ["Duval", "Benavides"], ["Tarrant", "Benbrook"], ["Knox", "Benjamin"], ["Henderson", "Berryville"], ["Burnet", "Bertram"], ["McLennan", "Beverly Hills"], ["Jefferson", "Bevil Oaks"], ["Hardin", "Bevil Oaks"], ["Reagan", "Big Lake"], ["Upshur", "Big Sandy"], ["Howard", "Big Spring"], ["Dimmit", "Big Wells"], ["Nueces", "Bishop"], ["Potter", "Bishop Hills"], ["Coke", "Blackwell"], ["Nolan", "Blackwell"], ["Blanco", "Blanco"], ["Brown", "Blanket"], ["Cass", "Bloomburg"], ["Navarro", "Blooming Grove"], ["Lamar", "Blossom"], ["Tarrant", "Blue Mound"], ["Collin", "Blue Ridge"], ["Hill", "Blum"], ["Kendall", "Boerne"], ["Red River", "Bogata"], ["Fannin", "Bonham"], ["Brazoria", "Bonney"], ["Ochiltree", "Booker"], ["Lipscomb", "Booker"], ["Hutchinson", "Borger"], ["Parmer", "Bovina"], ["Montague", "Bowie"], ["Wise", "Boyd"], ["Kinney", "Brackettville"], ["McCulloch", "Brady"], ["Brazoria", "Brazoria"], ["Hood", "Brazos Bend"], ["Austin", "Brazos Country"], ["Stephens", "Breckenridge"], ["Robertson", "Bremond"], ["Washington", "Brenham"], ["Travis", "Briarcliff"], ["Johnson", "Briaroaks"], ["Orange", "Bridge City"], ["Wise", "Bridgeport"], ["San Augustine", "Broaddus"], ["Coke", "Bronte"], ["Waller", "Brookshire"], ["Harris", "Brookside Village"], ["Brazoria", "Brookside Village"], ["Jasper", "Browndell"], ["Terry", "Brownfield"], ["Henderson", "Brownsboro"], ["Cameron", "Brownsville"], ["Brown", "Brownwood"], ["McLennan", "Bruceville-Eddy"], ["Falls", "Bruceville-Eddy"], ["Brazos", "Bryan"], ["Jack", "Bryson"], ["Milam", "Buckholts"], ["Hays", "Buda"], ["Leon", "Buffalo"], ["Taylor", "Buffalo Gap"], ["Lubbock", "Buffalo Springs"], ["Smith", "Bullard"], ["Cherokee", "Bullard"], ["Comal", "Bulverde"], ["Harris", "Bunker Hill Village"], ["Wichita", "Burkburnett"], ["Angelina", "Burke"], ["Tarrant", "Burleson"], ["Johnson", "Burleson"], ["Burnet", "Burnet"], ["Washington", "Burton"], ["Clay", "Byers"], ["Hill", "Bynum"], ["Sherman", "Cactus"], ["Moore", "Cactus"], ["Hunt", "Caddo Mills"], ["Burleson", "Caldwell"], ["Cooke", "Callisburg"], ["Robertson", "Calvert"], ["Milam", "Cameron"], ["Real", "Camp Wood"], ["Hunt", "Campbell"], ["Hemphill", "Canadian"], ["Henderson", "Caney City"], ["Van Zandt", "Canton"], ["Randall", "Canyon"], ["Eastland", "Carbon"], ["Hill", "Carl's Corner"], ["Washington", "Carmine"], ["Fayette", "Carmine"], ["Dimmit", "Carrizo Springs"], ["Denton", "Carrollton"], ["Collin", "Carrollton"], ["Dallas", "Carrollton"], ["Panola", "Carthage"], ["Wichita", "Cashion"], ["Bexar", "Castle Hills"], ["Medina", "Castroville"], ["Dallas", "Cedar Hill"], ["Ellis", "Cedar Hill"], ["Williamson", "Cedar Park"], ["Travis", "Cedar Park"], ["Hunt", "Celeste"], ["Denton", "Celina"], ["Collin", "Celina"], ["Grayson", "Celina"], ["Shelby", "Center"], ["Leon", "Centerville"], ["Henderson", "Chandler"], ["Hartley", "Channing"], ["Atascosa", "Charlotte"], ["Tyler", "Chester"], ["Wise", "Chico"], ["Childress", "Childress"], ["Hardeman", "Chillicothe"], ["Jefferson", "China"], ["Bexar", "China Grove"], ["Nacogdoches", "Chireno"], ["Atascosa", "Christine"], ["Guadalupe", "Cibolo"], ["Bexar", "Cibolo"], ["Eastland", "Cisco"], ["Donley", "Clarendon"], ["Red River", "Clarksville"], ["Upshur", "Clarksville City"], ["Gregg", "Clarksville City"], ["Armstrong", "Claude"], ["Galveston", "Clear Lake Shores"], ["Johnson", "Cleburne"], ["Liberty", "Cleveland"], ["Bosque", "Clifton"], ["El Paso", "Clint"], ["Brazoria", "Clute"], ["Callahan", "Clyde"], ["Howard", "Coahoma"], ["Dallas", "Cockrell Hill"], ["Henderson", "Coffee City"], ["San Jacinto", "Coldspring"], ["Coleman", "Coleman"], ["Brazos", "College Station"], ["Tarrant", "Colleyville"], ["Grayson", "Collinsville"], ["Tyler", "Colmesneil"], ["Mitchell", "Colorado City"], ["Colorado", "Columbus"], ["Comanche", "Comanche"], ["Cameron", "Combes"], ["Dallas", "Combine"], ["Kaufman", "Combine"], ["Hunt", "Commerce"], ["Hopkins", "Como"], ["Montgomery", "Conroe"], ["Bexar", "Converse"], ["Parker", "Cool"], ["Limestone", "Coolidge"], ["Delta", "Cooper"], ["Denton", "Coppell"], ["Dallas", "Coppell"], ["Tarrant", "Coppell"], ["Denton", "Copper Canyon"], ["Coryell", "Copperas Cove"], ["Lampasas", "Copperas Cove"], ["Bell", "Copperas Cove"], ["Denton", "Corinth"], ["Aransas", "Corpus Christi"], ["San Patricio", "Corpus Christi"], ["Nueces", "Corpus Christi"], ["Kleberg", "Corpus Christi"], ["Denton", "Corral City"], ["Polk", "Corrigan"], ["Navarro", "Corsicana"], ["Kaufman", "Cottonwood"], ["Burnet", "Cottonwood Shores"], ["LaSalle", "Cotulla"], ["Chambers", "Cove"], ["Hill", "Covington"], ["Kaufman", "Crandall"], ["Crane", "Crane"], ["Bosque", "Cranfills Gap"], ["McLennan", "Crawford"], ["Travis", "Creedmoor"], ["Hays", "Creedmoor"], ["Parker", "Cresson"], ["Hood", "Cresson"], ["Johnson", "Cresson"], ["Houston", "Crockett"], ["Crosby", "Crosbyton"], ["Callahan", "Cross Plains"], ["Denton", "Cross Roads"], ["Johnson", "Cross Timber"], ["Foard", "Crowell"], ["Tarrant", "Crowley"], ["Johnson", "Crowley"], ["Zavala", "Crystal City"], ["Dewitt", "Cuero"], ["Hopkins", "Cumby"], ["Cherokee", "Cuney"], ["Anderson", "Cuney"], ["Nacogdoches", "Cushing"], ["Montgomery", "Cut and Shoot"], ["Morris", "Daingerfield"], ["Liberty", "Daisetta"], ["Dallam", "Dalhart"], ["Hartley", "Dalhart"], ["Denton", "Dallas"], ["Collin", "Dallas"], ["Rockwall", "Dallas"], ["Dallas", "Dallas"], ["Kaufman", "Dallas"], ["Tarrant", "Dalworthington Gardens"], ["Brazoria", "Danbury"], ["Lipscomb", "Darrouzett"], ["Navarro", "Dawson"], ["Liberty", "Dayton"], ["Liberty", "Dayton Lakes"], ["Comanche", "De Leon"], ["Clay", "Dean"], ["Wise", "Decatur"], ["Hood", "DeCordova"], ["Harris", "Deer Park"], ["Bowie", "DeKalb"], ["Val Verde", "Del Rio"], ["Hudspeth", "Dell City"], ["Grayson", "Denison"], ["Denton", "Denton"], ["Gaines", "Denver City"], ["Yoakum", "Denver City"], ["Red River", "Deport"], ["Lamar", "Deport"], ["Dallas", "DeSoto"], ["Red River", "Detroit"], ["Liberty", "Devers"], ["Medina", "Devine"], ["Angelina", "Diboll"], ["Dickens", "Dickens"], ["Galveston", "Dickinson"], ["Frio", "Dilley"], ["Castro", "Dimmitt"], ["Denton", "Dish"], ["Fannin", "Dodd City"], ["Collingsworth", "Dodson"], ["Cass", "Domino"], ["Hidalgo", "Donna"], ["Grayson", "Dorchester"], ["Denton", "Double Oak"], ["Cass", "Douglassville"], ["Hays", "Dripping Springs"], ["Nueces", "Driscoll"], ["Erath", "Dublin"], ["Moore", "Dumas"], ["Dallas", "Duncanville"], ["Colorado", "Eagle Lake"], ["Maverick", "Eagle Pass"], ["Brown", "Early"], ["Lamb", "Earth"], ["Fort Bend", "East Bernard"], ["Wharton", "East Bernard"], ["Upshur", "East Mountain"], ["Gregg", "East Mountain"], ["Rains", "East Tawakoni"], ["Eastland", "Eastland"], ["Gregg", "Easton"], ["Rusk", "Easton"], ["Fannin", "Ector"], ["Hidalgo", "Edcouch"], ["Concho", "Eden"], ["Tarrant", "Edgecliff"], ["Van Zandt", "Edgewood"], ["Hidalgo", "Edinburg"], ["Hale", "Edmonson"], ["Jackson", "Edna"], ["Van Zandt", "Edom"], ["Wharton", "El Campo"], ["Webb", "El Cenizo"], ["Harris", "El Lago"], ["El Paso", "El Paso"], ["Schleicher", "Eldorado"], ["Wichita", "Electra"], ["Travis", "Elgin"], ["Bastrop", "Elgin"], ["Anderson", "Elkhart"], ["Bexar", "Elmendorf"], ["Wilson", "Elmendorf"], ["Hidalgo", "Elsa"], ["Navarro", "Emhouse"], ["Rains", "Emory"], ["Henderson", "Enchanted Oaks"], ["LaSalle", "Encinal"], ["Kaufman", "Ennis"], ["Ellis", "Ennis"], ["Starr", "Escobares"], ["Hall", "Estelline"], ["Dallas", "Euless"], ["Tarrant", "Euless"], ["Navarro", "Eureka"], ["Henderson", "Eustace"], ["Hamilton", "Evant"], ["Coryell", "Evant"], ["Tarrant", "Everman"], ["Kendall", "Fair Oaks Ranch"], ["Comal", "Fair Oaks Ranch"], ["Bexar", "Fair Oaks Ranch"], ["Fort Bend", "Fairchilds"], ["Freestone", "Fairfield"], ["Collin", "Fairview"], ["Brooks", "Falfurrias"], ["Karnes", "Falls City"], ["Dallas", "Farmers Branch"], ["Collin", "Farmersville"], ["Parmer", "Farwell"], ["Rockwall", "Fate"], ["Fayette", "Fayetteville"], ["Dallas", "Ferris"], ["Ellis", "Ferris"], ["Fayette", "Flatonia"], ["Williamson", "Florence"], ["Wilson", "Floresville"], ["Denton", "Flower Mound"], ["Tarrant", "Flower Mound"], ["Floyd", "Floydada"], ["Lipscomb", "Follett"], ["Tarrant", "Forest Hill"], ["Kaufman", "Forney"], ["Howard", "Forsan"], ["Pecos", "Fort Stockton"], ["Wise", "Fort Worth"], ["Denton", "Fort Worth"], ["Parker", "Fort Worth"], ["Dallas", "Fort Worth"], ["Tarrant", "Fort Worth"], ["Johnson", "Fort Worth"], ["Robertson", "Franklin"], ["Henderson", "Frankston"], ["Anderson", "Frankston"], ["Gillespie", "Fredericksburg"], ["Brazoria", "Freeport"], ["Duval", "Freer"], ["Harris", "Friendswood"], ["Brazoria", "Friendswood"], ["Galveston", "Friendswood"], ["Parmer", "Friona"], ["Denton", "Frisco"], ["Collin", "Frisco"], ["Moore", "Fritch"], ["Hutchinson", "Fritch"], ["Navarro", "Frost"], ["Van Zandt", "Fruitvale"], ["Fort Bend", "Fulshear"], ["Aransas", "Fulton"], ["Cooke", "Gainesville"], ["Harris", "Galena Park"], ["Cherokee", "Gallatin"], ["Galveston", "Galveston"], ["Jackson", "Ganado"], ["Comal", "Garden Ridge"], ["Collin", "Garland"], ["Dallas", "Garland"], ["Ellis", "Garrett"], ["Nacogdoches", "Garrison"], ["Panola", "Gary"], ["Coryell", "Gatesville"], ["Live Oak", "George West"], ["Williamson", "Georgetown"], ["McLennan", "Gholson"], ["Lee", "Giddings"], ["Upshur", "Gilmer"], ["Upshur", "Gladewater"], ["Gregg", "Gladewater"], ["Somervell", "Glen Rose"], ["Dallas", "Glenn Heights"], ["Ellis", "Glenn Heights"], ["Johnson", "Godley"], ["Ector", "Goldsmith"], ["Mills", "Goldthwaite"], ["Goliad", "Goliad"], ["McLennan", "Golinda"], ["Falls", "Golinda"], ["Gonzales", "Gonzales"], ["Navarro", "Goodlow"], ["Polk", "Goodrich"], ["Palo Pinto", "Gordon"], ["Knox", "Goree"], ["Eastland", "Gorman"], ["Comanche", "Gorman"], ["Palo Pinto", "Graford"], ["Young", "Graham"], ["Hood", "Granbury"], ["Dallas", "Grand Prairie"], ["Tarrant", "Grand Prairie"], ["Ellis", "Grand Prairie"], ["Van Zandt", "Grand Saline"], ["Ward", "Grandfalls"], ["Johnson", "Grandview"], ["Williamson", "Granger"], ["Burnet", "Granite Shoals"], ["Hidalgo", "Granjeno"], ["Houston", "Grapeland"], ["Denton", "Grapevine"], ["Dallas", "Grapevine"], ["Tarrant", "Grapevine"], ["Kaufman", "Grays Prairie"], ["Hunt", "Greenville"], ["San Patricio", "Gregory"], ["Bexar", "Grey Forest"], ["Limestone", "Groesbeck"], ["Carson", "Groom"], ["Jefferson", "Groves"], ["Trinity", "Groveton"], ["Hansford", "Gruver"], ["Henderson", "Gun Barrel City"], ["Grayson", "Gunter"], ["Comanche", "Gustine"], ["Denton", "Hackberry"], ["Hale", "Hale Center"], ["Lavaca", "Hallettsville"], ["McLennan", "Hallsburg"], ["Harrison", "Hallsville"], ["Tarrant", "Haltom City"], ["Hamilton", "Hamilton"], ["Fisher", "Hamlin"], ["Jones", "Hamlin"], ["Randall", "Happy"], ["Swisher", "Happy"], ["Liberty", "Hardin"], ["Bell", "Harker Heights"], ["Cameron", "Harlingen"], ["Castro", "Hart"], ["Haskell", "Haskell"], ["Denton", "Haslet"], ["Tarrant", "Haslet"], ["Hunt", "Hawk Cove"], ["Wood", "Hawkins"], ["Jones", "Hawley"], ["Hays", "Hays"], ["Robertson", "Hearne"], ["Rockwall", "Heath"], ["Kaufman", "Heath"], ["Denton", "Hebron"], ["Collin", "Hebron"], ["Donley", "Hedley"], ["Harris", "Hedwig Village"], ["Bexar", "Helotes"], ["Sabine", "Hemphill"], ["Waller", "Hempstead"], ["Rusk", "Henderson"], ["Clay", "Henrietta"], ["Deaf Smith", "Hereford"], ["McLennan", "Hewitt"], ["Denton", "Hickory Creek"], ["Hamilton", "Hico"], ["Hidalgo", "Hidalgo"], ["Smith", "Hideaway"], ["Lipscomb", "Higgins"], ["Burnet", "Highland Haven"], ["Dallas", "Highland Park"], ["Denton", "Highland Village"], ["Bexar", "Hill Country Village"], ["Brazoria", "Hillcrest Village"], ["Hill", "Hillsboro"], ["Harris", "Hilshire Village"], ["Brazoria", "Hitchcock"], ["Galveston", "Hitchcock"], ["Brazoria", "Holiday Lakes"], ["Bell", "Holland"], ["Archer", "Holliday"], ["Bexar", "Hollywood Park"], ["Medina", "Hondo"], ["Fannin", "Honey Grove"], ["Bowie", "Hooks"], ["El Paso", "Horizon City"], ["Burnet", "Horseshoe Bay"], ["Llano", "Horseshoe Bay"], ["Montgomery", "Houston"], ["Harris", "Houston"], ["Fort Bend", "Houston"], ["Brazoria", "Houston"], ["Donley", "Howardwick"], ["Grayson", "Howe"], ["Hill", "Hubbard"], ["Angelina", "Hudson"], ["Parker", "Hudson Oaks"], ["Morris", "Hughes Springs"], ["Cass", "Hughes Springs"], ["Harris", "Humble"], ["Harris", "Hunters Creek Village"], ["Angelina", "Huntington"], ["Walker", "Huntsville"], ["Tarrant", "Hurst"], ["Dallas", "Hutchins"], ["Williamson", "Hutto"], ["Shelby", "Huxley"], ["Lubbock", "Idalou"], ["Taylor", "Impact"], ["Cameron", "Indian Lake"], ["Austin", "Industry"], ["San Patricio", "Ingleside"], ["San Patricio", "Ingleside On The Bay"], ["Kerr", "Ingram"], ["Grimes", "Iola"], ["Brazoria", "Iowa Colony"], ["Wichita", "Iowa Park"], ["Pecos", "Iraan"], ["Bosque", "Iredell"], ["Dallas", "Irving"], ["Tarrant", "Irving"], ["Ellis", "Italy"], ["Hill", "Itasca"], ["Tyler", "Ivanhoe"], ["Harris", "Jacinto City"], ["Jack", "Jacksboro"], ["Cherokee", "Jacksonville"], ["Galveston", "Jamaica Beach"], ["Williamson", "Jarrell"], ["Jasper", "Jasper"], ["Kent", "Jayton"], ["Marion", "Jefferson"], ["Harris", "Jersey Village"], ["Leon", "Jewett"], ["Shelby", "Joaquin"], ["Blanco", "Johnson City"], ["Clay", "Jolly"], ["Brazoria", "Jones Creek"], ["Travis", "Jonestown"], ["Hunt", "Josephine"], ["Collin", "Josephine"], ["Johnson", "Joshua"], ["Atascosa", "Jourdanton"], ["Kimble", "Junction"], ["Denton", "Justin"], ["Karnes", "Karnes City"], ["Waller", "Katy"], ["Harris", "Katy"], ["Fort Bend", "Katy"], ["Kaufman", "Kaufman"], ["Johnson", "Keene"], ["Tarrant", "Keller"], ["Galveston", "Kemah"], ["Kaufman", "Kemp"], ["Lampasas", "Kempner"], ["Fort Bend", "Kendleton"], ["Karnes", "Kenedy"], ["Liberty", "Kenefick"], ["Houston", "Kennard"], ["Tarrant", "Kennedale"], ["Henderson", "Kerens"], ["Navarro", "Kerens"], ["Winkler", "Kermit"], ["Kerr", "Kerrville"], ["Gregg", "Kilgore"], ["Rusk", "Kilgore"], ["Coryell", "Killeen"], ["Bell", "Killeen"], ["Kleberg", "Kingsville"], ["Bexar", "Kirby"], ["Jasper", "Kirbyville"], ["Freestone", "Kirvin"], ["Grayson", "Knollwood"], ["Knox", "Knox City"], ["Limestone", "Kosse"], ["Hardin", "Kountze"], ["Swisher", "Kress"], ["Denton", "Krugerville"], ["Denton", "Krum"], ["Brazos", "Kurten"], ["Hays", "Kyle"], ["Cameron", "La Feria"], ["Fayette", "La Grange"], ["Starr", "La Grulla"], ["Hidalgo", "La Joya"], ["Galveston", "La Marque"], ["Harris", "La Porte"], ["Wilson", "La Vernia"], ["Hidalgo", "La Villa"], ["Jackson", "La Ward"], ["Medina", "LaCoste"], ["McLennan", "Lacy-Lakeview"], ["Fannin", "Ladonia"], ["Travis", "Lago Vista"], ["Cameron", "Laguna Vista"], ["Wise", "Lake Bridgeport"], ["San Patricio", "Lake City"], ["Denton", "Lake Dallas"], ["Brazoria", "Lake Jackson"], ["Randall", "Lake Tanglewood"], ["Tarrant", "Lake Worth"], ["Gregg", "Lakeport"], ["San Patricio", "Lakeside (San Patricio)"], ["Tarrant", "Lakeside (Tarrant)"], ["Wichita", "Lakeside City"], ["Archer", "Lakeside City"], ["Hall", "Lakeview"], ["Travis", "Lakeway"], ["Denton", "Lakewood Village"], ["Dawson", "Lamesa"], ["Lampasas", "Lampasas"], ["Dallas", "Lancaster"], ["Ellis", "Lancaster"], ["Webb", "Laredo"], ["Houston", "Latexo"], ["Collin", "Lavon"], ["Taylor", "Lawn"], ["Harris", "League City"], ["Brazoria", "League City"], ["Galveston", "League City"], ["Real", "Leakey"], ["Williamson", "Leander"], ["Travis", "Leander"], ["Bowie", "Leary"], ["Gray", "Lefors"], ["Bexar", "Leon Valley"], ["Leon", "Leona"], ["Fannin", "Leonard"], ["McLennan", "Leroy"], ["Hockley", "Levelland"], ["Denton", "Lewisville"], ["Lee", "Lexington"], ["Liberty", "Liberty"], ["Williamson", "Liberty Hill"], ["Denton", "Lincoln Park"], ["Smith", "Lindale"], ["Cass", "Linden"], ["Cooke", "Lindsay"], ["Hood", "Lipan"], ["Denton", "Little Elm"], ["Bell", "Little River Academy"], ["Lamb", "Littlefield"], ["Bexar", "Live Oak"], ["Brazoria", "Liverpool"], ["Polk", "Livingston"], ["Llano", "Llano"], ["Caldwell", "Lockhart"], ["Floyd", "Lockney"], ["Henderson", "Log Cabin"], ["Lampasas", "Lometa"], ["Hunt", "Lone Oak"], ["Morris", "Lone Star"], ["Harrison", "Longview"], ["Gregg", "Longview"], ["Mitchell", "Loraine"], ["McLennan", "Lorena"], ["Crosby", "Lorenzo"], ["Cameron", "Los Fresnos"], ["Cameron", "Los Indios"], ["Dawson", "Los Ybanez"], ["Falls", "Lott"], ["Houston", "Lovelady"], ["Collin", "Lowry Crossing"], ["Lubbock", "Lubbock"], ["Collin", "Lucas"], ["Jones", "Lueders"], ["Shackelford", "Lueders"], ["Angelina", "Lufkin"], ["Guadalupe", "Luling"], ["Caldwell", "Luling"], ["Hardin", "Lumberton"], ["Willacy", "Lyford"], ["Bexar", "Lytle"], ["Medina", "Lytle"], ["Atascosa", "Lytle"], ["Van Zandt", "Mabank"], ["Henderson", "Mabank"], ["Kaufman", "Mabank"], ["Madison", "Madisonville"], ["Montgomery", "Magnolia"], ["Henderson", "Malakoff"], ["Hill", "Malone"], ["Travis", "Manor"], ["Tarrant", "Mansfield"], ["Ellis", "Mansfield"], ["Johnson", "Mansfield"], ["Brazoria", "Manvel"], ["Burnet", "Marble Falls"], ["Presidio", "Marfa"], ["Cass", "Marietta"], ["Guadalupe", "Marion"], ["Falls", "Marlin"], ["Leon", "Marquez"], ["Harrison", "Marshall"], ["McLennan", "Mart"], ["Limestone", "Mart"], ["Guadalupe", "Martindale"], ["Caldwell", "Martindale"], ["Mason", "Mason"], ["Motley", "Matador"], ["San Patricio", "Mathis"], ["Bowie", "Maud"], ["Ellis", "Maypearl"], ["Hidalgo", "McAllen"], ["Upton", "McCamey"], ["Coryell", "McGregor"], ["McLennan", "McGregor"], ["Collin", "McKinney"], ["Gray", "McLean"], ["Rockwall", "McLendon-Chisholm"], ["Kaufman", "McLendon-Chisholm"], ["Terry", "Meadow"], ["Burnet", "Meadowlakes"], ["Harris", "Meadows Place"], ["Fort Bend", "Meadows Place"], ["Archer", "Megargel"], ["Collin", "Melissa"], ["McCulloch", "Melvin"], ["Hall", "Memphis"], ["Menard", "Menard"], ["Hidalgo", "Mercedes"], ["Bosque", "Meridian"], ["Taylor", "Merkel"], ["Hill", "Mertens"], ["Irion", "Mertzon"], ["Dallas", "Mesquite"], ["Kaufman", "Mesquite"], ["Limestone", "Mexia"], ["Roberts", "Miami"], ["Martin", "Midland"], ["Midland", "Midland"], ["Ellis", "Midlothian"], ["Madison", "Midway"], ["Milam", "Milano"], ["Navarro", "Mildred"], ["Runnels", "Miles"], ["Ellis", "Milford"], ["Titus", "Miller's Cove"], ["Parker", "Millsap"], ["Wood", "Mineola"], ["Palo Pinto", "Mineral Wells"], ["Parker", "Mineral Wells"], ["Palo Pinto", "Mingus"], ["Hidalgo", "Mission"], ["Harris", "Missouri City"], ["Fort Bend", "Missouri City"], ["Wheeler", "Mobeetie"], ["Rockwall", "Mobile City"], ["Winkler", "Monahans"], ["Ward", "Monahans"], ["Liberty", "Mont Belvieu"], ["Harris", "Mont Belvieu"], ["Chambers", "Mont Belvieu"], ["Montgomery", "Montgomery"], ["McLennan", "Moody"], ["Henderson", "Moore Station"], ["Shackelford", "Moran"], ["Bosque", "Morgan"], ["Harris", "Morgan's Point"], ["Bell", "Morgan's Point Resort"], ["Cochran", "Morton"], ["Lavaca", "Moulton"], ["Hill", "Mount Calm"], ["Rusk", "Mount Enterprise"], ["Titus", "Mount Pleasant"], ["Franklin", "Mount Vernon"], ["Hays", "Mountain City"], ["Cooke", "Muenster"], ["Bailey", "Muleshoe"], ["Mills", "Mullin"], ["Knox", "Munday"], ["Henderson", "Murchison"], ["Collin", "Murphy"], ["Navarro", "Mustang"], ["Travis", "Mustang Ridge"], ["Caldwell", "Mustang Ridge"], ["Nacogdoches", "Nacogdoches"], ["Morris", "Naples"], ["Bowie", "Nash"], ["Harris", "Nassau Bay"], ["Medina", "Natalia"], ["Navarro", "Navarro"], ["Brazos", "Navasota"], ["Grimes", "Navasota"], ["Castro", "Nazareth"], ["Jefferson", "Nederland"], ["Fort Bend", "Needville"], ["Harrison", "Nesbitt"], ["Collin", "Nevada"], ["Guadalupe", "New Berlin"], ["Bexar", "New Berlin"], ["Bowie", "New Boston"], ["Comal", "New Braunfels"], ["Guadalupe", "New Braunfels"], ["Smith", "New Chapel Hill"], ["Lubbock", "New Deal"], ["Wise", "New Fairview"], ["Lynn", "New Home"], ["Collin", "New Hope"], ["Rusk", "New London"], ["Cherokee", "New Summerfield"], ["Walker", "New Waverly"], ["Wise", "Newark"], ["Young", "Newcastle"], ["Newton", "Newton"], ["Hunt", "Neylandville"], ["Hays", "Niederwald"], ["Caldwell", "Niederwald"], ["Wilson", "Nixon"], ["Gonzales", "Nixon"], ["Montague", "Nocona"], ["Bell", "Nolanville"], ["Jefferson", "Nome"], ["Smith", "Noonday"], ["Dewitt", "Nordheim"], ["Leon", "Normangee"], ["Madison", "Normangee"], ["Liberty", "North Cleveland"], ["Tarrant", "North Richland Hills"], ["Denton", "Northlake"], ["Coleman", "Novice"], ["Kaufman", "Oak Grove"], ["Ellis", "Oak Leaf"], ["Denton", "Oak Point"], ["Cooke", "Oak Ridge (Cooke)"], ["Kaufman", "Oak Ridge (Kaufman)"], ["Montgomery", "Oak Ridge North"], ["Navarro", "Oak Valley"], ["Leon", "Oakwood"], ["Haskell", "O'Brien"], ["San Patricio", "Odem"], ["Ector", "Odessa"], ["Midland", "Odessa"], ["Dawson", "O'Donnell"], ["Lynn", "O'Donnell"], ["Coryell", "Oglesby"], ["Liberty", "Old River-Winfree"], ["Chambers", "Old River-Winfree"], ["Bexar", "Olmos Park"], ["Young", "Olney"], ["Lamb", "Olton"], ["Morris", "Omaha"], ["Polk", "Onalaska"], ["Hockley", "Opdyke West"], ["Orange", "Orange"], ["Jim Wells", "Orange Grove"], ["Fort Bend", "Orchard"], ["Upshur", "Ore City"], ["Marion", "Ore City"], ["Smith", "Overton"], ["Rusk", "Overton"], ["Dallas", "Ovilla"], ["Ellis", "Ovilla"], ["Brazoria", "Oyster Creek"], ["Cottle", "Paducah"], ["Concho", "Paint Rock"], ["Matagorda", "Palacios"], ["Anderson", "Palestine"], ["Randall", "Palisades"], ["Cameron", "Palm Valley"], ["Ellis", "Palmer"], ["Hidalgo", "Palmhurst"], ["Hidalgo", "Palmview"], ["Gray", "Pampa"], ["Carson", "Panhandle"], ["Montgomery", "Panorama Village"], ["Tarrant", "Pantego"], ["Wise", "Paradise"], ["Lamar", "Paris"], ["Collin", "Parker"], ["Harris", "Pasadena"], ["Waller", "Pattison"], ["Montgomery", "Patton Village"], ["Henderson", "Payne Springs"], ["Harris", "Pearland"], ["Fort Bend", "Pearland"], ["Brazoria", "Pearland"], ["Galveston", "Pearland"], ["Frio", "Pearsall"], ["Delta", "Pecan Gap"], ["Fannin", "Pecan Gap"], ["Ellis", "Pecan Hill"], ["Reeves", "Pecos"], ["Tarrant", "Pelican Bay"], ["Hill", "Penelope"], ["Hidalgo", "Penitas"], ["Ochiltree", "Perryton"], ["Hale", "Petersburg"], ["Clay", "Petrolia"], ["Nueces", "Petronila"], ["Williamson", "Pflugerville"], ["Travis", "Pflugerville"], ["Hidalgo", "Pharr"], ["Denton", "Pilot Point"], ["Collin", "Pilot Point"], ["Orange", "Pine Forest"], ["Waller", "Pine Island"], ["Orange", "Pinehurst"], ["Sabine", "Pineland"], ["Harris", "Piney Point Village"], ["Camp", "Pittsburg"], ["Yoakum", "Plains"], ["Hale", "Plainview"], ["Denton", "Plano"], ["Collin", "Plano"], ["Fort Bend", "Pleak"], ["Wichita", "Pleasant Valley"], ["Atascosa", "Pleasanton"], ["Montgomery", "Plum Grove"], ["Liberty", "Plum Grove"], ["Rains", "Point"], ["San Jacinto", "Point Blank"], ["Calhoun", "Point Comfort"], ["Travis", "Point Venture"], ["Denton", "Ponder"], ["Aransas", "Port Aransas"], ["Nueces", "Port Aransas"], ["Jefferson", "Port Arthur"], ["Orange", "Port Arthur"], ["Cameron", "Port Isabel"], ["Calhoun", "Port Lavaca"], ["Jefferson", "Port Neches"], ["San Patricio", "Portland"], ["Garza", "Post"], ["Kaufman", "Post Oak Bend"], ["Atascosa", "Poteet"], ["Wilson", "Poth"], ["Grayson", "Pottsboro"], ["Navarro", "Powell"], ["Henderson", "Poynor"], ["Waller", "Prairie View"], ["Jim Wells", "Premont"], ["Presidio", "Presidio"], ["Cameron", "Primera"], ["Collin", "Princeton"], ["Hidalgo", "Progreso"], ["Hidalgo", "Progreso Lakes"], ["Denton", "Prosper"], ["Collin", "Prosper"], ["Denton", "Providence Village"], ["Callahan", "Putnam"], ["Ward", "Pyote"], ["Hardeman", "Quanah"], ["Cass", "Queen City"], ["Hunt", "Quinlan"], ["Brazoria", "Quintana"], ["Briscoe", "Quitaque"], ["Wood", "Quitman"], ["Crosby", "Ralls"], ["Cameron", "Rancho Viejo"], ["Eastland", "Ranger"], ["Cameron", "Rangerville"], ["Upton", "Rankin"], ["Lubbock", "Ransom Canyon"], ["Fannin", "Ravenna"], ["Willacy", "Raymondville"], ["Bowie", "Red Lick"], ["Dallas", "Red Oak"], ["Ellis", "Red Oak"], ["Bowie", "Redwater"], ["Refugio", "Refugio"], ["Rusk", "Reklaw"], ["Cherokee", "Reklaw"], ["Lamar", "Reno (Lamar)"], ["Parker", "Reno (Parker)"], ["Tarrant", "Reno (Parker)"], ["Navarro", "Retreat"], ["Wise", "Rhome"], ["Ellis", "Rice"], ["Navarro", "Rice"], ["Collin", "Richardson"], ["Dallas", "Richardson"], ["Navarro", "Richland"], ["Tarrant", "Richland Hills"], ["San Saba", "Richland Springs"], ["Fort Bend", "Richmond"], ["Brazoria", "Richwood"], ["McLennan", "Riesel"], ["Webb", "Rio Bravo"], ["Starr", "Rio Grande City"], ["Cameron", "Rio Hondo"], ["Johnson", "Rio Vista"], ["Eastland", "Rising Star"], ["Tarrant", "River Oaks"], ["Walker", "Riverside"], ["Denton", "Roanoke"], ["Motley", "Roaring Springs"], ["Coke", "Robert Lee"], ["McLennan", "Robinson"], ["Nueces", "Robstown"], ["Fisher", "Roby"], ["Haskell", "Rochester"], ["Milam", "Rockdale"], ["Aransas", "Rockport"], ["Edwards", "Rocksprings"], ["Collin", "Rockwall"], ["Rockwall", "Rockwall"], ["Camp", "Rocky Mound"], ["Bell", "Rogers"], ["Travis", "Rollingwood"], ["Starr", "Roma"], ["Montgomery", "Roman Forest"], ["Hockley", "Ropesville"], ["Nolan", "Roscoe"], ["Orange", "Rose City"], ["Jefferson", "Rose Hill Acres"], ["Hardin", "Rose Hill Acres"], ["Falls", "Rosebud"], ["Fort Bend", "Rosenberg"], ["McLennan", "Ross"], ["Kaufman", "Rosser"], ["Fisher", "Rotan"], ["Blanco", "Round Mountain"], ["Williamson", "Round Rock"], ["Travis", "Round Rock"], ["Fayette", "Round Top"], ["Rockwall", "Rowlett"], ["Dallas", "Rowlett"], ["Lamar", "Roxton"], ["Hunt", "Royse City"], ["Collin", "Royse City"], ["Rockwall", "Royse City"], ["Haskell", "Rule"], ["Wise", "Runaway Bay"], ["Karnes", "Runge"], ["Cherokee", "Rusk"], ["Uvalde", "Sabinal"], ["Collin", "Sachse"], ["Dallas", "Sachse"], ["Grayson", "Sadler"], ["Tarrant", "Saginaw"], ["Bexar", "Saint Hedwig"], ["Montague", "Saint Jo"], ["Collin", "Saint Paul"], ["Bell", "Salado"], ["Tom Green", "San Angelo"], ["Comal", "San Antonio"], ["Bexar", "San Antonio"], ["Medina", "San Antonio"], ["San Augustine", "San Augustine"], ["Cameron", "San Benito"], ["Jim Wells", "San Diego"], ["Duval", "San Diego"], ["Austin", "San Felipe"], ["Hidalgo", "San Juan"], ["Travis", "San Leanna"], ["Guadalupe", "San Marcos"], ["Hays", "San Marcos"], ["Caldwell", "San Marcos"], ["San Patricio", "San Patricio"], ["Nueces", "San Patricio"], ["Willacy", "San Perlita"], ["San Saba", "San Saba"], ["Parker", "Sanctuary"], ["Brazoria", "Sandy Point"], ["Hutchinson", "Sanford"], ["Denton", "Sanger"], ["Cooke", "Sanger"], ["Tarrant", "Sansom Park"], ["Coleman", "Santa Anna"], ["Guadalupe", "Santa Clara"], ["Galveston", "Santa Fe"], ["Cameron", "Santa Rosa"], ["Fannin", "Savoy"], ["Comal", "Schertz"], ["Guadalupe", "Schertz"], ["Bexar", "Schertz"], ["Fayette", "Schulenburg"], ["Clay", "Scotland"], ["Archer", "Scotland"], ["Harrison", "Scottsville"], ["Kaufman", "Scurry"], ["Harris", "Seabrook"], ["Calhoun", "Seadrift"], ["Dallas", "Seagoville"], ["Kaufman", "Seagoville"], ["Gaines", "Seagraves"], ["Austin", "Sealy"], ["Guadalupe", "Seguin"], ["Comal", "Selma"], ["Guadalupe", "Selma"], ["Bexar", "Selma"], ["Gaines", "Seminole"], ["Polk", "Seven Oaks"], ["Henderson", "Seven Points"], ["Baylor", "Seymour"], ["Denton", "Shady Shores"], ["Lubbock", "Shallowater"], ["Wheeler", "Shamrock"], ["Bexar", "Shavano Park"], ["Montgomery", "Shenandoah"], ["San Jacinto", "Shepherd"], ["Grayson", "Sherman"], ["Lavaca", "Shiner"], ["Harris", "Shoreacres"], ["Hardin", "Silsbee"], ["Briscoe", "Silverton"], ["Fort Bend", "Simonton"], ["San Patricio", "Sinton"], ["Carson", "Skellytown"], ["Lubbock", "Slaton"], ["Gonzales", "Smiley"], ["Bastrop", "Smithville"], ["Hockley", "Smyer"], ["Burleson", "Snook"], ["Scurry", "Snyder"], ["El Paso", "Socorro"], ["Bexar", "Somerset"], ["Burleson", "Somerville"], ["Sutton", "Sonora"], ["Hardin", "Sour Lake"], ["Harris", "South Houston"], ["Coryell", "South Mountain"], ["Cameron", "South Padre Island"], ["Denton", "Southlake"], ["Tarrant", "Southlake"], ["Grayson", "Southmayd"], ["Harris", "Southside Place"], ["Hansford", "Spearman"], ["Montgomery", "Splendora"], ["Kinney", "Spofford"], ["Harris", "Spring Valley"], ["Lamb", "Springlake"], ["Parker", "Springtown"], ["Dickens", "Spur"], ["Harris", "Stafford"], ["Fort Bend", "Stafford"], ["Montgomery", "Stagecoach"], ["Haskell", "Stamford"], ["Jones", "Stamford"], ["Martin", "Stanton"], ["Guadalupe", "Staples"], ["Caldwell", "Staples"], ["Henderson", "Star Harbor"], ["Erath", "Stephenville"], ["Sterling", "Sterling City"], ["Hutchinson", "Stinnett"], ["Wilson", "Stockdale"], ["Sherman", "Stratford"], ["Palo Pinto", "Strawn"], ["Freestone", "Streetman"], ["Navarro", "Streetman"], ["Lamb", "Sudan"], ["Fort Bend", "Sugar Land"], ["Hidalgo", "Sullivan City"], ["Hopkins", "Sulphur Springs"], ["Lamar", "Sun Valley"], ["Hockley", "Sundown"], ["Dallas", "Sunnyvale"], ["Kaufman", "Sunnyvale"], ["Moore", "Sunray"], ["Burnet", "Sunrise Beach Village"], ["Llano", "Sunrise Beach Village"], ["Travis", "Sunset Valley"], ["Brazoria", "Surfside Beach"], ["Brazoria", "Sweeny"], ["Nolan", "Sweetwater"], ["San Patricio", "Taft"], ["Lynn", "Tahoka"], ["Titus", "Talco"], ["Kaufman", "Talty"], ["Rusk", "Tatum"], ["Panola", "Tatum"], ["Williamson", "Taylor"], ["Harris", "Taylor Lake Village"], ["Jefferson", "Taylor Landing"], ["Freestone", "Teague"], ["Limestone", "Tehuacana"], ["Bell", "Temple"], ["Shelby", "Tenaha"], ["Kaufman", "Terrell"], ["Bexar", "Terrell Hills"], ["Bowie", "Texarkana"], ["Chambers", "Texas City"], ["Galveston", "Texas City"], ["Sherman", "Texhoma"], ["Dallam", "Texline"], ["Denton", "The Colony"], ["Fort Bend", "Thompsons"], ["Williamson", "Thorndale"], ["Milam", "Thorndale"], ["Limestone", "Thornton"], ["Ward", "Thorntonville"], ["Williamson", "Thrall"], ["Live Oak", "Three Rivers"], ["Throckmorton", "Throckmorton"], ["Galveston", "Tiki Island"], ["Randall", "Timbercreek Canyon"], ["Shelby", "Timpson"], ["Grayson", "Tioga"], ["Hopkins", "Tira"], ["Lamar", "Toco"], ["Grimes", "Todd Mission"], ["Hood", "Tolar"], ["Grayson", "Tom Bean"], ["Montgomery", "Tomball"], ["Harris", "Tomball"], ["Henderson", "Tool"], ["Reeves", "Toyah"], ["Taylor", "Trent"], ["Grayson", "Trenton"], ["Fannin", "Trenton"], ["Henderson", "Trinidad"], ["Navarro", "Trinidad"], ["Trinity", "Trinity"], ["Denton", "Trophy Club"], ["Tarrant", "Trophy Club"], ["Smith", "Troup"], ["Cherokee", "Troup"], ["Bell", "Troy"], ["Swisher", "Tulia"], ["Hall", "Turkey"], ["Taylor", "Tuscola"], ["Taylor", "Tye"], ["Smith", "Tyler"], ["Hays", "Uhland"], ["Caldwell", "Uhland"], ["Harrison", "Uncertain"], ["Upshur", "Union Grove"], ["Hunt", "Union Valley"], ["Guadalupe", "Universal City"], ["Bexar", "Universal City"], ["Dallas", "University Park"], ["Uvalde", "Uvalde"], ["Jeff Davis", "Valentine"], ["Bosque", "Valley Mills"], ["McLennan", "Valley Mills"], ["Cooke", "Valley View"], ["Van Zandt", "Van"], ["Collin", "Van Alstyne"], ["Grayson", "Van Alstyne"], ["Culberson", "Van Horn"], ["Oldham", "Vega"], ["Ellis", "Venus"], ["Johnson", "Venus"], ["Wilbarger", "Vernon"], ["Victoria", "Victoria"], ["Orange", "Vidor"], ["Travis", "Village of The Hills"], ["Travis", "Villiage of Volente"], ["El Paso", "Vinton"], ["Bexar", "Von Ormy"], ["McLennan", "Waco"], ["Gonzales", "Waelder"], ["Bowie", "Wake Village"], ["Waller", "Waller"], ["Harris", "Waller"], ["Austin", "Wallis"], ["Bosque", "Walnut Springs"], ["Upshur", "Warren City"], ["Gregg", "Warren City"], ["Harrison", "Waskom"], ["Tarrant", "Watauga"], ["Ellis", "Waxahachie"], ["Parker", "Weatherford"], ["Travis", "Webberville"], ["Bastrop", "Webberville"], ["Harris", "Webster"], ["Galveston", "Webster"], ["Colorado", "Weimar"], ["Haskell", "Weinert"], ["Williamson", "Weir"], ["Collingsworth", "Wellington"], ["Terry", "Wellman"], ["Cherokee", "Wells"], ["Hidalgo", "Weslaco"], ["McLennan", "West"], ["Brazoria", "West Columbia"], ["Travis", "West Lake Hills"], ["Orange", "West Orange"], ["Hunt", "West Tawakoni"], ["Harris", "West University Place"], ["Mitchell", "Westbrook"], ["Denton", "Westlake"], ["Tarrant", "Westlake"], ["Collin", "Weston"], ["Fort Bend", "Weston Lakes"], ["Tarrant", "Westover Hills"], ["Tarrant", "Westworth Village"], ["Wharton", "Wharton"], ["Wheeler", "Wheeler"], ["Carson", "White Deer"], ["Gregg", "White Oak"], ["Tarrant", "White Settlement"], ["Cochran", "Whiteface"], ["Hockley", "Whiteface"], ["Smith", "Whitehouse"], ["Grayson", "Whitesboro"], ["Grayson", "Whitewright"], ["Fannin", "Whitewright"], ["Hill", "Whitney"], ["Wichita", "Wichita Falls"], ["Ward", "Wickett"], ["Montgomery", "Willis"], ["Parker", "Willow Park"], ["Van Zandt", "Wills Point"], ["Dallas", "Wilmer"], ["Lynn", "Wilson"], ["Hays", "Wimberley"], ["Bexar", "Windcrest"], ["Fannin", "Windom"], ["Clay", "Windthorst"], ["Archer", "Windthorst"], ["Titus", "Winfield"], ["Winkler", "Wink"], ["Franklin", "Winnsboro"], ["Wood", "Winnsboro"], ["Smith", "Winona"], ["Runnels", "Winters"], ["Brazos", "Wixon Valley"], ["Hunt", "Wolfe City"], ["Lubbock", "Wolfforth"], ["Montgomery", "Woodbranch Village"], ["Hays", "Woodcreek"], ["Montgomery", "Woodloch"], ["Refugio", "Woodsboro"], ["Throckmorton", "Woodson"], ["Tyler", "Woodville"], ["McLennan", "Woodway"], ["Freestone", "Wortham"], ["Limestone", "Wortham"], ["Collin", "Wylie"], ["Rockwall", "Wylie"], ["Dallas", "Wylie"], ["Wood", "Yantis"], ["Lavaca", "Yoakum"], ["Dewitt", "Yoakum"], ["Dewitt", "Yorktown"], ["Angelina", "Zavalla"]];


        var countyList = ["Anderson", "Andrews", "Angelina", "Aransas", "Archer", "Armstrong", "Atascosa", "Austin", "Bailey", "Bandera", "Bastrop", "Baylor", "Bee", "Bell", "Bexar", "Blanco", "Borden", "Bosque", "Bowie", "Brazoria", "Brazos", "Brewster", "Briscoe", "Brooks", "Brown", "Burleson", "Burnet", "Caldwell", "Calhoun", "Callahan", "Cameron", "Camp", "Carson", "Cass", "Castro", "Chambers", "Cherokee", "Childress", "Clay", "Cochran", "Coke", "Coleman", "Collin", "Collingsworth", "Colorado", "Comal", "Comanche", "Concho", "Cooke", "Coryell", "Cottle", "Crane", "Crockett", "Crosby", "Culberson", "Dallam", "Dallas", "Dawson", "Deaf Smith", "Delta", "Denton", "DeWitt", "Dickens", "Dimmit", "Donley", "Duval", "Eastland", "Ector", "Edwards", "El Paso", "Ellis", "Erath", "Falls", "Fannin", "Fayette", "Fisher", "Floyd", "Foard", "Fort Bend", "Franklin", "Freestone", "Frio", "Gaines", "Galveston", "Garza", "Gillespie", "Glasscock", "Goliad", "Gonzales", "Gray", "Grayson", "Gregg", "Grimes", "Guadalupe", "Hale", "Hall", "Hamilton", "Hansford", "Hardeman", "Hardin", "Harris", "Harrison", "Hartley", "Haskell", "Hays", "Hemphill", "Henderson", "Hidalgo", "Hill", "Hockley", "Hood", "Hopkins", "Houston", "Howard", "Hudspeth", "Hunt", "Hutchinson", "Irion", "Jack", "Jackson", "Jasper", "Jeff Davis", "Jefferson", "Jim Hogg", "Jim Wells", "Johnson", "Jones", "Karnes", "Kaufman", "Kendall", "Kenedy", "Kent", "Kerr", "Kimble", "King", "Kinney", "Kleberg", "Knox", "La Salle", "Lamar", "Lamb", "Lampasas", "Lavaca", "Lee", "Leon", "Liberty", "Limestone", "Lipscomb", "Live Oak", "Llano", "Loving", "Lubbock", "Lynn", "Madison", "Marion", "Martin", "Mason", "Matagorda", "Maverick", "McCulloch", "McLennan", "McMullen", "Medina", "Menard", "Midland", "Milam", "Mills", "Mitchell", "Montague", "Montgomery", "Moore", "Morris", "Motley", "Nacogdoches", "Navarro", "Newton", "Nolan", "Nueces", "Ochiltree", "Oldham", "Orange", "Palo Pinto", "Panola", "Parker", "Parmer", "Pecos", "Polk", "Potter", "Presidio", "Rains", "Randall", "Reagan", "Real", "Red River", "Reeves", "Refugio", "Roberts", "Robertson", "Rockwall", "Runnels", "Rusk", "Sabine", "San Augustine", "San Jacinto", "San Patricio", "San Saba", "Schleicher", "Scurry", "Shackelford", "Shelby", "Sherman", "Smith", "Somervell", "Starr", "Stephens", "Sterling", "Stonewall", "Sutton", "Swisher", "Tarrant", "Taylor", "Terrell", "Terry", "Throckmorton", "Titus", "Tom Green", "Travis", "Trinity", "Tyler", "Upshur", "Upton", "Uvalde", "Val Verde", "Van Zandt", "Victoria", "Walker", "Waller", "Ward", "Washington", "Webb", "Wharton", "Wheeler", "Wichita", "Wilbarger", "Willacy", "Williamson", "Wilson", "Winkler", "Wise", "Wood", "Yoakum", "Young", "Zapata", "Zavala"];
        function sortOrderCounty(co) {
            for (var i = 0; i &lt; countyList.length; i++) {
                if (co == countyList[i]) {
                    document.getElementById('sortCountyOrder').value = i;
                    return;
                }
            }
        }
        function sortOrderCity(ci) {
            for (var i = 0; i &lt; cityMatrix.length; i++) {
                if (ci == cityMatrix[i][1]) {
                    document.getElementById('sortCityOrder').value = i;
                    return;
                }
            }
        }

        function start() {
            document.forms[0].onsubmit = submit;
            autoSum();
           /* document.getElementById('city').onchange = function () {
                sortOrderCity(this.options[this.selectedIndex].text);
                var coList = document.getElementById("county");
                var coSelected = coList.options[coList.selectedIndex].text;
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(coList);
                    addOption(coList, 'Select One', true);
                    for (var k = 0; k &lt; countyList.length; k++) {
                        addOption(coList, countyList[k], false);
                    }
                    // sortSelect(this);
                } else {
                    removeOptions(coList);
                    addOption(coList, 'Select One', false);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        if (cityMatrix[k][1] === this.options[this.selectedIndex].text) {
                            var selected = false;
                            if (cityMatrix[k][0] == coSelected) { selected = true; }
                            addOption(coList, cityMatrix[k][0], selected);
                        }
                    }
                }


            }

            document.getElementById('county').onchange = function () {
                sortOrderCounty(this.options[this.selectedIndex].text);
                var cityList = document.getElementById("city");
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", true);

                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        addOption(cityList, cityMatrix[k][1], false);
                    }
                    // sortSelect(this);
                }
                else {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {

                        if (cityMatrix[k][0] === this.options[this.selectedIndex].text) {
                            addOption(cityList, cityMatrix[k][1], false);
                        }
                    }
                }
            }*/
            $('.datepicker').datepicker();
          /*  var jType = document.getElementsByName('jurisdictionType');
            console.log(1);
            var jTypeFunction = function () {
                console.log(2);
                var a = document.getElementsByName('jurisdictionType');
                var b = document.getElementById('city');
                for (var i = 0; i &lt; a.length; i++) {
                    if (a[i].checked === true) {
                        if (a[i].id === 'jurisdictionType1') {//If City
                            b.multiple = false;
                            return;
                        }
                        if (a[i].id === 'jurisdictionType2') {//if county
                            b.multiple = true;
                            return;
                        }
                    }
                }
            };
            jType[0].onclick = jTypeFunction; jType[1].onclick = jTypeFunction;
*/

            commandInfoWindow('affectedSpan', 'Affected', '<div><b>Structure is habitable.  Some minor damage may be eligible for assistance.  Look for the following:</b><ul><li>A few missing shingles;</li><li>Some broken windows;</li><li>Damage to cars;</li><li>Damage to Air Conditioner Compressor only;</li><li>Single Family/Multi Family Residences - 0” - 6” of water</li><li>Mobile Homes- Ground level to within 12” of bottom board.</li></ul></div>');
            commandInfoWindow('minorDamageSpan', 'Minor Damage', '<div><b>Structure is habitable with minor repairs.  Look for the following:</b><ul><li>Many missing shingles, broken windows and doors;</li><li>Siding loose, missing or damaged;</li><li>Minor shifting or settling of foundation;</li><li>Damaged septic systems (flood);</li><li>Single Family/Multi-Family Residences – 6” to 18” of water,</li><li>Mobile Homes- Within 12” of bottom board to 3” above floor level.</li></ul></div>');
            commandInfoWindow('majorDamageSpan', 'Major Damage', '<div><b>Structure is currently uninhabitable and extensive repair is required to make it habitable. Look for  the following:</b><ul><li>Portions of the roof, including decking, missing;</li><li>Twisted, bowed or cracked walls;</li><li>Penetration of structure by trees or cars, etc.;</li><li>Single Family/Multi Family Residences - 18” – 48” of water,</li><li>Mobile Homes – 3” – 12” above floor level.</li></ul></div>');
            commandInfoWindow('destroyedSpan', 'Destroyed', '<div><b>Structure is permanently uninhabitable and can not be repaired.  Look for the following:</b><ul><li>Structure gone, only foundation remains;</li><li>Major sections of walls missing or collapsed;</li><li>Entire roof gone with noticeable distortion of the walls;</li><li>Structure has shifted off of its foundation;</li><li>*Single Family/Multi-Family Residences - More than 48” of water;</li><li>*Mobile Homes - over 12" for mobile homes.</li><li>*requires further investigation</li></ul></div>');
            commandInfoWindow('insuranceSpan', 'Estimating Insurance', '<div><b>The following are general guidelines to estimating insurance coverage.</b><ul><li>Renters are less likely to have insurance.</li><li>Low income residents are less likely to have insurance.</li><li>Homeowners who are still paying off their mortgage will normally have the appropriate type of insurance.</li><li>Residents who are flooded and reside in an area that does not participate in the NFIP or in an area that has been sanctioned for NFIP code enforcement violations will not have flood insurance.</li><li>Residents who are flooded but whose property is not located in the Special Flood Hazard Area (SFHA) will probably not have flood insurance.</li></ul></div>');
            commandInfoWindow('businessesEconomicInjuryInfo', 'Business Economic Injury', '<div>SBA makes an economic injury declaration in reliance on a state certification that at least five small business concerns in a disaster area have suffered substantial economic injury as a result of the disaster and are in need of financial assistance not otherwise available on reasonable terms.<ul><li>Does not cover lost income</li><li>Businesses claiming the loss would have to provide financials and accounting records to prove the loss</li><li>Businesses compensated with insurance would have to prove their injury is substantial after insurance claims are paid</li></ul></div>')
            commandInfoWindow('emergencyProtectiveMeasuresInfo', 'Emergency Protective Measures', '<div>Includes response costs, protection of life &amp; property, and then um temporary repairs as examples</div>');
            commandInfoWindow('buildingEquipmentInfo', 'Building &amp; Equipment', '<div>Also includes vehicles and contents of buildings</div>');
            commandInfoWindow('cityInfo', 'City Options', '<div><ul><li>Multiple cities can be selected when reporting for the County by holding down the Ctrl whild clicking on the city names.</li><li>Only a single city is allowed to be selected when filling the DSO out for a City</li></ul></div>');
            commandInfoWindow('catAInfo','Category A: Debris Removal','<div>Clearance of trees and woody debris; certain building wreckage; damaged/ destroyed building contents; sand, mud, silt, and gravel; vehicles; and other disaster-related material deposited on public and, in very limited cases, private property.</div>');
            commandInfoWindow('catBInfo','Category B: Emergency Protective Measures','<div>Measures taken before, during, and after a disaster to eliminate/reduce an immediate threat to life, public health, or safety, or to eliminate/reduce an immediate threat of significant damage to improved public and private property through cost-effective measures.</div>');
            commandInfoWindow('catCInfo','Category C: Roads and Bridges','<div>Repair of roads, bridges, and associated features, such as shoulders, ditches, culverts, lighting, and signs.</div>');
            commandInfoWindow('catDInfo','Category D: Water Control Facilities','<div>Repair of drainage channels, pumping facilities, and some irrigation facilities. Repair of levees, dams, and flood control channels fall under Category D, but the eligibility of these facilities is restricted.</div>');
            commandInfoWindow('catEInfo','Category E: Buildings and Equipment','<div>Repair or replacement of buildings, including their contents and systems; heavy equipment; and vehicles.</div>');
            commandInfoWindow('catFInfo','Category F: Utilities','<div>Repair of water treatment and delivery systems; power generation facilities and distribution facilities; sewage collection and treatment facilities; and communications.</div>');
            commandInfoWindow('catGInfo','Category G: Parks, Recreational Facilities, and Other Facilities','<div>Repair and restoration of parks, playgrounds, pools, cemeteries, mass transit facilities, and beaches. This category also is used for any work or facility that cannot be characterized adequately by Categories A-F.</div>');
        }
        function submit() {
            
        }
        window.onload = start;
    </script></head><body><div class="container agencytemplate_boardbackground"><form role="form"><div class="content"><div id="hidden" style="display:none"><div class="form-group form-inline"><label class="control-label" for="sortCountyOrder">Sort County Order:</label><input name="sortCountyOrder" id="sortCountyOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="sortCityOrder">Sort City Order:</label><input name="sortCityOrder" id="sortCityOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="submitedDateTime">Submited DateTime:</label><input name="submitedDateTime" id="submitedDateTime" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="updated">Updated:</label><input name="updated" id="updated" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="incidentName">Incident Name:</label><input name="incidentName" id="incidentName" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="incidentName"> Additional Emails:</label><input name="additionalEmails" id="additionalEmails" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="entryType"> Entry Type:</label><input name="entryType" id="entryType" type="text" style="form-control input-sm" /></div></div><div id="container"><h1><span class="label label-default">Incident</span></h1><div class="form-group form-inline"><label class="control-label" for="webeocIncident">Incident:</label><input type="text" name="webeocIncident" style="form-control input-sm" /></div><h1><span class="label label-default">General</span></h1><div class="form-group required form-inline"><label class="control-label" for="jurisdictionType">Jurisdiction Type:</label>
        City <input id="jurisdictionType1" type="radio" style="form-control input-sm" name="jurisdictionType" value="City" />
        County <input id="jurisdictionType2" type="radio" style="form-control input-sm" name="jurisdictionType" checked="true" value="County" /></div><div class="form-group form-inline"><label class="control-label" for="county">County:</label><input type="text" name="county" ReadOnly="ReadOnly" style="form-control input-sm" /><!-- </select>--></div><div class="form-group form-inline"><label class="control-label" for="city">City:</label><span id="cityInfo" class="label label-info">i</span><!--<select name="city" id="city" style="form-control" multiple="multiple"></select>--><input type="text" name="city" ReadOnly="ReadOnly" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="population">Population:</label><input name="population" id="population" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="type">Type:</label><input name="type" id="type" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="nfip">If this is a flood event, does the City/County participate in the National Flood Insurance Program (NFIP)?:</label>
        Yes <input id="nfip1" type="radio" style="form-control input-sm" name="nfip" value="Yes" />
        No <input id="nfip2" type="radio" style="form-control input-sm" name="nfip" value="No" /></div><div class="form-group form-inline"><label class="control-label" for="dateOfDisaster">Inclusive dates of the disaster:</label><input name="dateOfDisaster1" id="dateOfDisaster1" type="text" placeholder="Start Date" data-provide="datepicker" style="form-control input-sm datepicker" /> - <input data-provide="datepicker" name="dateOfDisaster2" placeholder="End Date" style="form-control input-sm datepicker" /><span><input type="checkbox" name="continuing" id="continuing" value="Continuing" /></span></div><div class="form-group form-inline"><label class="control-label" for="declarationIssued">Was a local disaster declaration issued:</label>
       Yes <input id="declarationIssued1" type="radio" style="form-control input-sm" name="declarationIssued" value="Yes" />
       No <input id="declarationIssued2" type="radio" style="form-control input-sm" name="declarationIssued" value="No" /></div><div class="form-group required form-inline"><label class="control-label" for="contactPerson">Contact Person:</label><input name="contactPerson" id="contactPerson" type="text" style="form-control input-sm" /></div><div class="form-group required form-inline"><label class="control-label" for="contactPersonTitle">Contact Person:</label><input name="contactPersonTitle" id="contactPersonTitle" type="text" class="form-control input-sm" runat="server" /></div><div class="form-group form-inline"><label class="control-label" for="address">Address:</label><input name="address" id="address" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="phone">Phone:</label><input name="phone" id="phone" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="mobilePhone">Mobile Phone:</label><input name="mobilePhone" id="mobilePhone" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="fax">Fax:</label><input name="fax" id="fax" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="pager">Pager:</label><input name="pager" id="pager" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="dutyPhone">24-Hr Duty Officer/Sheriff's Office:</label><input name="dutyPhone" id="dutyPhone" type="text" style="form-control input-sm" /></div><h1><span class="label label-default"> Individual Assistance</span></h1><!-- <h3><span class="label label-default"> Casualties:</span></h3>                   
 <div class="form-group form-inline">
      <label class="control-label" for="fatalities">Number of Fatalities:</label>
       <input name="fatalities" id="fatalities" type="text" placeholder="0" style="form-control input-sm"/>
    </div>        
  <div class="form-group form-inline">
      <label class="control-label" for="injuries">Number of Injuries:</label>
       <input name="injuries" id="injuries" type="text" placeholder="0" style="form-control input-sm"/>
    </div>
          <div class="form-group form-inline">
      <label class="control-label" for="hospitalized">Number of Hospitalized:</label>
       <input name="hospitalized" id="hospitalized" type="text" placeholder="0" style="form-control input-sm"/>
    </div>  --><!--                      
<h3><span class="label label-default">Agricultural Losses:</span>
</h3>
            <h4><i>Contact the Farm Service Agency in your county</i></h4>
<div class="form-group form-inline">
      <label class="control-label" for="agricultural">Is agricultural assistance needed?:</label>
       Yes <input id="agricultural1" type="radio" style="form-control input-sm" name="declarationIssued" value="Yes" />
       No <input id="agricultural2" type="radio" style="form-control input-sm" name="declarationIssued" value="No" />
<br />
    <i> If yes, please attach USDA flash situation report.</i>    
</div>
            <div class="form-group form-inline">
      <label class="control-label" for="usdaFlashReport">USDA Flash Report:</label>
               <input type="file" name="usdaFlashReport" />
</div>
--><h3><span class="label label-default">  Residential Losses - Primary Residence Only</span></h3><table class="table table-bordered"><tr><td>Type of Homes</td><td>Affected <span id="affectedSpan" class="label label-info">i</span></td><td>Minor Damage <span id="minorDamageSpan" class="label label-info">i</span></td><td>Major Damage <span id="majorDamageSpan" class="label label-info">i</span></td><td>Destroyed <span id="destroyedSpan" class="label label-info">i</span></td><td>% Covered by Insurance <span id="insuranceSpan" class="label label-info">i</span></td></tr><tr><td>Single Family Homes</td><td><input name="sfhAffected" id="sfhAffected" type="text" placeholder="0" style="form-control input-sm totalsAffected" /></td><td><input name="sfhMinorDamage" id="sfhMinorDamage" type="text" placeholder="0" style="form-control input-sm totalsMinorDamage" /></td><td><input name="sfhMajorDamage" id="sfhMajorDamage" type="text" placeholder="0" style="form-control input-sm totalsMajorDamage" /></td><td><input name="sfhDestroyed" id="sfhDestroyed" type="text" placeholder="0" style="form-control input-sm totalsDestroyed" /></td><td><input name="sfhCovByInsurance" id="sfhCovByInsurance" type="text" placeholder="0" style="form-control input-sm totalsCovByInsurance" /></td></tr><tr><td>Mobile Homes</td><td><input name="mhAffected" id="mhAffected" type="text" placeholder="0" style="form-control input-sm  totalsAffected" /></td><td><input name="mhMinorDamage" id="mhMinorDamage" type="text" placeholder="0" style="form-control input-sm totalsMinorDamage" /></td><td><input name="mhMajorDamage" id="mhMajorDamage" type="text" placeholder="0" style="form-control input-sm totalsMajorDamage" /></td><td><input name="mhDestroyed" id="mhDestroyed" type="text" placeholder="0" style="form-control input-sm totalsDestroyed" /></td><td><input name="mhCovByInsurance" id="mhCovByInsurance" type="text" placeholder="0" style="form-control input-sm totalsCovByInsurance" /></td></tr><tr><td>Multi-Family Units</td><td><input name="mfuAffected" id="mfuAffected" type="text" placeholder="0" style="form-control input-sm  totalsAffected" /></td><td><input name="mfuMinorDamage" id="mfuMinorDamage" type="text" placeholder="0" style="form-control input-sm totalsMinorDamage" /></td><td><input name="mfuMajorDamage" id="mfuMajorDamage" type="text" placeholder="0" style="form-control input-sm totalsMajorDamage" /></td><td><input name="mfuDestroyed" id="mfuDestroyed" type="text" placeholder="0" style="form-control input-sm totalsDestroyed" /></td><td><input name="mfuCovByInsurance" id="mfuCovByInsurance" type="text" placeholder="0" style="form-control input-sm totalsCovByInsurance" /></td></tr><tr><td>Totals</td><td><input name="totalsAffected" id="totalsAffected" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="totalsMinorDamage" id="totalsMinorDamage" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="totalsMajorDamage" id="totalsMajorDamage" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="totalsDestroyed" id="totalsDestroyed" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="totalsCovByInsurance" id="totalsCovByInsurance" type="text" placeholder="0" style="form-control input-sm" /></td></tr></table><div class="form-group form-inline"><label class="control-label" for="homesIsolated">Number of homes isolated due to road closure (high water, etc.):</label><input name="homesIsolated" id="homesIsolated" type="text" placeholder="0" style="form-control input-sm" /></div><!--
<div class="form-group form-inline">
      <label class="control-label" for="numNotSatisfiedByVolunteers">Estimated number of persons whose situation will not be satisfied by volunteer organizations (Contact local volunteer organizations):</label>
       <input name="numNotSatisfiedByVolunteers" id="numNotSatisfiedByVolunteers" type="text" style="form-control input-sm"/>
    </div>--><!--<div class="form-group form-inline">
      <label class="control-label" for="sheltersOpen">Are shelters opened?:</label>
      Yes  <input id="sheltersOpen1" type="radio" style="form-control input-sm" name="sheltersOpen" value="Yes" />
       No <input id="sheltersOpen2" type="radio" style="form-control input-sm" name="sheltersOpen" value="No" />
    </div>
<div class="form-group form-inline">
      <label class="control-label" for="sheltersHowMany">How many shelters are open?:</label>
       <input name="sheltersHowMany" id="sheltersHowMany" type="text" style="form-control input-sm"/>
    </div>
<div class="form-group form-inline">
      <label class="control-label" for="shelterDetails">Name, location, capacity, and current occupancy of shelters:</label>
       <input name="shelterDetails" id="shelterDetails" type="text" style="form-control" TextMode="MultiLine" Rows="5"/>
    </div>--><h1><span class="label label-default">Business Losses/Impacts:</span></h1><table class="table table-bordered"><tr><td></td><td>Number</td><td># Covered by Adequate Insurance</td><td>Total estimated repair cost</td></tr><tr><td>Minor Damage (less than 40%)</td><td><input name="numberMinorDamage" id="numberMinorDamage" type="text" placeholder="0" style="form-control input-sm numberTotal" /></td><td><input name="coveredMinorDamage" id="coveredMinorDamage" type="text" placeholder="0" style="form-control input-sm coveredTotal" /></td><td><input name="totalMinorDamage" id="totalMinorDamage" type="text" placeholder="0" style="form-control input-sm totalTotal" /></td></tr><tr><td>Major Damage (greater than 40%)</td><td><input name="numberMajorDamage" id="numberMajorDamage" type="text" placeholder="0" style="form-control input-sm numberTotal" /></td><td><input name="coveredMajorDamage" id="coveredMajorDamage" type="text" placeholder="0" style="form-control input-sm coveredTotal" /></td><td><input name="totalMajorDamage" id="totalMajorDamage" type="text" placeholder="0" style="form-control input-sm totalTotal" /></td></tr><tr><td>Total</td><td><input name="numberTotal" id="numberTotal" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="coveredTotal" id="coveredTotal" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="totalTotal" id="totalTotal" type="text" placeholder="0" style="form-control input-sm" /></td></tr></table><div class="form-group form-inline"><label class="control-label" for="businessesCeased">How many businesses have ceased operations:</label><input name="businessesCeased" id="businessesCeased" type="text" placeholder="0" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="businessesEconomicInjury">How many businesses have experienced economic injury:<span id="businessesEconomicInjuryInfo" class="label label-info">i</span></label><input name="businessesEconomicInjury" id="businessesEconomicInjury" type="text" placeholder="0" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="numberUnemployed">Estimated number of persons unemployed because of this disaster: </label><input name="numberUnemployed" id="numberUnemployed" type="text" placeholder="0" style="form-control input-sm" /><i>(Contact affected businesses and the local Texas Workforce Commission Office)</i></div><h1><span class="label label-default">PUBLIC ASSISTANCE</span></h1><table class="table table-bordered"><tr><td>Category</td><td>No of Sites</td><td>Estimated Repair Costs</td><td>Anticipated Insurance.*</td></tr><tr><td><span class="label label-default" id="catAInfo">A</span>Debris Clearance</td><td><input name="sitesDebrisClearance" id="sitesDebrisClearance" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostDebrisClearance" id="repairCostDebrisClearance" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceDebrisClearance" id="insuranceDebrisClearance" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catBInfo">B</span>Emergency Protective Measures <span id="emergencyProtectiveMeasuresInfo" class="label label-info">i</span></td><td><input name="sitesEmergency" id="sitesEmergency" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostEmergency" id="repairCostEmergency" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceEmergency" id="insuranceEmergency" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catCInfo">C</span>Roads &amp; Bridges</td><td><input name="sitesRoadPaved" id="sitesRoadPaved" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostRoadPaved" id="repairCostRoadPaved" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceRoadPaved" id="insuranceRoadPaved" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catDInfo">D</span>Water Control Facilities <br />(Dams, levees, dikes)
</td><td><input name="sitesWaterControlFacilities" id="sitesWaterControlFacilities" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostWaterControlFacilities" id="repairCostWaterControlFacilities" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceWaterControlFacilities" id="insuranceWaterControlFacilities" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catEInfo">E</span>Buildings &amp; Equipment<span id="buildingEquipmentInfo" class="label label-info">i</span></td><td><input name="sitesBuildingsEquipment" id="sitesBuildingsEquipment" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostBuildingsEquipment" id="repairCostBuildingsEquipment" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceBuildingsEquipment" id="insuranceBuildingsEquipment" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catFInfo">F</span>Public Utility Systems<br />
(Gas, Electric, Sewer, Water)
</td><td><input name="sitesUtilitySystems" id="sitesUtilitySystems" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostUtilitySystems" id="repairCostUtilitySystems" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceUtilitySystems" id="insuranceUtilitySystems" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catGInfo">G</span>
            Other Types of Facilities<br />
(Recreational Facilities, Airports, etc.)
</td><td><input name="sitesOther" id="sitesOther" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostOther" id="repairCostOther" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceOther" id="insuranceOther" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td>Totals
</td><td><input name="sitesTotals" id="sitesTotals" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="repairCostTotals" id="repairCostTotals" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="insuranceTotals" id="insuranceTotals" type="text" placeholder="0" style="form-control input-sm" /></td></tr></table><i>* Anticipated insurance is normally calculated by subtracting any deductible, depreciation or 
     uncoverable loss from the estimated repair cost.
</i><div class="form-group form-inline"><label class="control-label" for="annualMaintenanceBudget">Total annual maintenance budget (i.e. Public Works, Road &amp; Bridge):</label><input name="annualMaintenanceBudget" id="annualMaintenanceBudget" type="text" placeholder="0" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="startOfFiscalYear">Start of Fiscal Year(Month):</label><input name="startOfFiscalYear" id="startOfFiscalYear" type="text" style="form-control input-sm" /></div><h1><span class="label label-default">Other Eligible Entities</span></h1><i>(Contact non-profit or governmental, medical, emergency, utility, educational, custodial care facilities, etc.)</i><table class="table table-bordered"><tr><td>Organization/ Facility</td><td>Cat A-G</td><td>No. of Sites</td><td>Estimated Repair Cost</td><td>Anticipated Insurance *</td></tr><tr><td><input name="orgFacility01" id="orgFacility01" type="text" style="form-control input-sm" /></td><td><select name="cat01" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites01" id="sites01" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost01" id="repairCost01" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance01" id="insurance01" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility02" id="orgFacility02" type="text" style="form-control input-sm" /></td><td><select name="cat02" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites02" id="sites02" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost02" id="repairCost02" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance02" id="insurance02" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility03" id="orgFacility03" type="text" style="form-control input-sm" /></td><td><select name="cat03" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites03" id="sites03" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost03" id="repairCost03" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance03" id="insurance03" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility04" id="orgFacility04" type="text" style="form-control input-sm" /></td><td><select name="cat04" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites04" id="sites04" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost04" id="repairCost04" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance04" id="insurance04" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility05" id="orgFacility05" type="text" style="form-control input-sm" /></td><td><select name="cat05" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites05" id="sites05" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost05" id="repairCost05" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance05" id="insurance05" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility06" id="orgFacility06" type="text" style="form-control input-sm" /></td><td><select name="cat06" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites06" id="sites06" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost06" id="repairCost06" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance06" id="insurance06" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility07" id="orgFacility07" type="text" style="form-control input-sm" /></td><td><select name="cat07" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites07" id="sites07" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost07" id="repairCost07" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance07" id="insurance07" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility08" id="orgFacility08" type="text" style="form-control input-sm" /></td><td><select name="cat08" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites08" id="sites08" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost08" id="repairCost08" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance08" id="insurance08" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility09" id="orgFacility09" type="text" style="form-control input-sm" /></td><td><select name="cat09" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites09" id="sites09" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost09" id="repairCost09" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance09" id="insurance09" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility10" id="orgFacility10" type="text" style="form-control input-sm" /></td><td><select name="cat10" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites10" id="sites10" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost10" id="repairCost10" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance10" id="insurance10" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility11" id="orgFacility11" type="text" style="form-control input-sm" /></td><td><select name="cat11" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites11" id="sites11" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost11" id="repairCost11" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance11" id="insurance11" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility12" id="orgFacility12" type="text" style="form-control input-sm" /></td><td><select name="cat12" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites12" id="sites12" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost12" id="repairCost12" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance12" id="insurance12" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility13" id="orgFacility13" type="text" style="form-control input-sm" /></td><td><select name="cat13" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites13" id="sites13" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost13" id="repairCost13" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance13" id="insurance13" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility14" id="orgFacility14" type="text" style="form-control input-sm" /></td><td><select name="cat14" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites14" id="sites14" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost14" id="repairCost14" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance14" id="insurance14" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility15" id="orgFacility15" type="text" style="form-control input-sm" /></td><td><select name="cat15" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites15" id="sites15" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost15" id="repairCost15" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance15" id="insurance15" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td>Totals</td><td></td><td><input name="sitesOtherTotal" id="sitesOtherTotal" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="repairCostTotal" id="repairCostTotal" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="insuranceCostTotal" id="insuranceCostTotal" type="text" placeholder="0" style="form-control input-sm" /></td></tr></table><br /><div>
This form is for damage assessment reporting purposes only.  In accordance with the State Emergency Management Plan, if a Mayor/County Judge determines that a situation is of such severity and magnitude that an effective response is beyond the affected jurisdiction’s capability to recover, a letter outlining the disaster impact and the need for supplemental State and/or Federal assistance must accompany this DSO.
</div><h1><span class="label label-default">General Notes</span></h1><div class="form-group form-inline"><label class="control-label" for="notes">Notes:</label><textarea name="notes" id="notes" style="form-control"></textarea><!--<input name="notes" id="notes" type="text" style="form-control" Rows="5" TextMode="MultiLine"/>--></div><h1><span class="label label-default">Submitter Information</span></h1><div class="form-group form-inline"><label class="control-label" for="submitterName">Name:</label><input name="submitterName" id="submitterName" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="submitterEmail">Email:</label><input name="submitterEmail" id="submitterEmail" type="text" style="form-control input-sm" /></div><i> If you include your email, a confirmation email will be sent to you.</i></div><div class="form-group form-inline"><label class="control-label" for="hidden">Hide:</label><input name="hidden" id="hidden" type="checkbox" style="form-control input-sm" value="Yes" /><select name="socProcessed"><option>Not Processed</option><option>Processed</option></select></div></div></form></div></body></html></view><view tablename="Core" name="API DSO Input (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="631b1b82-af45-4637-ad15-214f8d49e58d" assignable="1"><html><head><title>DSO Form</title><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/jquery.min.js"></script><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.js"></script><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.js"></script><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.js"></script><style type="text/css"> 
        #container {  margin: 50px;
        }
        .form-group.required .control-label:after {
  content:"*";
  color:red;
}
    </style><script type="text/javascript">
        function removeOptions(obj) {
            if (obj == null) return;
            if (obj.options == null) return;
            obj.options.length = 0;
        }
        function autoSum() {
            var fields = ["totalsAffected", "totalsMinorDamage", "totalsMajorDamage", "totalsDestroyed", "totalsCovByInsurance", "numberTotal", "coveredTotal", "totalTotal", "sitesTotals", "repairCostTotals", "insuranceTotals", "sitesOtherTotal", "repairCostTotal", "insuranceCostTotal"];
            for (var i = 0; i &lt; fields.length; i++) {
                var objs = document.getElementsByClassName(fields[i]);
                for (var h = 0; h &lt; objs.length; h++) {
                    objs[h].idByClass = fields[i];
                    objs[h].onblur = function () {

                        var t = 0;
                        var a = document.getElementsByClassName(this.idByClass);
                        for (var b = 0; b &lt; a.length; b++) {
                            if (a[b].value != '') {
                                t += parseFloat(a[b].value)
                            }
                        }
                        document.getElementById(this.idByClass).value = t.toFixed(2);;
                    }
                }
            }
        }
        function commandInfoWindow(clickedId, title, message) {
            $('#' + clickedId).click(function () {
                BootstrapDialog.show({
                    title: title,
                    message: function (dialog) {
                        var $content = $(message);
                        return $content;
                    },

                });
            })

        }

        function addOption(select, optionTxt, selected) {
            var option = document.createElement("option");
            option.text = optionTxt;
            option.id = optionTxt;
            option.selected = selected;
            try {
                select.add(option, null);
            }
            catch (ex) {
                select.add(option);
            }
        }
        var cityMatrix = [["Hill", "Abbott"], ["Hale", "Abernathy"], ["Lubbock", "Abernathy"], ["Jones", "Abilene"], ["Taylor", "Abilene"], ["Dawson", "Ackerly"], ["Martin", "Ackerly"], ["Collin", "Addison"], ["Dallas", "Addison"], ["Oldham", "Adrian"], ["Nueces", "Agua Dulce"], ["Hidalgo", "Alamo"], ["Bexar", "Alamo Heights"], ["Wood", "Alba"], ["Rains", "Alba"], ["Shackelford", "Albany"], ["Parker", "Aledo"], ["Jim Wells", "Alice"], ["Collin", "Allen"], ["Ellis", "Alma"], ["Brewster", "Alpine"], ["Cherokee", "Alto"], ["Hidalgo", "Alton"], ["Johnson", "Alvarado"], ["Brazoria", "Alvin"], ["Galveston", "Alvin"], ["Wise", "Alvord"], ["Potter", "Amarillo"], ["Randall", "Amarillo"], ["Liberty", "Ames"], ["Lamb", "Amherst"], ["Chambers", "Anahuac"], ["Grimes", "Anderson"], ["Andrews", "Andrews"], ["Brazoria", "Angleton"], ["Navarro", "Angus"], ["Collin", "Anna"], ["Parker", "Annetta"], ["Parker", "Annetta North"], ["Parker", "Annetta South"], ["Red River", "Annona"], ["Jones", "Anson"], ["El Paso", "Anthony"], ["Hockley", "Anton"], ["Nacogdoches", "Appleby"], ["Hill", "Aquilla"], ["Aransas", "Aransas Pass"], ["San Patricio", "Aransas Pass"], ["Nueces", "Aransas Pass"], ["Archer", "Archer City"], ["Fort Bend", "Arcola"], ["Denton", "Argyle"], ["Tarrant", "Arlington"], ["Smith", "Arp"], ["Dimmit", "Asherton"], ["Stonewall", "Aspermont"], ["Henderson", "Athens"], ["Cass", "Atlanta"], ["Denton", "Aubrey"], ["Wise", "Aurora"], ["Williamson", "Austin"], ["Travis", "Austin"], ["Hays", "Austin"], ["Refugio", "Austwell"], ["Red River", "Avery"], ["Cass", "Avinger"], ["Parker", "Azle"], ["Tarrant", "Azle"], ["Fannin", "Bailey"], ["Brazoria", "Bailey's Prairie"], ["Callahan", "Baird"], ["Dallas", "Balch Springs"], ["Bexar", "Balcones Heights"], ["Runnels", "Ballinger"], ["Reeves", "Balmorhea"], ["Bandera", "Bandera"], ["Brown", "Bangs"], ["Ellis", "Bardwell"], ["Navarro", "Barry"], ["Ward", "Barstow"], ["Williamson", "Bartlett"], ["Bell", "Bartlett"], ["Denton", "Bartonville"], ["Bastrop", "Bastrop"], ["Matagorda", "Bay City"], ["Galveston", "Bayou Vista"], ["Refugio", "Bayside"], ["Harris", "Baytown"], ["Chambers", "Baytown"], ["Cameron", "Bayview"], ["Chambers", "Beach City"], ["Hays", "Bear Creek"], ["Fort Bend", "Beasley"], ["Jefferson", "Beaumont"], ["Hardin", "Beaumont"], ["Orange", "Beaumont"], ["Panola", "Beckville"], ["Tarrant", "Bedford"], ["Grimes", "Bedias"], ["Travis", "Bee Cave"], ["Bee", "Beeville"], ["Harris", "Bellaire"], ["Clay", "Bellevue"], ["McLennan", "Bellmead"], ["Grayson", "Bells"], ["Austin", "Bellville"], ["Bell", "Belton"], ["Duval", "Benavides"], ["Tarrant", "Benbrook"], ["Knox", "Benjamin"], ["Henderson", "Berryville"], ["Burnet", "Bertram"], ["McLennan", "Beverly Hills"], ["Jefferson", "Bevil Oaks"], ["Hardin", "Bevil Oaks"], ["Reagan", "Big Lake"], ["Upshur", "Big Sandy"], ["Howard", "Big Spring"], ["Dimmit", "Big Wells"], ["Nueces", "Bishop"], ["Potter", "Bishop Hills"], ["Coke", "Blackwell"], ["Nolan", "Blackwell"], ["Blanco", "Blanco"], ["Brown", "Blanket"], ["Cass", "Bloomburg"], ["Navarro", "Blooming Grove"], ["Lamar", "Blossom"], ["Tarrant", "Blue Mound"], ["Collin", "Blue Ridge"], ["Hill", "Blum"], ["Kendall", "Boerne"], ["Red River", "Bogata"], ["Fannin", "Bonham"], ["Brazoria", "Bonney"], ["Ochiltree", "Booker"], ["Lipscomb", "Booker"], ["Hutchinson", "Borger"], ["Parmer", "Bovina"], ["Montague", "Bowie"], ["Wise", "Boyd"], ["Kinney", "Brackettville"], ["McCulloch", "Brady"], ["Brazoria", "Brazoria"], ["Hood", "Brazos Bend"], ["Austin", "Brazos Country"], ["Stephens", "Breckenridge"], ["Robertson", "Bremond"], ["Washington", "Brenham"], ["Travis", "Briarcliff"], ["Johnson", "Briaroaks"], ["Orange", "Bridge City"], ["Wise", "Bridgeport"], ["San Augustine", "Broaddus"], ["Coke", "Bronte"], ["Waller", "Brookshire"], ["Harris", "Brookside Village"], ["Brazoria", "Brookside Village"], ["Jasper", "Browndell"], ["Terry", "Brownfield"], ["Henderson", "Brownsboro"], ["Cameron", "Brownsville"], ["Brown", "Brownwood"], ["McLennan", "Bruceville-Eddy"], ["Falls", "Bruceville-Eddy"], ["Brazos", "Bryan"], ["Jack", "Bryson"], ["Milam", "Buckholts"], ["Hays", "Buda"], ["Leon", "Buffalo"], ["Taylor", "Buffalo Gap"], ["Lubbock", "Buffalo Springs"], ["Smith", "Bullard"], ["Cherokee", "Bullard"], ["Comal", "Bulverde"], ["Harris", "Bunker Hill Village"], ["Wichita", "Burkburnett"], ["Angelina", "Burke"], ["Tarrant", "Burleson"], ["Johnson", "Burleson"], ["Burnet", "Burnet"], ["Washington", "Burton"], ["Clay", "Byers"], ["Hill", "Bynum"], ["Sherman", "Cactus"], ["Moore", "Cactus"], ["Hunt", "Caddo Mills"], ["Burleson", "Caldwell"], ["Cooke", "Callisburg"], ["Robertson", "Calvert"], ["Milam", "Cameron"], ["Real", "Camp Wood"], ["Hunt", "Campbell"], ["Hemphill", "Canadian"], ["Henderson", "Caney City"], ["Van Zandt", "Canton"], ["Randall", "Canyon"], ["Eastland", "Carbon"], ["Hill", "Carl's Corner"], ["Washington", "Carmine"], ["Fayette", "Carmine"], ["Dimmit", "Carrizo Springs"], ["Denton", "Carrollton"], ["Collin", "Carrollton"], ["Dallas", "Carrollton"], ["Panola", "Carthage"], ["Wichita", "Cashion"], ["Bexar", "Castle Hills"], ["Medina", "Castroville"], ["Dallas", "Cedar Hill"], ["Ellis", "Cedar Hill"], ["Williamson", "Cedar Park"], ["Travis", "Cedar Park"], ["Hunt", "Celeste"], ["Denton", "Celina"], ["Collin", "Celina"], ["Grayson", "Celina"], ["Shelby", "Center"], ["Leon", "Centerville"], ["Henderson", "Chandler"], ["Hartley", "Channing"], ["Atascosa", "Charlotte"], ["Tyler", "Chester"], ["Wise", "Chico"], ["Childress", "Childress"], ["Hardeman", "Chillicothe"], ["Jefferson", "China"], ["Bexar", "China Grove"], ["Nacogdoches", "Chireno"], ["Atascosa", "Christine"], ["Guadalupe", "Cibolo"], ["Bexar", "Cibolo"], ["Eastland", "Cisco"], ["Donley", "Clarendon"], ["Red River", "Clarksville"], ["Upshur", "Clarksville City"], ["Gregg", "Clarksville City"], ["Armstrong", "Claude"], ["Galveston", "Clear Lake Shores"], ["Johnson", "Cleburne"], ["Liberty", "Cleveland"], ["Bosque", "Clifton"], ["El Paso", "Clint"], ["Brazoria", "Clute"], ["Callahan", "Clyde"], ["Howard", "Coahoma"], ["Dallas", "Cockrell Hill"], ["Henderson", "Coffee City"], ["San Jacinto", "Coldspring"], ["Coleman", "Coleman"], ["Brazos", "College Station"], ["Tarrant", "Colleyville"], ["Grayson", "Collinsville"], ["Tyler", "Colmesneil"], ["Mitchell", "Colorado City"], ["Colorado", "Columbus"], ["Comanche", "Comanche"], ["Cameron", "Combes"], ["Dallas", "Combine"], ["Kaufman", "Combine"], ["Hunt", "Commerce"], ["Hopkins", "Como"], ["Montgomery", "Conroe"], ["Bexar", "Converse"], ["Parker", "Cool"], ["Limestone", "Coolidge"], ["Delta", "Cooper"], ["Denton", "Coppell"], ["Dallas", "Coppell"], ["Tarrant", "Coppell"], ["Denton", "Copper Canyon"], ["Coryell", "Copperas Cove"], ["Lampasas", "Copperas Cove"], ["Bell", "Copperas Cove"], ["Denton", "Corinth"], ["Aransas", "Corpus Christi"], ["San Patricio", "Corpus Christi"], ["Nueces", "Corpus Christi"], ["Kleberg", "Corpus Christi"], ["Denton", "Corral City"], ["Polk", "Corrigan"], ["Navarro", "Corsicana"], ["Kaufman", "Cottonwood"], ["Burnet", "Cottonwood Shores"], ["LaSalle", "Cotulla"], ["Chambers", "Cove"], ["Hill", "Covington"], ["Kaufman", "Crandall"], ["Crane", "Crane"], ["Bosque", "Cranfills Gap"], ["McLennan", "Crawford"], ["Travis", "Creedmoor"], ["Hays", "Creedmoor"], ["Parker", "Cresson"], ["Hood", "Cresson"], ["Johnson", "Cresson"], ["Houston", "Crockett"], ["Crosby", "Crosbyton"], ["Callahan", "Cross Plains"], ["Denton", "Cross Roads"], ["Johnson", "Cross Timber"], ["Foard", "Crowell"], ["Tarrant", "Crowley"], ["Johnson", "Crowley"], ["Zavala", "Crystal City"], ["Dewitt", "Cuero"], ["Hopkins", "Cumby"], ["Cherokee", "Cuney"], ["Anderson", "Cuney"], ["Nacogdoches", "Cushing"], ["Montgomery", "Cut and Shoot"], ["Morris", "Daingerfield"], ["Liberty", "Daisetta"], ["Dallam", "Dalhart"], ["Hartley", "Dalhart"], ["Denton", "Dallas"], ["Collin", "Dallas"], ["Rockwall", "Dallas"], ["Dallas", "Dallas"], ["Kaufman", "Dallas"], ["Tarrant", "Dalworthington Gardens"], ["Brazoria", "Danbury"], ["Lipscomb", "Darrouzett"], ["Navarro", "Dawson"], ["Liberty", "Dayton"], ["Liberty", "Dayton Lakes"], ["Comanche", "De Leon"], ["Clay", "Dean"], ["Wise", "Decatur"], ["Hood", "DeCordova"], ["Harris", "Deer Park"], ["Bowie", "DeKalb"], ["Val Verde", "Del Rio"], ["Hudspeth", "Dell City"], ["Grayson", "Denison"], ["Denton", "Denton"], ["Gaines", "Denver City"], ["Yoakum", "Denver City"], ["Red River", "Deport"], ["Lamar", "Deport"], ["Dallas", "DeSoto"], ["Red River", "Detroit"], ["Liberty", "Devers"], ["Medina", "Devine"], ["Angelina", "Diboll"], ["Dickens", "Dickens"], ["Galveston", "Dickinson"], ["Frio", "Dilley"], ["Castro", "Dimmitt"], ["Denton", "Dish"], ["Fannin", "Dodd City"], ["Collingsworth", "Dodson"], ["Cass", "Domino"], ["Hidalgo", "Donna"], ["Grayson", "Dorchester"], ["Denton", "Double Oak"], ["Cass", "Douglassville"], ["Hays", "Dripping Springs"], ["Nueces", "Driscoll"], ["Erath", "Dublin"], ["Moore", "Dumas"], ["Dallas", "Duncanville"], ["Colorado", "Eagle Lake"], ["Maverick", "Eagle Pass"], ["Brown", "Early"], ["Lamb", "Earth"], ["Fort Bend", "East Bernard"], ["Wharton", "East Bernard"], ["Upshur", "East Mountain"], ["Gregg", "East Mountain"], ["Rains", "East Tawakoni"], ["Eastland", "Eastland"], ["Gregg", "Easton"], ["Rusk", "Easton"], ["Fannin", "Ector"], ["Hidalgo", "Edcouch"], ["Concho", "Eden"], ["Tarrant", "Edgecliff"], ["Van Zandt", "Edgewood"], ["Hidalgo", "Edinburg"], ["Hale", "Edmonson"], ["Jackson", "Edna"], ["Van Zandt", "Edom"], ["Wharton", "El Campo"], ["Webb", "El Cenizo"], ["Harris", "El Lago"], ["El Paso", "El Paso"], ["Schleicher", "Eldorado"], ["Wichita", "Electra"], ["Travis", "Elgin"], ["Bastrop", "Elgin"], ["Anderson", "Elkhart"], ["Bexar", "Elmendorf"], ["Wilson", "Elmendorf"], ["Hidalgo", "Elsa"], ["Navarro", "Emhouse"], ["Rains", "Emory"], ["Henderson", "Enchanted Oaks"], ["LaSalle", "Encinal"], ["Kaufman", "Ennis"], ["Ellis", "Ennis"], ["Starr", "Escobares"], ["Hall", "Estelline"], ["Dallas", "Euless"], ["Tarrant", "Euless"], ["Navarro", "Eureka"], ["Henderson", "Eustace"], ["Hamilton", "Evant"], ["Coryell", "Evant"], ["Tarrant", "Everman"], ["Kendall", "Fair Oaks Ranch"], ["Comal", "Fair Oaks Ranch"], ["Bexar", "Fair Oaks Ranch"], ["Fort Bend", "Fairchilds"], ["Freestone", "Fairfield"], ["Collin", "Fairview"], ["Brooks", "Falfurrias"], ["Karnes", "Falls City"], ["Dallas", "Farmers Branch"], ["Collin", "Farmersville"], ["Parmer", "Farwell"], ["Rockwall", "Fate"], ["Fayette", "Fayetteville"], ["Dallas", "Ferris"], ["Ellis", "Ferris"], ["Fayette", "Flatonia"], ["Williamson", "Florence"], ["Wilson", "Floresville"], ["Denton", "Flower Mound"], ["Tarrant", "Flower Mound"], ["Floyd", "Floydada"], ["Lipscomb", "Follett"], ["Tarrant", "Forest Hill"], ["Kaufman", "Forney"], ["Howard", "Forsan"], ["Pecos", "Fort Stockton"], ["Wise", "Fort Worth"], ["Denton", "Fort Worth"], ["Parker", "Fort Worth"], ["Dallas", "Fort Worth"], ["Tarrant", "Fort Worth"], ["Johnson", "Fort Worth"], ["Robertson", "Franklin"], ["Henderson", "Frankston"], ["Anderson", "Frankston"], ["Gillespie", "Fredericksburg"], ["Brazoria", "Freeport"], ["Duval", "Freer"], ["Harris", "Friendswood"], ["Brazoria", "Friendswood"], ["Galveston", "Friendswood"], ["Parmer", "Friona"], ["Denton", "Frisco"], ["Collin", "Frisco"], ["Moore", "Fritch"], ["Hutchinson", "Fritch"], ["Navarro", "Frost"], ["Van Zandt", "Fruitvale"], ["Fort Bend", "Fulshear"], ["Aransas", "Fulton"], ["Cooke", "Gainesville"], ["Harris", "Galena Park"], ["Cherokee", "Gallatin"], ["Galveston", "Galveston"], ["Jackson", "Ganado"], ["Comal", "Garden Ridge"], ["Collin", "Garland"], ["Dallas", "Garland"], ["Ellis", "Garrett"], ["Nacogdoches", "Garrison"], ["Panola", "Gary"], ["Coryell", "Gatesville"], ["Live Oak", "George West"], ["Williamson", "Georgetown"], ["McLennan", "Gholson"], ["Lee", "Giddings"], ["Upshur", "Gilmer"], ["Upshur", "Gladewater"], ["Gregg", "Gladewater"], ["Somervell", "Glen Rose"], ["Dallas", "Glenn Heights"], ["Ellis", "Glenn Heights"], ["Johnson", "Godley"], ["Ector", "Goldsmith"], ["Mills", "Goldthwaite"], ["Goliad", "Goliad"], ["McLennan", "Golinda"], ["Falls", "Golinda"], ["Gonzales", "Gonzales"], ["Navarro", "Goodlow"], ["Polk", "Goodrich"], ["Palo Pinto", "Gordon"], ["Knox", "Goree"], ["Eastland", "Gorman"], ["Comanche", "Gorman"], ["Palo Pinto", "Graford"], ["Young", "Graham"], ["Hood", "Granbury"], ["Dallas", "Grand Prairie"], ["Tarrant", "Grand Prairie"], ["Ellis", "Grand Prairie"], ["Van Zandt", "Grand Saline"], ["Ward", "Grandfalls"], ["Johnson", "Grandview"], ["Williamson", "Granger"], ["Burnet", "Granite Shoals"], ["Hidalgo", "Granjeno"], ["Houston", "Grapeland"], ["Denton", "Grapevine"], ["Dallas", "Grapevine"], ["Tarrant", "Grapevine"], ["Kaufman", "Grays Prairie"], ["Hunt", "Greenville"], ["San Patricio", "Gregory"], ["Bexar", "Grey Forest"], ["Limestone", "Groesbeck"], ["Carson", "Groom"], ["Jefferson", "Groves"], ["Trinity", "Groveton"], ["Hansford", "Gruver"], ["Henderson", "Gun Barrel City"], ["Grayson", "Gunter"], ["Comanche", "Gustine"], ["Denton", "Hackberry"], ["Hale", "Hale Center"], ["Lavaca", "Hallettsville"], ["McLennan", "Hallsburg"], ["Harrison", "Hallsville"], ["Tarrant", "Haltom City"], ["Hamilton", "Hamilton"], ["Fisher", "Hamlin"], ["Jones", "Hamlin"], ["Randall", "Happy"], ["Swisher", "Happy"], ["Liberty", "Hardin"], ["Bell", "Harker Heights"], ["Cameron", "Harlingen"], ["Castro", "Hart"], ["Haskell", "Haskell"], ["Denton", "Haslet"], ["Tarrant", "Haslet"], ["Hunt", "Hawk Cove"], ["Wood", "Hawkins"], ["Jones", "Hawley"], ["Hays", "Hays"], ["Robertson", "Hearne"], ["Rockwall", "Heath"], ["Kaufman", "Heath"], ["Denton", "Hebron"], ["Collin", "Hebron"], ["Donley", "Hedley"], ["Harris", "Hedwig Village"], ["Bexar", "Helotes"], ["Sabine", "Hemphill"], ["Waller", "Hempstead"], ["Rusk", "Henderson"], ["Clay", "Henrietta"], ["Deaf Smith", "Hereford"], ["McLennan", "Hewitt"], ["Denton", "Hickory Creek"], ["Hamilton", "Hico"], ["Hidalgo", "Hidalgo"], ["Smith", "Hideaway"], ["Lipscomb", "Higgins"], ["Burnet", "Highland Haven"], ["Dallas", "Highland Park"], ["Denton", "Highland Village"], ["Bexar", "Hill Country Village"], ["Brazoria", "Hillcrest Village"], ["Hill", "Hillsboro"], ["Harris", "Hilshire Village"], ["Brazoria", "Hitchcock"], ["Galveston", "Hitchcock"], ["Brazoria", "Holiday Lakes"], ["Bell", "Holland"], ["Archer", "Holliday"], ["Bexar", "Hollywood Park"], ["Medina", "Hondo"], ["Fannin", "Honey Grove"], ["Bowie", "Hooks"], ["El Paso", "Horizon City"], ["Burnet", "Horseshoe Bay"], ["Llano", "Horseshoe Bay"], ["Montgomery", "Houston"], ["Harris", "Houston"], ["Fort Bend", "Houston"], ["Brazoria", "Houston"], ["Donley", "Howardwick"], ["Grayson", "Howe"], ["Hill", "Hubbard"], ["Angelina", "Hudson"], ["Parker", "Hudson Oaks"], ["Morris", "Hughes Springs"], ["Cass", "Hughes Springs"], ["Harris", "Humble"], ["Harris", "Hunters Creek Village"], ["Angelina", "Huntington"], ["Walker", "Huntsville"], ["Tarrant", "Hurst"], ["Dallas", "Hutchins"], ["Williamson", "Hutto"], ["Shelby", "Huxley"], ["Lubbock", "Idalou"], ["Taylor", "Impact"], ["Cameron", "Indian Lake"], ["Austin", "Industry"], ["San Patricio", "Ingleside"], ["San Patricio", "Ingleside On The Bay"], ["Kerr", "Ingram"], ["Grimes", "Iola"], ["Brazoria", "Iowa Colony"], ["Wichita", "Iowa Park"], ["Pecos", "Iraan"], ["Bosque", "Iredell"], ["Dallas", "Irving"], ["Tarrant", "Irving"], ["Ellis", "Italy"], ["Hill", "Itasca"], ["Tyler", "Ivanhoe"], ["Harris", "Jacinto City"], ["Jack", "Jacksboro"], ["Cherokee", "Jacksonville"], ["Galveston", "Jamaica Beach"], ["Williamson", "Jarrell"], ["Jasper", "Jasper"], ["Kent", "Jayton"], ["Marion", "Jefferson"], ["Harris", "Jersey Village"], ["Leon", "Jewett"], ["Shelby", "Joaquin"], ["Blanco", "Johnson City"], ["Clay", "Jolly"], ["Brazoria", "Jones Creek"], ["Travis", "Jonestown"], ["Hunt", "Josephine"], ["Collin", "Josephine"], ["Johnson", "Joshua"], ["Atascosa", "Jourdanton"], ["Kimble", "Junction"], ["Denton", "Justin"], ["Karnes", "Karnes City"], ["Waller", "Katy"], ["Harris", "Katy"], ["Fort Bend", "Katy"], ["Kaufman", "Kaufman"], ["Johnson", "Keene"], ["Tarrant", "Keller"], ["Galveston", "Kemah"], ["Kaufman", "Kemp"], ["Lampasas", "Kempner"], ["Fort Bend", "Kendleton"], ["Karnes", "Kenedy"], ["Liberty", "Kenefick"], ["Houston", "Kennard"], ["Tarrant", "Kennedale"], ["Henderson", "Kerens"], ["Navarro", "Kerens"], ["Winkler", "Kermit"], ["Kerr", "Kerrville"], ["Gregg", "Kilgore"], ["Rusk", "Kilgore"], ["Coryell", "Killeen"], ["Bell", "Killeen"], ["Kleberg", "Kingsville"], ["Bexar", "Kirby"], ["Jasper", "Kirbyville"], ["Freestone", "Kirvin"], ["Grayson", "Knollwood"], ["Knox", "Knox City"], ["Limestone", "Kosse"], ["Hardin", "Kountze"], ["Swisher", "Kress"], ["Denton", "Krugerville"], ["Denton", "Krum"], ["Brazos", "Kurten"], ["Hays", "Kyle"], ["Cameron", "La Feria"], ["Fayette", "La Grange"], ["Starr", "La Grulla"], ["Hidalgo", "La Joya"], ["Galveston", "La Marque"], ["Harris", "La Porte"], ["Wilson", "La Vernia"], ["Hidalgo", "La Villa"], ["Jackson", "La Ward"], ["Medina", "LaCoste"], ["McLennan", "Lacy-Lakeview"], ["Fannin", "Ladonia"], ["Travis", "Lago Vista"], ["Cameron", "Laguna Vista"], ["Wise", "Lake Bridgeport"], ["San Patricio", "Lake City"], ["Denton", "Lake Dallas"], ["Brazoria", "Lake Jackson"], ["Randall", "Lake Tanglewood"], ["Tarrant", "Lake Worth"], ["Gregg", "Lakeport"], ["San Patricio", "Lakeside (San Patricio)"], ["Tarrant", "Lakeside (Tarrant)"], ["Wichita", "Lakeside City"], ["Archer", "Lakeside City"], ["Hall", "Lakeview"], ["Travis", "Lakeway"], ["Denton", "Lakewood Village"], ["Dawson", "Lamesa"], ["Lampasas", "Lampasas"], ["Dallas", "Lancaster"], ["Ellis", "Lancaster"], ["Webb", "Laredo"], ["Houston", "Latexo"], ["Collin", "Lavon"], ["Taylor", "Lawn"], ["Harris", "League City"], ["Brazoria", "League City"], ["Galveston", "League City"], ["Real", "Leakey"], ["Williamson", "Leander"], ["Travis", "Leander"], ["Bowie", "Leary"], ["Gray", "Lefors"], ["Bexar", "Leon Valley"], ["Leon", "Leona"], ["Fannin", "Leonard"], ["McLennan", "Leroy"], ["Hockley", "Levelland"], ["Denton", "Lewisville"], ["Lee", "Lexington"], ["Liberty", "Liberty"], ["Williamson", "Liberty Hill"], ["Denton", "Lincoln Park"], ["Smith", "Lindale"], ["Cass", "Linden"], ["Cooke", "Lindsay"], ["Hood", "Lipan"], ["Denton", "Little Elm"], ["Bell", "Little River Academy"], ["Lamb", "Littlefield"], ["Bexar", "Live Oak"], ["Brazoria", "Liverpool"], ["Polk", "Livingston"], ["Llano", "Llano"], ["Caldwell", "Lockhart"], ["Floyd", "Lockney"], ["Henderson", "Log Cabin"], ["Lampasas", "Lometa"], ["Hunt", "Lone Oak"], ["Morris", "Lone Star"], ["Harrison", "Longview"], ["Gregg", "Longview"], ["Mitchell", "Loraine"], ["McLennan", "Lorena"], ["Crosby", "Lorenzo"], ["Cameron", "Los Fresnos"], ["Cameron", "Los Indios"], ["Dawson", "Los Ybanez"], ["Falls", "Lott"], ["Houston", "Lovelady"], ["Collin", "Lowry Crossing"], ["Lubbock", "Lubbock"], ["Collin", "Lucas"], ["Jones", "Lueders"], ["Shackelford", "Lueders"], ["Angelina", "Lufkin"], ["Guadalupe", "Luling"], ["Caldwell", "Luling"], ["Hardin", "Lumberton"], ["Willacy", "Lyford"], ["Bexar", "Lytle"], ["Medina", "Lytle"], ["Atascosa", "Lytle"], ["Van Zandt", "Mabank"], ["Henderson", "Mabank"], ["Kaufman", "Mabank"], ["Madison", "Madisonville"], ["Montgomery", "Magnolia"], ["Henderson", "Malakoff"], ["Hill", "Malone"], ["Travis", "Manor"], ["Tarrant", "Mansfield"], ["Ellis", "Mansfield"], ["Johnson", "Mansfield"], ["Brazoria", "Manvel"], ["Burnet", "Marble Falls"], ["Presidio", "Marfa"], ["Cass", "Marietta"], ["Guadalupe", "Marion"], ["Falls", "Marlin"], ["Leon", "Marquez"], ["Harrison", "Marshall"], ["McLennan", "Mart"], ["Limestone", "Mart"], ["Guadalupe", "Martindale"], ["Caldwell", "Martindale"], ["Mason", "Mason"], ["Motley", "Matador"], ["San Patricio", "Mathis"], ["Bowie", "Maud"], ["Ellis", "Maypearl"], ["Hidalgo", "McAllen"], ["Upton", "McCamey"], ["Coryell", "McGregor"], ["McLennan", "McGregor"], ["Collin", "McKinney"], ["Gray", "McLean"], ["Rockwall", "McLendon-Chisholm"], ["Kaufman", "McLendon-Chisholm"], ["Terry", "Meadow"], ["Burnet", "Meadowlakes"], ["Harris", "Meadows Place"], ["Fort Bend", "Meadows Place"], ["Archer", "Megargel"], ["Collin", "Melissa"], ["McCulloch", "Melvin"], ["Hall", "Memphis"], ["Menard", "Menard"], ["Hidalgo", "Mercedes"], ["Bosque", "Meridian"], ["Taylor", "Merkel"], ["Hill", "Mertens"], ["Irion", "Mertzon"], ["Dallas", "Mesquite"], ["Kaufman", "Mesquite"], ["Limestone", "Mexia"], ["Roberts", "Miami"], ["Martin", "Midland"], ["Midland", "Midland"], ["Ellis", "Midlothian"], ["Madison", "Midway"], ["Milam", "Milano"], ["Navarro", "Mildred"], ["Runnels", "Miles"], ["Ellis", "Milford"], ["Titus", "Miller's Cove"], ["Parker", "Millsap"], ["Wood", "Mineola"], ["Palo Pinto", "Mineral Wells"], ["Parker", "Mineral Wells"], ["Palo Pinto", "Mingus"], ["Hidalgo", "Mission"], ["Harris", "Missouri City"], ["Fort Bend", "Missouri City"], ["Wheeler", "Mobeetie"], ["Rockwall", "Mobile City"], ["Winkler", "Monahans"], ["Ward", "Monahans"], ["Liberty", "Mont Belvieu"], ["Harris", "Mont Belvieu"], ["Chambers", "Mont Belvieu"], ["Montgomery", "Montgomery"], ["McLennan", "Moody"], ["Henderson", "Moore Station"], ["Shackelford", "Moran"], ["Bosque", "Morgan"], ["Harris", "Morgan's Point"], ["Bell", "Morgan's Point Resort"], ["Cochran", "Morton"], ["Lavaca", "Moulton"], ["Hill", "Mount Calm"], ["Rusk", "Mount Enterprise"], ["Titus", "Mount Pleasant"], ["Franklin", "Mount Vernon"], ["Hays", "Mountain City"], ["Cooke", "Muenster"], ["Bailey", "Muleshoe"], ["Mills", "Mullin"], ["Knox", "Munday"], ["Henderson", "Murchison"], ["Collin", "Murphy"], ["Navarro", "Mustang"], ["Travis", "Mustang Ridge"], ["Caldwell", "Mustang Ridge"], ["Nacogdoches", "Nacogdoches"], ["Morris", "Naples"], ["Bowie", "Nash"], ["Harris", "Nassau Bay"], ["Medina", "Natalia"], ["Navarro", "Navarro"], ["Brazos", "Navasota"], ["Grimes", "Navasota"], ["Castro", "Nazareth"], ["Jefferson", "Nederland"], ["Fort Bend", "Needville"], ["Harrison", "Nesbitt"], ["Collin", "Nevada"], ["Guadalupe", "New Berlin"], ["Bexar", "New Berlin"], ["Bowie", "New Boston"], ["Comal", "New Braunfels"], ["Guadalupe", "New Braunfels"], ["Smith", "New Chapel Hill"], ["Lubbock", "New Deal"], ["Wise", "New Fairview"], ["Lynn", "New Home"], ["Collin", "New Hope"], ["Rusk", "New London"], ["Cherokee", "New Summerfield"], ["Walker", "New Waverly"], ["Wise", "Newark"], ["Young", "Newcastle"], ["Newton", "Newton"], ["Hunt", "Neylandville"], ["Hays", "Niederwald"], ["Caldwell", "Niederwald"], ["Wilson", "Nixon"], ["Gonzales", "Nixon"], ["Montague", "Nocona"], ["Bell", "Nolanville"], ["Jefferson", "Nome"], ["Smith", "Noonday"], ["Dewitt", "Nordheim"], ["Leon", "Normangee"], ["Madison", "Normangee"], ["Liberty", "North Cleveland"], ["Tarrant", "North Richland Hills"], ["Denton", "Northlake"], ["Coleman", "Novice"], ["Kaufman", "Oak Grove"], ["Ellis", "Oak Leaf"], ["Denton", "Oak Point"], ["Cooke", "Oak Ridge (Cooke)"], ["Kaufman", "Oak Ridge (Kaufman)"], ["Montgomery", "Oak Ridge North"], ["Navarro", "Oak Valley"], ["Leon", "Oakwood"], ["Haskell", "O'Brien"], ["San Patricio", "Odem"], ["Ector", "Odessa"], ["Midland", "Odessa"], ["Dawson", "O'Donnell"], ["Lynn", "O'Donnell"], ["Coryell", "Oglesby"], ["Liberty", "Old River-Winfree"], ["Chambers", "Old River-Winfree"], ["Bexar", "Olmos Park"], ["Young", "Olney"], ["Lamb", "Olton"], ["Morris", "Omaha"], ["Polk", "Onalaska"], ["Hockley", "Opdyke West"], ["Orange", "Orange"], ["Jim Wells", "Orange Grove"], ["Fort Bend", "Orchard"], ["Upshur", "Ore City"], ["Marion", "Ore City"], ["Smith", "Overton"], ["Rusk", "Overton"], ["Dallas", "Ovilla"], ["Ellis", "Ovilla"], ["Brazoria", "Oyster Creek"], ["Cottle", "Paducah"], ["Concho", "Paint Rock"], ["Matagorda", "Palacios"], ["Anderson", "Palestine"], ["Randall", "Palisades"], ["Cameron", "Palm Valley"], ["Ellis", "Palmer"], ["Hidalgo", "Palmhurst"], ["Hidalgo", "Palmview"], ["Gray", "Pampa"], ["Carson", "Panhandle"], ["Montgomery", "Panorama Village"], ["Tarrant", "Pantego"], ["Wise", "Paradise"], ["Lamar", "Paris"], ["Collin", "Parker"], ["Harris", "Pasadena"], ["Waller", "Pattison"], ["Montgomery", "Patton Village"], ["Henderson", "Payne Springs"], ["Harris", "Pearland"], ["Fort Bend", "Pearland"], ["Brazoria", "Pearland"], ["Galveston", "Pearland"], ["Frio", "Pearsall"], ["Delta", "Pecan Gap"], ["Fannin", "Pecan Gap"], ["Ellis", "Pecan Hill"], ["Reeves", "Pecos"], ["Tarrant", "Pelican Bay"], ["Hill", "Penelope"], ["Hidalgo", "Penitas"], ["Ochiltree", "Perryton"], ["Hale", "Petersburg"], ["Clay", "Petrolia"], ["Nueces", "Petronila"], ["Williamson", "Pflugerville"], ["Travis", "Pflugerville"], ["Hidalgo", "Pharr"], ["Denton", "Pilot Point"], ["Collin", "Pilot Point"], ["Orange", "Pine Forest"], ["Waller", "Pine Island"], ["Orange", "Pinehurst"], ["Sabine", "Pineland"], ["Harris", "Piney Point Village"], ["Camp", "Pittsburg"], ["Yoakum", "Plains"], ["Hale", "Plainview"], ["Denton", "Plano"], ["Collin", "Plano"], ["Fort Bend", "Pleak"], ["Wichita", "Pleasant Valley"], ["Atascosa", "Pleasanton"], ["Montgomery", "Plum Grove"], ["Liberty", "Plum Grove"], ["Rains", "Point"], ["San Jacinto", "Point Blank"], ["Calhoun", "Point Comfort"], ["Travis", "Point Venture"], ["Denton", "Ponder"], ["Aransas", "Port Aransas"], ["Nueces", "Port Aransas"], ["Jefferson", "Port Arthur"], ["Orange", "Port Arthur"], ["Cameron", "Port Isabel"], ["Calhoun", "Port Lavaca"], ["Jefferson", "Port Neches"], ["San Patricio", "Portland"], ["Garza", "Post"], ["Kaufman", "Post Oak Bend"], ["Atascosa", "Poteet"], ["Wilson", "Poth"], ["Grayson", "Pottsboro"], ["Navarro", "Powell"], ["Henderson", "Poynor"], ["Waller", "Prairie View"], ["Jim Wells", "Premont"], ["Presidio", "Presidio"], ["Cameron", "Primera"], ["Collin", "Princeton"], ["Hidalgo", "Progreso"], ["Hidalgo", "Progreso Lakes"], ["Denton", "Prosper"], ["Collin", "Prosper"], ["Denton", "Providence Village"], ["Callahan", "Putnam"], ["Ward", "Pyote"], ["Hardeman", "Quanah"], ["Cass", "Queen City"], ["Hunt", "Quinlan"], ["Brazoria", "Quintana"], ["Briscoe", "Quitaque"], ["Wood", "Quitman"], ["Crosby", "Ralls"], ["Cameron", "Rancho Viejo"], ["Eastland", "Ranger"], ["Cameron", "Rangerville"], ["Upton", "Rankin"], ["Lubbock", "Ransom Canyon"], ["Fannin", "Ravenna"], ["Willacy", "Raymondville"], ["Bowie", "Red Lick"], ["Dallas", "Red Oak"], ["Ellis", "Red Oak"], ["Bowie", "Redwater"], ["Refugio", "Refugio"], ["Rusk", "Reklaw"], ["Cherokee", "Reklaw"], ["Lamar", "Reno (Lamar)"], ["Parker", "Reno (Parker)"], ["Tarrant", "Reno (Parker)"], ["Navarro", "Retreat"], ["Wise", "Rhome"], ["Ellis", "Rice"], ["Navarro", "Rice"], ["Collin", "Richardson"], ["Dallas", "Richardson"], ["Navarro", "Richland"], ["Tarrant", "Richland Hills"], ["San Saba", "Richland Springs"], ["Fort Bend", "Richmond"], ["Brazoria", "Richwood"], ["McLennan", "Riesel"], ["Webb", "Rio Bravo"], ["Starr", "Rio Grande City"], ["Cameron", "Rio Hondo"], ["Johnson", "Rio Vista"], ["Eastland", "Rising Star"], ["Tarrant", "River Oaks"], ["Walker", "Riverside"], ["Denton", "Roanoke"], ["Motley", "Roaring Springs"], ["Coke", "Robert Lee"], ["McLennan", "Robinson"], ["Nueces", "Robstown"], ["Fisher", "Roby"], ["Haskell", "Rochester"], ["Milam", "Rockdale"], ["Aransas", "Rockport"], ["Edwards", "Rocksprings"], ["Collin", "Rockwall"], ["Rockwall", "Rockwall"], ["Camp", "Rocky Mound"], ["Bell", "Rogers"], ["Travis", "Rollingwood"], ["Starr", "Roma"], ["Montgomery", "Roman Forest"], ["Hockley", "Ropesville"], ["Nolan", "Roscoe"], ["Orange", "Rose City"], ["Jefferson", "Rose Hill Acres"], ["Hardin", "Rose Hill Acres"], ["Falls", "Rosebud"], ["Fort Bend", "Rosenberg"], ["McLennan", "Ross"], ["Kaufman", "Rosser"], ["Fisher", "Rotan"], ["Blanco", "Round Mountain"], ["Williamson", "Round Rock"], ["Travis", "Round Rock"], ["Fayette", "Round Top"], ["Rockwall", "Rowlett"], ["Dallas", "Rowlett"], ["Lamar", "Roxton"], ["Hunt", "Royse City"], ["Collin", "Royse City"], ["Rockwall", "Royse City"], ["Haskell", "Rule"], ["Wise", "Runaway Bay"], ["Karnes", "Runge"], ["Cherokee", "Rusk"], ["Uvalde", "Sabinal"], ["Collin", "Sachse"], ["Dallas", "Sachse"], ["Grayson", "Sadler"], ["Tarrant", "Saginaw"], ["Bexar", "Saint Hedwig"], ["Montague", "Saint Jo"], ["Collin", "Saint Paul"], ["Bell", "Salado"], ["Tom Green", "San Angelo"], ["Comal", "San Antonio"], ["Bexar", "San Antonio"], ["Medina", "San Antonio"], ["San Augustine", "San Augustine"], ["Cameron", "San Benito"], ["Jim Wells", "San Diego"], ["Duval", "San Diego"], ["Austin", "San Felipe"], ["Hidalgo", "San Juan"], ["Travis", "San Leanna"], ["Guadalupe", "San Marcos"], ["Hays", "San Marcos"], ["Caldwell", "San Marcos"], ["San Patricio", "San Patricio"], ["Nueces", "San Patricio"], ["Willacy", "San Perlita"], ["San Saba", "San Saba"], ["Parker", "Sanctuary"], ["Brazoria", "Sandy Point"], ["Hutchinson", "Sanford"], ["Denton", "Sanger"], ["Cooke", "Sanger"], ["Tarrant", "Sansom Park"], ["Coleman", "Santa Anna"], ["Guadalupe", "Santa Clara"], ["Galveston", "Santa Fe"], ["Cameron", "Santa Rosa"], ["Fannin", "Savoy"], ["Comal", "Schertz"], ["Guadalupe", "Schertz"], ["Bexar", "Schertz"], ["Fayette", "Schulenburg"], ["Clay", "Scotland"], ["Archer", "Scotland"], ["Harrison", "Scottsville"], ["Kaufman", "Scurry"], ["Harris", "Seabrook"], ["Calhoun", "Seadrift"], ["Dallas", "Seagoville"], ["Kaufman", "Seagoville"], ["Gaines", "Seagraves"], ["Austin", "Sealy"], ["Guadalupe", "Seguin"], ["Comal", "Selma"], ["Guadalupe", "Selma"], ["Bexar", "Selma"], ["Gaines", "Seminole"], ["Polk", "Seven Oaks"], ["Henderson", "Seven Points"], ["Baylor", "Seymour"], ["Denton", "Shady Shores"], ["Lubbock", "Shallowater"], ["Wheeler", "Shamrock"], ["Bexar", "Shavano Park"], ["Montgomery", "Shenandoah"], ["San Jacinto", "Shepherd"], ["Grayson", "Sherman"], ["Lavaca", "Shiner"], ["Harris", "Shoreacres"], ["Hardin", "Silsbee"], ["Briscoe", "Silverton"], ["Fort Bend", "Simonton"], ["San Patricio", "Sinton"], ["Carson", "Skellytown"], ["Lubbock", "Slaton"], ["Gonzales", "Smiley"], ["Bastrop", "Smithville"], ["Hockley", "Smyer"], ["Burleson", "Snook"], ["Scurry", "Snyder"], ["El Paso", "Socorro"], ["Bexar", "Somerset"], ["Burleson", "Somerville"], ["Sutton", "Sonora"], ["Hardin", "Sour Lake"], ["Harris", "South Houston"], ["Coryell", "South Mountain"], ["Cameron", "South Padre Island"], ["Denton", "Southlake"], ["Tarrant", "Southlake"], ["Grayson", "Southmayd"], ["Harris", "Southside Place"], ["Hansford", "Spearman"], ["Montgomery", "Splendora"], ["Kinney", "Spofford"], ["Harris", "Spring Valley"], ["Lamb", "Springlake"], ["Parker", "Springtown"], ["Dickens", "Spur"], ["Harris", "Stafford"], ["Fort Bend", "Stafford"], ["Montgomery", "Stagecoach"], ["Haskell", "Stamford"], ["Jones", "Stamford"], ["Martin", "Stanton"], ["Guadalupe", "Staples"], ["Caldwell", "Staples"], ["Henderson", "Star Harbor"], ["Erath", "Stephenville"], ["Sterling", "Sterling City"], ["Hutchinson", "Stinnett"], ["Wilson", "Stockdale"], ["Sherman", "Stratford"], ["Palo Pinto", "Strawn"], ["Freestone", "Streetman"], ["Navarro", "Streetman"], ["Lamb", "Sudan"], ["Fort Bend", "Sugar Land"], ["Hidalgo", "Sullivan City"], ["Hopkins", "Sulphur Springs"], ["Lamar", "Sun Valley"], ["Hockley", "Sundown"], ["Dallas", "Sunnyvale"], ["Kaufman", "Sunnyvale"], ["Moore", "Sunray"], ["Burnet", "Sunrise Beach Village"], ["Llano", "Sunrise Beach Village"], ["Travis", "Sunset Valley"], ["Brazoria", "Surfside Beach"], ["Brazoria", "Sweeny"], ["Nolan", "Sweetwater"], ["San Patricio", "Taft"], ["Lynn", "Tahoka"], ["Titus", "Talco"], ["Kaufman", "Talty"], ["Rusk", "Tatum"], ["Panola", "Tatum"], ["Williamson", "Taylor"], ["Harris", "Taylor Lake Village"], ["Jefferson", "Taylor Landing"], ["Freestone", "Teague"], ["Limestone", "Tehuacana"], ["Bell", "Temple"], ["Shelby", "Tenaha"], ["Kaufman", "Terrell"], ["Bexar", "Terrell Hills"], ["Bowie", "Texarkana"], ["Chambers", "Texas City"], ["Galveston", "Texas City"], ["Sherman", "Texhoma"], ["Dallam", "Texline"], ["Denton", "The Colony"], ["Fort Bend", "Thompsons"], ["Williamson", "Thorndale"], ["Milam", "Thorndale"], ["Limestone", "Thornton"], ["Ward", "Thorntonville"], ["Williamson", "Thrall"], ["Live Oak", "Three Rivers"], ["Throckmorton", "Throckmorton"], ["Galveston", "Tiki Island"], ["Randall", "Timbercreek Canyon"], ["Shelby", "Timpson"], ["Grayson", "Tioga"], ["Hopkins", "Tira"], ["Lamar", "Toco"], ["Grimes", "Todd Mission"], ["Hood", "Tolar"], ["Grayson", "Tom Bean"], ["Montgomery", "Tomball"], ["Harris", "Tomball"], ["Henderson", "Tool"], ["Reeves", "Toyah"], ["Taylor", "Trent"], ["Grayson", "Trenton"], ["Fannin", "Trenton"], ["Henderson", "Trinidad"], ["Navarro", "Trinidad"], ["Trinity", "Trinity"], ["Denton", "Trophy Club"], ["Tarrant", "Trophy Club"], ["Smith", "Troup"], ["Cherokee", "Troup"], ["Bell", "Troy"], ["Swisher", "Tulia"], ["Hall", "Turkey"], ["Taylor", "Tuscola"], ["Taylor", "Tye"], ["Smith", "Tyler"], ["Hays", "Uhland"], ["Caldwell", "Uhland"], ["Harrison", "Uncertain"], ["Upshur", "Union Grove"], ["Hunt", "Union Valley"], ["Guadalupe", "Universal City"], ["Bexar", "Universal City"], ["Dallas", "University Park"], ["Uvalde", "Uvalde"], ["Jeff Davis", "Valentine"], ["Bosque", "Valley Mills"], ["McLennan", "Valley Mills"], ["Cooke", "Valley View"], ["Van Zandt", "Van"], ["Collin", "Van Alstyne"], ["Grayson", "Van Alstyne"], ["Culberson", "Van Horn"], ["Oldham", "Vega"], ["Ellis", "Venus"], ["Johnson", "Venus"], ["Wilbarger", "Vernon"], ["Victoria", "Victoria"], ["Orange", "Vidor"], ["Travis", "Village of The Hills"], ["Travis", "Villiage of Volente"], ["El Paso", "Vinton"], ["Bexar", "Von Ormy"], ["McLennan", "Waco"], ["Gonzales", "Waelder"], ["Bowie", "Wake Village"], ["Waller", "Waller"], ["Harris", "Waller"], ["Austin", "Wallis"], ["Bosque", "Walnut Springs"], ["Upshur", "Warren City"], ["Gregg", "Warren City"], ["Harrison", "Waskom"], ["Tarrant", "Watauga"], ["Ellis", "Waxahachie"], ["Parker", "Weatherford"], ["Travis", "Webberville"], ["Bastrop", "Webberville"], ["Harris", "Webster"], ["Galveston", "Webster"], ["Colorado", "Weimar"], ["Haskell", "Weinert"], ["Williamson", "Weir"], ["Collingsworth", "Wellington"], ["Terry", "Wellman"], ["Cherokee", "Wells"], ["Hidalgo", "Weslaco"], ["McLennan", "West"], ["Brazoria", "West Columbia"], ["Travis", "West Lake Hills"], ["Orange", "West Orange"], ["Hunt", "West Tawakoni"], ["Harris", "West University Place"], ["Mitchell", "Westbrook"], ["Denton", "Westlake"], ["Tarrant", "Westlake"], ["Collin", "Weston"], ["Fort Bend", "Weston Lakes"], ["Tarrant", "Westover Hills"], ["Tarrant", "Westworth Village"], ["Wharton", "Wharton"], ["Wheeler", "Wheeler"], ["Carson", "White Deer"], ["Gregg", "White Oak"], ["Tarrant", "White Settlement"], ["Cochran", "Whiteface"], ["Hockley", "Whiteface"], ["Smith", "Whitehouse"], ["Grayson", "Whitesboro"], ["Grayson", "Whitewright"], ["Fannin", "Whitewright"], ["Hill", "Whitney"], ["Wichita", "Wichita Falls"], ["Ward", "Wickett"], ["Montgomery", "Willis"], ["Parker", "Willow Park"], ["Van Zandt", "Wills Point"], ["Dallas", "Wilmer"], ["Lynn", "Wilson"], ["Hays", "Wimberley"], ["Bexar", "Windcrest"], ["Fannin", "Windom"], ["Clay", "Windthorst"], ["Archer", "Windthorst"], ["Titus", "Winfield"], ["Winkler", "Wink"], ["Franklin", "Winnsboro"], ["Wood", "Winnsboro"], ["Smith", "Winona"], ["Runnels", "Winters"], ["Brazos", "Wixon Valley"], ["Hunt", "Wolfe City"], ["Lubbock", "Wolfforth"], ["Montgomery", "Woodbranch Village"], ["Hays", "Woodcreek"], ["Montgomery", "Woodloch"], ["Refugio", "Woodsboro"], ["Throckmorton", "Woodson"], ["Tyler", "Woodville"], ["McLennan", "Woodway"], ["Freestone", "Wortham"], ["Limestone", "Wortham"], ["Collin", "Wylie"], ["Rockwall", "Wylie"], ["Dallas", "Wylie"], ["Wood", "Yantis"], ["Lavaca", "Yoakum"], ["Dewitt", "Yoakum"], ["Dewitt", "Yorktown"], ["Angelina", "Zavalla"]];


        var countyList = ["Anderson", "Andrews", "Angelina", "Aransas", "Archer", "Armstrong", "Atascosa", "Austin", "Bailey", "Bandera", "Bastrop", "Baylor", "Bee", "Bell", "Bexar", "Blanco", "Borden", "Bosque", "Bowie", "Brazoria", "Brazos", "Brewster", "Briscoe", "Brooks", "Brown", "Burleson", "Burnet", "Caldwell", "Calhoun", "Callahan", "Cameron", "Camp", "Carson", "Cass", "Castro", "Chambers", "Cherokee", "Childress", "Clay", "Cochran", "Coke", "Coleman", "Collin", "Collingsworth", "Colorado", "Comal", "Comanche", "Concho", "Cooke", "Coryell", "Cottle", "Crane", "Crockett", "Crosby", "Culberson", "Dallam", "Dallas", "Dawson", "Deaf Smith", "Delta", "Denton", "DeWitt", "Dickens", "Dimmit", "Donley", "Duval", "Eastland", "Ector", "Edwards", "El Paso", "Ellis", "Erath", "Falls", "Fannin", "Fayette", "Fisher", "Floyd", "Foard", "Fort Bend", "Franklin", "Freestone", "Frio", "Gaines", "Galveston", "Garza", "Gillespie", "Glasscock", "Goliad", "Gonzales", "Gray", "Grayson", "Gregg", "Grimes", "Guadalupe", "Hale", "Hall", "Hamilton", "Hansford", "Hardeman", "Hardin", "Harris", "Harrison", "Hartley", "Haskell", "Hays", "Hemphill", "Henderson", "Hidalgo", "Hill", "Hockley", "Hood", "Hopkins", "Houston", "Howard", "Hudspeth", "Hunt", "Hutchinson", "Irion", "Jack", "Jackson", "Jasper", "Jeff Davis", "Jefferson", "Jim Hogg", "Jim Wells", "Johnson", "Jones", "Karnes", "Kaufman", "Kendall", "Kenedy", "Kent", "Kerr", "Kimble", "King", "Kinney", "Kleberg", "Knox", "La Salle", "Lamar", "Lamb", "Lampasas", "Lavaca", "Lee", "Leon", "Liberty", "Limestone", "Lipscomb", "Live Oak", "Llano", "Loving", "Lubbock", "Lynn", "Madison", "Marion", "Martin", "Mason", "Matagorda", "Maverick", "McCulloch", "McLennan", "McMullen", "Medina", "Menard", "Midland", "Milam", "Mills", "Mitchell", "Montague", "Montgomery", "Moore", "Morris", "Motley", "Nacogdoches", "Navarro", "Newton", "Nolan", "Nueces", "Ochiltree", "Oldham", "Orange", "Palo Pinto", "Panola", "Parker", "Parmer", "Pecos", "Polk", "Potter", "Presidio", "Rains", "Randall", "Reagan", "Real", "Red River", "Reeves", "Refugio", "Roberts", "Robertson", "Rockwall", "Runnels", "Rusk", "Sabine", "San Augustine", "San Jacinto", "San Patricio", "San Saba", "Schleicher", "Scurry", "Shackelford", "Shelby", "Sherman", "Smith", "Somervell", "Starr", "Stephens", "Sterling", "Stonewall", "Sutton", "Swisher", "Tarrant", "Taylor", "Terrell", "Terry", "Throckmorton", "Titus", "Tom Green", "Travis", "Trinity", "Tyler", "Upshur", "Upton", "Uvalde", "Val Verde", "Van Zandt", "Victoria", "Walker", "Waller", "Ward", "Washington", "Webb", "Wharton", "Wheeler", "Wichita", "Wilbarger", "Willacy", "Williamson", "Wilson", "Winkler", "Wise", "Wood", "Yoakum", "Young", "Zapata", "Zavala"];
        function sortOrderCounty(co) {
            for (var i = 0; i &lt; countyList.length; i++) {
                if (co == countyList[i]) {
                    document.getElementById('sortCountyOrder').value = i;
                    return;
                }
            }
        }
        function sortOrderCity(ci) {
            for (var i = 0; i &lt; cityMatrix.length; i++) {
                if (ci == cityMatrix[i][1]) {
                    document.getElementById('sortCityOrder').value = i;
                    return;
                }
            }
        }

        function start() {
            document.forms[0].onsubmit = submit;
            autoSum();
           /* document.getElementById('city').onchange = function () {
                sortOrderCity(this.options[this.selectedIndex].text);
                var coList = document.getElementById("county");
                var coSelected = coList.options[coList.selectedIndex].text;
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(coList);
                    addOption(coList, 'Select One', true);
                    for (var k = 0; k &lt; countyList.length; k++) {
                        addOption(coList, countyList[k], false);
                    }
                    // sortSelect(this);
                } else {
                    removeOptions(coList);
                    addOption(coList, 'Select One', false);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        if (cityMatrix[k][1] === this.options[this.selectedIndex].text) {
                            var selected = false;
                            if (cityMatrix[k][0] == coSelected) { selected = true; }
                            addOption(coList, cityMatrix[k][0], selected);
                        }
                    }
                }


            }

            document.getElementById('county').onchange = function () {
                sortOrderCounty(this.options[this.selectedIndex].text);
                var cityList = document.getElementById("city");
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", true);

                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        addOption(cityList, cityMatrix[k][1], false);
                    }
                    // sortSelect(this);
                }
                else {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {

                        if (cityMatrix[k][0] === this.options[this.selectedIndex].text) {
                            addOption(cityList, cityMatrix[k][1], false);
                        }
                    }
                }
            }*/
            $('.datepicker').datepicker();
          /*  var jType = document.getElementsByName('jurisdictionType');
            console.log(1);
            var jTypeFunction = function () {
                console.log(2);
                var a = document.getElementsByName('jurisdictionType');
                var b = document.getElementById('city');
                for (var i = 0; i &lt; a.length; i++) {
                    if (a[i].checked === true) {
                        if (a[i].id === 'jurisdictionType1') {//If City
                            b.multiple = false;
                            return;
                        }
                        if (a[i].id === 'jurisdictionType2') {//if county
                            b.multiple = true;
                            return;
                        }
                    }
                }
            };
            jType[0].onclick = jTypeFunction; jType[1].onclick = jTypeFunction;
*/

            commandInfoWindow('affectedSpan', 'Affected', '<div><b>Structure is habitable.  Some minor damage may be eligible for assistance.  Look for the following:</b><ul><li>A few missing shingles;</li><li>Some broken windows;</li><li>Damage to cars;</li><li>Damage to Air Conditioner Compressor only;</li><li>Single Family/Multi Family Residences - 0” - 6” of water</li><li>Mobile Homes- Ground level to within 12” of bottom board.</li></ul></div>');
            commandInfoWindow('minorDamageSpan', 'Minor Damage', '<div><b>Structure is habitable with minor repairs.  Look for the following:</b><ul><li>Many missing shingles, broken windows and doors;</li><li>Siding loose, missing or damaged;</li><li>Minor shifting or settling of foundation;</li><li>Damaged septic systems (flood);</li><li>Single Family/Multi-Family Residences – 6” to 18” of water,</li><li>Mobile Homes- Within 12” of bottom board to 3” above floor level.</li></ul></div>');
            commandInfoWindow('majorDamageSpan', 'Major Damage', '<div><b>Structure is currently uninhabitable and extensive repair is required to make it habitable. Look for  the following:</b><ul><li>Portions of the roof, including decking, missing;</li><li>Twisted, bowed or cracked walls;</li><li>Penetration of structure by trees or cars, etc.;</li><li>Single Family/Multi Family Residences - 18” – 48” of water,</li><li>Mobile Homes – 3” – 12” above floor level.</li></ul></div>');
            commandInfoWindow('destroyedSpan', 'Destroyed', '<div><b>Structure is permanently uninhabitable and can not be repaired.  Look for the following:</b><ul><li>Structure gone, only foundation remains;</li><li>Major sections of walls missing or collapsed;</li><li>Entire roof gone with noticeable distortion of the walls;</li><li>Structure has shifted off of its foundation;</li><li>*Single Family/Multi-Family Residences - More than 48” of water;</li><li>*Mobile Homes - over 12" for mobile homes.</li><li>*requires further investigation</li></ul></div>');
            commandInfoWindow('insuranceSpan', 'Estimating Insurance', '<div><b>The following are general guidelines to estimating insurance coverage.</b><ul><li>Renters are less likely to have insurance.</li><li>Low income residents are less likely to have insurance.</li><li>Homeowners who are still paying off their mortgage will normally have the appropriate type of insurance.</li><li>Residents who are flooded and reside in an area that does not participate in the NFIP or in an area that has been sanctioned for NFIP code enforcement violations will not have flood insurance.</li><li>Residents who are flooded but whose property is not located in the Special Flood Hazard Area (SFHA) will probably not have flood insurance.</li></ul></div>');
            commandInfoWindow('businessesEconomicInjuryInfo', 'Business Economic Injury', '<div>SBA makes an economic injury declaration in reliance on a state certification that at least five small business concerns in a disaster area have suffered substantial economic injury as a result of the disaster and are in need of financial assistance not otherwise available on reasonable terms.<ul><li>Does not cover lost income</li><li>Businesses claiming the loss would have to provide financials and accounting records to prove the loss</li><li>Businesses compensated with insurance would have to prove their injury is substantial after insurance claims are paid</li></ul></div>')
            commandInfoWindow('emergencyProtectiveMeasuresInfo', 'Emergency Protective Measures', '<div>Includes response costs, protection of life &amp; property, and then um temporary repairs as examples</div>');
            commandInfoWindow('buildingEquipmentInfo', 'Building &amp; Equipment', '<div>Also includes vehicles and contents of buildings</div>');
            commandInfoWindow('cityInfo', 'City Options', '<div><ul><li>Multiple cities can be selected when reporting for the County by holding down the Ctrl whild clicking on the city names.</li><li>Only a single city is allowed to be selected when filling the DSO out for a City</li></ul></div>');
            commandInfoWindow('catAInfo','Category A: Debris Removal','<div>Clearance of trees and woody debris; certain building wreckage; damaged/ destroyed building contents; sand, mud, silt, and gravel; vehicles; and other disaster-related material deposited on public and, in very limited cases, private property.</div>');
            commandInfoWindow('catBInfo','Category B: Emergency Protective Measures','<div>Measures taken before, during, and after a disaster to eliminate/reduce an immediate threat to life, public health, or safety, or to eliminate/reduce an immediate threat of significant damage to improved public and private property through cost-effective measures.</div>');
            commandInfoWindow('catCInfo','Category C: Roads and Bridges','<div>Repair of roads, bridges, and associated features, such as shoulders, ditches, culverts, lighting, and signs.</div>');
            commandInfoWindow('catDInfo','Category D: Water Control Facilities','<div>Repair of drainage channels, pumping facilities, and some irrigation facilities. Repair of levees, dams, and flood control channels fall under Category D, but the eligibility of these facilities is restricted.</div>');
            commandInfoWindow('catEInfo','Category E: Buildings and Equipment','<div>Repair or replacement of buildings, including their contents and systems; heavy equipment; and vehicles.</div>');
            commandInfoWindow('catFInfo','Category F: Utilities','<div>Repair of water treatment and delivery systems; power generation facilities and distribution facilities; sewage collection and treatment facilities; and communications.</div>');
            commandInfoWindow('catGInfo','Category G: Parks, Recreational Facilities, and Other Facilities','<div>Repair and restoration of parks, playgrounds, pools, cemeteries, mass transit facilities, and beaches. This category also is used for any work or facility that cannot be characterized adequately by Categories A-F.</div>');
        }
        function submit() {
            
        }
        window.onload = start;
    </script></head><body><div class="container agencytemplate_boardbackground"><form role="form"><div class="content"><div id="hidden" style="display:none"><div class="form-group form-inline"><label class="control-label" for="sortCountyOrder">Sort County Order:</label><input name="sortCountyOrder" id="sortCountyOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="sortCityOrder">Sort City Order:</label><input name="sortCityOrder" id="sortCityOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="submitedDateTime">Submited DateTime:</label><input name="submitedDateTime" id="submitedDateTime" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="updated">Updated:</label><input name="updated" id="updated" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="incidentName">Incident Name:</label><input name="incidentName" id="incidentName" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="additionalEmails"> Additional Emails:</label><input name="additionalEmails" id="additionalEmails" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="entryType"> Entry Type:</label><input name="entryType" id="entryType" type="text" style="form-control input-sm" /></div></div><div id="container"><h1><span class="label label-default">Incident</span></h1><div class="form-group form-inline"><label class="control-label" for="webeocIncident">Incident:</label><input type="text" name="webeocIncident" style="form-control input-sm" /></div><h1><span class="label label-default">General</span></h1><div class="form-group required form-inline"><label class="control-label" for="jurisdictionType">Jurisdiction Type:</label>
        City <input id="jurisdictionType1" type="radio" style="form-control input-sm" name="jurisdictionType" value="City" />
        County <input id="jurisdictionType2" type="radio" style="form-control input-sm" name="jurisdictionType" checked="true" value="County" /></div><div class="form-group form-inline"><label class="control-label" for="county">County:</label><input type="text" name="county" ReadOnly="ReadOnly" style="form-control input-sm" /><!-- </select>--></div><div class="form-group form-inline"><label class="control-label" for="city">City:</label><span id="cityInfo" class="label label-info">i</span><!--<select name="city" id="city" style="form-control" multiple="multiple"></select>--><input type="text" name="city" ReadOnly="ReadOnly" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="population">Population:</label><input name="population" id="population" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="type">Type:</label><input name="type" id="type" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="nfip">If this is a flood event, does the City/County participate in the National Flood Insurance Program (NFIP)?:</label>
        Yes <input id="nfip1" type="radio" style="form-control input-sm" name="nfip" value="Yes" />
        No <input id="nfip2" type="radio" style="form-control input-sm" name="nfip" value="No" /></div><div class="form-group form-inline"><label class="control-label" for="dateOfDisaster">Inclusive dates of the disaster:</label><input name="dateOfDisaster1" id="dateOfDisaster1" type="text" placeholder="Start Date" data-provide="datepicker" style="form-control input-sm datepicker" /> - <input data-provide="datepicker" name="dateOfDisaster2" placeholder="End Date" style="form-control input-sm datepicker" /><span><input type="checkbox" name="continuing" id="continuing" value="Continuing" /></span></div><div class="form-group form-inline"><label class="control-label" for="declarationIssued">Was a local disaster declaration issued:</label>
       Yes <input id="declarationIssued1" type="radio" style="form-control input-sm" name="declarationIssued" value="Yes" />
       No <input id="declarationIssued2" type="radio" style="form-control input-sm" name="declarationIssued" value="No" /></div><div class="form-group required form-inline"><label class="control-label" for="contactPerson">Contact Person:</label><input name="contactPerson" id="contactPerson" type="text" style="form-control input-sm" /></div><div class="form-group required form-inline"><label class="control-label" for="contactPersonTitle">Contact Person:</label><input name="contactPersonTitle" id="contactPersonTitle" type="text" class="form-control input-sm" runat="server" /></div><div class="form-group form-inline"><label class="control-label" for="address">Address:</label><input name="address" id="address" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="phone">Phone:</label><input name="phone" id="phone" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="mobilePhone">Mobile Phone:</label><input name="mobilePhone" id="mobilePhone" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="fax">Fax:</label><input name="fax" id="fax" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="pager">Pager:</label><input name="pager" id="pager" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="dutyPhone">24-Hr Duty Officer/Sheriff's Office:</label><input name="dutyPhone" id="dutyPhone" type="text" style="form-control input-sm" /></div><h1><span class="label label-default"> Individual Assistance</span></h1><!-- <h3><span class="label label-default"> Casualties:</span></h3>                   
 <div class="form-group form-inline">
      <label class="control-label" for="fatalities">Number of Fatalities:</label>
       <input name="fatalities" id="fatalities" type="text" placeholder="0" style="form-control input-sm"/>
    </div>        
  <div class="form-group form-inline">
      <label class="control-label" for="injuries">Number of Injuries:</label>
       <input name="injuries" id="injuries" type="text" placeholder="0" style="form-control input-sm"/>
    </div>
          <div class="form-group form-inline">
      <label class="control-label" for="hospitalized">Number of Hospitalized:</label>
       <input name="hospitalized" id="hospitalized" type="text" placeholder="0" style="form-control input-sm"/>
    </div>  --><!--                      
<h3><span class="label label-default">Agricultural Losses:</span>
</h3>
            <h4><i>Contact the Farm Service Agency in your county</i></h4>
<div class="form-group form-inline">
      <label class="control-label" for="agricultural">Is agricultural assistance needed?:</label>
       Yes <input id="agricultural1" type="radio" style="form-control input-sm" name="declarationIssued" value="Yes" />
       No <input id="agricultural2" type="radio" style="form-control input-sm" name="declarationIssued" value="No" />
<br />
    <i> If yes, please attach USDA flash situation report.</i>    
</div>
            <div class="form-group form-inline">
      <label class="control-label" for="usdaFlashReport">USDA Flash Report:</label>
               <input type="file" name="usdaFlashReport" />
</div>
--><h3><span class="label label-default">  Residential Losses - Primary Residence Only</span></h3><table class="table table-bordered"><tr><td>Type of Homes</td><td>Affected <span id="affectedSpan" class="label label-info">i</span></td><td>Minor Damage <span id="minorDamageSpan" class="label label-info">i</span></td><td>Major Damage <span id="majorDamageSpan" class="label label-info">i</span></td><td>Destroyed <span id="destroyedSpan" class="label label-info">i</span></td><td>% Covered by Insurance <span id="insuranceSpan" class="label label-info">i</span></td></tr><tr><td>Single Family Homes</td><td><input name="sfhAffected" id="sfhAffected" type="text" placeholder="0" style="form-control input-sm totalsAffected" /></td><td><input name="sfhMinorDamage" id="sfhMinorDamage" type="text" placeholder="0" style="form-control input-sm totalsMinorDamage" /></td><td><input name="sfhMajorDamage" id="sfhMajorDamage" type="text" placeholder="0" style="form-control input-sm totalsMajorDamage" /></td><td><input name="sfhDestroyed" id="sfhDestroyed" type="text" placeholder="0" style="form-control input-sm totalsDestroyed" /></td><td><input name="sfhCovByInsurance" id="sfhCovByInsurance" type="text" placeholder="0" style="form-control input-sm totalsCovByInsurance" /></td></tr><tr><td>Mobile Homes</td><td><input name="mhAffected" id="mhAffected" type="text" placeholder="0" style="form-control input-sm  totalsAffected" /></td><td><input name="mhMinorDamage" id="mhMinorDamage" type="text" placeholder="0" style="form-control input-sm totalsMinorDamage" /></td><td><input name="mhMajorDamage" id="mhMajorDamage" type="text" placeholder="0" style="form-control input-sm totalsMajorDamage" /></td><td><input name="mhDestroyed" id="mhDestroyed" type="text" placeholder="0" style="form-control input-sm totalsDestroyed" /></td><td><input name="mhCovByInsurance" id="mhCovByInsurance" type="text" placeholder="0" style="form-control input-sm totalsCovByInsurance" /></td></tr><tr><td>Multi-Family Units</td><td><input name="mfuAffected" id="mfuAffected" type="text" placeholder="0" style="form-control input-sm  totalsAffected" /></td><td><input name="mfuMinorDamage" id="mfuMinorDamage" type="text" placeholder="0" style="form-control input-sm totalsMinorDamage" /></td><td><input name="mfuMajorDamage" id="mfuMajorDamage" type="text" placeholder="0" style="form-control input-sm totalsMajorDamage" /></td><td><input name="mfuDestroyed" id="mfuDestroyed" type="text" placeholder="0" style="form-control input-sm totalsDestroyed" /></td><td><input name="mfuCovByInsurance" id="mfuCovByInsurance" type="text" placeholder="0" style="form-control input-sm totalsCovByInsurance" /></td></tr><tr><td>Totals</td><td><input name="totalsAffected" id="totalsAffected" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="totalsMinorDamage" id="totalsMinorDamage" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="totalsMajorDamage" id="totalsMajorDamage" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="totalsDestroyed" id="totalsDestroyed" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="totalsCovByInsurance" id="totalsCovByInsurance" type="text" placeholder="0" style="form-control input-sm" /></td></tr></table><div class="form-group form-inline"><label class="control-label" for="homesIsolated">Number of homes isolated due to road closure (high water, etc.):</label><input name="homesIsolated" id="homesIsolated" type="text" placeholder="0" style="form-control input-sm" /></div><!--
<div class="form-group form-inline">
      <label class="control-label" for="numNotSatisfiedByVolunteers">Estimated number of persons whose situation will not be satisfied by volunteer organizations (Contact local volunteer organizations):</label>
       <input name="numNotSatisfiedByVolunteers" id="numNotSatisfiedByVolunteers" type="text" style="form-control input-sm"/>
    </div>--><!--<div class="form-group form-inline">
      <label class="control-label" for="sheltersOpen">Are shelters opened?:</label>
      Yes  <input id="sheltersOpen1" type="radio" style="form-control input-sm" name="sheltersOpen" value="Yes" />
       No <input id="sheltersOpen2" type="radio" style="form-control input-sm" name="sheltersOpen" value="No" />
    </div>
<div class="form-group form-inline">
      <label class="control-label" for="sheltersHowMany">How many shelters are open?:</label>
       <input name="sheltersHowMany" id="sheltersHowMany" type="text" style="form-control input-sm"/>
    </div>
<div class="form-group form-inline">
      <label class="control-label" for="shelterDetails">Name, location, capacity, and current occupancy of shelters:</label>
       <input name="shelterDetails" id="shelterDetails" type="text" style="form-control" TextMode="MultiLine" Rows="5"/>
    </div>--><h1><span class="label label-default">Business Losses/Impacts:</span></h1><table class="table table-bordered"><tr><td></td><td>Number</td><td># Covered by Adequate Insurance</td><td>Total estimated repair cost</td></tr><tr><td>Minor Damage (less than 40%)</td><td><input name="numberMinorDamage" id="numberMinorDamage" type="text" placeholder="0" style="form-control input-sm numberTotal" /></td><td><input name="coveredMinorDamage" id="coveredMinorDamage" type="text" placeholder="0" style="form-control input-sm coveredTotal" /></td><td><input name="totalMinorDamage" id="totalMinorDamage" type="text" placeholder="0" style="form-control input-sm totalTotal" /></td></tr><tr><td>Major Damage (greater than 40%)</td><td><input name="numberMajorDamage" id="numberMajorDamage" type="text" placeholder="0" style="form-control input-sm numberTotal" /></td><td><input name="coveredMajorDamage" id="coveredMajorDamage" type="text" placeholder="0" style="form-control input-sm coveredTotal" /></td><td><input name="totalMajorDamage" id="totalMajorDamage" type="text" placeholder="0" style="form-control input-sm totalTotal" /></td></tr><tr><td>Total</td><td><input name="numberTotal" id="numberTotal" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="coveredTotal" id="coveredTotal" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="totalTotal" id="totalTotal" type="text" placeholder="0" style="form-control input-sm" /></td></tr></table><div class="form-group form-inline"><label class="control-label" for="businessesCeased">How many businesses have ceased operations:</label><input name="businessesCeased" id="businessesCeased" type="text" placeholder="0" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="businessesEconomicInjury">How many businesses have experienced economic injury:<span id="businessesEconomicInjuryInfo" class="label label-info">i</span></label><input name="businessesEconomicInjury" id="businessesEconomicInjury" type="text" placeholder="0" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="numberUnemployed">Estimated number of persons unemployed because of this disaster: </label><input name="numberUnemployed" id="numberUnemployed" type="text" placeholder="0" style="form-control input-sm" /><i>(Contact affected businesses and the local Texas Workforce Commission Office)</i></div><h1><span class="label label-default">PUBLIC ASSISTANCE</span></h1><table class="table table-bordered"><tr><td>Category</td><td>No of Sites</td><td>Estimated Repair Costs</td><td>Anticipated Insurance.*</td></tr><tr><td><span class="label label-default" id="catAInfo">A</span>Debris Clearance</td><td><input name="sitesDebrisClearance" id="sitesDebrisClearance" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostDebrisClearance" id="repairCostDebrisClearance" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceDebrisClearance" id="insuranceDebrisClearance" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catBInfo">B</span>Emergency Protective Measures <span id="emergencyProtectiveMeasuresInfo" class="label label-info">i</span></td><td><input name="sitesEmergency" id="sitesEmergency" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostEmergency" id="repairCostEmergency" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceEmergency" id="insuranceEmergency" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catCInfo">C</span>Roads &amp; Bridges</td><td><input name="sitesRoadPaved" id="sitesRoadPaved" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostRoadPaved" id="repairCostRoadPaved" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceRoadPaved" id="insuranceRoadPaved" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catDInfo">D</span>Water Control Facilities <br />(Dams, levees, dikes)
</td><td><input name="sitesWaterControlFacilities" id="sitesWaterControlFacilities" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostWaterControlFacilities" id="repairCostWaterControlFacilities" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceWaterControlFacilities" id="insuranceWaterControlFacilities" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catEInfo">E</span>Buildings &amp; Equipment<span id="buildingEquipmentInfo" class="label label-info">i</span></td><td><input name="sitesBuildingsEquipment" id="sitesBuildingsEquipment" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostBuildingsEquipment" id="repairCostBuildingsEquipment" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceBuildingsEquipment" id="insuranceBuildingsEquipment" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catFInfo">F</span>Public Utility Systems<br />
(Gas, Electric, Sewer, Water)
</td><td><input name="sitesUtilitySystems" id="sitesUtilitySystems" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostUtilitySystems" id="repairCostUtilitySystems" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceUtilitySystems" id="insuranceUtilitySystems" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catGInfo">G</span>
            Other Types of Facilities<br />
(Recreational Facilities, Airports, etc.)
</td><td><input name="sitesOther" id="sitesOther" type="text" placeholder="0" style="form-control input-sm sitesTotals" /></td><td><input name="repairCostOther" id="repairCostOther" type="text" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td><input name="insuranceOther" id="insuranceOther" type="text" placeholder="0" style="form-control input-sm insuranceTotals" /></td></tr><tr><td>Totals
</td><td><input name="sitesTotals" id="sitesTotals" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="repairCostTotals" id="repairCostTotals" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="insuranceTotals" id="insuranceTotals" type="text" placeholder="0" style="form-control input-sm" /></td></tr></table><i>* Anticipated insurance is normally calculated by subtracting any deductible, depreciation or 
     uncoverable loss from the estimated repair cost.
</i><div class="form-group form-inline"><label class="control-label" for="annualMaintenanceBudget">Total annual maintenance budget (i.e. Public Works, Road &amp; Bridge):</label><input name="annualMaintenanceBudget" id="annualMaintenanceBudget" type="text" placeholder="0" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="startOfFiscalYear">Start of Fiscal Year(Month):</label><input name="startOfFiscalYear" id="startOfFiscalYear" type="text" style="form-control input-sm" /></div><h1><span class="label label-default">Other Eligible Entities</span></h1><i>(Contact non-profit or governmental, medical, emergency, utility, educational, custodial care facilities, etc.)</i><table class="table table-bordered"><tr><td>Organization/ Facility</td><td>Cat A-G</td><td>No. of Sites</td><td>Estimated Repair Cost</td><td>Anticipated Insurance *</td></tr><tr><td><input name="orgFacility01" id="orgFacility01" type="text" style="form-control input-sm" /></td><td><select name="cat01" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites01" id="sites01" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost01" id="repairCost01" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance01" id="insurance01" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility02" id="orgFacility02" type="text" style="form-control input-sm" /></td><td><select name="cat02" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites02" id="sites02" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost02" id="repairCost02" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance02" id="insurance02" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility03" id="orgFacility03" type="text" style="form-control input-sm" /></td><td><select name="cat03" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites03" id="sites03" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost03" id="repairCost03" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance03" id="insurance03" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility04" id="orgFacility04" type="text" style="form-control input-sm" /></td><td><select name="cat04" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites04" id="sites04" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost04" id="repairCost04" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance04" id="insurance04" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility05" id="orgFacility05" type="text" style="form-control input-sm" /></td><td><select name="cat05" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites05" id="sites05" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost05" id="repairCost05" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance05" id="insurance05" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility06" id="orgFacility06" type="text" style="form-control input-sm" /></td><td><select name="cat06" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites06" id="sites06" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost06" id="repairCost06" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance06" id="insurance06" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility07" id="orgFacility07" type="text" style="form-control input-sm" /></td><td><select name="cat07" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites07" id="sites07" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost07" id="repairCost07" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance07" id="insurance07" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility08" id="orgFacility08" type="text" style="form-control input-sm" /></td><td><select name="cat08" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites08" id="sites08" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost08" id="repairCost08" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance08" id="insurance08" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility09" id="orgFacility09" type="text" style="form-control input-sm" /></td><td><select name="cat09" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites09" id="sites09" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost09" id="repairCost09" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance09" id="insurance09" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility10" id="orgFacility10" type="text" style="form-control input-sm" /></td><td><select name="cat10" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites10" id="sites10" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost10" id="repairCost10" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance10" id="insurance10" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility11" id="orgFacility11" type="text" style="form-control input-sm" /></td><td><select name="cat11" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites11" id="sites11" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost11" id="repairCost11" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance11" id="insurance11" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility12" id="orgFacility12" type="text" style="form-control input-sm" /></td><td><select name="cat12" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites12" id="sites12" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost12" id="repairCost12" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance12" id="insurance12" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility13" id="orgFacility13" type="text" style="form-control input-sm" /></td><td><select name="cat13" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites13" id="sites13" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost13" id="repairCost13" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance13" id="insurance13" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility14" id="orgFacility14" type="text" style="form-control input-sm" /></td><td><select name="cat14" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites14" id="sites14" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost14" id="repairCost14" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance14" id="insurance14" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility15" id="orgFacility15" type="text" style="form-control input-sm" /></td><td><select name="cat15" style="form-control input-sm"><option></option><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites15" id="sites15" type="text" placeholder="0" style="form-control input-sm sitesOtherTotal" /></td><td><input name="repairCost15" id="repairCost15" type="text" placeholder="0" style="form-control input-sm repairCostTotal" /></td><td><input name="insurance15" id="insurance15" type="text" placeholder="0" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td>Totals</td><td></td><td><input name="sitesOtherTotal" id="sitesOtherTotal" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="repairCostTotal" id="repairCostTotal" type="text" placeholder="0" style="form-control input-sm" /></td><td><input name="insuranceCostTotal" id="insuranceCostTotal" type="text" placeholder="0" style="form-control input-sm" /></td></tr></table><br /><div>
This form is for damage assessment reporting purposes only.  In accordance with the State Emergency Management Plan, if a Mayor/County Judge determines that a situation is of such severity and magnitude that an effective response is beyond the affected jurisdiction’s capability to recover, a letter outlining the disaster impact and the need for supplemental State and/or Federal assistance must accompany this DSO.
</div><h1><span class="label label-default">General Notes</span></h1><div class="form-group form-inline"><label class="control-label" for="notes">Notes:</label><textarea name="notes" id="notes" style="form-control"></textarea><!-- <input name="notes" id="notes" type="text" style="form-control" Rows="5" TextMode="MultiLine"/>--></div><h1><span class="label label-default">Submitter Information</span></h1><div class="form-group form-inline"><label class="control-label" for="submitterName">Name:</label><input name="submitterName" id="submitterName" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="submitterEmail">Email:</label><input name="submitterEmail" id="submitterEmail" type="text" style="form-control input-sm" /></div><i> If you include your email, a confirmation email will be sent to you.</i></div><div class="form-group form-inline"><label class="control-label" for="hidden">Hide:</label><input name="hidden" id="hidden" type="checkbox" style="form-control input-sm" value="Yes" /><select name="socProcessed"><option>Not Processed</option><option>Processed</option></select></div></div></form></div></body></html></view><view tablename="Core" name="setKey (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="cc11c3a9-8a5b-4247-ab98-debb8cf7ca4e" assignable="1"><html><head><style type="text/css">
  html, body, form, a, abbr, acronym, address, blockquote, caption, div, dd, dl, dt, fieldset, h1, h2, h3, h4, h5, h6, img, label, legend, li, ol, p, pre, span, table, tbody, td, tfoot, th, thead, tr, ul{border:0;margin:0;padding:0;}
  body{background-color:#d1d2d4;color:#000;margin:1.0em;font:normal 0.9em arial;}
  div.container{border:solid 1px;border-color:#0069aa;}
  div.content{margin:1em;}
  table.input{border-collapse:collapse;width:100%;empty-cells:show;}
  table.input td, table.input th{padding:0.1em 0.3em 0.1em 0.3em;}
  table.input th{text-align:right;}
  h1.heading{font-weight:normal;font-size:1.75em;padding:0.1em 0.5em 0.1em 0.5em;margin:0;border:solid 1px;color:#fff;
  background: #0069aa url(../images/gradient_35.png) repeat-x scroll left top;
  ;border-bottom-color:#606265;border-left-color:#009EFF;border-right-color:#606265;border-top-color:#009EFF;}
  .buttons{text-align:left;margin:1.0em;}
  .buttons button, .buttons input[type=submit], .buttons input[type=button], .buttons input[type=reset]{margin:0 0.2em 0 0.2em;}
</style></head><body><div class="container agencytemplate_boardbackground"><form><div class="content"><table class="input agencytemplate_tableentry"><tbody><tr><td align="right" width="25%">key</td><td selected="true"><input name="editKey" type="text" /></td></tr></tbody></table></div></form></div></body></html></view><view tablename="Core" name="AutoHide" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="8548a9eb-1a54-4859-94a5-e636dee0df4d" assignable="1"><html><head><script type="text/javascript">
  function start(){
  document.getElementsByName('hidden')[0].checked=true;
    document.getElementsByName('cmdSave')[0].click();
  }
    
  window.onload=start;
  </script><style type="text/css">
  html, body, form, a, abbr, acronym, address, blockquote, caption, div, dd, dl, dt, fieldset, h1, h2, h3, h4, h5, h6, img, label, legend, li, ol, p, pre, span, table, tbody, td, tfoot, th, thead, tr, ul{border:0;margin:0;padding:0;}
  body{background-color:#d1d2d4;color:#000;margin:1.0em;font:normal 0.9em arial;}
  div.container{border:solid 1px;border-color:#0069aa;}
  div.content{margin:1em;}
  table.input{border-collapse:collapse;width:100%;empty-cells:show;}
  table.input td, table.input th{padding:0.1em 0.3em 0.1em 0.3em;}
  table.input th{text-align:right;}
  h1.heading{font-weight:normal;font-size:1.75em;padding:0.1em 0.5em 0.1em 0.5em;margin:0;border:solid 1px;color:#fff;
  background: #0069aa url(../images/gradient_35.png) repeat-x scroll left top;
  ;border-bottom-color:#606265;border-left-color:#009EFF;border-right-color:#606265;border-top-color:#009EFF;}
  .buttons{text-align:left;margin:1.0em;}
  .buttons button, .buttons input[type=submit], .buttons input[type=button], .buttons input[type=reset]{margin:0 0.2em 0 0.2em;}
</style></head><body><div class="container agencytemplate_boardbackground"><form><div class="content"><table class="input agencytemplate_tableentry"><tbody><tr><td align="right" width="25%">Hidden</td><td><input name="hidden" id="hidden" type="checkbox" style="form-control input-sm" value="Yes" /></td></tr></tbody></table></div></form></div></body></html></view><view tablename="Supplemental" name="Bubble Auto Redirect Input" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="3cd72a2a-c60b-463a-98ba-31ae41363355" assignable="1"><html><head><script type="text/javascript">
 var someSaveBttn=function(){};
     var scribe={
  status: 0,
  autoRun: function() {start();},
  baseArray: [],
  changesMade: false,
  Evaluation: function() {
    var a=[];
    for(var i=0; i &lt; scribe.fields4History.length; i++) {
      var b=document.getElementsByName(scribe.fields4History[i][0]);
      for(var k=0; k &lt; b.length; k++) {
        var result=[];
        if(b[k].tagName==="SELECT") {
            var ms=[];
            for(var msif=0; msif &lt; b[k].options.length; msif++){
                if(b[k].options[msif].selected==true){ms.push(b[k].options[msif])}
            }
            var msr =[];
            for(var msi=0; msi &lt; ms.length; msi++){
               msr.push(ms[msi].text); 
            }
             result.push(scribe.fields4History[i][1]);
             result.push(msr.join(','));   
        } else if (b[k].type==="radio" || b[k].type==="checkbox") {
          result.push(scribe.fields4History[i][1]);
          var r;
          if(b[k].checked===true) {
            
                r = b[k].value+'(Selected)';
            
            result.push(r);
          } else {
             
                r = b[k].value+'(Not Selected)';
            
            result.push(r);
          }
        } else {
          result.push(scribe.fields4History[i][1]);
          result.push(b[k].value);
        }
        a.push(result);
        
      }
    }
    return a;
  },
  inicialReview: function(){scribe.baseArray=scribe.Evaluation();},
  postReview: function() {
    var p=[];
    var f=scribe.Evaluation();
    for(var i=0; i &lt; f.length; i++) {
      if(f[i][1] !== scribe.baseArray[i][1]) {
        p.push(f[i][0] + ': ' + f[i][1]);
      }
    }
    p=p.join('\r\n');
    if(p.length &gt; 0) {
      scribe.changesMade=true;
    }
    return p;
  }
};
    function start(){
     // alert('start');
    proxySaveFunction();
    //alert('after start');
      someSaveBttn=function(){/*alert('ready2save');*/document.getElementsByName('cmdSave')[0].click();};
    //alert('aftersave');
    //  document.getElementsByName('cmdSave')[0].click();
    //all good //alert("start runs on Auto Redirect. Calls proxySaveFun, someSaveBttn as well");
    }
  
  function proxySaveFunction() { //alert('proxy save');
  var a=document.getElementById('historyEmbedView');
  if(a.contentWindow) {
    console.log('AutoSAve contentWindow');
    a.contentWindow.document.getElementById('frameBody').contentWindow.frames.injectHistory(document.getElementsByName('dataid')[0].value,document.getElementById("dateTimeUpdate").value,
      '<value-of select="/data/@currentUser" />',
      document.getElementById("currentChangeLog").value);
    //alert("proxySaveFun runs on Auto Redirect");
    
  } else {
    console.log('AutoSAve contentDocument');
    a.contentDocument.document.getElementById('frameBody').contentDocument.frames.injectHistory(document.getElementsByName('dataid')[0].value,
      document.getElementById("dateTimeUpdate").value,
      '<value-of select="/data/@currentUser" />',
      document.getElementById("currentChangeLog").value);
   // alert("ELSE proxySaveFun runs on Auto Redirect");
   
  }
};
    
    
   // window.onload=start;
  
  
  </script><style type="text/css">
 body{
 height:1px;
    width:1px;
     visibility: hidden;
 
  }
</style></head><body><!--<div class="container agencytemplate_boardbackground"> uncomment to see--><form><div class="small content"><input type="text" id="dateTimeUpdate" name="dateTimeUpdate" style="display:none" /><span style="display:nonee;">
          RIGHT HERE
            <textarea name="currentChangeLog" id="currentChangeLog" /><embedview id="historyEmbedView" view="Bubble Audit Input (DO NOT ASSIGN)" name="historyEmbedView" /></span></div></form></body></html></view><view tablename="Supplemental" name="Bubble Update (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="886d04c3-3896-40c6-89c8-d8559ccefcb2" assignable="1"><html><head><style type="text/css">
  html, body, form, a, abbr, acronym, address, blockquote, caption, div, dd, dl, dt, fieldset, h1, h2, h3, h4, h5, h6, img, label, legend, li, ol, p, pre, span, table, tbody, td, tfoot, th, thead, tr, ul{border:0;margin:0;padding:0;}
  body{background-color:#d1d2d4;color:#000;margin:1.0em;font:normal 0.9em arial;}
  div.container{border:solid 1px;border-color:#0069aa;}
  div.content{margin:1em;}
  table.input{border-collapse:collapse;width:100%;empty-cells:show;}
  table.input td, table.input th{padding:0.1em 0.3em 0.1em 0.3em;}
  table.input th{text-align:right;}
  h1.heading{font-weight:normal;font-size:1.75em;padding:0.1em 0.5em 0.1em 0.5em;margin:0;border:solid 1px;color:#fff;
  background: #0069aa url(../images/gradient_35.png) repeat-x scroll left top;
  ;border-bottom-color:#606265;border-left-color:#009EFF;border-right-color:#606265;border-top-color:#009EFF;}
  .buttons{text-align:left;margin:1.0em;}
  .buttons button, .buttons input[type=submit], .buttons input[type=button], .buttons input[type=reset]{margin:0 0.2em 0 0.2em;}
</style></head><body><div class="container agencytemplate_boardbackground"><form><div class="content"><table class="input agencytemplate_tableentry"><tbody><tr><td align="right" width="25%" selected="false" rowSpan="1">Updated</td><td selected="false"><input type="text" name="updated" size="40" /></td></tr><tr><td align="right" width="25%" selected="false" rowSpan="1">jurisdictionType</td><td selected="true" rowSpan="1"><input type="text" name="jurisdictionType" size="40" value="" required="false" recipient="false" subject="false" message="false" receiver="false" notification="false" mobilerecipient="false" mobilemessage="false" /></td></tr><tr><td align="right" width="25%" selected="false" rowSpan="1">County</td><td selected="false" rowSpan="1"><input type="text" name="county" size="40" value="" required="false" recipient="false" subject="false" message="false" receiver="false" notification="false" mobilerecipient="false" mobilemessage="false" /></td></tr><tr><td align="right" width="25%" selected="false" rowSpan="1">City</td><td selected="false" rowSpan="1"><input type="text" name="city" size="40" value="" required="false" recipient="false" subject="false" message="false" receiver="false" notification="false" mobilerecipient="false" mobilemessage="false" /></td></tr></tbody></table></div></form></div></body></html></view><view tablename="Supplemental" name="Bubble Input (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="b9a0b49a-504a-43c6-931c-a379299dbb4e" assignable="1"><lists oldlistname="DSO Cities" listname="DSO Cities" sblist="0" listguid="379C8EED-D6C1-4DAE-B6CB-0DC4D09C75C9" depth="0" comments=""><listitems name="Gregory" listvalue="" ordervalue="432" listitemid="2630" islist="0"/><listitems name="Grey Forest" listvalue="" ordervalue="433" listitemid="2631" islist="0"/><listitems name="Groesbeck" listvalue="" ordervalue="434" listitemid="2632" islist="0"/><listitems name="Groom" listvalue="" ordervalue="435" listitemid="2633" islist="0"/><listitems name="Groves" listvalue="" ordervalue="436" listitemid="2634" islist="0"/><listitems name="Groveton" listvalue="" ordervalue="437" listitemid="2635" islist="0"/><listitems name="Gruver" listvalue="" ordervalue="438" listitemid="2636" islist="0"/><listitems name="Gun Barrel City" listvalue="" ordervalue="439" listitemid="2637" islist="0"/><listitems name="Gunter" listvalue="" ordervalue="440" listitemid="2638" islist="0"/><listitems name="Gustine" listvalue="" ordervalue="441" listitemid="2639" islist="0"/><listitems name="Hackberry" listvalue="" ordervalue="442" listitemid="2640" islist="0"/><listitems name="Hale Center" listvalue="" ordervalue="443" listitemid="2641" islist="0"/><listitems name="Hallettsville" listvalue="" ordervalue="444" listitemid="2642" islist="0"/><listitems name="Hallsburg" listvalue="" ordervalue="445" listitemid="2643" islist="0"/><listitems name="Hallsville" listvalue="" ordervalue="446" listitemid="2644" islist="0"/><listitems name="Haltom City" listvalue="" ordervalue="447" listitemid="2645" islist="0"/><listitems name="Hamilton" listvalue="" ordervalue="448" listitemid="2646" islist="0"/><listitems name="Hamlin" listvalue="" ordervalue="449" listitemid="2647" islist="0"/><listitems name="Happy" listvalue="" ordervalue="450" listitemid="2648" islist="0"/><listitems name="Hardin" listvalue="" ordervalue="451" listitemid="2649" islist="0"/><listitems name="Harker Heights" listvalue="" ordervalue="452" listitemid="2650" islist="0"/><listitems name="Harlingen" listvalue="" ordervalue="453" listitemid="2651" islist="0"/><listitems name="Hart" listvalue="" ordervalue="454" listitemid="2652" islist="0"/><listitems name="Haskell" listvalue="" ordervalue="455" listitemid="2653" islist="0"/><listitems name="Haslet" listvalue="" ordervalue="456" listitemid="2654" islist="0"/><listitems name="Hawk Cove" listvalue="" ordervalue="457" listitemid="2655" islist="0"/><listitems name="Hawkins" listvalue="" ordervalue="458" listitemid="2656" islist="0"/><listitems name="Hawley" listvalue="" ordervalue="459" listitemid="2657" islist="0"/><listitems name="Hays" listvalue="" ordervalue="460" listitemid="2658" islist="0"/><listitems name="Hearne" listvalue="" ordervalue="461" listitemid="2659" islist="0"/><listitems name="Heath" listvalue="" ordervalue="462" listitemid="2660" islist="0"/><listitems name="Hebron" listvalue="" ordervalue="463" listitemid="2661" islist="0"/><listitems name="Hedley" listvalue="" ordervalue="464" listitemid="2662" islist="0"/><listitems name="Hedwig Village" listvalue="" ordervalue="465" listitemid="2663" islist="0"/><listitems name="Helotes" listvalue="" ordervalue="466" listitemid="2664" islist="0"/><listitems name="Hemphill" listvalue="" ordervalue="467" listitemid="2665" islist="0"/><listitems name="Hempstead" listvalue="" ordervalue="468" listitemid="2666" islist="0"/><listitems name="Henderson" listvalue="" ordervalue="469" listitemid="2667" islist="0"/><listitems name="Henrietta" listvalue="" ordervalue="470" listitemid="2668" islist="0"/><listitems name="Hereford" listvalue="" ordervalue="471" listitemid="2669" islist="0"/><listitems name="Hewitt" listvalue="" ordervalue="472" listitemid="2670" islist="0"/><listitems name="Hickory Creek" listvalue="" ordervalue="473" listitemid="2671" islist="0"/><listitems name="Hico" listvalue="" ordervalue="474" listitemid="2672" islist="0"/><listitems name="Hidalgo" listvalue="" ordervalue="475" listitemid="2673" islist="0"/><listitems name="Hideaway" listvalue="" ordervalue="476" listitemid="2674" islist="0"/><listitems name="Higgins" listvalue="" ordervalue="477" listitemid="2675" islist="0"/><listitems name="Highland Haven" listvalue="" ordervalue="478" listitemid="2676" islist="0"/><listitems name="Highland Park" listvalue="" ordervalue="479" listitemid="2677" islist="0"/><listitems name="Highland Village" listvalue="" ordervalue="480" listitemid="2678" islist="0"/><listitems name="Hill Country Village" listvalue="" ordervalue="481" listitemid="2679" islist="0"/><listitems name="Hillcrest Village" listvalue="" ordervalue="482" listitemid="2680" islist="0"/><listitems name="Hillsboro" listvalue="" ordervalue="483" listitemid="2681" islist="0"/><listitems name="Hilshire Village" listvalue="" ordervalue="484" listitemid="2682" islist="0"/><listitems name="Hitchcock" listvalue="" ordervalue="485" listitemid="2683" islist="0"/><listitems name="Holiday Lakes" listvalue="" ordervalue="486" listitemid="2684" islist="0"/><listitems name="Holland" listvalue="" ordervalue="487" listitemid="2685" islist="0"/><listitems name="Holliday" listvalue="" ordervalue="488" listitemid="2686" islist="0"/><listitems name="Hollywood Park" listvalue="" ordervalue="489" listitemid="2687" islist="0"/><listitems name="Hondo" listvalue="" ordervalue="490" listitemid="2688" islist="0"/><listitems name="Honey Grove" listvalue="" ordervalue="491" listitemid="2689" islist="0"/><listitems name="Hooks" listvalue="" ordervalue="492" listitemid="2690" islist="0"/><listitems name="Horizon City" listvalue="" ordervalue="493" listitemid="2691" islist="0"/><listitems name="Horseshoe Bay" listvalue="" ordervalue="494" listitemid="2692" islist="0"/><listitems name="Houston" listvalue="" ordervalue="495" listitemid="2693" islist="0"/><listitems name="Howardwick" listvalue="" ordervalue="496" listitemid="2694" islist="0"/><listitems name="Howe" listvalue="" ordervalue="497" listitemid="2695" islist="0"/><listitems name="Hubbard" listvalue="" ordervalue="498" listitemid="2696" islist="0"/><listitems name="Hudson" listvalue="" ordervalue="499" listitemid="2697" islist="0"/><listitems name="Hudson Oaks" listvalue="" ordervalue="500" listitemid="2698" islist="0"/><listitems name="Hughes Springs" listvalue="" ordervalue="501" listitemid="2699" islist="0"/><listitems name="Humble" listvalue="" ordervalue="502" listitemid="2700" islist="0"/><listitems name="Hunters Creek Village" listvalue="" ordervalue="503" listitemid="2701" islist="0"/><listitems name="Huntington" listvalue="" ordervalue="504" listitemid="2702" islist="0"/><listitems name="Huntsville" listvalue="" ordervalue="505" listitemid="2703" islist="0"/><listitems name="Hurst" listvalue="" ordervalue="506" listitemid="2704" islist="0"/><listitems name="Hutchins" listvalue="" ordervalue="507" listitemid="2705" islist="0"/><listitems name="Hutto" listvalue="" ordervalue="508" listitemid="2706" islist="0"/><listitems name="Huxley" listvalue="" ordervalue="509" listitemid="2707" islist="0"/><listitems name="Idalou" listvalue="" ordervalue="510" listitemid="2708" islist="0"/><listitems name="Impact" listvalue="" ordervalue="511" listitemid="2709" islist="0"/><listitems name="Indian Lake" listvalue="" ordervalue="512" listitemid="2710" islist="0"/><listitems name="Industry" listvalue="" ordervalue="513" listitemid="2711" islist="0"/><listitems name="Ingleside" listvalue="" ordervalue="514" listitemid="2712" islist="0"/><listitems name="Ingleside On The Bay" listvalue="" ordervalue="515" listitemid="2713" islist="0"/><listitems name="Ingram" listvalue="" ordervalue="516" listitemid="2714" islist="0"/><listitems name="Iola" listvalue="" ordervalue="517" listitemid="2715" islist="0"/><listitems name="Iowa Colony" listvalue="" ordervalue="518" listitemid="2716" islist="0"/><listitems name="Iowa Park" listvalue="" ordervalue="519" listitemid="2717" islist="0"/><listitems name="Iraan" listvalue="" ordervalue="520" listitemid="2718" islist="0"/><listitems name="Iredell" listvalue="" ordervalue="521" listitemid="2719" islist="0"/><listitems name="Irving" listvalue="" ordervalue="522" listitemid="2720" islist="0"/><listitems name="Italy" listvalue="" ordervalue="523" listitemid="2721" islist="0"/><listitems name="Itasca" listvalue="" ordervalue="524" listitemid="2722" islist="0"/><listitems name="Ivanhoe" listvalue="" ordervalue="525" listitemid="2723" islist="0"/><listitems name="Jacinto City" listvalue="" ordervalue="526" listitemid="2724" islist="0"/><listitems name="Jacksboro" listvalue="" ordervalue="527" listitemid="2725" islist="0"/><listitems name="Jacksonville" listvalue="" ordervalue="528" listitemid="2726" islist="0"/><listitems name="Jamaica Beach" listvalue="" ordervalue="529" listitemid="2727" islist="0"/><listitems name="Jarrell" listvalue="" ordervalue="530" listitemid="2728" islist="0"/><listitems name="Jasper" listvalue="" ordervalue="531" listitemid="2729" islist="0"/><listitems name="Jayton" listvalue="" ordervalue="532" listitemid="2730" islist="0"/><listitems name="Jefferson" listvalue="" ordervalue="533" listitemid="2731" islist="0"/><listitems name="Jersey Village" listvalue="" ordervalue="534" listitemid="2732" islist="0"/><listitems name="Jewett" listvalue="" ordervalue="535" listitemid="2733" islist="0"/><listitems name="Joaquin" listvalue="" ordervalue="536" listitemid="2734" islist="0"/><listitems name="Johnson City" listvalue="" ordervalue="537" listitemid="2735" islist="0"/><listitems name="Jolly" listvalue="" ordervalue="538" listitemid="2736" islist="0"/><listitems name="Jones Creek" listvalue="" ordervalue="539" listitemid="2737" islist="0"/><listitems name="Jonestown" listvalue="" ordervalue="540" listitemid="2738" islist="0"/><listitems name="Josephine" listvalue="" ordervalue="541" listitemid="2739" islist="0"/><listitems name="Joshua" listvalue="" ordervalue="542" listitemid="2740" islist="0"/><listitems name="Jourdanton" listvalue="" ordervalue="543" listitemid="2741" islist="0"/><listitems name="Junction" listvalue="" ordervalue="544" listitemid="2742" islist="0"/><listitems name="Justin" listvalue="" ordervalue="545" listitemid="2743" islist="0"/><listitems name="Karnes City" listvalue="" ordervalue="546" listitemid="2744" islist="0"/><listitems name="Katy" listvalue="" ordervalue="547" listitemid="2745" islist="0"/><listitems name="Kaufman" listvalue="" ordervalue="548" listitemid="2746" islist="0"/><listitems name="Keene" listvalue="" ordervalue="549" listitemid="2747" islist="0"/><listitems name="Keller" listvalue="" ordervalue="550" listitemid="2748" islist="0"/><listitems name="Kemah" listvalue="" ordervalue="551" listitemid="2749" islist="0"/><listitems name="Kemp" listvalue="" ordervalue="552" listitemid="2750" islist="0"/><listitems name="Kempner" listvalue="" ordervalue="553" listitemid="2751" islist="0"/><listitems name="Kendleton" listvalue="" ordervalue="554" listitemid="2752" islist="0"/><listitems name="Kenedy" listvalue="" ordervalue="555" listitemid="2753" islist="0"/><listitems name="Kenefick" listvalue="" ordervalue="556" listitemid="2754" islist="0"/><listitems name="Kennard" listvalue="" ordervalue="557" listitemid="2755" islist="0"/><listitems name="Kennedale" listvalue="" ordervalue="558" listitemid="2756" islist="0"/><listitems name="Kerens" listvalue="" ordervalue="559" listitemid="2757" islist="0"/><listitems name="Kermit" listvalue="" ordervalue="560" listitemid="2758" islist="0"/><listitems name="Kerrville" listvalue="" ordervalue="561" listitemid="2759" islist="0"/><listitems name="Kilgore" listvalue="" ordervalue="562" listitemid="2760" islist="0"/><listitems name="Killeen" listvalue="" ordervalue="563" listitemid="2761" islist="0"/><listitems name="Kingsville" listvalue="" ordervalue="564" listitemid="2762" islist="0"/><listitems name="Kirby" listvalue="" ordervalue="565" listitemid="2763" islist="0"/><listitems name="Kirbyville" listvalue="" ordervalue="566" listitemid="2764" islist="0"/><listitems name="Kirvin" listvalue="" ordervalue="567" listitemid="2765" islist="0"/><listitems name="Knollwood" listvalue="" ordervalue="568" listitemid="2766" islist="0"/><listitems name="Knox City" listvalue="" ordervalue="569" listitemid="2767" islist="0"/><listitems name="Kosse" listvalue="" ordervalue="570" listitemid="2768" islist="0"/><listitems name="Kountze" listvalue="" ordervalue="571" listitemid="2769" islist="0"/><listitems name="Kress" listvalue="" ordervalue="572" listitemid="2770" islist="0"/><listitems name="Krugerville" listvalue="" ordervalue="573" listitemid="2771" islist="0"/><listitems name="Krum" listvalue="" ordervalue="574" listitemid="2772" islist="0"/><listitems name="Kurten" listvalue="" ordervalue="575" listitemid="2773" islist="0"/><listitems name="Kyle" listvalue="" ordervalue="576" listitemid="2774" islist="0"/><listitems name="La Feria" listvalue="" ordervalue="577" listitemid="2775" islist="0"/><listitems name="La Grange" listvalue="" ordervalue="578" listitemid="2776" islist="0"/><listitems name="La Grulla" listvalue="" ordervalue="579" listitemid="2777" islist="0"/><listitems name="La Joya" listvalue="" ordervalue="580" listitemid="2778" islist="0"/><listitems name="La Marque" listvalue="" ordervalue="581" listitemid="2779" islist="0"/><listitems name="La Porte" listvalue="" ordervalue="582" listitemid="2780" islist="0"/><listitems name="La Vernia" listvalue="" ordervalue="583" listitemid="2781" islist="0"/><listitems name="La Villa" listvalue="" ordervalue="584" listitemid="2782" islist="0"/><listitems name="La Ward" listvalue="" ordervalue="585" listitemid="2783" islist="0"/><listitems name="LaCoste" listvalue="" ordervalue="586" listitemid="2784" islist="0"/><listitems name="Lacy-Lakeview" listvalue="" ordervalue="587" listitemid="2785" islist="0"/><listitems name="Ladonia" listvalue="" ordervalue="588" listitemid="2786" islist="0"/><listitems name="Lago Vista" listvalue="" ordervalue="589" listitemid="2787" islist="0"/><listitems name="Laguna Vista" listvalue="" ordervalue="590" listitemid="2788" islist="0"/><listitems name="Lake Bridgeport" listvalue="" ordervalue="591" listitemid="2789" islist="0"/><listitems name="Lake City" listvalue="" ordervalue="592" listitemid="2790" islist="0"/><listitems name="Lake Dallas" listvalue="" ordervalue="593" listitemid="2791" islist="0"/><listitems name="Lake Jackson" listvalue="" ordervalue="594" listitemid="2792" islist="0"/><listitems name="Lake Tanglewood" listvalue="" ordervalue="595" listitemid="2793" islist="0"/><listitems name="Lake Worth" listvalue="" ordervalue="596" listitemid="2794" islist="0"/><listitems name="Lakeport" listvalue="" ordervalue="597" listitemid="2795" islist="0"/><listitems name="Lakeside (San Patricio)" listvalue="" ordervalue="598" listitemid="2796" islist="0"/><listitems name="Lakeside (Tarrant)" listvalue="" ordervalue="599" listitemid="2797" islist="0"/><listitems name="Lakeside City" listvalue="" ordervalue="600" listitemid="2798" islist="0"/><listitems name="Lakeview" listvalue="" ordervalue="601" listitemid="2799" islist="0"/><listitems name="Lakeway" listvalue="" ordervalue="602" listitemid="2800" islist="0"/><listitems name="Lakewood Village" listvalue="" ordervalue="603" listitemid="2801" islist="0"/><listitems name="Lamesa" listvalue="" ordervalue="604" listitemid="2802" islist="0"/><listitems name="Lampasas" listvalue="" ordervalue="605" listitemid="2803" islist="0"/><listitems name="Lancaster" listvalue="" ordervalue="606" listitemid="2804" islist="0"/><listitems name="Laredo" listvalue="" ordervalue="607" listitemid="2805" islist="0"/><listitems name="Latexo" listvalue="" ordervalue="608" listitemid="2806" islist="0"/><listitems name="Lavon" listvalue="" ordervalue="609" listitemid="2807" islist="0"/><listitems name="Lawn" listvalue="" ordervalue="610" listitemid="2808" islist="0"/><listitems name="League City" listvalue="" ordervalue="611" listitemid="2809" islist="0"/><listitems name="Leakey" listvalue="" ordervalue="612" listitemid="2810" islist="0"/><listitems name="Leander" listvalue="" ordervalue="613" listitemid="2811" islist="0"/><listitems name="Leary" listvalue="" ordervalue="614" listitemid="2812" islist="0"/><listitems name="Lefors" listvalue="" ordervalue="615" listitemid="2813" islist="0"/><listitems name="Leon Valley" listvalue="" ordervalue="616" listitemid="2814" islist="0"/><listitems name="Leona" listvalue="" ordervalue="617" listitemid="2815" islist="0"/><listitems name="Leonard" listvalue="" ordervalue="618" listitemid="2816" islist="0"/><listitems name="Leroy" listvalue="" ordervalue="619" listitemid="2817" islist="0"/><listitems name="Levelland" listvalue="" ordervalue="620" listitemid="2818" islist="0"/><listitems name="Lewisville" listvalue="" ordervalue="621" listitemid="2819" islist="0"/><listitems name="Lexington" listvalue="" ordervalue="622" listitemid="2820" islist="0"/><listitems name="Liberty" listvalue="" ordervalue="623" listitemid="2821" islist="0"/><listitems name="Liberty Hill" listvalue="" ordervalue="624" listitemid="2822" islist="0"/><listitems name="Lincoln Park" listvalue="" ordervalue="625" listitemid="2823" islist="0"/><listitems name="Lindale" listvalue="" ordervalue="626" listitemid="2824" islist="0"/><listitems name="Linden" listvalue="" ordervalue="627" listitemid="2825" islist="0"/><listitems name="Lindsay" listvalue="" ordervalue="628" listitemid="2826" islist="0"/><listitems name="Lipan" listvalue="" ordervalue="629" listitemid="2827" islist="0"/><listitems name="Little Elm" listvalue="" ordervalue="630" listitemid="2828" islist="0"/><listitems name="Little River Academy" listvalue="" ordervalue="631" listitemid="2829" islist="0"/><listitems name="Littlefield" listvalue="" ordervalue="632" listitemid="2830" islist="0"/><listitems name="Live Oak" listvalue="" ordervalue="633" listitemid="2831" islist="0"/><listitems name="Liverpool" listvalue="" ordervalue="634" listitemid="2832" islist="0"/><listitems name="Livingston" listvalue="" ordervalue="635" listitemid="2833" islist="0"/><listitems name="Llano" listvalue="" ordervalue="636" listitemid="2834" islist="0"/><listitems name="Lockhart" listvalue="" ordervalue="637" listitemid="2835" islist="0"/><listitems name="Lockney" listvalue="" ordervalue="638" listitemid="2836" islist="0"/><listitems name="Log Cabin" listvalue="" ordervalue="639" listitemid="2837" islist="0"/><listitems name="Lometa" listvalue="" ordervalue="640" listitemid="2838" islist="0"/><listitems name="Lone Oak" listvalue="" ordervalue="641" listitemid="2839" islist="0"/><listitems name="Lone Star" listvalue="" ordervalue="642" listitemid="2840" islist="0"/><listitems name="Longview" listvalue="" ordervalue="643" listitemid="2841" islist="0"/><listitems name="Loraine" listvalue="" ordervalue="644" listitemid="2842" islist="0"/><listitems name="Lorena" listvalue="" ordervalue="645" listitemid="2843" islist="0"/><listitems name="Select One" listvalue="" ordervalue="1" listitemid="2199" islist="0"/><listitems name="Unincorporated Areas" listvalue="" ordervalue="2" listitemid="2200" islist="0"/><listitems name="Abbott" listvalue="" ordervalue="3" listitemid="2201" islist="0"/><listitems name="Abernathy" listvalue="" ordervalue="4" listitemid="2202" islist="0"/><listitems name="Abilene" listvalue="" ordervalue="5" listitemid="2203" islist="0"/><listitems name="Ackerly" listvalue="" ordervalue="6" listitemid="2204" islist="0"/><listitems name="Addison" listvalue="" ordervalue="7" listitemid="2205" islist="0"/><listitems name="Adrian" listvalue="" ordervalue="8" listitemid="2206" islist="0"/><listitems name="Agua Dulce" listvalue="" ordervalue="9" listitemid="2207" islist="0"/><listitems name="Alamo" listvalue="" ordervalue="10" listitemid="2208" islist="0"/><listitems name="Alamo Heights" listvalue="" ordervalue="11" listitemid="2209" islist="0"/><listitems name="Alba" listvalue="" ordervalue="12" listitemid="2210" islist="0"/><listitems name="Albany" listvalue="" ordervalue="13" listitemid="2211" islist="0"/><listitems name="Aledo" listvalue="" ordervalue="14" listitemid="2212" islist="0"/><listitems name="Alice" listvalue="" ordervalue="15" listitemid="2213" islist="0"/><listitems name="Allen" listvalue="" ordervalue="16" listitemid="2214" islist="0"/><listitems name="Alma" listvalue="" ordervalue="17" listitemid="2215" islist="0"/><listitems name="Alpine" listvalue="" ordervalue="18" listitemid="2216" islist="0"/><listitems name="Alto" listvalue="" ordervalue="19" listitemid="2217" islist="0"/><listitems name="Alton" listvalue="" ordervalue="20" listitemid="2218" islist="0"/><listitems name="Alvarado" listvalue="" ordervalue="21" listitemid="2219" islist="0"/><listitems name="Alvin" listvalue="" ordervalue="22" listitemid="2220" islist="0"/><listitems name="Alvord" listvalue="" ordervalue="23" listitemid="2221" islist="0"/><listitems name="Amarillo" listvalue="" ordervalue="24" listitemid="2222" islist="0"/><listitems name="Ames" listvalue="" ordervalue="25" listitemid="2223" islist="0"/><listitems name="Amherst" listvalue="" ordervalue="26" listitemid="2224" islist="0"/><listitems name="Anahuac" listvalue="" ordervalue="27" listitemid="2225" islist="0"/><listitems name="Anderson" listvalue="" ordervalue="28" listitemid="2226" islist="0"/><listitems name="Andrews" listvalue="" ordervalue="29" listitemid="2227" islist="0"/><listitems name="Angleton" listvalue="" ordervalue="30" listitemid="2228" islist="0"/><listitems name="Angus" listvalue="" ordervalue="31" listitemid="2229" islist="0"/><listitems name="Anna" listvalue="" ordervalue="32" listitemid="2230" islist="0"/><listitems name="Annetta" listvalue="" ordervalue="33" listitemid="2231" islist="0"/><listitems name="Annetta North" listvalue="" ordervalue="34" listitemid="2232" islist="0"/><listitems name="Annetta South" listvalue="" ordervalue="35" listitemid="2233" islist="0"/><listitems name="Annona" listvalue="" ordervalue="36" listitemid="2234" islist="0"/><listitems name="Anson" listvalue="" ordervalue="37" listitemid="2235" islist="0"/><listitems name="Anthony" listvalue="" ordervalue="38" listitemid="2236" islist="0"/><listitems name="Anton" listvalue="" ordervalue="39" listitemid="2237" islist="0"/><listitems name="Appleby" listvalue="" ordervalue="40" listitemid="2238" islist="0"/><listitems name="Aquilla" listvalue="" ordervalue="41" listitemid="2239" islist="0"/><listitems name="Aransas Pass" listvalue="" ordervalue="42" listitemid="2240" islist="0"/><listitems name="Archer City" listvalue="" ordervalue="43" listitemid="2241" islist="0"/><listitems name="Arcola" listvalue="" ordervalue="44" listitemid="2242" islist="0"/><listitems name="Argyle" listvalue="" ordervalue="45" listitemid="2243" islist="0"/><listitems name="Arlington" listvalue="" ordervalue="46" listitemid="2244" islist="0"/><listitems name="Arp" listvalue="" ordervalue="47" listitemid="2245" islist="0"/><listitems name="Asherton" listvalue="" ordervalue="48" listitemid="2246" islist="0"/><listitems name="Aspermont" listvalue="" ordervalue="49" listitemid="2247" islist="0"/><listitems name="Athens" listvalue="" ordervalue="50" listitemid="2248" islist="0"/><listitems name="Atlanta" listvalue="" ordervalue="51" listitemid="2249" islist="0"/><listitems name="Aubrey" listvalue="" ordervalue="52" listitemid="2250" islist="0"/><listitems name="Aurora" listvalue="" ordervalue="53" listitemid="2251" islist="0"/><listitems name="Austin" listvalue="" ordervalue="54" listitemid="2252" islist="0"/><listitems name="Austwell" listvalue="" ordervalue="55" listitemid="2253" islist="0"/><listitems name="Avery" listvalue="" ordervalue="56" listitemid="2254" islist="0"/><listitems name="Avinger" listvalue="" ordervalue="57" listitemid="2255" islist="0"/><listitems name="Azle" listvalue="" ordervalue="58" listitemid="2256" islist="0"/><listitems name="Bailey" listvalue="" ordervalue="59" listitemid="2257" islist="0"/><listitems name="Bailey's Prairie" listvalue="" ordervalue="60" listitemid="2258" islist="0"/><listitems name="Baird" listvalue="" ordervalue="61" listitemid="2259" islist="0"/><listitems name="Balch Springs" listvalue="" ordervalue="62" listitemid="2260" islist="0"/><listitems name="Balcones Heights" listvalue="" ordervalue="63" listitemid="2261" islist="0"/><listitems name="Ballinger" listvalue="" ordervalue="64" listitemid="2262" islist="0"/><listitems name="Balmorhea" listvalue="" ordervalue="65" listitemid="2263" islist="0"/><listitems name="Bandera" listvalue="" ordervalue="66" listitemid="2264" islist="0"/><listitems name="Bangs" listvalue="" ordervalue="67" listitemid="2265" islist="0"/><listitems name="Bardwell" listvalue="" ordervalue="68" listitemid="2266" islist="0"/><listitems name="Barry" listvalue="" ordervalue="69" listitemid="2267" islist="0"/><listitems name="Barstow" listvalue="" ordervalue="70" listitemid="2268" islist="0"/><listitems name="Bartlett" listvalue="" ordervalue="71" listitemid="2269" islist="0"/><listitems name="Bartonville" listvalue="" ordervalue="72" listitemid="2270" islist="0"/><listitems name="Bastrop" listvalue="" ordervalue="73" listitemid="2271" islist="0"/><listitems name="Bay City" listvalue="" ordervalue="74" listitemid="2272" islist="0"/><listitems name="Bayou Vista" listvalue="" ordervalue="75" listitemid="2273" islist="0"/><listitems name="Bayside" listvalue="" ordervalue="76" listitemid="2274" islist="0"/><listitems name="Baytown" listvalue="" ordervalue="77" listitemid="2275" islist="0"/><listitems name="Bayview" listvalue="" ordervalue="78" listitemid="2276" islist="0"/><listitems name="Beach City" listvalue="" ordervalue="79" listitemid="2277" islist="0"/><listitems name="Bear Creek" listvalue="" ordervalue="80" listitemid="2278" islist="0"/><listitems name="Beasley" listvalue="" ordervalue="81" listitemid="2279" islist="0"/><listitems name="Beaumont" listvalue="" ordervalue="82" listitemid="2280" islist="0"/><listitems name="Beckville" listvalue="" ordervalue="83" listitemid="2281" islist="0"/><listitems name="Bedford" listvalue="" ordervalue="84" listitemid="2282" islist="0"/><listitems name="Bedias" listvalue="" ordervalue="85" listitemid="2283" islist="0"/><listitems name="Bee Cave" listvalue="" ordervalue="86" listitemid="2284" islist="0"/><listitems name="Beeville" listvalue="" ordervalue="87" listitemid="2285" islist="0"/><listitems name="Bellaire" listvalue="" ordervalue="88" listitemid="2286" islist="0"/><listitems name="Bellevue" listvalue="" ordervalue="89" listitemid="2287" islist="0"/><listitems name="Bellmead" listvalue="" ordervalue="90" listitemid="2288" islist="0"/><listitems name="Bells" listvalue="" ordervalue="91" listitemid="2289" islist="0"/><listitems name="Bellville" listvalue="" ordervalue="92" listitemid="2290" islist="0"/><listitems name="Belton" listvalue="" ordervalue="93" listitemid="2291" islist="0"/><listitems name="Benavides" listvalue="" ordervalue="94" listitemid="2292" islist="0"/><listitems name="Benbrook" listvalue="" ordervalue="95" listitemid="2293" islist="0"/><listitems name="Benjamin" listvalue="" ordervalue="96" listitemid="2294" islist="0"/><listitems name="Berryville" listvalue="" ordervalue="97" listitemid="2295" islist="0"/><listitems name="Bertram" listvalue="" ordervalue="98" listitemid="2296" islist="0"/><listitems name="Beverly Hills" listvalue="" ordervalue="99" listitemid="2297" islist="0"/><listitems name="Bevil Oaks" listvalue="" ordervalue="100" listitemid="2298" islist="0"/><listitems name="Big Lake" listvalue="" ordervalue="101" listitemid="2299" islist="0"/><listitems name="Big Sandy" listvalue="" ordervalue="102" listitemid="2300" islist="0"/><listitems name="Big Spring" listvalue="" ordervalue="103" listitemid="2301" islist="0"/><listitems name="Big Wells" listvalue="" ordervalue="104" listitemid="2302" islist="0"/><listitems name="Bishop" listvalue="" ordervalue="105" listitemid="2303" islist="0"/><listitems name="Bishop Hills" listvalue="" ordervalue="106" listitemid="2304" islist="0"/><listitems name="Blackwell" listvalue="" ordervalue="107" listitemid="2305" islist="0"/><listitems name="Blanco" listvalue="" ordervalue="108" listitemid="2306" islist="0"/><listitems name="Blanket" listvalue="" ordervalue="109" listitemid="2307" islist="0"/><listitems name="Bloomburg" listvalue="" ordervalue="110" listitemid="2308" islist="0"/><listitems name="Blooming Grove" listvalue="" ordervalue="111" listitemid="2309" islist="0"/><listitems name="Blossom" listvalue="" ordervalue="112" listitemid="2310" islist="0"/><listitems name="Blue Mound" listvalue="" ordervalue="113" listitemid="2311" islist="0"/><listitems name="Blue Ridge" listvalue="" ordervalue="114" listitemid="2312" islist="0"/><listitems name="Blum" listvalue="" ordervalue="115" listitemid="2313" islist="0"/><listitems name="Boerne" listvalue="" ordervalue="116" listitemid="2314" islist="0"/><listitems name="Bogata" listvalue="" ordervalue="117" listitemid="2315" islist="0"/><listitems name="Bonham" listvalue="" ordervalue="118" listitemid="2316" islist="0"/><listitems name="Bonney" listvalue="" ordervalue="119" listitemid="2317" islist="0"/><listitems name="Booker" listvalue="" ordervalue="120" listitemid="2318" islist="0"/><listitems name="Borger" listvalue="" ordervalue="121" listitemid="2319" islist="0"/><listitems name="Bovina" listvalue="" ordervalue="122" listitemid="2320" islist="0"/><listitems name="Bowie" listvalue="" ordervalue="123" listitemid="2321" islist="0"/><listitems name="Boyd" listvalue="" ordervalue="124" listitemid="2322" islist="0"/><listitems name="Brackettville" listvalue="" ordervalue="125" listitemid="2323" islist="0"/><listitems name="Brady" listvalue="" ordervalue="126" listitemid="2324" islist="0"/><listitems name="Brazoria" listvalue="" ordervalue="127" listitemid="2325" islist="0"/><listitems name="Brazos Bend" listvalue="" ordervalue="128" listitemid="2326" islist="0"/><listitems name="Brazos Country" listvalue="" ordervalue="129" listitemid="2327" islist="0"/><listitems name="Breckenridge" listvalue="" ordervalue="130" listitemid="2328" islist="0"/><listitems name="Bremond" listvalue="" ordervalue="131" listitemid="2329" islist="0"/><listitems name="Brenham" listvalue="" ordervalue="132" listitemid="2330" islist="0"/><listitems name="Briarcliff" listvalue="" ordervalue="133" listitemid="2331" islist="0"/><listitems name="Briaroaks" listvalue="" ordervalue="134" listitemid="2332" islist="0"/><listitems name="Bridge City" listvalue="" ordervalue="135" listitemid="2333" islist="0"/><listitems name="Bridgeport" listvalue="" ordervalue="136" listitemid="2334" islist="0"/><listitems name="Broaddus" listvalue="" ordervalue="137" listitemid="2335" islist="0"/><listitems name="Bronte" listvalue="" ordervalue="138" listitemid="2336" islist="0"/><listitems name="Brookshire" listvalue="" ordervalue="139" listitemid="2337" islist="0"/><listitems name="Brookside Village" listvalue="" ordervalue="140" listitemid="2338" islist="0"/><listitems name="Browndell" listvalue="" ordervalue="141" listitemid="2339" islist="0"/><listitems name="Brownfield" listvalue="" ordervalue="142" listitemid="2340" islist="0"/><listitems name="Brownsboro" listvalue="" ordervalue="143" listitemid="2341" islist="0"/><listitems name="Brownsville" listvalue="" ordervalue="144" listitemid="2342" islist="0"/><listitems name="Brownwood" listvalue="" ordervalue="145" listitemid="2343" islist="0"/><listitems name="Bruceville-Eddy" listvalue="" ordervalue="146" listitemid="2344" islist="0"/><listitems name="Bryan" listvalue="" ordervalue="147" listitemid="2345" islist="0"/><listitems name="Bryson" listvalue="" ordervalue="148" listitemid="2346" islist="0"/><listitems name="Buckholts" listvalue="" ordervalue="149" listitemid="2347" islist="0"/><listitems name="Buda" listvalue="" ordervalue="150" listitemid="2348" islist="0"/><listitems name="Buffalo" listvalue="" ordervalue="151" listitemid="2349" islist="0"/><listitems name="Buffalo Gap" listvalue="" ordervalue="152" listitemid="2350" islist="0"/><listitems name="Buffalo Springs" listvalue="" ordervalue="153" listitemid="2351" islist="0"/><listitems name="Bullard" listvalue="" ordervalue="154" listitemid="2352" islist="0"/><listitems name="Bulverde" listvalue="" ordervalue="155" listitemid="2353" islist="0"/><listitems name="Bunker Hill Village" listvalue="" ordervalue="156" listitemid="2354" islist="0"/><listitems name="Burkburnett" listvalue="" ordervalue="157" listitemid="2355" islist="0"/><listitems name="Burke" listvalue="" ordervalue="158" listitemid="2356" islist="0"/><listitems name="Burleson" listvalue="" ordervalue="159" listitemid="2357" islist="0"/><listitems name="Burnet" listvalue="" ordervalue="160" listitemid="2358" islist="0"/><listitems name="Burton" listvalue="" ordervalue="161" listitemid="2359" islist="0"/><listitems name="Byers" listvalue="" ordervalue="162" listitemid="2360" islist="0"/><listitems name="Bynum" listvalue="" ordervalue="163" listitemid="2361" islist="0"/><listitems name="Cactus" listvalue="" ordervalue="164" listitemid="2362" islist="0"/><listitems name="Caddo Mills" listvalue="" ordervalue="165" listitemid="2363" islist="0"/><listitems name="Caldwell" listvalue="" ordervalue="166" listitemid="2364" islist="0"/><listitems name="Callisburg" listvalue="" ordervalue="167" listitemid="2365" islist="0"/><listitems name="Calvert" listvalue="" ordervalue="168" listitemid="2366" islist="0"/><listitems name="Cameron" listvalue="" ordervalue="169" listitemid="2367" islist="0"/><listitems name="Camp Wood" listvalue="" ordervalue="170" listitemid="2368" islist="0"/><listitems name="Campbell" listvalue="" ordervalue="171" listitemid="2369" islist="0"/><listitems name="Canadian" listvalue="" ordervalue="172" listitemid="2370" islist="0"/><listitems name="Caney City" listvalue="" ordervalue="173" listitemid="2371" islist="0"/><listitems name="Canton" listvalue="" ordervalue="174" listitemid="2372" islist="0"/><listitems name="Canyon" listvalue="" ordervalue="175" listitemid="2373" islist="0"/><listitems name="Carbon" listvalue="" ordervalue="176" listitemid="2374" islist="0"/><listitems name="Carl's Corner" listvalue="" ordervalue="177" listitemid="2375" islist="0"/><listitems name="Carmine" listvalue="" ordervalue="178" listitemid="2376" islist="0"/><listitems name="Carrizo Springs" listvalue="" ordervalue="179" listitemid="2377" islist="0"/><listitems name="Carrollton" listvalue="" ordervalue="180" listitemid="2378" islist="0"/><listitems name="Carthage" listvalue="" ordervalue="181" listitemid="2379" islist="0"/><listitems name="Cashion" listvalue="" ordervalue="182" listitemid="2380" islist="0"/><listitems name="Castle Hills" listvalue="" ordervalue="183" listitemid="2381" islist="0"/><listitems name="Castroville" listvalue="" ordervalue="184" listitemid="2382" islist="0"/><listitems name="Cedar Hill" listvalue="" ordervalue="185" listitemid="2383" islist="0"/><listitems name="Cedar Park" listvalue="" ordervalue="186" listitemid="2384" islist="0"/><listitems name="Celeste" listvalue="" ordervalue="187" listitemid="2385" islist="0"/><listitems name="Celina" listvalue="" ordervalue="188" listitemid="2386" islist="0"/><listitems name="Center" listvalue="" ordervalue="189" listitemid="2387" islist="0"/><listitems name="Centerville" listvalue="" ordervalue="190" listitemid="2388" islist="0"/><listitems name="Chandler" listvalue="" ordervalue="191" listitemid="2389" islist="0"/><listitems name="Channing" listvalue="" ordervalue="192" listitemid="2390" islist="0"/><listitems name="Charlotte" listvalue="" ordervalue="193" listitemid="2391" islist="0"/><listitems name="Chester" listvalue="" ordervalue="194" listitemid="2392" islist="0"/><listitems name="Chico" listvalue="" ordervalue="195" listitemid="2393" islist="0"/><listitems name="Childress" listvalue="" ordervalue="196" listitemid="2394" islist="0"/><listitems name="Chillicothe" listvalue="" ordervalue="197" listitemid="2395" islist="0"/><listitems name="China" listvalue="" ordervalue="198" listitemid="2396" islist="0"/><listitems name="China Grove" listvalue="" ordervalue="199" listitemid="2397" islist="0"/><listitems name="Chireno" listvalue="" ordervalue="200" listitemid="2398" islist="0"/><listitems name="Christine" listvalue="" ordervalue="201" listitemid="2399" islist="0"/><listitems name="Cibolo" listvalue="" ordervalue="202" listitemid="2400" islist="0"/><listitems name="Cisco" listvalue="" ordervalue="203" listitemid="2401" islist="0"/><listitems name="Clarendon" listvalue="" ordervalue="204" listitemid="2402" islist="0"/><listitems name="Clarksville" listvalue="" ordervalue="205" listitemid="2403" islist="0"/><listitems name="Clarksville City" listvalue="" ordervalue="206" listitemid="2404" islist="0"/><listitems name="Claude" listvalue="" ordervalue="207" listitemid="2405" islist="0"/><listitems name="Clear Lake Shores" listvalue="" ordervalue="208" listitemid="2406" islist="0"/><listitems name="Cleburne" listvalue="" ordervalue="209" listitemid="2407" islist="0"/><listitems name="Cleveland" listvalue="" ordervalue="210" listitemid="2408" islist="0"/><listitems name="Clifton" listvalue="" ordervalue="211" listitemid="2409" islist="0"/><listitems name="Clint" listvalue="" ordervalue="212" listitemid="2410" islist="0"/><listitems name="Clute" listvalue="" ordervalue="213" listitemid="2411" islist="0"/><listitems name="Clyde" listvalue="" ordervalue="214" listitemid="2412" islist="0"/><listitems name="Coahoma" listvalue="" ordervalue="215" listitemid="2413" islist="0"/><listitems name="Cockrell Hill" listvalue="" ordervalue="216" listitemid="2414" islist="0"/><listitems name="Coffee City" listvalue="" ordervalue="217" listitemid="2415" islist="0"/><listitems name="Coldspring" listvalue="" ordervalue="218" listitemid="2416" islist="0"/><listitems name="Coleman" listvalue="" ordervalue="219" listitemid="2417" islist="0"/><listitems name="College Station" listvalue="" ordervalue="220" listitemid="2418" islist="0"/><listitems name="Colleyville" listvalue="" ordervalue="221" listitemid="2419" islist="0"/><listitems name="Collinsville" listvalue="" ordervalue="222" listitemid="2420" islist="0"/><listitems name="Colmesneil" listvalue="" ordervalue="223" listitemid="2421" islist="0"/><listitems name="Colorado City" listvalue="" ordervalue="224" listitemid="2422" islist="0"/><listitems name="Columbus" listvalue="" ordervalue="225" listitemid="2423" islist="0"/><listitems name="Comanche" listvalue="" ordervalue="226" listitemid="2424" islist="0"/><listitems name="Combes" listvalue="" ordervalue="227" listitemid="2425" islist="0"/><listitems name="Combine" listvalue="" ordervalue="228" listitemid="2426" islist="0"/><listitems name="Commerce" listvalue="" ordervalue="229" listitemid="2427" islist="0"/><listitems name="Como" listvalue="" ordervalue="230" listitemid="2428" islist="0"/><listitems name="Conroe" listvalue="" ordervalue="231" listitemid="2429" islist="0"/><listitems name="Converse" listvalue="" ordervalue="232" listitemid="2430" islist="0"/><listitems name="Cool" listvalue="" ordervalue="233" listitemid="2431" islist="0"/><listitems name="Coolidge" listvalue="" ordervalue="234" listitemid="2432" islist="0"/><listitems name="Cooper" listvalue="" ordervalue="235" listitemid="2433" islist="0"/><listitems name="Coppell" listvalue="" ordervalue="236" listitemid="2434" islist="0"/><listitems name="Copper Canyon" listvalue="" ordervalue="237" listitemid="2435" islist="0"/><listitems name="Copperas Cove" listvalue="" ordervalue="238" listitemid="2436" islist="0"/><listitems name="Corinth" listvalue="" ordervalue="239" listitemid="2437" islist="0"/><listitems name="Corpus Christi" listvalue="" ordervalue="240" listitemid="2438" islist="0"/><listitems name="Corral City" listvalue="" ordervalue="241" listitemid="2439" islist="0"/><listitems name="Corrigan" listvalue="" ordervalue="242" listitemid="2440" islist="0"/><listitems name="Corsicana" listvalue="" ordervalue="243" listitemid="2441" islist="0"/><listitems name="Cottonwood" listvalue="" ordervalue="244" listitemid="2442" islist="0"/><listitems name="Cottonwood Shores" listvalue="" ordervalue="245" listitemid="2443" islist="0"/><listitems name="Cotulla" listvalue="" ordervalue="246" listitemid="2444" islist="0"/><listitems name="Cove" listvalue="" ordervalue="247" listitemid="2445" islist="0"/><listitems name="Covington" listvalue="" ordervalue="248" listitemid="2446" islist="0"/><listitems name="Crandall" listvalue="" ordervalue="249" listitemid="2447" islist="0"/><listitems name="Crane" listvalue="" ordervalue="250" listitemid="2448" islist="0"/><listitems name="Cranfills Gap" listvalue="" ordervalue="251" listitemid="2449" islist="0"/><listitems name="Crawford" listvalue="" ordervalue="252" listitemid="2450" islist="0"/><listitems name="Creedmoor" listvalue="" ordervalue="253" listitemid="2451" islist="0"/><listitems name="Cresson" listvalue="" ordervalue="254" listitemid="2452" islist="0"/><listitems name="Crockett" listvalue="" ordervalue="255" listitemid="2453" islist="0"/><listitems name="Crosbyton" listvalue="" ordervalue="256" listitemid="2454" islist="0"/><listitems name="Cross Plains" listvalue="" ordervalue="257" listitemid="2455" islist="0"/><listitems name="Cross Roads" listvalue="" ordervalue="258" listitemid="2456" islist="0"/><listitems name="Cross Timber" listvalue="" ordervalue="259" listitemid="2457" islist="0"/><listitems name="Crowell" listvalue="" ordervalue="260" listitemid="2458" islist="0"/><listitems name="Crowley" listvalue="" ordervalue="261" listitemid="2459" islist="0"/><listitems name="Crystal City" listvalue="" ordervalue="262" listitemid="2460" islist="0"/><listitems name="Cuero" listvalue="" ordervalue="263" listitemid="2461" islist="0"/><listitems name="Cumby" listvalue="" ordervalue="264" listitemid="2462" islist="0"/><listitems name="Cuney" listvalue="" ordervalue="265" listitemid="2463" islist="0"/><listitems name="Cushing" listvalue="" ordervalue="266" listitemid="2464" islist="0"/><listitems name="Cut and Shoot" listvalue="" ordervalue="267" listitemid="2465" islist="0"/><listitems name="Daingerfield" listvalue="" ordervalue="268" listitemid="2466" islist="0"/><listitems name="Daisetta" listvalue="" ordervalue="269" listitemid="2467" islist="0"/><listitems name="Dalhart" listvalue="" ordervalue="270" listitemid="2468" islist="0"/><listitems name="Dallas" listvalue="" ordervalue="271" listitemid="2469" islist="0"/><listitems name="Dalworthington Gardens" listvalue="" ordervalue="272" listitemid="2470" islist="0"/><listitems name="Danbury" listvalue="" ordervalue="273" listitemid="2471" islist="0"/><listitems name="Darrouzett" listvalue="" ordervalue="274" listitemid="2472" islist="0"/><listitems name="Dawson" listvalue="" ordervalue="275" listitemid="2473" islist="0"/><listitems name="Dayton" listvalue="" ordervalue="276" listitemid="2474" islist="0"/><listitems name="Dayton Lakes" listvalue="" ordervalue="277" listitemid="2475" islist="0"/><listitems name="De Leon" listvalue="" ordervalue="278" listitemid="2476" islist="0"/><listitems name="Dean" listvalue="" ordervalue="279" listitemid="2477" islist="0"/><listitems name="Decatur" listvalue="" ordervalue="280" listitemid="2478" islist="0"/><listitems name="DeCordova" listvalue="" ordervalue="281" listitemid="2479" islist="0"/><listitems name="Deer Park" listvalue="" ordervalue="282" listitemid="2480" islist="0"/><listitems name="DeKalb" listvalue="" ordervalue="283" listitemid="2481" islist="0"/><listitems name="Del Rio" listvalue="" ordervalue="284" listitemid="2482" islist="0"/><listitems name="Dell City" listvalue="" ordervalue="285" listitemid="2483" islist="0"/><listitems name="Denison" listvalue="" ordervalue="286" listitemid="2484" islist="0"/><listitems name="Denton" listvalue="" ordervalue="287" listitemid="2485" islist="0"/><listitems name="Denver City" listvalue="" ordervalue="288" listitemid="2486" islist="0"/><listitems name="Deport" listvalue="" ordervalue="289" listitemid="2487" islist="0"/><listitems name="DeSoto" listvalue="" ordervalue="290" listitemid="2488" islist="0"/><listitems name="Detroit" listvalue="" ordervalue="291" listitemid="2489" islist="0"/><listitems name="Devers" listvalue="" ordervalue="292" listitemid="2490" islist="0"/><listitems name="Devine" listvalue="" ordervalue="293" listitemid="2491" islist="0"/><listitems name="Diboll" listvalue="" ordervalue="294" listitemid="2492" islist="0"/><listitems name="Dickens" listvalue="" ordervalue="295" listitemid="2493" islist="0"/><listitems name="Dickinson" listvalue="" ordervalue="296" listitemid="2494" islist="0"/><listitems name="Dilley" listvalue="" ordervalue="297" listitemid="2495" islist="0"/><listitems name="Dimmitt" listvalue="" ordervalue="298" listitemid="2496" islist="0"/><listitems name="Dish" listvalue="" ordervalue="299" listitemid="2497" islist="0"/><listitems name="Dodd City" listvalue="" ordervalue="300" listitemid="2498" islist="0"/><listitems name="Dodson" listvalue="" ordervalue="301" listitemid="2499" islist="0"/><listitems name="Domino" listvalue="" ordervalue="302" listitemid="2500" islist="0"/><listitems name="Donna" listvalue="" ordervalue="303" listitemid="2501" islist="0"/><listitems name="Dorchester" listvalue="" ordervalue="304" listitemid="2502" islist="0"/><listitems name="Double Oak" listvalue="" ordervalue="305" listitemid="2503" islist="0"/><listitems name="Douglassville" listvalue="" ordervalue="306" listitemid="2504" islist="0"/><listitems name="Dripping Springs" listvalue="" ordervalue="307" listitemid="2505" islist="0"/><listitems name="Driscoll" listvalue="" ordervalue="308" listitemid="2506" islist="0"/><listitems name="Dublin" listvalue="" ordervalue="309" listitemid="2507" islist="0"/><listitems name="Dumas" listvalue="" ordervalue="310" listitemid="2508" islist="0"/><listitems name="Duncanville" listvalue="" ordervalue="311" listitemid="2509" islist="0"/><listitems name="Eagle Lake" listvalue="" ordervalue="312" listitemid="2510" islist="0"/><listitems name="Eagle Pass" listvalue="" ordervalue="313" listitemid="2511" islist="0"/><listitems name="Early" listvalue="" ordervalue="314" listitemid="2512" islist="0"/><listitems name="Earth" listvalue="" ordervalue="315" listitemid="2513" islist="0"/><listitems name="East Bernard" listvalue="" ordervalue="316" listitemid="2514" islist="0"/><listitems name="East Mountain" listvalue="" ordervalue="317" listitemid="2515" islist="0"/><listitems name="East Tawakoni" listvalue="" ordervalue="318" listitemid="2516" islist="0"/><listitems name="Eastland" listvalue="" ordervalue="319" listitemid="2517" islist="0"/><listitems name="Easton" listvalue="" ordervalue="320" listitemid="2518" islist="0"/><listitems name="Ector" listvalue="" ordervalue="321" listitemid="2519" islist="0"/><listitems name="Edcouch" listvalue="" ordervalue="322" listitemid="2520" islist="0"/><listitems name="Eden" listvalue="" ordervalue="323" listitemid="2521" islist="0"/><listitems name="Edgecliff" listvalue="" ordervalue="324" listitemid="2522" islist="0"/><listitems name="Edgewood" listvalue="" ordervalue="325" listitemid="2523" islist="0"/><listitems name="Edinburg" listvalue="" ordervalue="326" listitemid="2524" islist="0"/><listitems name="Edmonson" listvalue="" ordervalue="327" listitemid="2525" islist="0"/><listitems name="Edna" listvalue="" ordervalue="328" listitemid="2526" islist="0"/><listitems name="Edom" listvalue="" ordervalue="329" listitemid="2527" islist="0"/><listitems name="El Campo" listvalue="" ordervalue="330" listitemid="2528" islist="0"/><listitems name="El Cenizo" listvalue="" ordervalue="331" listitemid="2529" islist="0"/><listitems name="El Lago" listvalue="" ordervalue="332" listitemid="2530" islist="0"/><listitems name="El Paso" listvalue="" ordervalue="333" listitemid="2531" islist="0"/><listitems name="Eldorado" listvalue="" ordervalue="334" listitemid="2532" islist="0"/><listitems name="Electra" listvalue="" ordervalue="335" listitemid="2533" islist="0"/><listitems name="Elgin" listvalue="" ordervalue="336" listitemid="2534" islist="0"/><listitems name="Elkhart" listvalue="" ordervalue="337" listitemid="2535" islist="0"/><listitems name="Elmendorf" listvalue="" ordervalue="338" listitemid="2536" islist="0"/><listitems name="Elsa" listvalue="" ordervalue="339" listitemid="2537" islist="0"/><listitems name="Emhouse" listvalue="" ordervalue="340" listitemid="2538" islist="0"/><listitems name="Emory" listvalue="" ordervalue="341" listitemid="2539" islist="0"/><listitems name="Enchanted Oaks" listvalue="" ordervalue="342" listitemid="2540" islist="0"/><listitems name="Encinal" listvalue="" ordervalue="343" listitemid="2541" islist="0"/><listitems name="Ennis" listvalue="" ordervalue="344" listitemid="2542" islist="0"/><listitems name="Escobares" listvalue="" ordervalue="345" listitemid="2543" islist="0"/><listitems name="Estelline" listvalue="" ordervalue="346" listitemid="2544" islist="0"/><listitems name="Euless" listvalue="" ordervalue="347" listitemid="2545" islist="0"/><listitems name="Eureka" listvalue="" ordervalue="348" listitemid="2546" islist="0"/><listitems name="Eustace" listvalue="" ordervalue="349" listitemid="2547" islist="0"/><listitems name="Evant" listvalue="" ordervalue="350" listitemid="2548" islist="0"/><listitems name="Everman" listvalue="" ordervalue="351" listitemid="2549" islist="0"/><listitems name="Fair Oaks Ranch" listvalue="" ordervalue="352" listitemid="2550" islist="0"/><listitems name="Fairchilds" listvalue="" ordervalue="353" listitemid="2551" islist="0"/><listitems name="Fairfield" listvalue="" ordervalue="354" listitemid="2552" islist="0"/><listitems name="Fairview" listvalue="" ordervalue="355" listitemid="2553" islist="0"/><listitems name="Falfurrias" listvalue="" ordervalue="356" listitemid="2554" islist="0"/><listitems name="Falls City" listvalue="" ordervalue="357" listitemid="2555" islist="0"/><listitems name="Farmers Branch" listvalue="" ordervalue="358" listitemid="2556" islist="0"/><listitems name="Farmersville" listvalue="" ordervalue="359" listitemid="2557" islist="0"/><listitems name="Farwell" listvalue="" ordervalue="360" listitemid="2558" islist="0"/><listitems name="Fate" listvalue="" ordervalue="361" listitemid="2559" islist="0"/><listitems name="Fayetteville" listvalue="" ordervalue="362" listitemid="2560" islist="0"/><listitems name="Ferris" listvalue="" ordervalue="363" listitemid="2561" islist="0"/><listitems name="Flatonia" listvalue="" ordervalue="364" listitemid="2562" islist="0"/><listitems name="Florence" listvalue="" ordervalue="365" listitemid="2563" islist="0"/><listitems name="Floresville" listvalue="" ordervalue="366" listitemid="2564" islist="0"/><listitems name="Flower Mound" listvalue="" ordervalue="367" listitemid="2565" islist="0"/><listitems name="Floydada" listvalue="" ordervalue="368" listitemid="2566" islist="0"/><listitems name="Follett" listvalue="" ordervalue="369" listitemid="2567" islist="0"/><listitems name="Forest Hill" listvalue="" ordervalue="370" listitemid="2568" islist="0"/><listitems name="Forney" listvalue="" ordervalue="371" listitemid="2569" islist="0"/><listitems name="Forsan" listvalue="" ordervalue="372" listitemid="2570" islist="0"/><listitems name="Fort Stockton" listvalue="" ordervalue="373" listitemid="2571" islist="0"/><listitems name="Fort Worth" listvalue="" ordervalue="374" listitemid="2572" islist="0"/><listitems name="Franklin" listvalue="" ordervalue="375" listitemid="2573" islist="0"/><listitems name="Frankston" listvalue="" ordervalue="376" listitemid="2574" islist="0"/><listitems name="Fredericksburg" listvalue="" ordervalue="377" listitemid="2575" islist="0"/><listitems name="Freeport" listvalue="" ordervalue="378" listitemid="2576" islist="0"/><listitems name="Freer" listvalue="" ordervalue="379" listitemid="2577" islist="0"/><listitems name="Friendswood" listvalue="" ordervalue="380" listitemid="2578" islist="0"/><listitems name="Friona" listvalue="" ordervalue="381" listitemid="2579" islist="0"/><listitems name="Frisco" listvalue="" ordervalue="382" listitemid="2580" islist="0"/><listitems name="Fritch" listvalue="" ordervalue="383" listitemid="2581" islist="0"/><listitems name="Frost" listvalue="" ordervalue="384" listitemid="2582" islist="0"/><listitems name="Fruitvale" listvalue="" ordervalue="385" listitemid="2583" islist="0"/><listitems name="Fulshear" listvalue="" ordervalue="386" listitemid="2584" islist="0"/><listitems name="Fulton" listvalue="" ordervalue="387" listitemid="2585" islist="0"/><listitems name="Gainesville" listvalue="" ordervalue="388" listitemid="2586" islist="0"/><listitems name="Galena Park" listvalue="" ordervalue="389" listitemid="2587" islist="0"/><listitems name="Gallatin" listvalue="" ordervalue="390" listitemid="2588" islist="0"/><listitems name="Galveston" listvalue="" ordervalue="391" listitemid="2589" islist="0"/><listitems name="Ganado" listvalue="" ordervalue="392" listitemid="2590" islist="0"/><listitems name="Garden Ridge" listvalue="" ordervalue="393" listitemid="2591" islist="0"/><listitems name="Garland" listvalue="" ordervalue="394" listitemid="2592" islist="0"/><listitems name="Garrett" listvalue="" ordervalue="395" listitemid="2593" islist="0"/><listitems name="Garrison" listvalue="" ordervalue="396" listitemid="2594" islist="0"/><listitems name="Gary" listvalue="" ordervalue="397" listitemid="2595" islist="0"/><listitems name="Gatesville" listvalue="" ordervalue="398" listitemid="2596" islist="0"/><listitems name="George West" listvalue="" ordervalue="399" listitemid="2597" islist="0"/><listitems name="Georgetown" listvalue="" ordervalue="400" listitemid="2598" islist="0"/><listitems name="Gholson" listvalue="" ordervalue="401" listitemid="2599" islist="0"/><listitems name="Giddings" listvalue="" ordervalue="402" listitemid="2600" islist="0"/><listitems name="Gilmer" listvalue="" ordervalue="403" listitemid="2601" islist="0"/><listitems name="Gladewater" listvalue="" ordervalue="404" listitemid="2602" islist="0"/><listitems name="Glen Rose" listvalue="" ordervalue="405" listitemid="2603" islist="0"/><listitems name="Glenn Heights" listvalue="" ordervalue="406" listitemid="2604" islist="0"/><listitems name="Godley" listvalue="" ordervalue="407" listitemid="2605" islist="0"/><listitems name="Goldsmith" listvalue="" ordervalue="408" listitemid="2606" islist="0"/><listitems name="Goldthwaite" listvalue="" ordervalue="409" listitemid="2607" islist="0"/><listitems name="Goliad" listvalue="" ordervalue="410" listitemid="2608" islist="0"/><listitems name="Golinda" listvalue="" ordervalue="411" listitemid="2609" islist="0"/><listitems name="Gonzales" listvalue="" ordervalue="412" listitemid="2610" islist="0"/><listitems name="Goodlow" listvalue="" ordervalue="413" listitemid="2611" islist="0"/><listitems name="Goodrich" listvalue="" ordervalue="414" listitemid="2612" islist="0"/><listitems name="Gordon" listvalue="" ordervalue="415" listitemid="2613" islist="0"/><listitems name="Goree" listvalue="" ordervalue="416" listitemid="2614" islist="0"/><listitems name="Gorman" listvalue="" ordervalue="417" listitemid="2615" islist="0"/><listitems name="Graford" listvalue="" ordervalue="418" listitemid="2616" islist="0"/><listitems name="Graham" listvalue="" ordervalue="419" listitemid="2617" islist="0"/><listitems name="Granbury" listvalue="" ordervalue="420" listitemid="2618" islist="0"/><listitems name="Grand Prairie" listvalue="" ordervalue="421" listitemid="2619" islist="0"/><listitems name="Grand Saline" listvalue="" ordervalue="422" listitemid="2620" islist="0"/><listitems name="Grandfalls" listvalue="" ordervalue="423" listitemid="2621" islist="0"/><listitems name="Grandview" listvalue="" ordervalue="424" listitemid="2622" islist="0"/><listitems name="Granger" listvalue="" ordervalue="425" listitemid="2623" islist="0"/><listitems name="Granite Shoals" listvalue="" ordervalue="426" listitemid="2624" islist="0"/><listitems name="Granjeno" listvalue="" ordervalue="427" listitemid="2625" islist="0"/><listitems name="Grapeland" listvalue="" ordervalue="428" listitemid="2626" islist="0"/><listitems name="Grapevine" listvalue="" ordervalue="429" listitemid="2627" islist="0"/><listitems name="Grays Prairie" listvalue="" ordervalue="430" listitemid="2628" islist="0"/><listitems name="Greenville" listvalue="" ordervalue="431" listitemid="2629" islist="0"/><listitems name="Lorenzo" listvalue="" ordervalue="646" listitemid="2844" islist="0"/><listitems name="Los Fresnos" listvalue="" ordervalue="647" listitemid="2845" islist="0"/><listitems name="Los Indios" listvalue="" ordervalue="648" listitemid="2846" islist="0"/><listitems name="Los Ybanez" listvalue="" ordervalue="649" listitemid="2847" islist="0"/><listitems name="Lott" listvalue="" ordervalue="650" listitemid="2848" islist="0"/><listitems name="Lovelady" listvalue="" ordervalue="651" listitemid="2849" islist="0"/><listitems name="Lowry Crossing" listvalue="" ordervalue="652" listitemid="2850" islist="0"/><listitems name="Lubbock" listvalue="" ordervalue="653" listitemid="2851" islist="0"/><listitems name="Lucas" listvalue="" ordervalue="654" listitemid="2852" islist="0"/><listitems name="Lueders" listvalue="" ordervalue="655" listitemid="2853" islist="0"/><listitems name="Lufkin" listvalue="" ordervalue="656" listitemid="2854" islist="0"/><listitems name="Luling" listvalue="" ordervalue="657" listitemid="2855" islist="0"/><listitems name="Lumberton" listvalue="" ordervalue="658" listitemid="2856" islist="0"/><listitems name="Lyford" listvalue="" ordervalue="659" listitemid="2857" islist="0"/><listitems name="Lytle" listvalue="" ordervalue="660" listitemid="2858" islist="0"/><listitems name="Mabank" listvalue="" ordervalue="661" listitemid="2859" islist="0"/><listitems name="Madisonville" listvalue="" ordervalue="662" listitemid="2860" islist="0"/><listitems name="Magnolia" listvalue="" ordervalue="663" listitemid="2861" islist="0"/><listitems name="Malakoff" listvalue="" ordervalue="664" listitemid="2862" islist="0"/><listitems name="Malone" listvalue="" ordervalue="665" listitemid="2863" islist="0"/><listitems name="Manor" listvalue="" ordervalue="666" listitemid="2864" islist="0"/><listitems name="Mansfield" listvalue="" ordervalue="667" listitemid="2865" islist="0"/><listitems name="Manvel" listvalue="" ordervalue="668" listitemid="2866" islist="0"/><listitems name="Marble Falls" listvalue="" ordervalue="669" listitemid="2867" islist="0"/><listitems name="Marfa" listvalue="" ordervalue="670" listitemid="2868" islist="0"/><listitems name="Marietta" listvalue="" ordervalue="671" listitemid="2869" islist="0"/><listitems name="Marion" listvalue="" ordervalue="672" listitemid="2870" islist="0"/><listitems name="Marlin" listvalue="" ordervalue="673" listitemid="2871" islist="0"/><listitems name="Marquez" listvalue="" ordervalue="674" listitemid="2872" islist="0"/><listitems name="Marshall" listvalue="" ordervalue="675" listitemid="2873" islist="0"/><listitems name="Mart" listvalue="" ordervalue="676" listitemid="2874" islist="0"/><listitems name="Martindale" listvalue="" ordervalue="677" listitemid="2875" islist="0"/><listitems name="Mason" listvalue="" ordervalue="678" listitemid="2876" islist="0"/><listitems name="Matador" listvalue="" ordervalue="679" listitemid="2877" islist="0"/><listitems name="Mathis" listvalue="" ordervalue="680" listitemid="2878" islist="0"/><listitems name="Maud" listvalue="" ordervalue="681" listitemid="2879" islist="0"/><listitems name="Maypearl" listvalue="" ordervalue="682" listitemid="2880" islist="0"/><listitems name="McAllen" listvalue="" ordervalue="683" listitemid="2881" islist="0"/><listitems name="McCamey" listvalue="" ordervalue="684" listitemid="2882" islist="0"/><listitems name="McGregor" listvalue="" ordervalue="685" listitemid="2883" islist="0"/><listitems name="McKinney" listvalue="" ordervalue="686" listitemid="2884" islist="0"/><listitems name="McLean" listvalue="" ordervalue="687" listitemid="2885" islist="0"/><listitems name="McLendon-Chisholm" listvalue="" ordervalue="688" listitemid="2886" islist="0"/><listitems name="Meadow" listvalue="" ordervalue="689" listitemid="2887" islist="0"/><listitems name="Meadowlakes" listvalue="" ordervalue="690" listitemid="2888" islist="0"/><listitems name="Meadows Place" listvalue="" ordervalue="691" listitemid="2889" islist="0"/><listitems name="Megargel" listvalue="" ordervalue="692" listitemid="2890" islist="0"/><listitems name="Melissa" listvalue="" ordervalue="693" listitemid="2891" islist="0"/><listitems name="Melvin" listvalue="" ordervalue="694" listitemid="2892" islist="0"/><listitems name="Memphis" listvalue="" ordervalue="695" listitemid="2893" islist="0"/><listitems name="Menard" listvalue="" ordervalue="696" listitemid="2894" islist="0"/><listitems name="Mercedes" listvalue="" ordervalue="697" listitemid="2895" islist="0"/><listitems name="Meridian" listvalue="" ordervalue="698" listitemid="2896" islist="0"/><listitems name="Merkel" listvalue="" ordervalue="699" listitemid="2897" islist="0"/><listitems name="Mertens" listvalue="" ordervalue="700" listitemid="2898" islist="0"/><listitems name="Mertzon" listvalue="" ordervalue="701" listitemid="2899" islist="0"/><listitems name="Mesquite" listvalue="" ordervalue="702" listitemid="2900" islist="0"/><listitems name="Mexia" listvalue="" ordervalue="703" listitemid="2901" islist="0"/><listitems name="Miami" listvalue="" ordervalue="704" listitemid="2902" islist="0"/><listitems name="Midland" listvalue="" ordervalue="705" listitemid="2903" islist="0"/><listitems name="Midlothian" listvalue="" ordervalue="706" listitemid="2904" islist="0"/><listitems name="Midway" listvalue="" ordervalue="707" listitemid="2905" islist="0"/><listitems name="Milano" listvalue="" ordervalue="708" listitemid="2906" islist="0"/><listitems name="Mildred" listvalue="" ordervalue="709" listitemid="2907" islist="0"/><listitems name="Miles" listvalue="" ordervalue="710" listitemid="2908" islist="0"/><listitems name="Milford" listvalue="" ordervalue="711" listitemid="2909" islist="0"/><listitems name="Miller's Cove" listvalue="" ordervalue="712" listitemid="2910" islist="0"/><listitems name="Millsap" listvalue="" ordervalue="713" listitemid="2911" islist="0"/><listitems name="Mineola" listvalue="" ordervalue="714" listitemid="2912" islist="0"/><listitems name="Mineral Wells" listvalue="" ordervalue="715" listitemid="2913" islist="0"/><listitems name="Mingus" listvalue="" ordervalue="716" listitemid="2914" islist="0"/><listitems name="Mission" listvalue="" ordervalue="717" listitemid="2915" islist="0"/><listitems name="Missouri City" listvalue="" ordervalue="718" listitemid="2916" islist="0"/><listitems name="Mobeetie" listvalue="" ordervalue="719" listitemid="2917" islist="0"/><listitems name="Mobile City" listvalue="" ordervalue="720" listitemid="2918" islist="0"/><listitems name="Monahans" listvalue="" ordervalue="721" listitemid="2919" islist="0"/><listitems name="Mont Belvieu" listvalue="" ordervalue="722" listitemid="2920" islist="0"/><listitems name="Montgomery" listvalue="" ordervalue="723" listitemid="2921" islist="0"/><listitems name="Moody" listvalue="" ordervalue="724" listitemid="2922" islist="0"/><listitems name="Moore Station" listvalue="" ordervalue="725" listitemid="2923" islist="0"/><listitems name="Moran" listvalue="" ordervalue="726" listitemid="2924" islist="0"/><listitems name="Morgan" listvalue="" ordervalue="727" listitemid="2925" islist="0"/><listitems name="Morgan's Point" listvalue="" ordervalue="728" listitemid="2926" islist="0"/><listitems name="Morgan's Point Resort" listvalue="" ordervalue="729" listitemid="2927" islist="0"/><listitems name="Morton" listvalue="" ordervalue="730" listitemid="2928" islist="0"/><listitems name="Moulton" listvalue="" ordervalue="731" listitemid="2929" islist="0"/><listitems name="Mount Calm" listvalue="" ordervalue="732" listitemid="2930" islist="0"/><listitems name="Mount Enterprise" listvalue="" ordervalue="733" listitemid="2931" islist="0"/><listitems name="Mount Pleasant" listvalue="" ordervalue="734" listitemid="2932" islist="0"/><listitems name="Mount Vernon" listvalue="" ordervalue="735" listitemid="2933" islist="0"/><listitems name="Mountain City" listvalue="" ordervalue="736" listitemid="2934" islist="0"/><listitems name="Muenster" listvalue="" ordervalue="737" listitemid="2935" islist="0"/><listitems name="Muleshoe" listvalue="" ordervalue="738" listitemid="2936" islist="0"/><listitems name="Mullin" listvalue="" ordervalue="739" listitemid="2937" islist="0"/><listitems name="Munday" listvalue="" ordervalue="740" listitemid="2938" islist="0"/><listitems name="Murchison" listvalue="" ordervalue="741" listitemid="2939" islist="0"/><listitems name="Murphy" listvalue="" ordervalue="742" listitemid="2940" islist="0"/><listitems name="Mustang" listvalue="" ordervalue="743" listitemid="2941" islist="0"/><listitems name="Mustang Ridge" listvalue="" ordervalue="744" listitemid="2942" islist="0"/><listitems name="Nacogdoches" listvalue="" ordervalue="745" listitemid="2943" islist="0"/><listitems name="Naples" listvalue="" ordervalue="746" listitemid="2944" islist="0"/><listitems name="Nash" listvalue="" ordervalue="747" listitemid="2945" islist="0"/><listitems name="Nassau Bay" listvalue="" ordervalue="748" listitemid="2946" islist="0"/><listitems name="Natalia" listvalue="" ordervalue="749" listitemid="2947" islist="0"/><listitems name="Navarro" listvalue="" ordervalue="750" listitemid="2948" islist="0"/><listitems name="Navasota" listvalue="" ordervalue="751" listitemid="2949" islist="0"/><listitems name="Nazareth" listvalue="" ordervalue="752" listitemid="2950" islist="0"/><listitems name="Nederland" listvalue="" ordervalue="753" listitemid="2951" islist="0"/><listitems name="Needville" listvalue="" ordervalue="754" listitemid="2952" islist="0"/><listitems name="Nesbitt" listvalue="" ordervalue="755" listitemid="2953" islist="0"/><listitems name="Nevada" listvalue="" ordervalue="756" listitemid="2954" islist="0"/><listitems name="New Berlin" listvalue="" ordervalue="757" listitemid="2955" islist="0"/><listitems name="New Boston" listvalue="" ordervalue="758" listitemid="2956" islist="0"/><listitems name="New Braunfels" listvalue="" ordervalue="759" listitemid="2957" islist="0"/><listitems name="New Chapel Hill" listvalue="" ordervalue="760" listitemid="2958" islist="0"/><listitems name="New Deal" listvalue="" ordervalue="761" listitemid="2959" islist="0"/><listitems name="New Fairview" listvalue="" ordervalue="762" listitemid="2960" islist="0"/><listitems name="New Home" listvalue="" ordervalue="763" listitemid="2961" islist="0"/><listitems name="New Hope" listvalue="" ordervalue="764" listitemid="2962" islist="0"/><listitems name="New London" listvalue="" ordervalue="765" listitemid="2963" islist="0"/><listitems name="New Summerfield" listvalue="" ordervalue="766" listitemid="2964" islist="0"/><listitems name="New Waverly" listvalue="" ordervalue="767" listitemid="2965" islist="0"/><listitems name="Newark" listvalue="" ordervalue="768" listitemid="2966" islist="0"/><listitems name="Newcastle" listvalue="" ordervalue="769" listitemid="2967" islist="0"/><listitems name="Newton" listvalue="" ordervalue="770" listitemid="2968" islist="0"/><listitems name="Neylandville" listvalue="" ordervalue="771" listitemid="2969" islist="0"/><listitems name="Niederwald" listvalue="" ordervalue="772" listitemid="2970" islist="0"/><listitems name="Nixon" listvalue="" ordervalue="773" listitemid="2971" islist="0"/><listitems name="Nocona" listvalue="" ordervalue="774" listitemid="2972" islist="0"/><listitems name="Nolanville" listvalue="" ordervalue="775" listitemid="2973" islist="0"/><listitems name="Nome" listvalue="" ordervalue="776" listitemid="2974" islist="0"/><listitems name="Noonday" listvalue="" ordervalue="777" listitemid="2975" islist="0"/><listitems name="Nordheim" listvalue="" ordervalue="778" listitemid="2976" islist="0"/><listitems name="Normangee" listvalue="" ordervalue="779" listitemid="2977" islist="0"/><listitems name="North Cleveland" listvalue="" ordervalue="780" listitemid="2978" islist="0"/><listitems name="North Richland Hills" listvalue="" ordervalue="781" listitemid="2979" islist="0"/><listitems name="Northlake" listvalue="" ordervalue="782" listitemid="2980" islist="0"/><listitems name="Novice" listvalue="" ordervalue="783" listitemid="2981" islist="0"/><listitems name="Oak Grove" listvalue="" ordervalue="784" listitemid="2982" islist="0"/><listitems name="Oak Leaf" listvalue="" ordervalue="785" listitemid="2983" islist="0"/><listitems name="Oak Point" listvalue="" ordervalue="786" listitemid="2984" islist="0"/><listitems name="Oak Ridge (Cooke)" listvalue="" ordervalue="787" listitemid="2985" islist="0"/><listitems name="Oak Ridge (Kaufman)" listvalue="" ordervalue="788" listitemid="2986" islist="0"/><listitems name="Oak Ridge North" listvalue="" ordervalue="789" listitemid="2987" islist="0"/><listitems name="Oak Valley" listvalue="" ordervalue="790" listitemid="2988" islist="0"/><listitems name="Oakwood" listvalue="" ordervalue="791" listitemid="2989" islist="0"/><listitems name="O'Brien" listvalue="" ordervalue="792" listitemid="2990" islist="0"/><listitems name="Odem" listvalue="" ordervalue="793" listitemid="2991" islist="0"/><listitems name="Odessa" listvalue="" ordervalue="794" listitemid="2992" islist="0"/><listitems name="O'Donnell" listvalue="" ordervalue="795" listitemid="2993" islist="0"/><listitems name="Oglesby" listvalue="" ordervalue="796" listitemid="2994" islist="0"/><listitems name="Old River-Winfree" listvalue="" ordervalue="797" listitemid="2995" islist="0"/><listitems name="Olmos Park" listvalue="" ordervalue="798" listitemid="2996" islist="0"/><listitems name="Olney" listvalue="" ordervalue="799" listitemid="2997" islist="0"/><listitems name="Olton" listvalue="" ordervalue="800" listitemid="2998" islist="0"/><listitems name="Omaha" listvalue="" ordervalue="801" listitemid="2999" islist="0"/><listitems name="Onalaska" listvalue="" ordervalue="802" listitemid="3000" islist="0"/><listitems name="Opdyke West" listvalue="" ordervalue="803" listitemid="3001" islist="0"/><listitems name="Orange" listvalue="" ordervalue="804" listitemid="3002" islist="0"/><listitems name="Orange Grove" listvalue="" ordervalue="805" listitemid="3003" islist="0"/><listitems name="Orchard" listvalue="" ordervalue="806" listitemid="3004" islist="0"/><listitems name="Ore City" listvalue="" ordervalue="807" listitemid="3005" islist="0"/><listitems name="Overton" listvalue="" ordervalue="808" listitemid="3006" islist="0"/><listitems name="Ovilla" listvalue="" ordervalue="809" listitemid="3007" islist="0"/><listitems name="Oyster Creek" listvalue="" ordervalue="810" listitemid="3008" islist="0"/><listitems name="Paducah" listvalue="" ordervalue="811" listitemid="3009" islist="0"/><listitems name="Paint Rock" listvalue="" ordervalue="812" listitemid="3010" islist="0"/><listitems name="Palacios" listvalue="" ordervalue="813" listitemid="3011" islist="0"/><listitems name="Palestine" listvalue="" ordervalue="814" listitemid="3012" islist="0"/><listitems name="Palisades" listvalue="" ordervalue="815" listitemid="3013" islist="0"/><listitems name="Palm Valley" listvalue="" ordervalue="816" listitemid="3014" islist="0"/><listitems name="Palmer" listvalue="" ordervalue="817" listitemid="3015" islist="0"/><listitems name="Palmhurst" listvalue="" ordervalue="818" listitemid="3016" islist="0"/><listitems name="Palmview" listvalue="" ordervalue="819" listitemid="3017" islist="0"/><listitems name="Pampa" listvalue="" ordervalue="820" listitemid="3018" islist="0"/><listitems name="Panhandle" listvalue="" ordervalue="821" listitemid="3019" islist="0"/><listitems name="Panorama Village" listvalue="" ordervalue="822" listitemid="3020" islist="0"/><listitems name="Pantego" listvalue="" ordervalue="823" listitemid="3021" islist="0"/><listitems name="Paradise" listvalue="" ordervalue="824" listitemid="3022" islist="0"/><listitems name="Paris" listvalue="" ordervalue="825" listitemid="3023" islist="0"/><listitems name="Parker" listvalue="" ordervalue="826" listitemid="3024" islist="0"/><listitems name="Pasadena" listvalue="" ordervalue="827" listitemid="3025" islist="0"/><listitems name="Pattison" listvalue="" ordervalue="828" listitemid="3026" islist="0"/><listitems name="Patton Village" listvalue="" ordervalue="829" listitemid="3027" islist="0"/><listitems name="Payne Springs" listvalue="" ordervalue="830" listitemid="3028" islist="0"/><listitems name="Pearland" listvalue="" ordervalue="831" listitemid="3029" islist="0"/><listitems name="Pearsall" listvalue="" ordervalue="832" listitemid="3030" islist="0"/><listitems name="Pecan Gap" listvalue="" ordervalue="833" listitemid="3031" islist="0"/><listitems name="Pecan Hill" listvalue="" ordervalue="834" listitemid="3032" islist="0"/><listitems name="Pecos" listvalue="" ordervalue="835" listitemid="3033" islist="0"/><listitems name="Pelican Bay" listvalue="" ordervalue="836" listitemid="3034" islist="0"/><listitems name="Penelope" listvalue="" ordervalue="837" listitemid="3035" islist="0"/><listitems name="Penitas" listvalue="" ordervalue="838" listitemid="3036" islist="0"/><listitems name="Perryton" listvalue="" ordervalue="839" listitemid="3037" islist="0"/><listitems name="Petersburg" listvalue="" ordervalue="840" listitemid="3038" islist="0"/><listitems name="Petrolia" listvalue="" ordervalue="841" listitemid="3039" islist="0"/><listitems name="Petronila" listvalue="" ordervalue="842" listitemid="3040" islist="0"/><listitems name="Pflugerville" listvalue="" ordervalue="843" listitemid="3041" islist="0"/><listitems name="Pharr" listvalue="" ordervalue="844" listitemid="3042" islist="0"/><listitems name="Pilot Point" listvalue="" ordervalue="845" listitemid="3043" islist="0"/><listitems name="Pine Forest" listvalue="" ordervalue="846" listitemid="3044" islist="0"/><listitems name="Pine Island" listvalue="" ordervalue="847" listitemid="3045" islist="0"/><listitems name="Pinehurst" listvalue="" ordervalue="848" listitemid="3046" islist="0"/><listitems name="Pineland" listvalue="" ordervalue="849" listitemid="3047" islist="0"/><listitems name="Piney Point Village" listvalue="" ordervalue="850" listitemid="3048" islist="0"/><listitems name="Pittsburg" listvalue="" ordervalue="851" listitemid="3049" islist="0"/><listitems name="Plains" listvalue="" ordervalue="852" listitemid="3050" islist="0"/><listitems name="Plainview" listvalue="" ordervalue="853" listitemid="3051" islist="0"/><listitems name="Plano" listvalue="" ordervalue="854" listitemid="3052" islist="0"/><listitems name="Pleak" listvalue="" ordervalue="855" listitemid="3053" islist="0"/><listitems name="Pleasant Valley" listvalue="" ordervalue="856" listitemid="3054" islist="0"/><listitems name="Pleasanton" listvalue="" ordervalue="857" listitemid="3055" islist="0"/><listitems name="Plum Grove" listvalue="" ordervalue="858" listitemid="3056" islist="0"/><listitems name="Point" listvalue="" ordervalue="859" listitemid="3057" islist="0"/><listitems name="Point Blank" listvalue="" ordervalue="860" listitemid="3058" islist="0"/><listitems name="Point Comfort" listvalue="" ordervalue="861" listitemid="3059" islist="0"/><listitems name="Point Venture" listvalue="" ordervalue="862" listitemid="3060" islist="0"/><listitems name="Ponder" listvalue="" ordervalue="863" listitemid="3061" islist="0"/><listitems name="Port Aransas" listvalue="" ordervalue="864" listitemid="3062" islist="0"/><listitems name="Port Arthur" listvalue="" ordervalue="865" listitemid="3063" islist="0"/><listitems name="Port Isabel" listvalue="" ordervalue="866" listitemid="3064" islist="0"/><listitems name="Port Lavaca" listvalue="" ordervalue="867" listitemid="3065" islist="0"/><listitems name="Port Neches" listvalue="" ordervalue="868" listitemid="3066" islist="0"/><listitems name="Portland" listvalue="" ordervalue="869" listitemid="3067" islist="0"/><listitems name="Post" listvalue="" ordervalue="870" listitemid="3068" islist="0"/><listitems name="Post Oak Bend" listvalue="" ordervalue="871" listitemid="3069" islist="0"/><listitems name="Poteet" listvalue="" ordervalue="872" listitemid="3070" islist="0"/><listitems name="Poth" listvalue="" ordervalue="873" listitemid="3071" islist="0"/><listitems name="Pottsboro" listvalue="" ordervalue="874" listitemid="3072" islist="0"/><listitems name="Powell" listvalue="" ordervalue="875" listitemid="3073" islist="0"/><listitems name="Poynor" listvalue="" ordervalue="876" listitemid="3074" islist="0"/><listitems name="Prairie View" listvalue="" ordervalue="877" listitemid="3075" islist="0"/><listitems name="Premont" listvalue="" ordervalue="878" listitemid="3076" islist="0"/><listitems name="Presidio" listvalue="" ordervalue="879" listitemid="3077" islist="0"/><listitems name="Primera" listvalue="" ordervalue="880" listitemid="3078" islist="0"/><listitems name="Princeton" listvalue="" ordervalue="881" listitemid="3079" islist="0"/><listitems name="Progreso" listvalue="" ordervalue="882" listitemid="3080" islist="0"/><listitems name="Progreso Lakes" listvalue="" ordervalue="883" listitemid="3081" islist="0"/><listitems name="Prosper" listvalue="" ordervalue="884" listitemid="3082" islist="0"/><listitems name="Providence Village" listvalue="" ordervalue="885" listitemid="3083" islist="0"/><listitems name="Putnam" listvalue="" ordervalue="886" listitemid="3084" islist="0"/><listitems name="Pyote" listvalue="" ordervalue="887" listitemid="3085" islist="0"/><listitems name="Quanah" listvalue="" ordervalue="888" listitemid="3086" islist="0"/><listitems name="Queen City" listvalue="" ordervalue="889" listitemid="3087" islist="0"/><listitems name="Quinlan" listvalue="" ordervalue="890" listitemid="3088" islist="0"/><listitems name="Quintana" listvalue="" ordervalue="891" listitemid="3089" islist="0"/><listitems name="Quitaque" listvalue="" ordervalue="892" listitemid="3090" islist="0"/><listitems name="Quitman" listvalue="" ordervalue="893" listitemid="3091" islist="0"/><listitems name="Ralls" listvalue="" ordervalue="894" listitemid="3092" islist="0"/><listitems name="Rancho Viejo" listvalue="" ordervalue="895" listitemid="3093" islist="0"/><listitems name="Ranger" listvalue="" ordervalue="896" listitemid="3094" islist="0"/><listitems name="Rangerville" listvalue="" ordervalue="897" listitemid="3095" islist="0"/><listitems name="Rankin" listvalue="" ordervalue="898" listitemid="3096" islist="0"/><listitems name="Ransom Canyon" listvalue="" ordervalue="899" listitemid="3097" islist="0"/><listitems name="Ravenna" listvalue="" ordervalue="900" listitemid="3098" islist="0"/><listitems name="Raymondville" listvalue="" ordervalue="901" listitemid="3099" islist="0"/><listitems name="Red Lick" listvalue="" ordervalue="902" listitemid="3100" islist="0"/><listitems name="Red Oak" listvalue="" ordervalue="903" listitemid="3101" islist="0"/><listitems name="Redwater" listvalue="" ordervalue="904" listitemid="3102" islist="0"/><listitems name="Refugio" listvalue="" ordervalue="905" listitemid="3103" islist="0"/><listitems name="Reklaw" listvalue="" ordervalue="906" listitemid="3104" islist="0"/><listitems name="Reno (Lamar)" listvalue="" ordervalue="907" listitemid="3105" islist="0"/><listitems name="Reno (Parker)" listvalue="" ordervalue="908" listitemid="3106" islist="0"/><listitems name="Retreat" listvalue="" ordervalue="909" listitemid="3107" islist="0"/><listitems name="Rhome" listvalue="" ordervalue="910" listitemid="3108" islist="0"/><listitems name="Rice" listvalue="" ordervalue="911" listitemid="3109" islist="0"/><listitems name="Richardson" listvalue="" ordervalue="912" listitemid="3110" islist="0"/><listitems name="Richland" listvalue="" ordervalue="913" listitemid="3111" islist="0"/><listitems name="Richland Hills" listvalue="" ordervalue="914" listitemid="3112" islist="0"/><listitems name="Richland Springs" listvalue="" ordervalue="915" listitemid="3113" islist="0"/><listitems name="Richmond" listvalue="" ordervalue="916" listitemid="3114" islist="0"/><listitems name="Richwood" listvalue="" ordervalue="917" listitemid="3115" islist="0"/><listitems name="Riesel" listvalue="" ordervalue="918" listitemid="3116" islist="0"/><listitems name="Rio Bravo" listvalue="" ordervalue="919" listitemid="3117" islist="0"/><listitems name="Rio Grande City" listvalue="" ordervalue="920" listitemid="3118" islist="0"/><listitems name="Rio Hondo" listvalue="" ordervalue="921" listitemid="3119" islist="0"/><listitems name="Rio Vista" listvalue="" ordervalue="922" listitemid="3120" islist="0"/><listitems name="Rising Star" listvalue="" ordervalue="923" listitemid="3121" islist="0"/><listitems name="River Oaks" listvalue="" ordervalue="924" listitemid="3122" islist="0"/><listitems name="Riverside" listvalue="" ordervalue="925" listitemid="3123" islist="0"/><listitems name="Roanoke" listvalue="" ordervalue="926" listitemid="3124" islist="0"/><listitems name="Roaring Springs" listvalue="" ordervalue="927" listitemid="3125" islist="0"/><listitems name="Robert Lee" listvalue="" ordervalue="928" listitemid="3126" islist="0"/><listitems name="Robinson" listvalue="" ordervalue="929" listitemid="3127" islist="0"/><listitems name="Robstown" listvalue="" ordervalue="930" listitemid="3128" islist="0"/><listitems name="Roby" listvalue="" ordervalue="931" listitemid="3129" islist="0"/><listitems name="Rochester" listvalue="" ordervalue="932" listitemid="3130" islist="0"/><listitems name="Rockdale" listvalue="" ordervalue="933" listitemid="3131" islist="0"/><listitems name="Rockport" listvalue="" ordervalue="934" listitemid="3132" islist="0"/><listitems name="Rocksprings" listvalue="" ordervalue="935" listitemid="3133" islist="0"/><listitems name="Rockwall" listvalue="" ordervalue="936" listitemid="3134" islist="0"/><listitems name="Rocky Mound" listvalue="" ordervalue="937" listitemid="3135" islist="0"/><listitems name="Rogers" listvalue="" ordervalue="938" listitemid="3136" islist="0"/><listitems name="Rollingwood" listvalue="" ordervalue="939" listitemid="3137" islist="0"/><listitems name="Roma" listvalue="" ordervalue="940" listitemid="3138" islist="0"/><listitems name="Roman Forest" listvalue="" ordervalue="941" listitemid="3139" islist="0"/><listitems name="Ropesville" listvalue="" ordervalue="942" listitemid="3140" islist="0"/><listitems name="Roscoe" listvalue="" ordervalue="943" listitemid="3141" islist="0"/><listitems name="Rose City" listvalue="" ordervalue="944" listitemid="3142" islist="0"/><listitems name="Rose Hill Acres" listvalue="" ordervalue="945" listitemid="3143" islist="0"/><listitems name="Rosebud" listvalue="" ordervalue="946" listitemid="3144" islist="0"/><listitems name="Rosenberg" listvalue="" ordervalue="947" listitemid="3145" islist="0"/><listitems name="Ross" listvalue="" ordervalue="948" listitemid="3146" islist="0"/><listitems name="Rosser" listvalue="" ordervalue="949" listitemid="3147" islist="0"/><listitems name="Rotan" listvalue="" ordervalue="950" listitemid="3148" islist="0"/><listitems name="Round Mountain" listvalue="" ordervalue="951" listitemid="3149" islist="0"/><listitems name="Round Rock" listvalue="" ordervalue="952" listitemid="3150" islist="0"/><listitems name="Round Top" listvalue="" ordervalue="953" listitemid="3151" islist="0"/><listitems name="Rowlett" listvalue="" ordervalue="954" listitemid="3152" islist="0"/><listitems name="Roxton" listvalue="" ordervalue="955" listitemid="3153" islist="0"/><listitems name="Royse City" listvalue="" ordervalue="956" listitemid="3154" islist="0"/><listitems name="Rule" listvalue="" ordervalue="957" listitemid="3155" islist="0"/><listitems name="Runaway Bay" listvalue="" ordervalue="958" listitemid="3156" islist="0"/><listitems name="Runge" listvalue="" ordervalue="959" listitemid="3157" islist="0"/><listitems name="Rusk" listvalue="" ordervalue="960" listitemid="3158" islist="0"/><listitems name="Sabinal" listvalue="" ordervalue="961" listitemid="3159" islist="0"/><listitems name="Sachse" listvalue="" ordervalue="962" listitemid="3160" islist="0"/><listitems name="Sadler" listvalue="" ordervalue="963" listitemid="3161" islist="0"/><listitems name="Saginaw" listvalue="" ordervalue="964" listitemid="3162" islist="0"/><listitems name="Saint Hedwig" listvalue="" ordervalue="965" listitemid="3163" islist="0"/><listitems name="Saint Jo" listvalue="" ordervalue="966" listitemid="3164" islist="0"/><listitems name="Saint Paul" listvalue="" ordervalue="967" listitemid="3165" islist="0"/><listitems name="Salado" listvalue="" ordervalue="968" listitemid="3166" islist="0"/><listitems name="San Angelo" listvalue="" ordervalue="969" listitemid="3167" islist="0"/><listitems name="San Antonio" listvalue="" ordervalue="970" listitemid="3168" islist="0"/><listitems name="San Augustine" listvalue="" ordervalue="971" listitemid="3169" islist="0"/><listitems name="San Benito" listvalue="" ordervalue="972" listitemid="3170" islist="0"/><listitems name="San Diego" listvalue="" ordervalue="973" listitemid="3171" islist="0"/><listitems name="San Felipe" listvalue="" ordervalue="974" listitemid="3172" islist="0"/><listitems name="San Juan" listvalue="" ordervalue="975" listitemid="3173" islist="0"/><listitems name="San Leanna" listvalue="" ordervalue="976" listitemid="3174" islist="0"/><listitems name="San Marcos" listvalue="" ordervalue="977" listitemid="3175" islist="0"/><listitems name="San Patricio" listvalue="" ordervalue="978" listitemid="3176" islist="0"/><listitems name="San Perlita" listvalue="" ordervalue="979" listitemid="3177" islist="0"/><listitems name="San Saba" listvalue="" ordervalue="980" listitemid="3178" islist="0"/><listitems name="Sanctuary" listvalue="" ordervalue="981" listitemid="3179" islist="0"/><listitems name="Sandy Point" listvalue="" ordervalue="982" listitemid="3180" islist="0"/><listitems name="Sanford" listvalue="" ordervalue="983" listitemid="3181" islist="0"/><listitems name="Sanger" listvalue="" ordervalue="984" listitemid="3182" islist="0"/><listitems name="Sansom Park" listvalue="" ordervalue="985" listitemid="3183" islist="0"/><listitems name="Santa Anna" listvalue="" ordervalue="986" listitemid="3184" islist="0"/><listitems name="Santa Clara" listvalue="" ordervalue="987" listitemid="3185" islist="0"/><listitems name="Santa Fe" listvalue="" ordervalue="988" listitemid="3186" islist="0"/><listitems name="Santa Rosa" listvalue="" ordervalue="989" listitemid="3187" islist="0"/><listitems name="Savoy" listvalue="" ordervalue="990" listitemid="3188" islist="0"/><listitems name="Schertz" listvalue="" ordervalue="991" listitemid="3189" islist="0"/><listitems name="Schulenburg" listvalue="" ordervalue="992" listitemid="3190" islist="0"/><listitems name="Scotland" listvalue="" ordervalue="993" listitemid="3191" islist="0"/><listitems name="Scottsville" listvalue="" ordervalue="994" listitemid="3192" islist="0"/><listitems name="Scurry" listvalue="" ordervalue="995" listitemid="3193" islist="0"/><listitems name="Seabrook" listvalue="" ordervalue="996" listitemid="3194" islist="0"/><listitems name="Seadrift" listvalue="" ordervalue="997" listitemid="3195" islist="0"/><listitems name="Seagoville" listvalue="" ordervalue="998" listitemid="3196" islist="0"/><listitems name="Seagraves" listvalue="" ordervalue="999" listitemid="3197" islist="0"/><listitems name="Sealy" listvalue="" ordervalue="1000" listitemid="3198" islist="0"/><listitems name="Seguin" listvalue="" ordervalue="1001" listitemid="3199" islist="0"/><listitems name="Selma" listvalue="" ordervalue="1002" listitemid="3200" islist="0"/><listitems name="Seminole" listvalue="" ordervalue="1003" listitemid="3201" islist="0"/><listitems name="Seven Oaks" listvalue="" ordervalue="1004" listitemid="3202" islist="0"/><listitems name="Seven Points" listvalue="" ordervalue="1005" listitemid="3203" islist="0"/><listitems name="Seymour" listvalue="" ordervalue="1006" listitemid="3204" islist="0"/><listitems name="Shady Shores" listvalue="" ordervalue="1007" listitemid="3205" islist="0"/><listitems name="Shallowater" listvalue="" ordervalue="1008" listitemid="3206" islist="0"/><listitems name="Shamrock" listvalue="" ordervalue="1009" listitemid="3207" islist="0"/><listitems name="Shavano Park" listvalue="" ordervalue="1010" listitemid="3208" islist="0"/><listitems name="Shenandoah" listvalue="" ordervalue="1011" listitemid="3209" islist="0"/><listitems name="Shepherd" listvalue="" ordervalue="1012" listitemid="3210" islist="0"/><listitems name="Sherman" listvalue="" ordervalue="1013" listitemid="3211" islist="0"/><listitems name="Shiner" listvalue="" ordervalue="1014" listitemid="3212" islist="0"/><listitems name="Shoreacres" listvalue="" ordervalue="1015" listitemid="3213" islist="0"/><listitems name="Silsbee" listvalue="" ordervalue="1016" listitemid="3214" islist="0"/><listitems name="Silverton" listvalue="" ordervalue="1017" listitemid="3215" islist="0"/><listitems name="Simonton" listvalue="" ordervalue="1018" listitemid="3216" islist="0"/><listitems name="Sinton" listvalue="" ordervalue="1019" listitemid="3217" islist="0"/><listitems name="Skellytown" listvalue="" ordervalue="1020" listitemid="3218" islist="0"/><listitems name="Slaton" listvalue="" ordervalue="1021" listitemid="3219" islist="0"/><listitems name="Smiley" listvalue="" ordervalue="1022" listitemid="3220" islist="0"/><listitems name="Smithville" listvalue="" ordervalue="1023" listitemid="3221" islist="0"/><listitems name="Smyer" listvalue="" ordervalue="1024" listitemid="3222" islist="0"/><listitems name="Snook" listvalue="" ordervalue="1025" listitemid="3223" islist="0"/><listitems name="Snyder" listvalue="" ordervalue="1026" listitemid="3224" islist="0"/><listitems name="Socorro" listvalue="" ordervalue="1027" listitemid="3225" islist="0"/><listitems name="Somerset" listvalue="" ordervalue="1028" listitemid="3226" islist="0"/><listitems name="Somerville" listvalue="" ordervalue="1029" listitemid="3227" islist="0"/><listitems name="Sonora" listvalue="" ordervalue="1030" listitemid="3228" islist="0"/><listitems name="Sour Lake" listvalue="" ordervalue="1031" listitemid="3229" islist="0"/><listitems name="South Houston" listvalue="" ordervalue="1032" listitemid="3230" islist="0"/><listitems name="South Mountain" listvalue="" ordervalue="1033" listitemid="3231" islist="0"/><listitems name="South Padre Island" listvalue="" ordervalue="1034" listitemid="3232" islist="0"/><listitems name="Southlake" listvalue="" ordervalue="1035" listitemid="3233" islist="0"/><listitems name="Southmayd" listvalue="" ordervalue="1036" listitemid="3234" islist="0"/><listitems name="Southside Place" listvalue="" ordervalue="1037" listitemid="3235" islist="0"/><listitems name="Spearman" listvalue="" ordervalue="1038" listitemid="3236" islist="0"/><listitems name="Splendora" listvalue="" ordervalue="1039" listitemid="3237" islist="0"/><listitems name="Spofford" listvalue="" ordervalue="1040" listitemid="3238" islist="0"/><listitems name="Spring Valley" listvalue="" ordervalue="1041" listitemid="3239" islist="0"/><listitems name="Springlake" listvalue="" ordervalue="1042" listitemid="3240" islist="0"/><listitems name="Springtown" listvalue="" ordervalue="1043" listitemid="3241" islist="0"/><listitems name="Spur" listvalue="" ordervalue="1044" listitemid="3242" islist="0"/><listitems name="Stafford" listvalue="" ordervalue="1045" listitemid="3243" islist="0"/><listitems name="Stagecoach" listvalue="" ordervalue="1046" listitemid="3244" islist="0"/><listitems name="Stamford" listvalue="" ordervalue="1047" listitemid="3245" islist="0"/><listitems name="Stanton" listvalue="" ordervalue="1048" listitemid="3246" islist="0"/><listitems name="Staples" listvalue="" ordervalue="1049" listitemid="3247" islist="0"/><listitems name="Star Harbor" listvalue="" ordervalue="1050" listitemid="3248" islist="0"/><listitems name="Stephenville" listvalue="" ordervalue="1051" listitemid="3249" islist="0"/><listitems name="Sterling City" listvalue="" ordervalue="1052" listitemid="3250" islist="0"/><listitems name="Stinnett" listvalue="" ordervalue="1053" listitemid="3251" islist="0"/><listitems name="Stockdale" listvalue="" ordervalue="1054" listitemid="3252" islist="0"/><listitems name="Stratford" listvalue="" ordervalue="1055" listitemid="3253" islist="0"/><listitems name="Strawn" listvalue="" ordervalue="1056" listitemid="3254" islist="0"/><listitems name="Streetman" listvalue="" ordervalue="1057" listitemid="3255" islist="0"/><listitems name="Sudan" listvalue="" ordervalue="1058" listitemid="3256" islist="0"/><listitems name="Sugar Land" listvalue="" ordervalue="1059" listitemid="3257" islist="0"/><listitems name="Sullivan City" listvalue="" ordervalue="1060" listitemid="3258" islist="0"/><listitems name="Sulphur Springs" listvalue="" ordervalue="1061" listitemid="3259" islist="0"/><listitems name="Sun Valley" listvalue="" ordervalue="1062" listitemid="3260" islist="0"/><listitems name="Sundown" listvalue="" ordervalue="1063" listitemid="3261" islist="0"/><listitems name="Sunnyvale" listvalue="" ordervalue="1064" listitemid="3262" islist="0"/><listitems name="Sunray" listvalue="" ordervalue="1065" listitemid="3263" islist="0"/><listitems name="Sunrise Beach Village" listvalue="" ordervalue="1066" listitemid="3264" islist="0"/><listitems name="Sunset Valley" listvalue="" ordervalue="1067" listitemid="3265" islist="0"/><listitems name="Surfside Beach" listvalue="" ordervalue="1068" listitemid="3266" islist="0"/><listitems name="Sweeny" listvalue="" ordervalue="1069" listitemid="3267" islist="0"/><listitems name="Sweetwater" listvalue="" ordervalue="1070" listitemid="3268" islist="0"/><listitems name="Taft" listvalue="" ordervalue="1071" listitemid="3269" islist="0"/><listitems name="Tahoka" listvalue="" ordervalue="1072" listitemid="3270" islist="0"/><listitems name="Talco" listvalue="" ordervalue="1073" listitemid="3271" islist="0"/><listitems name="Talty" listvalue="" ordervalue="1074" listitemid="3272" islist="0"/><listitems name="Tatum" listvalue="" ordervalue="1075" listitemid="3273" islist="0"/><listitems name="Taylor" listvalue="" ordervalue="1076" listitemid="3274" islist="0"/><listitems name="Taylor Lake Village" listvalue="" ordervalue="1077" listitemid="3275" islist="0"/><listitems name="Taylor Landing" listvalue="" ordervalue="1078" listitemid="3276" islist="0"/><listitems name="Teague" listvalue="" ordervalue="1079" listitemid="3277" islist="0"/><listitems name="Tehuacana" listvalue="" ordervalue="1080" listitemid="3278" islist="0"/><listitems name="Temple" listvalue="" ordervalue="1081" listitemid="3279" islist="0"/><listitems name="Tenaha" listvalue="" ordervalue="1082" listitemid="3280" islist="0"/><listitems name="Terrell" listvalue="" ordervalue="1083" listitemid="3281" islist="0"/><listitems name="Terrell Hills" listvalue="" ordervalue="1084" listitemid="3282" islist="0"/><listitems name="Texarkana" listvalue="" ordervalue="1085" listitemid="3283" islist="0"/><listitems name="Texas City" listvalue="" ordervalue="1086" listitemid="3284" islist="0"/><listitems name="Texhoma" listvalue="" ordervalue="1087" listitemid="3285" islist="0"/><listitems name="Texline" listvalue="" ordervalue="1088" listitemid="3286" islist="0"/><listitems name="The Colony" listvalue="" ordervalue="1089" listitemid="3287" islist="0"/><listitems name="Thompsons" listvalue="" ordervalue="1090" listitemid="3288" islist="0"/><listitems name="Thorndale" listvalue="" ordervalue="1091" listitemid="3289" islist="0"/><listitems name="Thornton" listvalue="" ordervalue="1092" listitemid="3290" islist="0"/><listitems name="Thorntonville" listvalue="" ordervalue="1093" listitemid="3291" islist="0"/><listitems name="Thrall" listvalue="" ordervalue="1094" listitemid="3292" islist="0"/><listitems name="Three Rivers" listvalue="" ordervalue="1095" listitemid="3293" islist="0"/><listitems name="Throckmorton" listvalue="" ordervalue="1096" listitemid="3294" islist="0"/><listitems name="Tiki Island" listvalue="" ordervalue="1097" listitemid="3295" islist="0"/><listitems name="Timbercreek Canyon" listvalue="" ordervalue="1098" listitemid="3296" islist="0"/><listitems name="Timpson" listvalue="" ordervalue="1099" listitemid="3297" islist="0"/><listitems name="Tioga" listvalue="" ordervalue="1100" listitemid="3298" islist="0"/><listitems name="Tira" listvalue="" ordervalue="1101" listitemid="3299" islist="0"/><listitems name="Toco" listvalue="" ordervalue="1102" listitemid="3300" islist="0"/><listitems name="Todd Mission" listvalue="" ordervalue="1103" listitemid="3301" islist="0"/><listitems name="Tolar" listvalue="" ordervalue="1104" listitemid="3302" islist="0"/><listitems name="Tom Bean" listvalue="" ordervalue="1105" listitemid="3303" islist="0"/><listitems name="Tomball" listvalue="" ordervalue="1106" listitemid="3304" islist="0"/><listitems name="Tool" listvalue="" ordervalue="1107" listitemid="3305" islist="0"/><listitems name="Toyah" listvalue="" ordervalue="1108" listitemid="3306" islist="0"/><listitems name="Trent" listvalue="" ordervalue="1109" listitemid="3307" islist="0"/><listitems name="Trenton" listvalue="" ordervalue="1110" listitemid="3308" islist="0"/><listitems name="Trinidad" listvalue="" ordervalue="1111" listitemid="3309" islist="0"/><listitems name="Trinity" listvalue="" ordervalue="1112" listitemid="3310" islist="0"/><listitems name="Trophy Club" listvalue="" ordervalue="1113" listitemid="3311" islist="0"/><listitems name="Troup" listvalue="" ordervalue="1114" listitemid="3312" islist="0"/><listitems name="Troy" listvalue="" ordervalue="1115" listitemid="3313" islist="0"/><listitems name="Tulia" listvalue="" ordervalue="1116" listitemid="3314" islist="0"/><listitems name="Turkey" listvalue="" ordervalue="1117" listitemid="3315" islist="0"/><listitems name="Tuscola" listvalue="" ordervalue="1118" listitemid="3316" islist="0"/><listitems name="Tye" listvalue="" ordervalue="1119" listitemid="3317" islist="0"/><listitems name="Tyler" listvalue="" ordervalue="1120" listitemid="3318" islist="0"/><listitems name="Uhland" listvalue="" ordervalue="1121" listitemid="3319" islist="0"/><listitems name="Uncertain" listvalue="" ordervalue="1122" listitemid="3320" islist="0"/><listitems name="Union Grove" listvalue="" ordervalue="1123" listitemid="3321" islist="0"/><listitems name="Union Valley" listvalue="" ordervalue="1124" listitemid="3322" islist="0"/><listitems name="Universal City" listvalue="" ordervalue="1125" listitemid="3323" islist="0"/><listitems name="University Park" listvalue="" ordervalue="1126" listitemid="3324" islist="0"/><listitems name="Uvalde" listvalue="" ordervalue="1127" listitemid="3325" islist="0"/><listitems name="Valentine" listvalue="" ordervalue="1128" listitemid="3326" islist="0"/><listitems name="Valley Mills" listvalue="" ordervalue="1129" listitemid="3327" islist="0"/><listitems name="Valley View" listvalue="" ordervalue="1130" listitemid="3328" islist="0"/><listitems name="Van" listvalue="" ordervalue="1131" listitemid="3329" islist="0"/><listitems name="Van Alstyne" listvalue="" ordervalue="1132" listitemid="3330" islist="0"/><listitems name="Van Horn" listvalue="" ordervalue="1133" listitemid="3331" islist="0"/><listitems name="Vega" listvalue="" ordervalue="1134" listitemid="3332" islist="0"/><listitems name="Venus" listvalue="" ordervalue="1135" listitemid="3333" islist="0"/><listitems name="Vernon" listvalue="" ordervalue="1136" listitemid="3334" islist="0"/><listitems name="Victoria" listvalue="" ordervalue="1137" listitemid="3335" islist="0"/><listitems name="Vidor" listvalue="" ordervalue="1138" listitemid="3336" islist="0"/><listitems name="Village of The Hills" listvalue="" ordervalue="1139" listitemid="3337" islist="0"/><listitems name="Villiage of Volente" listvalue="" ordervalue="1140" listitemid="3338" islist="0"/><listitems name="Vinton" listvalue="" ordervalue="1141" listitemid="3339" islist="0"/><listitems name="Von Ormy" listvalue="" ordervalue="1142" listitemid="3340" islist="0"/><listitems name="Waco" listvalue="" ordervalue="1143" listitemid="3341" islist="0"/><listitems name="Waelder" listvalue="" ordervalue="1144" listitemid="3342" islist="0"/><listitems name="Wake Village" listvalue="" ordervalue="1145" listitemid="3343" islist="0"/><listitems name="Waller" listvalue="" ordervalue="1146" listitemid="3344" islist="0"/><listitems name="Wallis" listvalue="" ordervalue="1147" listitemid="3345" islist="0"/><listitems name="Walnut Springs" listvalue="" ordervalue="1148" listitemid="3346" islist="0"/><listitems name="Warren City" listvalue="" ordervalue="1149" listitemid="3347" islist="0"/><listitems name="Waskom" listvalue="" ordervalue="1150" listitemid="3348" islist="0"/><listitems name="Watauga" listvalue="" ordervalue="1151" listitemid="3349" islist="0"/><listitems name="Waxahachie" listvalue="" ordervalue="1152" listitemid="3350" islist="0"/><listitems name="Weatherford" listvalue="" ordervalue="1153" listitemid="3351" islist="0"/><listitems name="Webberville" listvalue="" ordervalue="1154" listitemid="3352" islist="0"/><listitems name="Webster" listvalue="" ordervalue="1155" listitemid="3353" islist="0"/><listitems name="Weimar" listvalue="" ordervalue="1156" listitemid="3354" islist="0"/><listitems name="Weinert" listvalue="" ordervalue="1157" listitemid="3355" islist="0"/><listitems name="Weir" listvalue="" ordervalue="1158" listitemid="3356" islist="0"/><listitems name="Wellington" listvalue="" ordervalue="1159" listitemid="3357" islist="0"/><listitems name="Wellman" listvalue="" ordervalue="1160" listitemid="3358" islist="0"/><listitems name="Wells" listvalue="" ordervalue="1161" listitemid="3359" islist="0"/><listitems name="Weslaco" listvalue="" ordervalue="1162" listitemid="3360" islist="0"/><listitems name="West" listvalue="" ordervalue="1163" listitemid="3361" islist="0"/><listitems name="West Columbia" listvalue="" ordervalue="1164" listitemid="3362" islist="0"/><listitems name="West Lake Hills" listvalue="" ordervalue="1165" listitemid="3363" islist="0"/><listitems name="West Orange" listvalue="" ordervalue="1166" listitemid="3364" islist="0"/><listitems name="West Tawakoni" listvalue="" ordervalue="1167" listitemid="3365" islist="0"/><listitems name="West University Place" listvalue="" ordervalue="1168" listitemid="3366" islist="0"/><listitems name="Westbrook" listvalue="" ordervalue="1169" listitemid="3367" islist="0"/><listitems name="Westlake" listvalue="" ordervalue="1170" listitemid="3368" islist="0"/><listitems name="Weston" listvalue="" ordervalue="1171" listitemid="3369" islist="0"/><listitems name="Weston Lakes" listvalue="" ordervalue="1172" listitemid="3370" islist="0"/><listitems name="Westover Hills" listvalue="" ordervalue="1173" listitemid="3371" islist="0"/><listitems name="Westworth Village" listvalue="" ordervalue="1174" listitemid="3372" islist="0"/><listitems name="Wharton" listvalue="" ordervalue="1175" listitemid="3373" islist="0"/><listitems name="Wheeler" listvalue="" ordervalue="1176" listitemid="3374" islist="0"/><listitems name="White Deer" listvalue="" ordervalue="1177" listitemid="3375" islist="0"/><listitems name="White Oak" listvalue="" ordervalue="1178" listitemid="3376" islist="0"/><listitems name="White Settlement" listvalue="" ordervalue="1179" listitemid="3377" islist="0"/><listitems name="Whiteface" listvalue="" ordervalue="1180" listitemid="3378" islist="0"/><listitems name="Whitehouse" listvalue="" ordervalue="1181" listitemid="3379" islist="0"/><listitems name="Whitesboro" listvalue="" ordervalue="1182" listitemid="3380" islist="0"/><listitems name="Whitewright" listvalue="" ordervalue="1183" listitemid="3381" islist="0"/><listitems name="Whitney" listvalue="" ordervalue="1184" listitemid="3382" islist="0"/><listitems name="Wichita Falls" listvalue="" ordervalue="1185" listitemid="3383" islist="0"/><listitems name="Wickett" listvalue="" ordervalue="1186" listitemid="3384" islist="0"/><listitems name="Willis" listvalue="" ordervalue="1187" listitemid="3385" islist="0"/><listitems name="Willow Park" listvalue="" ordervalue="1188" listitemid="3386" islist="0"/><listitems name="Wills Point" listvalue="" ordervalue="1189" listitemid="3387" islist="0"/><listitems name="Wilmer" listvalue="" ordervalue="1190" listitemid="3388" islist="0"/><listitems name="Wilson" listvalue="" ordervalue="1191" listitemid="3389" islist="0"/><listitems name="Wimberley" listvalue="" ordervalue="1192" listitemid="3390" islist="0"/><listitems name="Windcrest" listvalue="" ordervalue="1193" listitemid="3391" islist="0"/><listitems name="Windom" listvalue="" ordervalue="1194" listitemid="3392" islist="0"/><listitems name="Windthorst" listvalue="" ordervalue="1195" listitemid="3393" islist="0"/><listitems name="Winfield" listvalue="" ordervalue="1196" listitemid="3394" islist="0"/><listitems name="Wink" listvalue="" ordervalue="1197" listitemid="3395" islist="0"/><listitems name="Winnsboro" listvalue="" ordervalue="1198" listitemid="3396" islist="0"/><listitems name="Winona" listvalue="" ordervalue="1199" listitemid="3397" islist="0"/><listitems name="Winters" listvalue="" ordervalue="1200" listitemid="3398" islist="0"/><listitems name="Wixon Valley" listvalue="" ordervalue="1201" listitemid="3399" islist="0"/><listitems name="Wolfe City" listvalue="" ordervalue="1202" listitemid="3400" islist="0"/><listitems name="Wolfforth" listvalue="" ordervalue="1203" listitemid="3401" islist="0"/><listitems name="Woodbranch Village" listvalue="" ordervalue="1204" listitemid="3402" islist="0"/><listitems name="Woodcreek" listvalue="" ordervalue="1205" listitemid="3403" islist="0"/><listitems name="Woodloch" listvalue="" ordervalue="1206" listitemid="3404" islist="0"/><listitems name="Woodsboro" listvalue="" ordervalue="1207" listitemid="3405" islist="0"/><listitems name="Woodson" listvalue="" ordervalue="1208" listitemid="3406" islist="0"/><listitems name="Woodville" listvalue="" ordervalue="1209" listitemid="3407" islist="0"/><listitems name="Woodway" listvalue="" ordervalue="1210" listitemid="3408" islist="0"/><listitems name="Wortham" listvalue="" ordervalue="1211" listitemid="3409" islist="0"/><listitems name="Wylie" listvalue="" ordervalue="1212" listitemid="3410" islist="0"/><listitems name="Yantis" listvalue="" ordervalue="1213" listitemid="3411" islist="0"/><listitems name="Yoakum" listvalue="" ordervalue="1214" listitemid="3412" islist="0"/><listitems name="Yorktown" listvalue="" ordervalue="1215" listitemid="3413" islist="0"/><listitems name="Zavalla" listvalue="" ordervalue="1216" listitemid="3414" islist="0"/></lists><html xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="6"><head><title>Extra County Info</title><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/jquery.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.js" /><style type="text/css">
.hide{display:none;}
.form-controlLG{width:100px;}

.hideForFF {
   height:1px;
    width:1px;
     visibility: hidden;
}

    </style><script type="text/javascript">
      var cityArrayCopy = [];
    var currentStatus;
    var sortSelectLists=function() {
  var allSelectBox=document.getElementsById('fkID');
    this.optionObject=function(Value, Text, Selected, Disabled) {
        this.Value=Value;
        this.Text=Text;
        this.Selected=Selected;
        this.Disabled=Disabled;
        return this;
    }
    this.addOption=function(select, optionValue, optionTxt, selected, disabled) {
      var option=document.createElement("option");
            option.value=optionValue;
            option.text=optionTxt;
            option.selected=selected;
            option.disabled=disabled;
        try {
            select.add(option, null);
        }
        catch(ex) {
            select.add(option);
        }
    }
    for(var i=0; i &lt; allSelectBox.length; i++) {
      //if(allSelectBox[i].name != 'userid'){
        var selectedSelectBox=allSelectBox[i];
        var optionsArray=[];
        for(var k=0; k &lt; selectedSelectBox.options.length; k++) {
            var selectedOption=selectedSelectBox.options[k];
            var thisOptionObject=new optionObject(selectedOption.value, selectedOption.text, selectedOption.selected, selectedOption.disabled);
            optionsArray.push(thisOptionObject);
        }
        optionsArray=optionsArray.sort(function(a, b) {
        var a1=a.Text,b1=b.Text;
            if(a1!=b1) {
                if(a1 &gt; b1) {
                 return 1;
             }
             if(a1 &lt; b1) {
                return -1;
            };
                return 0;
            }
        });
        while(selectedSelectBox.options.length &gt; 0) {
            selectedSelectBox.options[0]=null;
        };
        for(var o=0; o &lt; optionsArray.length; o++) {
            addOption(selectedSelectBox, optionsArray[o].Value, optionsArray[o].Text, optionsArray[o].Selected, optionsArray[o].Disabled);
        }
    //}
     }
};

function selectOptionsIfExistsInArray() {
                    var textAreaValue = $("#cityTmp").val();
                    var textAreaValueSplit = textAreaValue.split(",");
                    cityArrayCopy = textAreaValueSplit;
                    //console.log(cityArrayCopy);
                    //console.log("selectOptionsIfExistsInArray");
                    $("#city").val("");
                    for(var i = 0; i &lt; cityArrayCopy.length; i++) {

                        $("[name = city] option").filter(function() {
                            return($(this).text() === cityArrayCopy[i]);
                        }).prop("selected", true);

                        $("#cityTmp").val("");
                        $("#city2").val("");
                        //$("#city3").val("");
                        $("#city").focus();
                    }
                }

                function copySelectedOptionsToTextAreaThenCopyTextAreaValueToArray() {
                    document.getElementById("cityTmp").value += $("#city").val();
                    //document.getElementById("city2").value += $("#city").val();
                    
                    

                    //console.log("citycounty choices recorded for edit");
                }

                function copySelectedOptionsToTextAreaAgain() {
                    var ccc =  document.getElementById("cityTmp").value;
                    document.getElementById("city2").value += ccc.replace(/[,]+/g,', ').trim();
                 
                }

function alphabetizeDSOdrop(){
  
 /* $("#fkID").html($("#fkID option").sort(function (a, b) {
    return a.text == b.text ? 0 : a.text &lt; b.text ? -1 : 1
}));*/
  
  alert('alphabetizeDSOdrop runs Full');
}



/*Need to remove selected DSO or make work. When two bubble inputs are linked to the same DSO, this breaks the Infrastructure and Rec PA pages. The expressions concerning the disaster decs break it*/

function rebuildingCityCountyOptionsOnJTypeCheck(a) {
            $(a).on("click", function () {
                var coList = document.getElementById("county");
                removeOptions(coList);
                addOption(coList, 'Select One', true);
                for (var k = 0; k &lt; countyList.length; k++) {
                    addOption(coList, countyList[k], false);
                }
                var cityList = document.getElementById("city");
                removeOptions(cityList);
                addOption(cityList, "Select One", true);
                addOption(cityList, "Unincorporated Areas", false);
                for (var k = 0; k &lt; cityMatrix.length; k++) {
                    addOption(cityList, cityMatrix[k][1], false);
                }

                $("#sortCountyOrder").val(0);
                $("#sortCityOrder").val(0);
                $("#county").prop("disabled", false);
                $("#city").prop("disabled", false);
                addOption(cityList, "Other", false);
            });
        }

        function commandInfoWindow(clickedId, title, message) {
            $('#' + clickedId).click(function () {
                BootstrapDialog.show({
                    title: title,
                    message: function (dialog) {
                        var $content = $(message);
                        return $content;
                    },

                });
            })

        }

    function requireJuirsCountyCity() {
        if(!$(".jTypeCLASS").is(":checked")) {
                  alert("Please fill in the missing required field, Jurisdiction Type. Pick one City or County.");
                  $("#jurisdictionType1").focus().select();
      
                  e.preventDefault();

              } else if($("#county").val() === "Select One"){
                alert("Please make a choice in the missing required field, County.");
                  $("#county").focus().select();
      
                  e.preventDefault();

              } else if($("#city").val() === "Select One"){
                alert("Please make a choice in the missing required field, City.");
                  $("#city").focus().select();
      
                  e.preventDefault();
              } else{
                console.log('WINNING!');
              }
    }

    function start(){
        document.forms[0].onsubmit=totalJurisdictions;
        incSelList=document.getElementById('incidentList');
        loopAllInputs=document.getElementsByTagName('input');
        filterByIncident.incidentListOptionsBuild();
      //matchCounties();
      //filterOptionsByCounty();


      $("#deselectDSOValue").click(function() {
        $('#DSOisSelected').val("");
        $('#DSOisSelected').attr('value', '');
        $('#DSOisSelected2').val("DESELECTED_Almost");
        $('#dsoYesNo1').prop('checked', false);
        $('#dsoYesNo2').prop('checked', false);
        alert('Blanked Value and Save');
        $("#saveBtn2").click();

  
  });

      $("#disableDrop").click(function() {
          $('#fkID').prop('disabled', true);

  
  });
      $("#ableDrop").click(function() {
          $('#fkID').prop('disabled', false);

  
  });

      
      
      hideOtherTextField();
      //give the span an ID 71-72 then manipulate the ID 74-76
      var fkSPAN = document.getElementById('fk').getElementsByTagName('select')[0];
      $(fkSPAN).prop("id", "fkID");
        $('.datepicker').datepicker();

        commandInfoWindow('cityInfo', 'City Options', '<div><ul><li>Multiple cities can be selected when reporting for the County by holding down the Ctrl while clicking on the city names.</li><li>If Other and multiple cities are needed, please choose Other first to reveal the Other text box. Fill in the State Park, Agency, Etc in the text field provided. Multiple cites can then be added on as needed.</li><li>Only a single city is allowed to be selected when filling the DSO out for a City.</li></ul></div>');
        //sortSelectLists
        rebuildingCityCountyOptionsOnJTypeCheck("#jurisdictionType1");
        rebuildingCityCountyOptionsOnJTypeCheck("#jurisdictionType2");
        document.getElementById('jurisdictionType1').onchange=TypeJurisdiciton;
        document.getElementById('jurisdictionType2').onchange=TypeJurisdiciton;
        //HI();
        touchTheDSOisSelectedTextBox();
        //hideDSOdrop();
        clearDSOdrop();
        
scribe.fields4History=[
    ["otherAttachment","Other Attachment"],
    ["letterAttachment","Letter Attachment"],
    ["decAttachment","Dec Attachment"],
    ["PAComments","PA Comments"],
    ["femaCheckboxV2","Infrastructure PDAs have been completed and Numbers have been vetted between PA and FEMA"],
    ["IAComments","IA Comments"],
    ["femaCheckboxV1","Housing PDAs have been completed and Numbers have been vetted between IA and FEMA"],
    ["paPDAComplete","Date PA PDA Complete"],
    ["paPDAScheduled","Date PA PDA Scheduled"],
    ["iaPDAComplete","Date IA PDA Complete"],
    ["iaPDAScheduled","Date IA PDA Scheduled"],
    ["iaInitialContactDate","Date of PDA Initial Contact"], 
    ["ack2","ACK Letter Sent 2"],
    ["assistanceRequestedDate","Date Asst Requested"],
    ["ack1","ACK Letter Sent 1"],
    ["dateDecRecFederal","Date Federal Disaster Declared Issued Rec'd"],
    ["declarationIssuedFederal","Was a Federal Disaster Dec Issued?"],
    ["dateDecRecState","Date State Disaster Declared Issued Rec'd"],
    ["declarationIssuedState","Was a State Disaster Dec Issued?"],
    ["dateDecRec","Date Disaster Declared Issued Rec'd"],
    ["declarationIssued","Was a Local Disaster Dec Issued?"],
    ["impactedCountiesDSO","Date DSO Rec'd"],
    ["copyFK","SelectedDSO"],
    ["dsoYesNo","DSO"],
    ["otherValue","Other"],
    ["city","City"],
    ["county","County"],
    ["jurisdictionType","Jurisdiction Type"],
    ["incidentList","Incident Name"],
    ["updated","updated"]
    //no comma on last one
  ];
  checkIncidentNameValueWithIncidentListText();
  scribe.inicialReview();
  $("#county").prop("disabled", true);
  $("#city").prop("disabled", true);
  if ('<xsl:value-of select="/data/@dataid" />'!=0){
     $("#county").prop("disabled", false);
                $("#city").prop("disabled", false);
                if (document.getElementById('dsoYesNo1').checked==true) {
              $('#fkID').prop('disabled', true);
            } else{
              $('#fkID').prop('disabled', false);
            }

                //startOf: doing stuff on update/edit
                var countySelectListOnUpdate = document.getElementById("county");
                sortOrderCounty(countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text);
                var cityList = document.getElementById("city");
                if (countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text == 'Select One') {
                  console.log('doing stuff on update/edit');
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);
                    //needs to be false so its not selected to begin with
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        addOption(cityList, cityMatrix[k][1], false);
                    }addOption(cityList, "Other", false);
                } else {
                  console.log('else doing stuff on update/edit');
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);

                    for (var k = 0; k &lt; cityMatrix.length; k++) {

                        if (cityMatrix[k][0] === countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text) {
                            addOption(cityList, cityMatrix[k][1], false);
                        }
                    }addOption(cityList, "Other", false);
                }


                setTimeout(function() {
                  
                    selectOptionsIfExistsInArray();
                }, 1000);
                console.log('timeout runs');
  }

//if data is not equal to 0
if (document.getElementsByName('dataid')[0].value!=''){
  /*setTimeout(function() {
                  
                    selectOptionsIfExistsInArray();
                }, 1000);*/
 
  updateDateTime();
  //filterSelectList();
  /*if($('#DSOisSelected').val("")){
    CreateOrphanLink();
    alert("orphan created since DESELECTED_Almost was present");
    $('#dsoYesNo1').prop('checked', false);
    //$('#dsoYesNo').val("");
  //$('#dsoYesNo').attr('value', '');
  alert("dsoYesNo clears");
  $('#DSOisSelected2').val("");
  $('#DSOisSelected2').attr('value', '');
  //$("#saveBtn2").trigger('click');
  
  }*/
 

  $("#saveBtn2").click(function() {
    requireJuirsCountyCity();

     someSaveBttn=function(){
      copySelectedOptionsToTextAreaThenCopyTextAreaValueToArray();
      copySelectedOptionsToTextAreaAgain();
        document.getElementsByName('cmdSave')[0].click();
    
 
 };
 proxySaveFunction();
     
  });
    
} else {
  //first record
 
$("#saveBtn2").click(function() {
    requireJuirsCountyCity();
  copySelectedOptionsToTextAreaThenCopyTextAreaValueToArray();
  copySelectedOptionsToTextAreaAgain();
    updateDateTime();
    document.getElementById('currentChangeLog').value = scribe.postReview();
    //alert("Changelog="+document.getElementById('currentChangeLog').value);
  document.getElementsByName('cmdSave')[1].click(); 
 

  });
}


//}


        var counties = window.parent.window.parent.counties;
        var countieslist= document.getElementById('county');
        
       document.getElementById('city').onchange = function () {
                sortOrderCity(this.options[this.selectedIndex].text);
                var coList = document.getElementById("county");

                var coSelected = coList.options[coList.selectedIndex].text;
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(coList);
                    addOption(coList, 'Select One', true);
                    for (var k = 0; k &lt; countyList.length; k++) {
                        addOption(coList, countyList[k], false);
                        //alert("city sort order onchange");
                    }
                    // sortSelect(this);
                } else if (this.options[this.selectedIndex].text == 'Unincorporated Areas') {document.getElementById('sortCityOrder').value='0';
                        //document.getElementById("otherValueDiv").style.display = "none";
                 } else if (this.options[this.selectedIndex].text == 'Other') {document.getElementById('sortCityOrder').value='99999';

                        document.getElementById("otherValueDiv").style.display = "";
                        $('#otherValue').focus();
                /*} else if ((this.options[this.selectedIndex].text == 'Other') &amp;&amp; (this.options[this.selectedIndex]) ) {document.getElementById('sortCityOrder').value='99999';

                        document.getElementById("otherValueDiv").style.display = "";
                        $('#otherValue').focus();*/ 

                    } else {
                    removeOptions(coList);
                    addOption(coList, 'Select One', false);
                    //document.getElementById("otherValueDiv").style.display = "none";
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        if (cityMatrix[k][1] === this.options[this.selectedIndex].text) {
                            var selected = false;
                            if (cityMatrix[k][0] == coSelected) { selected = true; }
                            addOption(coList, cityMatrix[k][0], selected);
                            //alert("ELSE city sort order onchange");
                        }
                    }
                }


            }
       
       document.getElementById('county').onchange = function () {
                sortOrderCounty(this.options[this.selectedIndex].text);
                var cityList = document.getElementById("city");
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);
                    //addOption(cityList, "Other", false);// might need if filing from city for other
                    //$("#city option[text = Other]").insertAfter($("#city option:last"));

                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        addOption(cityList, cityMatrix[k][1], false);
                    }
                    addOption(cityList, "Other", false);
                } else {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    if(document.getElementById('jurisdictionType2').checked ==true){
                      addOption(cityList, "Unincorporated Areas", true);

                    } else {
                     //do nothing
                    }
                    //addOption(cityList, 'Other', false);
                    //$("#city option[text = Other]").insertAfter($("#city option:last"));

                    for (var k = 0; k &lt; cityMatrix.length; k++) {

                        if (cityMatrix[k][0] === this.options[this.selectedIndex].text) {
                            addOption(cityList, cityMatrix[k][1], false);

                        }
                    }
                    addOption(cityList, "Other", false);
                }
                
            }
        
    }
   function addOption(select, optionTxt, selected) {
            var option = document.createElement("option");
            option.text = optionTxt;
            option.id = optionTxt;
            option.selected = selected;
            try {
                select.add(option, null);
            }
            catch (ex) {
                select.add(option);
            }
        }
   function removeOptions(obj) {
            if (obj == null) return;
            if (obj.options == null) return;
            obj.options.length = 0;
        }
 var cityMatrix = [["Hill", "Abbott"], ["Hale", "Abernathy"], ["Lubbock", "Abernathy"], ["Jones", "Abilene"], ["Taylor", "Abilene"], ["Dawson", "Ackerly"], ["Martin", "Ackerly"], ["Collin", "Addison"], ["Dallas", "Addison"], ["Oldham", "Adrian"], ["Nueces", "Agua Dulce"], ["Hidalgo", "Alamo"], ["Bexar", "Alamo Heights"], ["Wood", "Alba"], ["Rains", "Alba"], ["Shackelford", "Albany"], ["Parker", "Aledo"], ["Jim Wells", "Alice"], ["Collin", "Allen"], ["Ellis", "Alma"], ["Brewster", "Alpine"], ["Cherokee", "Alto"], ["Hidalgo", "Alton"], ["Johnson", "Alvarado"], ["Brazoria", "Alvin"], ["Galveston", "Alvin"], ["Wise", "Alvord"], ["Potter", "Amarillo"], ["Randall", "Amarillo"], ["Liberty", "Ames"], ["Lamb", "Amherst"], ["Chambers", "Anahuac"], ["Grimes", "Anderson"], ["Andrews", "Andrews"], ["Brazoria", "Angleton"], ["Navarro", "Angus"], ["Collin", "Anna"], ["Parker", "Annetta"], ["Parker", "Annetta North"], ["Parker", "Annetta South"], ["Red River", "Annona"], ["Jones", "Anson"], ["El Paso", "Anthony"], ["Hockley", "Anton"], ["Nacogdoches", "Appleby"], ["Hill", "Aquilla"], ["Aransas", "Aransas Pass"], ["San Patricio", "Aransas Pass"], ["Nueces", "Aransas Pass"], ["Archer", "Archer City"], ["Fort Bend", "Arcola"], ["Denton", "Argyle"], ["Tarrant", "Arlington"], ["Smith", "Arp"], ["Dimmit", "Asherton"], ["Stonewall", "Aspermont"], ["Henderson", "Athens"], ["Cass", "Atlanta"], ["Denton", "Aubrey"], ["Wise", "Aurora"], ["Williamson", "Austin"], ["Travis", "Austin"], ["Hays", "Austin"], ["Refugio", "Austwell"], ["Red River", "Avery"], ["Cass", "Avinger"], ["Parker", "Azle"], ["Tarrant", "Azle"], ["Fannin", "Bailey"], ["Brazoria", "Bailey's Prairie"], ["Callahan", "Baird"], ["Dallas", "Balch Springs"], ["Bexar", "Balcones Heights"], ["Runnels", "Ballinger"], ["Reeves", "Balmorhea"], ["Bandera", "Bandera"], ["Brown", "Bangs"], ["Ellis", "Bardwell"], ["Navarro", "Barry"], ["Ward", "Barstow"], ["Williamson", "Bartlett"], ["Bell", "Bartlett"], ["Denton", "Bartonville"], ["Bastrop", "Bastrop"], ["Matagorda", "Bay City"], ["Galveston", "Bayou Vista"], ["Refugio", "Bayside"], ["Harris", "Baytown"], ["Chambers", "Baytown"], ["Cameron", "Bayview"], ["Chambers", "Beach City"], ["Hays", "Bear Creek"], ["Fort Bend", "Beasley"], ["Jefferson", "Beaumont"], ["Hardin", "Beaumont"], ["Orange", "Beaumont"], ["Panola", "Beckville"], ["Tarrant", "Bedford"], ["Grimes", "Bedias"], ["Travis", "Bee Cave"], ["Bee", "Beeville"], ["Harris", "Bellaire"], ["Clay", "Bellevue"], ["McLennan", "Bellmead"], ["Grayson", "Bells"], ["Austin", "Bellville"], ["Bell", "Belton"], ["Duval", "Benavides"], ["Tarrant", "Benbrook"], ["Knox", "Benjamin"], ["Henderson", "Berryville"], ["Burnet", "Bertram"], ["McLennan", "Beverly Hills"], ["Jefferson", "Bevil Oaks"], ["Hardin", "Bevil Oaks"], ["Reagan", "Big Lake"], ["Upshur", "Big Sandy"], ["Howard", "Big Spring"], ["Dimmit", "Big Wells"], ["Nueces", "Bishop"], ["Potter", "Bishop Hills"], ["Coke", "Blackwell"], ["Nolan", "Blackwell"], ["Blanco", "Blanco"], ["Brown", "Blanket"], ["Cass", "Bloomburg"], ["Navarro", "Blooming Grove"], ["Lamar", "Blossom"], ["Tarrant", "Blue Mound"], ["Collin", "Blue Ridge"], ["Hill", "Blum"], ["Kendall", "Boerne"], ["Red River", "Bogata"], ["Fannin", "Bonham"], ["Brazoria", "Bonney"], ["Ochiltree", "Booker"], ["Lipscomb", "Booker"], ["Hutchinson", "Borger"], ["Parmer", "Bovina"], ["Montague", "Bowie"], ["Wise", "Boyd"], ["Kinney", "Brackettville"], ["McCulloch", "Brady"], ["Brazoria", "Brazoria"], ["Hood", "Brazos Bend"], ["Austin", "Brazos Country"], ["Stephens", "Breckenridge"], ["Robertson", "Bremond"], ["Washington", "Brenham"], ["Travis", "Briarcliff"], ["Johnson", "Briaroaks"], ["Orange", "Bridge City"], ["Wise", "Bridgeport"], ["San Augustine", "Broaddus"], ["Coke", "Bronte"], ["Waller", "Brookshire"], ["Harris", "Brookside Village"], ["Brazoria", "Brookside Village"], ["Jasper", "Browndell"], ["Terry", "Brownfield"], ["Henderson", "Brownsboro"], ["Cameron", "Brownsville"], ["Brown", "Brownwood"], ["McLennan", "Bruceville-Eddy"], ["Falls", "Bruceville-Eddy"], ["Brazos", "Bryan"], ["Jack", "Bryson"], ["Milam", "Buckholts"], ["Hays", "Buda"], ["Leon", "Buffalo"], ["Taylor", "Buffalo Gap"], ["Lubbock", "Buffalo Springs"], ["Smith", "Bullard"], ["Cherokee", "Bullard"], ["Comal", "Bulverde"], ["Harris", "Bunker Hill Village"], ["Wichita", "Burkburnett"], ["Angelina", "Burke"], ["Tarrant", "Burleson"], ["Johnson", "Burleson"], ["Burnet", "Burnet"], ["Washington", "Burton"], ["Clay", "Byers"], ["Hill", "Bynum"], ["Sherman", "Cactus"], ["Moore", "Cactus"], ["Hunt", "Caddo Mills"], ["Burleson", "Caldwell"], ["Cooke", "Callisburg"], ["Robertson", "Calvert"], ["Milam", "Cameron"], ["Real", "Camp Wood"], ["Hunt", "Campbell"], ["Hemphill", "Canadian"], ["Henderson", "Caney City"], ["Van Zandt", "Canton"], ["Randall", "Canyon"], ["Eastland", "Carbon"], ["Hill", "Carl's Corner"], ["Washington", "Carmine"], ["Fayette", "Carmine"], ["Dimmit", "Carrizo Springs"], ["Denton", "Carrollton"], ["Collin", "Carrollton"], ["Dallas", "Carrollton"], ["Panola", "Carthage"], ["Wichita", "Cashion"], ["Bexar", "Castle Hills"], ["Medina", "Castroville"], ["Dallas", "Cedar Hill"], ["Ellis", "Cedar Hill"], ["Williamson", "Cedar Park"], ["Travis", "Cedar Park"], ["Hunt", "Celeste"], ["Denton", "Celina"], ["Collin", "Celina"], ["Grayson", "Celina"], ["Shelby", "Center"], ["Leon", "Centerville"], ["Henderson", "Chandler"], ["Hartley", "Channing"], ["Atascosa", "Charlotte"], ["Tyler", "Chester"], ["Wise", "Chico"], ["Childress", "Childress"], ["Hardeman", "Chillicothe"], ["Jefferson", "China"], ["Bexar", "China Grove"], ["Nacogdoches", "Chireno"], ["Atascosa", "Christine"], ["Guadalupe", "Cibolo"], ["Bexar", "Cibolo"], ["Eastland", "Cisco"], ["Donley", "Clarendon"], ["Red River", "Clarksville"], ["Upshur", "Clarksville City"], ["Gregg", "Clarksville City"], ["Armstrong", "Claude"], ["Galveston", "Clear Lake Shores"], ["Johnson", "Cleburne"], ["Liberty", "Cleveland"], ["Bosque", "Clifton"], ["El Paso", "Clint"], ["Brazoria", "Clute"], ["Callahan", "Clyde"], ["Howard", "Coahoma"], ["Dallas", "Cockrell Hill"], ["Henderson", "Coffee City"], ["San Jacinto", "Coldspring"], ["Coleman", "Coleman"], ["Brazos", "College Station"], ["Tarrant", "Colleyville"], ["Grayson", "Collinsville"], ["Tyler", "Colmesneil"], ["Mitchell", "Colorado City"], ["Colorado", "Columbus"], ["Comanche", "Comanche"], ["Cameron", "Combes"], ["Dallas", "Combine"], ["Kaufman", "Combine"], ["Hunt", "Commerce"], ["Hopkins", "Como"], ["Montgomery", "Conroe"], ["Bexar", "Converse"], ["Parker", "Cool"], ["Limestone", "Coolidge"], ["Delta", "Cooper"], ["Denton", "Coppell"], ["Dallas", "Coppell"], ["Tarrant", "Coppell"], ["Denton", "Copper Canyon"], ["Coryell", "Copperas Cove"], ["Lampasas", "Copperas Cove"], ["Bell", "Copperas Cove"], ["Denton", "Corinth"], ["Aransas", "Corpus Christi"], ["San Patricio", "Corpus Christi"], ["Nueces", "Corpus Christi"], ["Kleberg", "Corpus Christi"], ["Denton", "Corral City"], ["Polk", "Corrigan"], ["Navarro", "Corsicana"], ["Kaufman", "Cottonwood"], ["Burnet", "Cottonwood Shores"], ["LaSalle", "Cotulla"], ["Chambers", "Cove"], ["Hill", "Covington"], ["Kaufman", "Crandall"], ["Crane", "Crane"], ["Bosque", "Cranfills Gap"], ["McLennan", "Crawford"], ["Travis", "Creedmoor"], ["Hays", "Creedmoor"], ["Parker", "Cresson"], ["Hood", "Cresson"], ["Johnson", "Cresson"], ["Houston", "Crockett"], ["Crosby", "Crosbyton"], ["Callahan", "Cross Plains"], ["Denton", "Cross Roads"], ["Johnson", "Cross Timber"], ["Foard", "Crowell"], ["Tarrant", "Crowley"], ["Johnson", "Crowley"], ["Zavala", "Crystal City"], ["DeWitt", "Cuero"], ["Hopkins", "Cumby"], ["Cherokee", "Cuney"], ["Nacogdoches", "Cushing"], ["Montgomery", "Cut and Shoot"], ["Morris", "Daingerfield"], ["Liberty", "Daisetta"], ["Dallam", "Dalhart"], ["Hartley", "Dalhart"], ["Denton", "Dallas"], ["Collin", "Dallas"], ["Rockwall", "Dallas"], ["Dallas", "Dallas"], ["Kaufman", "Dallas"], ["Tarrant", "Dalworthington Gardens"], ["Brazoria", "Danbury"], ["Lipscomb", "Darrouzett"], ["Navarro", "Dawson"], ["Liberty", "Dayton"], ["Liberty", "Dayton Lakes"], ["Comanche", "De Leon"], ["Clay", "Dean"], ["Wise", "Decatur"], ["Hood", "DeCordova"], ["Harris", "Deer Park"], ["Bowie", "DeKalb"], ["Val Verde", "Del Rio"], ["Hudspeth", "Dell City"], ["Grayson", "Denison"], ["Denton", "Denton"], ["Gaines", "Denver City"], ["Yoakum", "Denver City"], ["Red River", "Deport"], ["Lamar", "Deport"], ["Dallas", "DeSoto"], ["Red River", "Detroit"], ["Liberty", "Devers"], ["Medina", "Devine"], ["Angelina", "Diboll"], ["Dickens", "Dickens"], ["Galveston", "Dickinson"], ["Frio", "Dilley"], ["Castro", "Dimmitt"], ["Denton", "Dish"], ["Fannin", "Dodd City"], ["Collingsworth", "Dodson"], ["Cass", "Domino"], ["Hidalgo", "Donna"], ["Grayson", "Dorchester"], ["Denton", "Double Oak"], ["Cass", "Douglassville"], ["Hays", "Dripping Springs"], ["Nueces", "Driscoll"], ["Erath", "Dublin"], ["Moore", "Dumas"], ["Dallas", "Duncanville"], ["Colorado", "Eagle Lake"], ["Maverick", "Eagle Pass"], ["Brown", "Early"], ["Lamb", "Earth"], ["Fort Bend", "East Bernard"], ["Wharton", "East Bernard"], ["Upshur", "East Mountain"], ["Gregg", "East Mountain"], ["Rains", "East Tawakoni"], ["Eastland", "Eastland"], ["Gregg", "Easton"], ["Rusk", "Easton"], ["Fannin", "Ector"], ["Hidalgo", "Edcouch"], ["Concho", "Eden"], ["Tarrant", "Edgecliff"], ["Van Zandt", "Edgewood"], ["Hidalgo", "Edinburg"], ["Hale", "Edmonson"], ["Jackson", "Edna"], ["Van Zandt", "Edom"], ["Wharton", "El Campo"], ["Webb", "El Cenizo"], ["Harris", "El Lago"], ["El Paso", "El Paso"], ["Schleicher", "Eldorado"], ["Wichita", "Electra"], ["Travis", "Elgin"], ["Bastrop", "Elgin"], ["Anderson", "Elkhart"], ["Bexar", "Elmendorf"], ["Wilson", "Elmendorf"], ["Hidalgo", "Elsa"], ["Navarro", "Emhouse"], ["Rains", "Emory"], ["Henderson", "Enchanted Oaks"], ["LaSalle", "Encinal"], ["Kaufman", "Ennis"], ["Ellis", "Ennis"], ["Starr", "Escobares"], ["Hall", "Estelline"], ["Dallas", "Euless"], ["Tarrant", "Euless"], ["Navarro", "Eureka"], ["Henderson", "Eustace"], ["Hamilton", "Evant"], ["Coryell", "Evant"], ["Tarrant", "Everman"], ["Kendall", "Fair Oaks Ranch"], ["Comal", "Fair Oaks Ranch"], ["Bexar", "Fair Oaks Ranch"], ["Fort Bend", "Fairchilds"], ["Freestone", "Fairfield"], ["Collin", "Fairview"], ["Brooks", "Falfurrias"], ["Karnes", "Falls City"], ["Dallas", "Farmers Branch"], ["Collin", "Farmersville"], ["Parmer", "Farwell"], ["Rockwall", "Fate"], ["Fayette", "Fayetteville"], ["Dallas", "Ferris"], ["Ellis", "Ferris"], ["Fayette", "Flatonia"], ["Williamson", "Florence"], ["Wilson", "Floresville"], ["Denton", "Flower Mound"], ["Tarrant", "Flower Mound"], ["Floyd", "Floydada"], ["Lipscomb", "Follett"], ["Tarrant", "Forest Hill"], ["Kaufman", "Forney"], ["Howard", "Forsan"], ["Pecos", "Fort Stockton"], ["Wise", "Fort Worth"], ["Denton", "Fort Worth"], ["Parker", "Fort Worth"], ["Dallas", "Fort Worth"], ["Tarrant", "Fort Worth"], ["Johnson", "Fort Worth"], ["Robertson", "Franklin"], ["Henderson", "Frankston"], ["Anderson", "Frankston"], ["Gillespie", "Fredericksburg"], ["Brazoria", "Freeport"], ["Duval", "Freer"], ["Harris", "Friendswood"], ["Brazoria", "Friendswood"], ["Galveston", "Friendswood"], ["Parmer", "Friona"], ["Denton", "Frisco"], ["Collin", "Frisco"], ["Moore", "Fritch"], ["Hutchinson", "Fritch"], ["Navarro", "Frost"], ["Van Zandt", "Fruitvale"], ["Fort Bend", "Fulshear"], ["Aransas", "Fulton"], ["Cooke", "Gainesville"], ["Harris", "Galena Park"], ["Cherokee", "Gallatin"], ["Galveston", "Galveston"], ["Jackson", "Ganado"], ["Comal", "Garden Ridge"], ["Collin", "Garland"], ["Dallas", "Garland"], ["Ellis", "Garrett"], ["Nacogdoches", "Garrison"], ["Panola", "Gary"], ["Coryell", "Gatesville"], ["Live Oak", "George West"], ["Williamson", "Georgetown"], ["McLennan", "Gholson"], ["Lee", "Giddings"], ["Upshur", "Gilmer"], ["Upshur", "Gladewater"], ["Gregg", "Gladewater"], ["Somervell", "Glen Rose"], ["Dallas", "Glenn Heights"], ["Ellis", "Glenn Heights"], ["Johnson", "Godley"], ["Ector", "Goldsmith"], ["Mills", "Goldthwaite"], ["Goliad", "Goliad"], ["McLennan", "Golinda"], ["Falls", "Golinda"], ["Gonzales", "Gonzales"], ["Navarro", "Goodlow"], ["Polk", "Goodrich"], ["Palo Pinto", "Gordon"], ["Knox", "Goree"], ["Eastland", "Gorman"], ["Comanche", "Gorman"], ["Palo Pinto", "Graford"], ["Young", "Graham"], ["Hood", "Granbury"], ["Dallas", "Grand Prairie"], ["Tarrant", "Grand Prairie"], ["Ellis", "Grand Prairie"], ["Van Zandt", "Grand Saline"], ["Ward", "Grandfalls"], ["Johnson", "Grandview"], ["Williamson", "Granger"], ["Burnet", "Granite Shoals"], ["Hidalgo", "Granjeno"], ["Houston", "Grapeland"], ["Denton", "Grapevine"], ["Dallas", "Grapevine"], ["Tarrant", "Grapevine"], ["Kaufman", "Grays Prairie"], ["Hunt", "Greenville"], ["San Patricio", "Gregory"], ["Bexar", "Grey Forest"], ["Limestone", "Groesbeck"], ["Carson", "Groom"], ["Jefferson", "Groves"], ["Trinity", "Groveton"], ["Hansford", "Gruver"], ["Henderson", "Gun Barrel City"], ["Grayson", "Gunter"], ["Comanche", "Gustine"], ["Denton", "Hackberry"], ["Hale", "Hale Center"], ["Lavaca", "Hallettsville"], ["McLennan", "Hallsburg"], ["Harrison", "Hallsville"], ["Tarrant", "Haltom City"], ["Hamilton", "Hamilton"], ["Fisher", "Hamlin"], ["Jones", "Hamlin"], ["Randall", "Happy"], ["Swisher", "Happy"], ["Liberty", "Hardin"], ["Bell", "Harker Heights"], ["Cameron", "Harlingen"], ["Castro", "Hart"], ["Haskell", "Haskell"], ["Denton", "Haslet"], ["Tarrant", "Haslet"], ["Hunt", "Hawk Cove"], ["Wood", "Hawkins"], ["Jones", "Hawley"], ["Hays", "Hays"], ["Robertson", "Hearne"], ["Rockwall", "Heath"], ["Kaufman", "Heath"], ["Denton", "Hebron"], ["Collin", "Hebron"], ["Donley", "Hedley"], ["Harris", "Hedwig Village"], ["Bexar", "Helotes"], ["Sabine", "Hemphill"], ["Waller", "Hempstead"], ["Rusk", "Henderson"], ["Clay", "Henrietta"], ["Deaf Smith", "Hereford"], ["McLennan", "Hewitt"], ["Denton", "Hickory Creek"], ["Hamilton", "Hico"], ["Hidalgo", "Hidalgo"], ["Smith", "Hideaway"], ["Lipscomb", "Higgins"], ["Burnet", "Highland Haven"], ["Dallas", "Highland Park"], ["Denton", "Highland Village"], ["Bexar", "Hill Country Village"], ["Brazoria", "Hillcrest Village"], ["Hill", "Hillsboro"], ["Harris", "Hilshire Village"], ["Brazoria", "Hitchcock"], ["Galveston", "Hitchcock"], ["Brazoria", "Holiday Lakes"], ["Bell", "Holland"], ["Archer", "Holliday"], ["Bexar", "Hollywood Park"], ["Medina", "Hondo"], ["Fannin", "Honey Grove"], ["Bowie", "Hooks"], ["El Paso", "Horizon City"], ["Burnet", "Horseshoe Bay"], ["Llano", "Horseshoe Bay"], ["Montgomery", "Houston"], ["Harris", "Houston"], ["Fort Bend", "Houston"], ["Brazoria", "Houston"], ["Donley", "Howardwick"], ["Grayson", "Howe"], ["Hill", "Hubbard"], ["Angelina", "Hudson"], ["Parker", "Hudson Oaks"], ["Morris", "Hughes Springs"], ["Cass", "Hughes Springs"], ["Harris", "Humble"], ["Harris", "Hunters Creek Village"], ["Angelina", "Huntington"], ["Walker", "Huntsville"], ["Tarrant", "Hurst"], ["Dallas", "Hutchins"], ["Williamson", "Hutto"], ["Shelby", "Huxley"], ["Lubbock", "Idalou"], ["Taylor", "Impact"], ["Cameron", "Indian Lake"], ["Austin", "Industry"], ["San Patricio", "Ingleside"], ["San Patricio", "Ingleside On The Bay"], ["Kerr", "Ingram"], ["Grimes", "Iola"], ["Brazoria", "Iowa Colony"], ["Wichita", "Iowa Park"], ["Pecos", "Iraan"], ["Bosque", "Iredell"], ["Dallas", "Irving"], ["Tarrant", "Irving"], ["Ellis", "Italy"], ["Hill", "Itasca"], ["Tyler", "Ivanhoe"], ["Harris", "Jacinto City"], ["Jack", "Jacksboro"], ["Cherokee", "Jacksonville"], ["Galveston", "Jamaica Beach"], ["Williamson", "Jarrell"], ["Jasper", "Jasper"], ["Kent", "Jayton"], ["Marion", "Jefferson"], ["Harris", "Jersey Village"], ["Leon", "Jewett"], ["Shelby", "Joaquin"], ["Blanco", "Johnson City"], ["Clay", "Jolly"], ["Brazoria", "Jones Creek"], ["Travis", "Jonestown"], ["Hunt", "Josephine"], ["Collin", "Josephine"], ["Johnson", "Joshua"], ["Atascosa", "Jourdanton"], ["Kimble", "Junction"], ["Denton", "Justin"], ["Karnes", "Karnes City"], ["Waller", "Katy"], ["Harris", "Katy"], ["Fort Bend", "Katy"], ["Kaufman", "Kaufman"], ["Johnson", "Keene"], ["Tarrant", "Keller"], ["Galveston", "Kemah"], ["Kaufman", "Kemp"], ["Lampasas", "Kempner"], ["Fort Bend", "Kendleton"], ["Karnes", "Kenedy"], ["Liberty", "Kenefick"], ["Houston", "Kennard"], ["Tarrant", "Kennedale"], ["Henderson", "Kerens"], ["Navarro", "Kerens"], ["Winkler", "Kermit"], ["Kerr", "Kerrville"], ["Gregg", "Kilgore"], ["Rusk", "Kilgore"], ["Coryell", "Killeen"], ["Bell", "Killeen"], ["Kleberg", "Kingsville"], ["Bexar", "Kirby"], ["Jasper", "Kirbyville"], ["Freestone", "Kirvin"], ["Grayson", "Knollwood"], ["Knox", "Knox City"], ["Limestone", "Kosse"], ["Hardin", "Kountze"], ["Swisher", "Kress"], ["Denton", "Krugerville"], ["Denton", "Krum"], ["Brazos", "Kurten"], ["Hays", "Kyle"], ["Cameron", "La Feria"], ["Fayette", "La Grange"], ["Starr", "La Grulla"], ["Hidalgo", "La Joya"], ["Galveston", "La Marque"], ["Harris", "La Porte"], ["Wilson", "La Vernia"], ["Hidalgo", "La Villa"], ["Jackson", "La Ward"], ["Medina", "LaCoste"], ["McLennan", "Lacy-Lakeview"], ["Fannin", "Ladonia"], ["Travis", "Lago Vista"], ["Cameron", "Laguna Vista"], ["Wise", "Lake Bridgeport"], ["San Patricio", "Lake City"], ["Denton", "Lake Dallas"], ["Brazoria", "Lake Jackson"], ["Randall", "Lake Tanglewood"], ["Tarrant", "Lake Worth"], ["Gregg", "Lakeport"], ["San Patricio", "Lakeside (San Patricio)"], ["Tarrant", "Lakeside (Tarrant)"], ["Wichita", "Lakeside City"], ["Archer", "Lakeside City"], ["Hall", "Lakeview"], ["Travis", "Lakeway"], ["Denton", "Lakewood Village"], ["Dawson", "Lamesa"], ["Lampasas", "Lampasas"], ["Dallas", "Lancaster"], ["Ellis", "Lancaster"], ["Webb", "Laredo"], ["Houston", "Latexo"], ["Collin", "Lavon"], ["Taylor", "Lawn"], ["Harris", "League City"], ["Brazoria", "League City"], ["Galveston", "League City"], ["Real", "Leakey"], ["Williamson", "Leander"], ["Travis", "Leander"], ["Bowie", "Leary"], ["Gray", "Lefors"], ["Bexar", "Leon Valley"], ["Leon", "Leona"], ["Fannin", "Leonard"], ["McLennan", "Leroy"], ["Hockley", "Levelland"], ["Denton", "Lewisville"], ["Lee", "Lexington"], ["Liberty", "Liberty"], ["Williamson", "Liberty Hill"], ["Denton", "Lincoln Park"], ["Smith", "Lindale"], ["Cass", "Linden"], ["Cooke", "Lindsay"], ["Hood", "Lipan"], ["Denton", "Little Elm"], ["Bell", "Little River Academy"], ["Lamb", "Littlefield"], ["Bexar", "Live Oak"], ["Brazoria", "Liverpool"], ["Polk", "Livingston"], ["Llano", "Llano"], ["Caldwell", "Lockhart"], ["Floyd", "Lockney"], ["Henderson", "Log Cabin"], ["Lampasas", "Lometa"], ["Hunt", "Lone Oak"], ["Morris", "Lone Star"], ["Harrison", "Longview"], ["Gregg", "Longview"], ["Mitchell", "Loraine"], ["McLennan", "Lorena"], ["Crosby", "Lorenzo"], ["Cameron", "Los Fresnos"], ["Cameron", "Los Indios"], ["Dawson", "Los Ybanez"], ["Falls", "Lott"], ["Houston", "Lovelady"], ["Collin", "Lowry Crossing"], ["Lubbock", "Lubbock"], ["Collin", "Lucas"], ["Jones", "Lueders"], ["Shackelford", "Lueders"], ["Angelina", "Lufkin"], ["Guadalupe", "Luling"], ["Caldwell", "Luling"], ["Hardin", "Lumberton"], ["Willacy", "Lyford"], ["Bexar", "Lytle"], ["Medina", "Lytle"], ["Atascosa", "Lytle"], ["Van Zandt", "Mabank"], ["Henderson", "Mabank"], ["Kaufman", "Mabank"], ["Madison", "Madisonville"], ["Montgomery", "Magnolia"], ["Henderson", "Malakoff"], ["Hill", "Malone"], ["Travis", "Manor"], ["Tarrant", "Mansfield"], ["Ellis", "Mansfield"], ["Johnson", "Mansfield"], ["Brazoria", "Manvel"], ["Burnet", "Marble Falls"], ["Presidio", "Marfa"], ["Cass", "Marietta"], ["Guadalupe", "Marion"], ["Falls", "Marlin"], ["Leon", "Marquez"], ["Harrison", "Marshall"], ["McLennan", "Mart"], ["Limestone", "Mart"], ["Guadalupe", "Martindale"], ["Caldwell", "Martindale"], ["Mason", "Mason"], ["Motley", "Matador"], ["San Patricio", "Mathis"], ["Bowie", "Maud"], ["Ellis", "Maypearl"], ["Hidalgo", "McAllen"], ["Upton", "McCamey"], ["Coryell", "McGregor"], ["McLennan", "McGregor"], ["Collin", "McKinney"], ["Gray", "McLean"], ["Rockwall", "McLendon-Chisholm"], ["Kaufman", "McLendon-Chisholm"], ["Terry", "Meadow"], ["Burnet", "Meadowlakes"], ["Harris", "Meadows Place"], ["Fort Bend", "Meadows Place"], ["Archer", "Megargel"], ["Collin", "Melissa"], ["McCulloch", "Melvin"], ["Hall", "Memphis"], ["Menard", "Menard"], ["Hidalgo", "Mercedes"], ["Bosque", "Meridian"], ["Taylor", "Merkel"], ["Hill", "Mertens"], ["Irion", "Mertzon"], ["Dallas", "Mesquite"], ["Kaufman", "Mesquite"], ["Limestone", "Mexia"], ["Roberts", "Miami"], ["Martin", "Midland"], ["Midland", "Midland"], ["Ellis", "Midlothian"], ["Madison", "Midway"], ["Milam", "Milano"], ["Navarro", "Mildred"], ["Runnels", "Miles"], ["Ellis", "Milford"], ["Titus", "Miller's Cove"], ["Parker", "Millsap"], ["Wood", "Mineola"], ["Palo Pinto", "Mineral Wells"], ["Parker", "Mineral Wells"], ["Palo Pinto", "Mingus"], ["Hidalgo", "Mission"], ["Harris", "Missouri City"], ["Fort Bend", "Missouri City"], ["Wheeler", "Mobeetie"], ["Rockwall", "Mobile City"], ["Winkler", "Monahans"], ["Ward", "Monahans"], ["Liberty", "Mont Belvieu"], ["Harris", "Mont Belvieu"], ["Chambers", "Mont Belvieu"], ["Montgomery", "Montgomery"], ["McLennan", "Moody"], ["Henderson", "Moore Station"], ["Shackelford", "Moran"], ["Bosque", "Morgan"], ["Harris", "Morgan's Point"], ["Bell", "Morgan's Point Resort"], ["Cochran", "Morton"], ["Lavaca", "Moulton"], ["Hill", "Mount Calm"], ["Rusk", "Mount Enterprise"], ["Titus", "Mount Pleasant"], ["Franklin", "Mount Vernon"], ["Hays", "Mountain City"], ["Cooke", "Muenster"], ["Bailey", "Muleshoe"], ["Mills", "Mullin"], ["Knox", "Munday"], ["Henderson", "Murchison"], ["Collin", "Murphy"], ["Navarro", "Mustang"], ["Travis", "Mustang Ridge"], ["Caldwell", "Mustang Ridge"], ["Nacogdoches", "Nacogdoches"], ["Morris", "Naples"], ["Bowie", "Nash"], ["Harris", "Nassau Bay"], ["Medina", "Natalia"], ["Navarro", "Navarro"], ["Brazos", "Navasota"], ["Grimes", "Navasota"], ["Castro", "Nazareth"], ["Jefferson", "Nederland"], ["Fort Bend", "Needville"], ["Harrison", "Nesbitt"], ["Collin", "Nevada"], ["Guadalupe", "New Berlin"], ["Bexar", "New Berlin"], ["Bowie", "New Boston"], ["Comal", "New Braunfels"], ["Guadalupe", "New Braunfels"], ["Smith", "New Chapel Hill"], ["Lubbock", "New Deal"], ["Wise", "New Fairview"], ["Lynn", "New Home"], ["Collin", "New Hope"], ["Rusk", "New London"], ["Cherokee", "New Summerfield"], ["Walker", "New Waverly"], ["Wise", "Newark"], ["Young", "Newcastle"], ["Newton", "Newton"], ["Hunt", "Neylandville"], ["Hays", "Niederwald"], ["Caldwell", "Niederwald"], ["Wilson", "Nixon"], ["Gonzales", "Nixon"], ["Montague", "Nocona"], ["Bell", "Nolanville"], ["Jefferson", "Nome"], ["Smith", "Noonday"], ["DeWitt", "Nordheim"], ["Leon", "Normangee"], ["Madison", "Normangee"], ["Liberty", "North Cleveland"], ["Tarrant", "North Richland Hills"], ["Denton", "Northlake"], ["Coleman", "Novice"], ["Kaufman", "Oak Grove"], ["Ellis", "Oak Leaf"], ["Denton", "Oak Point"], ["Cooke", "Oak Ridge (Cooke)"], ["Kaufman", "Oak Ridge (Kaufman)"], ["Montgomery", "Oak Ridge North"], ["Navarro", "Oak Valley"], ["Leon", "Oakwood"], ["Haskell", "O'Brien"], ["San Patricio", "Odem"], ["Ector", "Odessa"], ["Midland", "Odessa"], ["Dawson", "O'Donnell"], ["Lynn", "O'Donnell"], ["Coryell", "Oglesby"], ["Liberty", "Old River-Winfree"], ["Chambers", "Old River-Winfree"], ["Bexar", "Olmos Park"], ["Young", "Olney"], ["Lamb", "Olton"], ["Morris", "Omaha"], ["Polk", "Onalaska"], ["Hockley", "Opdyke West"], ["Orange", "Orange"], ["Jim Wells", "Orange Grove"], ["Fort Bend", "Orchard"], ["Upshur", "Ore City"], ["Marion", "Ore City"], ["Smith", "Overton"], ["Rusk", "Overton"], ["Dallas", "Ovilla"], ["Ellis", "Ovilla"], ["Brazoria", "Oyster Creek"], ["Cottle", "Paducah"], ["Concho", "Paint Rock"], ["Matagorda", "Palacios"], ["Anderson", "Palestine"], ["Randall", "Palisades"], ["Cameron", "Palm Valley"], ["Ellis", "Palmer"], ["Hidalgo", "Palmhurst"], ["Hidalgo", "Palmview"], ["Gray", "Pampa"], ["Carson", "Panhandle"], ["Montgomery", "Panorama Village"], ["Tarrant", "Pantego"], ["Wise", "Paradise"], ["Lamar", "Paris"], ["Collin", "Parker"], ["Harris", "Pasadena"], ["Waller", "Pattison"], ["Montgomery", "Patton Village"], ["Henderson", "Payne Springs"], ["Harris", "Pearland"], ["Fort Bend", "Pearland"], ["Brazoria", "Pearland"], ["Galveston", "Pearland"], ["Frio", "Pearsall"], ["Delta", "Pecan Gap"], ["Fannin", "Pecan Gap"], ["Ellis", "Pecan Hill"], ["Reeves", "Pecos"], ["Tarrant", "Pelican Bay"], ["Hill", "Penelope"], ["Hidalgo", "Penitas"], ["Ochiltree", "Perryton"], ["Hale", "Petersburg"], ["Clay", "Petrolia"], ["Nueces", "Petronila"], ["Williamson", "Pflugerville"], ["Travis", "Pflugerville"], ["Hidalgo", "Pharr"], ["Denton", "Pilot Point"], ["Collin", "Pilot Point"], ["Orange", "Pine Forest"], ["Waller", "Pine Island"], ["Orange", "Pinehurst"], ["Sabine", "Pineland"], ["Harris", "Piney Point Village"], ["Camp", "Pittsburg"], ["Yoakum", "Plains"], ["Hale", "Plainview"], ["Denton", "Plano"], ["Collin", "Plano"], ["Fort Bend", "Pleak"], ["Wichita", "Pleasant Valley"], ["Atascosa", "Pleasanton"], ["Montgomery", "Plum Grove"], ["Liberty", "Plum Grove"], ["Rains", "Point"], ["San Jacinto", "Point Blank"], ["Calhoun", "Point Comfort"], ["Travis", "Point Venture"], ["Denton", "Ponder"], ["Aransas", "Port Aransas"], ["Nueces", "Port Aransas"], ["Jefferson", "Port Arthur"], ["Orange", "Port Arthur"], ["Cameron", "Port Isabel"], ["Calhoun", "Port Lavaca"], ["Jefferson", "Port Neches"], ["San Patricio", "Portland"], ["Garza", "Post"], ["Kaufman", "Post Oak Bend"], ["Atascosa", "Poteet"], ["Wilson", "Poth"], ["Grayson", "Pottsboro"], ["Navarro", "Powell"], ["Henderson", "Poynor"], ["Waller", "Prairie View"], ["Jim Wells", "Premont"], ["Presidio", "Presidio"], ["Cameron", "Primera"], ["Collin", "Princeton"], ["Hidalgo", "Progreso"], ["Hidalgo", "Progreso Lakes"], ["Denton", "Prosper"], ["Collin", "Prosper"], ["Denton", "Providence Village"], ["Callahan", "Putnam"], ["Ward", "Pyote"], ["Hardeman", "Quanah"], ["Cass", "Queen City"], ["Hunt", "Quinlan"], ["Brazoria", "Quintana"], ["Briscoe", "Quitaque"], ["Wood", "Quitman"], ["Crosby", "Ralls"], ["Cameron", "Rancho Viejo"], ["Eastland", "Ranger"], ["Cameron", "Rangerville"], ["Upton", "Rankin"], ["Lubbock", "Ransom Canyon"], ["Fannin", "Ravenna"], ["Willacy", "Raymondville"], ["Bowie", "Red Lick"], ["Dallas", "Red Oak"], ["Ellis", "Red Oak"], ["Bowie", "Redwater"], ["Refugio", "Refugio"], ["Rusk", "Reklaw"], ["Cherokee", "Reklaw"], ["Lamar", "Reno (Lamar)"], ["Parker", "Reno (Parker)"], ["Tarrant", "Reno (Parker)"], ["Navarro", "Retreat"], ["Wise", "Rhome"], ["Ellis", "Rice"], ["Navarro", "Rice"], ["Collin", "Richardson"], ["Dallas", "Richardson"], ["Navarro", "Richland"], ["Tarrant", "Richland Hills"], ["San Saba", "Richland Springs"], ["Fort Bend", "Richmond"], ["Brazoria", "Richwood"], ["McLennan", "Riesel"], ["Webb", "Rio Bravo"], ["Starr", "Rio Grande City"], ["Cameron", "Rio Hondo"], ["Johnson", "Rio Vista"], ["Eastland", "Rising Star"], ["Tarrant", "River Oaks"], ["Walker", "Riverside"], ["Denton", "Roanoke"], ["Motley", "Roaring Springs"], ["Coke", "Robert Lee"], ["McLennan", "Robinson"], ["Nueces", "Robstown"], ["Fisher", "Roby"], ["Haskell", "Rochester"], ["Milam", "Rockdale"], ["Aransas", "Rockport"], ["Edwards", "Rocksprings"], ["Collin", "Rockwall"], ["Rockwall", "Rockwall"], ["Camp", "Rocky Mound"], ["Bell", "Rogers"], ["Travis", "Rollingwood"], ["Starr", "Roma"], ["Montgomery", "Roman Forest"], ["Hockley", "Ropesville"], ["Nolan", "Roscoe"], ["Orange", "Rose City"], ["Jefferson", "Rose Hill Acres"], ["Hardin", "Rose Hill Acres"], ["Falls", "Rosebud"], ["Fort Bend", "Rosenberg"], ["McLennan", "Ross"], ["Kaufman", "Rosser"], ["Fisher", "Rotan"], ["Blanco", "Round Mountain"], ["Williamson", "Round Rock"], ["Travis", "Round Rock"], ["Fayette", "Round Top"], ["Rockwall", "Rowlett"], ["Dallas", "Rowlett"], ["Lamar", "Roxton"], ["Hunt", "Royse City"], ["Collin", "Royse City"], ["Rockwall", "Royse City"], ["Haskell", "Rule"], ["Wise", "Runaway Bay"], ["Karnes", "Runge"], ["Cherokee", "Rusk"], ["Uvalde", "Sabinal"], ["Collin", "Sachse"], ["Dallas", "Sachse"], ["Grayson", "Sadler"], ["Tarrant", "Saginaw"], ["Bexar", "Saint Hedwig"], ["Montague", "Saint Jo"], ["Collin", "Saint Paul"], ["Bell", "Salado"], ["Tom Green", "San Angelo"], ["Comal", "San Antonio"], ["Bexar", "San Antonio"], ["Medina", "San Antonio"], ["San Augustine", "San Augustine"], ["Cameron", "San Benito"], ["Jim Wells", "San Diego"], ["Duval", "San Diego"], ["Austin", "San Felipe"], ["Hidalgo", "San Juan"], ["Travis", "San Leanna"], ["Guadalupe", "San Marcos"], ["Hays", "San Marcos"], ["Caldwell", "San Marcos"], ["San Patricio", "San Patricio"], ["Nueces", "San Patricio"], ["Willacy", "San Perlita"], ["San Saba", "San Saba"], ["Parker", "Sanctuary"], ["Brazoria", "Sandy Point"], ["Hutchinson", "Sanford"], ["Denton", "Sanger"], ["Cooke", "Sanger"], ["Tarrant", "Sansom Park"], ["Coleman", "Santa Anna"], ["Guadalupe", "Santa Clara"], ["Galveston", "Santa Fe"], ["Cameron", "Santa Rosa"], ["Fannin", "Savoy"], ["Comal", "Schertz"], ["Guadalupe", "Schertz"], ["Bexar", "Schertz"], ["Fayette", "Schulenburg"], ["Clay", "Scotland"], ["Archer", "Scotland"], ["Harrison", "Scottsville"], ["Kaufman", "Scurry"], ["Harris", "Seabrook"], ["Calhoun", "Seadrift"], ["Dallas", "Seagoville"], ["Kaufman", "Seagoville"], ["Gaines", "Seagraves"], ["Austin", "Sealy"], ["Guadalupe", "Seguin"], ["Comal", "Selma"], ["Guadalupe", "Selma"], ["Bexar", "Selma"], ["Gaines", "Seminole"], ["Polk", "Seven Oaks"], ["Henderson", "Seven Points"], ["Baylor", "Seymour"], ["Denton", "Shady Shores"], ["Lubbock", "Shallowater"], ["Wheeler", "Shamrock"], ["Bexar", "Shavano Park"], ["Montgomery", "Shenandoah"], ["San Jacinto", "Shepherd"], ["Grayson", "Sherman"], ["Lavaca", "Shiner"], ["Harris", "Shoreacres"], ["Hardin", "Silsbee"], ["Briscoe", "Silverton"], ["Fort Bend", "Simonton"], ["San Patricio", "Sinton"], ["Carson", "Skellytown"], ["Lubbock", "Slaton"], ["Gonzales", "Smiley"], ["Bastrop", "Smithville"], ["Hockley", "Smyer"], ["Burleson", "Snook"], ["Scurry", "Snyder"], ["El Paso", "Socorro"], ["Bexar", "Somerset"], ["Burleson", "Somerville"], ["Sutton", "Sonora"], ["Hardin", "Sour Lake"], ["Harris", "South Houston"], ["Coryell", "South Mountain"], ["Cameron", "South Padre Island"], ["Denton", "Southlake"], ["Tarrant", "Southlake"], ["Grayson", "Southmayd"], ["Harris", "Southside Place"], ["Hansford", "Spearman"], ["Montgomery", "Splendora"], ["Kinney", "Spofford"], ["Harris", "Spring Valley"], ["Lamb", "Springlake"], ["Parker", "Springtown"], ["Dickens", "Spur"], ["Harris", "Stafford"], ["Fort Bend", "Stafford"], ["Montgomery", "Stagecoach"], ["Haskell", "Stamford"], ["Jones", "Stamford"], ["Martin", "Stanton"], ["Guadalupe", "Staples"], ["Caldwell", "Staples"], ["Henderson", "Star Harbor"], ["Erath", "Stephenville"], ["Sterling", "Sterling City"], ["Hutchinson", "Stinnett"], ["Wilson", "Stockdale"], ["Sherman", "Stratford"], ["Palo Pinto", "Strawn"], ["Freestone", "Streetman"], ["Navarro", "Streetman"], ["Lamb", "Sudan"], ["Fort Bend", "Sugar Land"], ["Hidalgo", "Sullivan City"], ["Hopkins", "Sulphur Springs"], ["Lamar", "Sun Valley"], ["Hockley", "Sundown"], ["Dallas", "Sunnyvale"], ["Kaufman", "Sunnyvale"], ["Moore", "Sunray"], ["Burnet", "Sunrise Beach Village"], ["Llano", "Sunrise Beach Village"], ["Travis", "Sunset Valley"], ["Brazoria", "Surfside Beach"], ["Brazoria", "Sweeny"], ["Nolan", "Sweetwater"], ["San Patricio", "Taft"], ["Lynn", "Tahoka"], ["Titus", "Talco"], ["Kaufman", "Talty"], ["Rusk", "Tatum"], ["Panola", "Tatum"], ["Williamson", "Taylor"], ["Harris", "Taylor Lake Village"], ["Jefferson", "Taylor Landing"], ["Freestone", "Teague"], ["Limestone", "Tehuacana"], ["Bell", "Temple"], ["Shelby", "Tenaha"], ["Kaufman", "Terrell"], ["Bexar", "Terrell Hills"], ["Bowie", "Texarkana"], ["Chambers", "Texas City"], ["Galveston", "Texas City"], ["Sherman", "Texhoma"], ["Dallam", "Texline"], ["Denton", "The Colony"], ["Fort Bend", "Thompsons"], ["Williamson", "Thorndale"], ["Milam", "Thorndale"], ["Limestone", "Thornton"], ["Ward", "Thorntonville"], ["Williamson", "Thrall"], ["Live Oak", "Three Rivers"], ["Throckmorton", "Throckmorton"], ["Galveston", "Tiki Island"], ["Randall", "Timbercreek Canyon"], ["Shelby", "Timpson"], ["Grayson", "Tioga"], ["Hopkins", "Tira"], ["Lamar", "Toco"], ["Grimes", "Todd Mission"], ["Hood", "Tolar"], ["Grayson", "Tom Bean"], ["Montgomery", "Tomball"], ["Harris", "Tomball"], ["Henderson", "Tool"], ["Reeves", "Toyah"], ["Taylor", "Trent"], ["Grayson", "Trenton"], ["Fannin", "Trenton"], ["Henderson", "Trinidad"], ["Navarro", "Trinidad"], ["Trinity", "Trinity"], ["Denton", "Trophy Club"], ["Tarrant", "Trophy Club"], ["Smith", "Troup"], ["Cherokee", "Troup"], ["Bell", "Troy"], ["Swisher", "Tulia"], ["Hall", "Turkey"], ["Taylor", "Tuscola"], ["Taylor", "Tye"], ["Smith", "Tyler"], ["Hays", "Uhland"], ["Caldwell", "Uhland"], ["Harrison", "Uncertain"], ["Upshur", "Union Grove"], ["Hunt", "Union Valley"], ["Guadalupe", "Universal City"], ["Bexar", "Universal City"], ["Dallas", "University Park"], ["Uvalde", "Uvalde"], ["Jeff Davis", "Valentine"], ["Bosque", "Valley Mills"], ["McLennan", "Valley Mills"], ["Cooke", "Valley View"], ["Van Zandt", "Van"], ["Collin", "Van Alstyne"], ["Grayson", "Van Alstyne"], ["Culberson", "Van Horn"], ["Oldham", "Vega"], ["Ellis", "Venus"], ["Johnson", "Venus"], ["Wilbarger", "Vernon"], ["Victoria", "Victoria"], ["Orange", "Vidor"], ["Travis", "Village of The Hills"], ["Travis", "Villiage of Volente"], ["El Paso", "Vinton"], ["Bexar", "Von Ormy"], ["McLennan", "Waco"], ["Gonzales", "Waelder"], ["Bowie", "Wake Village"], ["Waller", "Waller"], ["Harris", "Waller"], ["Austin", "Wallis"], ["Bosque", "Walnut Springs"], ["Upshur", "Warren City"], ["Gregg", "Warren City"], ["Harrison", "Waskom"], ["Tarrant", "Watauga"], ["Ellis", "Waxahachie"], ["Parker", "Weatherford"], ["Travis", "Webberville"], ["Bastrop", "Webberville"], ["Harris", "Webster"], ["Galveston", "Webster"], ["Colorado", "Weimar"], ["Haskell", "Weinert"], ["Williamson", "Weir"], ["Collingsworth", "Wellington"], ["Terry", "Wellman"], ["Cherokee", "Wells"], ["Hidalgo", "Weslaco"], ["McLennan", "West"], ["Brazoria", "West Columbia"], ["Travis", "West Lake Hills"], ["Orange", "West Orange"], ["Hunt", "West Tawakoni"], ["Harris", "West University Place"], ["Mitchell", "Westbrook"], ["Denton", "Westlake"], ["Tarrant", "Westlake"], ["Collin", "Weston"], ["Fort Bend", "Weston Lakes"], ["Tarrant", "Westover Hills"], ["Tarrant", "Westworth Village"], ["Wharton", "Wharton"], ["Wheeler", "Wheeler"], ["Carson", "White Deer"], ["Gregg", "White Oak"], ["Tarrant", "White Settlement"], ["Cochran", "Whiteface"], ["Hockley", "Whiteface"], ["Smith", "Whitehouse"], ["Grayson", "Whitesboro"], ["Grayson", "Whitewright"], ["Fannin", "Whitewright"], ["Hill", "Whitney"], ["Wichita", "Wichita Falls"], ["Ward", "Wickett"], ["Montgomery", "Willis"], ["Parker", "Willow Park"], ["Van Zandt", "Wills Point"], ["Dallas", "Wilmer"], ["Lynn", "Wilson"], ["Hays", "Wimberley"], ["Bexar", "Windcrest"], ["Fannin", "Windom"], ["Clay", "Windthorst"], ["Archer", "Windthorst"], ["Titus", "Winfield"], ["Winkler", "Wink"], ["Franklin", "Winnsboro"], ["Wood", "Winnsboro"], ["Smith", "Winona"], ["Runnels", "Winters"], ["Brazos", "Wixon Valley"], ["Hunt", "Wolfe City"], ["Lubbock", "Wolfforth"], ["Montgomery", "Woodbranch Village"], ["Hays", "Woodcreek"], ["Montgomery", "Woodloch"], ["Refugio", "Woodsboro"], ["Throckmorton", "Woodson"], ["Tyler", "Woodville"], ["McLennan", "Woodway"], ["Freestone", "Wortham"], ["Limestone", "Wortham"], ["Collin", "Wylie"], ["Rockwall", "Wylie"], ["Dallas", "Wylie"], ["Wood", "Yantis"], ["Lavaca", "Yoakum"], ["DeWitt", "Yoakum"], ["DeWitt", "Yorktown"], ["Angelina", "Zavalla"]];


        var countyList = ["Anderson", "Andrews", "Angelina", "Aransas", "Archer", "Armstrong", "Atascosa", "Austin", "Bailey", "Bandera", "Bastrop", "Baylor", "Bee", "Bell", "Bexar", "Blanco", "Borden", "Bosque", "Bowie", "Brazoria", "Brazos", "Brewster", "Briscoe", "Brooks", "Brown", "Burleson", "Burnet", "Caldwell", "Calhoun", "Callahan", "Cameron", "Camp", "Carson", "Cass", "Castro", "Chambers", "Cherokee", "Childress", "Clay", "Cochran", "Coke", "Coleman", "Collin", "Collingsworth", "Colorado", "Comal", "Comanche", "Concho", "Cooke", "Coryell", "Cottle", "Crane", "Crockett", "Crosby", "Culberson", "Dallam", "Dallas", "Dawson", "Deaf Smith", "Delta", "Denton", "DeWitt", "Dickens", "Dimmit", "Donley", "Duval", "Eastland", "Ector", "Edwards", "El Paso", "Ellis", "Erath", "Falls", "Fannin", "Fayette", "Fisher", "Floyd", "Foard", "Fort Bend", "Franklin", "Freestone", "Frio", "Gaines", "Galveston", "Garza", "Gillespie", "Glasscock", "Goliad", "Gonzales", "Gray", "Grayson", "Gregg", "Grimes", "Guadalupe", "Hale", "Hall", "Hamilton", "Hansford", "Hardeman", "Hardin", "Harris", "Harrison", "Hartley", "Haskell", "Hays", "Hemphill", "Henderson", "Hidalgo", "Hill", "Hockley", "Hood", "Hopkins", "Houston", "Howard", "Hudspeth", "Hunt", "Hutchinson", "Irion", "Jack", "Jackson", "Jasper", "Jeff Davis", "Jefferson", "Jim Hogg", "Jim Wells", "Johnson", "Jones", "Karnes", "Kaufman", "Kendall", "Kenedy", "Kent", "Kerr", "Kimble", "King", "Kinney", "Kleberg", "Knox", "La Salle", "Lamar", "Lamb", "Lampasas", "Lavaca", "Lee", "Leon", "Liberty", "Limestone", "Lipscomb", "Live Oak", "Llano", "Loving", "Lubbock", "Lynn", "Madison", "Marion", "Martin", "Mason", "Matagorda", "Maverick", "McCulloch", "McLennan", "McMullen", "Medina", "Menard", "Midland", "Milam", "Mills", "Mitchell", "Montague", "Montgomery", "Moore", "Morris", "Motley", "Nacogdoches", "Navarro", "Newton", "Nolan", "Nueces", "Ochiltree", "Oldham", "Orange", "Palo Pinto", "Panola", "Parker", "Parmer", "Pecos", "Polk", "Potter", "Presidio", "Rains", "Randall", "Reagan", "Real", "Red River", "Reeves", "Refugio", "Roberts", "Robertson", "Rockwall", "Runnels", "Rusk", "Sabine", "San Augustine", "San Jacinto", "San Patricio", "San Saba", "Schleicher", "Scurry", "Shackelford", "Shelby", "Sherman", "Smith", "Somervell", "Starr", "Stephens", "Sterling", "Stonewall", "Sutton", "Swisher", "Tarrant", "Taylor", "Terrell", "Terry", "Throckmorton", "Titus", "Tom Green", "Travis", "Trinity", "Tyler", "Upshur", "Upton", "Uvalde", "Val Verde", "Van Zandt", "Victoria", "Walker", "Waller", "Ward", "Washington", "Webb", "Wharton", "Wheeler", "Wichita", "Wilbarger", "Willacy", "Williamson", "Wilson", "Winkler", "Wise", "Wood", "Yoakum", "Young", "Zapata", "Zavala"];
       

        function sortOrderCounty(co) {
            for (var i = 0; i &lt; countyList.length; i++) {
                if (co == countyList[i]) {
                    document.getElementById('sortCountyOrder').value = i;
                    if (document.getElementById('jurisdictionType1').checked == false) {
                        document.getElementById('sortCityOrder').value = '';
                       
                    }
                    return;
                }
            }
        }
        function sortOrderCity(ci) {
          var co="";
          var a  = document.getElementById('county');
          if(a.selectedIndex!=0){
            co=a.options[a.selectedIndex].text;
          }
            for (var i = 0; i &lt; cityMatrix.length; i++) {
                if (ci == cityMatrix[i][1] &amp;&amp; document.getElementById('jurisdictionType1').checked==true &amp;&amp; (co=="" || co == cityMatrix[i][0])){
                    document.getElementById('sortCityOrder').value = i;
                    
                    return;
                }
                if (ci == cityMatrix[i][1] &amp;&amp; document.getElementById('jurisdictionType2').checked==true) {
                    document.getElementById('sortCityOrder').value = i;
                    
                    return;
                }
            }
        }
       function hideDSOdrop() {console.log('hideDSOdrop runs but some of it is still commented for testing purposes');
            if (document.getElementById('dsoYesNo1').checked==true) {
              //$('#fkID').prop('disabled', true);
                //document.getElementById('dsoDropdown').style.display="";
                //document.getElementById('dsoRecDate').style.display="";
                var fk = document.getElementById('fk').getElementsByTagName('select')[0];
                for (var i=0; i&lt; fk.options.length; i++){
                if(fk.options[i].value===''){
                    fk.remove(fk.options[i]);
                }
                }

            } else {console.log('hideDSOdrop ELSE runs (CreateOrphanLink) but other parts of it is still commented for testing purposes');
                //$('#DSOisSelected').val('');
                //document.getElementById('dsoDropdown').style.display="none";
                //document.getElementById('dsoRecDate').style.display="none";
                CreateOrphanLink();
            }
        }

         function clearDSOdrop() {console.log('clearDSOdrop runs but some of it is still commented for testing purposes');
            if (document.getElementById('dsoYesNo1').checked==true) {
              alert('yes checked but do nothing')
                //document.getElementById('dsoDropdown').style.display="";
                //document.getElementById('dsoRecDate').style.display="";
                /*var fk = document.getElementById('fk').getElementsByTagName('select')[0];
                for (var i=0; i&lt; fk.options.length; i++){
                if(fk.options[i].value===''){
                    fk.remove(fk.options[i]);
                }
                }*/

            } else {console.log('hideDSOdrop ELSE runs (CreateOrphanLink) but other parts of it is still commented for testing purposes');
                //$('#DSOisSelected').val('');
                //document.getElementById('dsoDropdown').style.display="none";
                //document.getElementById('dsoRecDate').style.display="none";
                CreateOrphanLink();
            }
        }
        function CreateOrphanLink(){console.log('CreateOrphanLink runs full strenght');
            var fk = document.getElementById('fk').getElementsByTagName('select')[0];
            var a = document.createElement('option');
            a.value='0';
            a.text='Please Select';
            fk.appendChild(a);
            fk.selectedIndex=fk.options.length-1;
            //these below blank out the field and removes the value respectively - both needed to remove value from Parent record as well on Save
            $('#DSOisSelected').val(''); 
            $('#DSOisSelected').attr('value', ''); 
        }
        
  var someSaveBttn=function(){
    //alert("someSaveBttn runs");
  };
  var scribe={
  status: 0,
  autoRun: function() {},
  baseArray: [],
  changesMade: false,
  Evaluation: function() {
    var a=[];
    for(var i=0; i &lt; scribe.fields4History.length; i++) {
      var b=document.getElementsByName(scribe.fields4History[i][0]);
      for(var k=0; k &lt; b.length; k++) {
        var result=[];
        if(b[k].tagName==="SELECT") {
            var ms=[];
            for(var msif=0; msif &lt; b[k].options.length; msif++){
                if(b[k].options[msif].selected==true){ms.push(b[k].options[msif])}
            }
            var msr =[];
            for(var msi=0; msi &lt; ms.length; msi++){
               msr.push(ms[msi].text); 
            }
             result.push(scribe.fields4History[i][1]);
             result.push(msr.join(','));   
        } else if (b[k].type==="radio" || b[k].type==="checkbox") {
          result.push(scribe.fields4History[i][1]);
          var r;
          if(b[k].checked===true) {
            
                r = b[k].value+'(Selected)';
            
            result.push(r);
          } else {
             
                r = b[k].value+'(Not Selected)';
            
            result.push(r);
          }
        } else {
          result.push(scribe.fields4History[i][1]);
          result.push(b[k].value);
        }
        a.push(result);
        
      }
    }
    return a;
  },
  inicialReview: function(){scribe.baseArray=scribe.Evaluation();},
  postReview: function() {
    console.log('start post review');
    var p=[];
    var f=scribe.Evaluation();
    for(var i=0; i &lt; f.length; i++) {
      if(f[i][1] !== scribe.baseArray[i][1]) {
        p.push(f[i][0] + ': ' + f[i][1]);
        console.log('start post review2');
      }
    }
    p=p.join('\r\n');
    if(p.length &gt; 0) {
        console.log('start post review3');
      scribe.changesMade=true;
      
    }
    console.log('start post review4'); // gets to here
    console.log('p from here');
    console.log(p);
    console.log('to here');
    return p;
    console.log('start post review5'); //gets stuck on embed loop on Bubble Audit  input start

  }
};
//part of history
var pad=function(num) {
  if(num &lt; 10) {
    return "0" + num;
    
  } else {
    return num;
    
  }
};
//part of history
var updateDateTime=function() {
  var a=new Date();
  var b=(a.getMonth()+1)+"/"+pad(a.getDate())+"/"+a.getFullYear();

  b+=" "+pad(a.getHours())+":"+pad(a.getMinutes())+":"+pad(a.getSeconds());
  //$(c).val(b);
  document.getElementById("dateTimeUpdate").value=b;
  
};
//part of history - saves to historyEmbedView
var proxySaveFunction=function() {//alert('ProxySave');
  var a=document.getElementById('historyEmbedView');
  if(a.contentWindow) {
  console.log('contentWindow');
    a.contentWindow.document.getElementById('frameBody').contentWindow.frames.injectHistory(document.getElementsByName('dataid')[0].value,document.getElementById("dateTimeUpdate").value,
      '<value-of select="/data/@currentUser" />',
      scribe.postReview());
    
    
  } else {
     console.log('contentDocument');
    a.contentDocument.document.getElementById('frameBody').contentDocument.frames.injectHistory(document.getElementsByName('dataid')[0].value,
      document.getElementById("dateTimeUpdate").value,
      '<value-of select="/data/@currentUser" />',
      scribe.postReview()); 
   
  }
};

function removeUniAreas(){
          
          $("#city option:contains(Unincorporated Areas)").remove();
        }

        function TypeJurisdiciton(){
  //alert('TEST');
var a = document.getElementById('jurisdictionType1');

if(a.checked==true){ //City
  document.getElementById('city').multiple=false;
  document.getElementById('city').size=1;
}
else{ //County
 document.getElementById('city').multiple=true;
 document.getElementById('city').size=4;
  document.getElementById('sortCityOrder').value='0';

}

}
function copyIncidentNameFirst(){
   var first1 = document.getElementById('incidentList'),//get from
   second1 = document.getElementById('incidentName');//put here

second1.value = first1.value;
}
function totalJurisdictions(){

if(document.getElementById('dateDecRec').value!='' || document.getElementById('dateDecRecState').value!='' || document.getElementById('dateDecRecFederal').value!='' || document.getElementsByName('ack1')[0].value!='' || document.getElementsByName('ack2')[0].value!='' || document.getElementsByName('impactedCountiesDSO')[0].value!='' || document.getElementById('dsoYesNo1').checked==true){
  document.getElementsByName('totalJurisdictions')[0].value=1;
}
else {
  document.getElementsByName('totalJurisdictions')[0].value=0;
}

}

function checkFemaBoxV1OnDateEntry(){
    if (document.getElementById('iaPDAComplete').value!=''){
        document.getElementById('femaCheckboxV1').checked=true;
    } else {
        document.getElementById('femaCheckboxV1').checked=false;
    }
}

function checkFemaBoxV2OnDateEntry(){
    if (document.getElementById('paPDAComplete').value!=''){
        document.getElementById('femaCheckboxV2').checked=true;
    } else {
        document.getElementById('femaCheckboxV2').checked=false;
    }
}

function localDec(){
    if (document.getElementById('dateDecRec').value!=''){
        document.getElementById('declarationIssued1').checked=true;
    } else {
        document.getElementById('declarationIssued1').checked=false;
    }
}

function stateDec(){
    if (document.getElementById('dateDecRecState').value!=''){
        document.getElementById('declarationIssuedState1').checked=true;
    } else {
        document.getElementById('declarationIssuedState1').checked=false;
    }
}

function federalDec(){
    if (document.getElementById('dateDecRecFederal').value!=''){
        document.getElementById('declarationIssuedFederal1').checked=true;
    } else {
        document.getElementById('declarationIssuedFederal1').checked=false;
    }
}

function checkIncidentNameValueWithIncidentListText() {

//startOf: storing the value of incidentName text field into a variable
//var incidentNameValue = 

//startOf: when executing function, the incidentList check if the incidentName value is equal to an option in the incidentList select list

$("[name = incidentList] option").filter(function() {
return($(this).text() == document.getElementById("incidentName").value);
}).prop("selected", true);

}

function copyFKValues(){
   var firstFK = document.getElementById('fkID'),//get from
   secondFK = document.getElementById('copyFK');//put here
//alert('FK ran1');
secondFK.value = firstFK.options[firstFK.selectedIndex].text;
//copyFKValuesAgain();
//alert('FK ran2');
}

/*function filterOptionsByCounty(){
   $('#fkID').filterByText($('#county'), true);
//alert('FK ran2');
}*/


function touchTheDSOisSelectedTextBox(){
   if($('#fkID').selectedIndex != 'Please Select'){
        $('#DSOisSelected').val("SELECTED");
        $('#DSOisSelected2').val("");
        $('#DSOisSelected2').attr('value', '');
        
    }  console.log('touchTheDSOisSelectedTextBox runs full for testing purposes');
}

function hideOtherTextField(){
    if($('#otherValue').val()!=''){
        document.getElementById("otherValueDiv").style.display = "";
    }
}
//this function needs to add a check or text value to another text field, remove SELECTED from DSOisSELECTED, SAVE and reopen automatically, it will see the value there and then run CreateOrphanLink. Having the DSO linked to 2 reecords without actually delinking it from the first may cause issues. If this does not work , an embed view may the way. See TCARD tracker for save and continue. 
function deselectTheDSOValue(){
  $('#DSOisSelected').val("");
  $('#DSOisSelected').attr('value', '');
  $('#fkID').prop('disabled', false);


}

function deselectTheDSO2Value(){
  $('#DSOisSelected2').val("");
  $('#DSOisSelected2').attr('value', '');
  $('#fkID').prop('disabled', false);


}

function filterSelectList(){
var myOpts = document.getElementById('fkID').options;

for (var i=0; i &lt; myOpts.length; i++){

  if(myOpts[i].text == ""){
    $(myOpts[i]).hide();
    alert('Winning filters');
  }
}
}




var incVar;
var incSelList;
var loopAllInputs;

var filterByIncident={
  //the below feeds a select List, not a filter
  
  incidentListOptionsBuild: function() {
    <for-each select="/data/allincidentlist/incidents">
      incSelList.options[incSelList.options.length]=new Option('<value-of select="@name" />','<value-of select="@name" />',false,false);
    </for-each>
    //incSelList.options.selectedIndex=0;
  }
  /*incidentListActionOnChange: function() {
    incSelList.options[incSelList.options.length]=new Option('','',false,false);
    incVar.value=incSelList.options[incSelList.options.selectedIndex].text;
    for(var i=0; i &lt; loopAllInputs.length; i++) {
      if(loopAllInputs[i].getAttribute('value')=='Search'){$(loopAllInputs[i]).click();}
    }
    window.parent.window.parent.selectedIncident=(incSelList.options[incSelList.options.selectedIndex]).text;
  }*/
};

$(document).ready(function(){
  //document.forms[0].onsubmit=totalJurisdictions;
    //incSelList=document.getElementById('incidentList');
    //loopAllInputs=document.getElementsByTagName('input');
   // etnPageHelper.styleSearchField();
    //var countyFilter=document.getElementById('countyFilter').getElementsByTagName('select')[0];
    //$(countyFilter).addClass('form-control');
    //filterByIncident.incidentListOptionsBuild();
   // filterByIncident.searchFieldVariableSet();
  //  filterByIncident.clearIncidentListSelection();
    //filterByIncident.incidentListActionOnChange();
    
   /* var ddcFilter=document.getElementById('ddcFilter').getElementsByTagName('select')[0];
    $(ddcFilter).addClass('form-control');*/
  });

    window.onload=start;
</script></head><body><div class="container agencytemplate_boardbackground"><form id="input1" role="form"><div style="display:none"><div class="form-group form-inline"><label class="control-label" for="sortCountyOrder">Sort County Order:</label><input name="sortCountyOrder" id="sortCountyOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="sortCityOrder">Sort City Order:</label><input name="sortCityOrder" id="sortCityOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="updated">updated:</label><input name="updated" id="updated" type="text" style="form-control input-sm" /></div><eocfield name="currentUser" /><input name="totalJurisdictions" value="_number" type="text" /></div><div class="content"><br /><fieldset><h1><span class="label label-default">General</span></h1><br /><input type="text" name="incidentName" id="incidentName" class="form-control hide" /><div class="form-group form-inline"><label for="incidentList" class="control-label">Incidents:</label><space /><select name="incidentList" id="incidentList" onchange="copyIncidentNameFirst();" class="form-control" /></div><div class="form-group required form-inline"><label class="control-label" for="jurisdictionType">Jurisdiction Type:</label>
        City 
                     
                     
                     
                     <input id="jurisdictionType1" type="radio" class="jTypeCLASS" style="form-control input-sm" name="jurisdictionType" value="City" onclick="removeUniAreas()" />
        County 
                     
                     
                     
                     <input id="jurisdictionType2" type="radio" class="jTypeCLASS" style="form-control input-sm" name="jurisdictionType" value="County" /></div><div class="form-group form-inline"><label class="control-label" for="County">County:</label><space /><select class="form-control" name="county" id="county"><option value="">Please Select:</option><option value="Anderson">Anderson</option><option value="Andrews">Andrews</option><option value="Angelina">Angelina</option><option value="Aransas">Aransas</option><option value="Archer">Archer</option><option value="Armstrong">Armstrong</option><option value="Atascosa">Atascosa</option><option value="Austin">Austin</option><option value="Bailey">Bailey</option><option value="Bandera">Bandera</option><option value="Bastrop">Bastrop</option><option value="Baylor">Baylor</option><option value="Bee">Bee</option><option value="Bell">Bell</option><option value="Bexar">Bexar</option><option value="Blanco">Blanco</option><option value="Borden">Borden</option><option value="Bosque">Bosque</option><option value="Bowie">Bowie</option><option value="Brazoria">Brazoria</option><option value="Brazos">Brazos</option><option value="Brewster">Brewster</option><option value="Briscoe">Briscoe</option><option value="Brooks">Brooks</option><option value="Brown">Brown</option><option value="Burleson">Burleson</option><option value="Burnet">Burnet</option><option value="Caldwell">Caldwell</option><option value="Calhoun">Calhoun</option><option value="Callahan">Callahan</option><option value="Cameron">Cameron</option><option value="Camp">Camp</option><option value="Carson">Carson</option><option value="Cass">Cass</option><option value="Castro">Castro</option><option value="Chambers">Chambers</option><option value="Cherokee">Cherokee</option><option value="Childress">Childress</option><option value="Clay">Clay</option><option value="Cochran">Cochran</option><option value="Coke">Coke</option><option value="Coleman">Coleman</option><option value="Collin">Collin</option><option value="Collingsworth">Collingsworth</option><option value="Colorado">Colorado</option><option value="Comal">Comal</option><option value="Comanche">Comanche</option><option value="Concho">Concho</option><option value="Cooke">Cooke</option><option value="Coryell">Coryell</option><option value="Cottle">Cottle</option><option value="Crane">Crane</option><option value="Crockett">Crockett</option><option value="Crosby">Crosby</option><option value="Culberson">Culberson</option><option value="Dallam">Dallam</option><option value="Dallas">Dallas</option><option value="Dawson">Dawson</option><option value="Deaf Smith">Deaf Smith</option><option value="Delta">Delta</option><option value="Denton">Denton</option><option value="DeWitt">DeWitt</option><option value="Dickens">Dickens</option><option value="Dimmit">Dimmit</option><option value="Donley">Donley</option><option value="Duval">Duval</option><option value="Eastland">Eastland</option><option value="Ector">Ector</option><option value="Edwards">Edwards</option><option value="El Paso">El Paso</option><option value="Ellis">Ellis</option><option value="Erath">Erath</option><option value="Falls">Falls</option><option value="Fannin">Fannin</option><option value="Fayette">Fayette</option><option value="Fisher">Fisher</option><option value="Floyd">Floyd</option><option value="Foard">Foard</option><option value="Fort Bend">Fort Bend</option><option value="Franklin">Franklin</option><option value="Freestone">Freestone</option><option value="Frio">Frio</option><option value="Gaines">Gaines</option><option value="Galveston">Galveston</option><option value="Garza">Garza</option><option value="Gillespie">Gillespie</option><option value="Glasscock">Glasscock</option><option value="Goliad">Goliad</option><option value="Gonzales">Gonzales</option><option value="Gray">Gray</option><option value="Grayson">Grayson</option><option value="Gregg">Gregg</option><option value="Grimes">Grimes</option><option value="Guadalupe">Guadalupe</option><option value="Hale">Hale</option><option value="Hall">Hall</option><option value="Hamilton">Hamilton</option><option value="Hansford">Hansford</option><option value="Hardeman">Hardeman</option><option value="Hardin">Hardin</option><option value="Harris">Harris</option><option value="Harrison">Harrison</option><option value="Hartley">Hartley</option><option value="Haskell">Haskell</option><option value="Hays">Hays</option><option value="Hemphill">Hemphill</option><option value="Henderson">Henderson</option><option value="Hidalgo">Hidalgo</option><option value="Hill">Hill</option><option value="Hockley">Hockley</option><option value="Hood">Hood</option><option value="Hopkins">Hopkins</option><option value="Houston">Houston</option><option value="Howard">Howard</option><option value="Hudspeth">Hudspeth</option><option value="Hunt">Hunt</option><option value="Hutchinson">Hutchinson</option><option value="Irion">Irion</option><option value="Jack">Jack</option><option value="Jackson">Jackson</option><option value="Jasper">Jasper</option><option value="Jeff Davis">Jeff Davis</option><option value="Jefferson">Jefferson</option><option value="Jim Hogg">Jim Hogg</option><option value="Jim Wells">Jim Wells</option><option value="Johnson">Johnson</option><option value="Jones">Jones</option><option value="Karnes">Karnes</option><option value="Kaufman">Kaufman</option><option value="Kendall">Kendall</option><option value="Kenedy">Kenedy</option><option value="Kent">Kent</option><option value="Kerr">Kerr</option><option value="Kimble">Kimble</option><option value="King">King</option><option value="Kinney">Kinney</option><option value="Kleberg">Kleberg</option><option value="Knox">Knox</option><option value="La Salle">La Salle</option><option value="Lamar">Lamar</option><option value="Lamb">Lamb</option><option value="Lampasas">Lampasas</option><option value="Lavaca">Lavaca</option><option value="Lee">Lee</option><option value="Leon">Leon</option><option value="Liberty">Liberty</option><option value="Limestone">Limestone</option><option value="Lipscomb">Lipscomb</option><option value="Live Oak">Live Oak</option><option value="Llano">Llano</option><option value="Loving">Loving</option><option value="Lubbock">Lubbock</option><option value="Lynn">Lynn</option><option value="Madison">Madison</option><option value="Marion">Marion</option><option value="Martin">Martin</option><option value="Mason">Mason</option><option value="Matagorda">Matagorda</option><option value="Maverick">Maverick</option><option value="McCulloch">McCulloch</option><option value="McLennan">McLennan</option><option value="McMullen">McMullen</option><option value="Medina">Medina</option><option value="Menard">Menard</option><option value="Midland">Midland</option><option value="Milam">Milam</option><option value="Mills">Mills</option><option value="Mitchell">Mitchell</option><option value="Montague">Montague</option><option value="Montgomery">Montgomery</option><option value="Moore">Moore</option><option value="Morris">Morris</option><option value="Motley">Motley</option><option value="Nacogdoches">Nacogdoches</option><option value="Navarro">Navarro</option><option value="Newton">Newton</option><option value="Nolan">Nolan</option><option value="Nueces">Nueces</option><option value="Ochiltree">Ochiltree</option><option value="Oldham">Oldham</option><option value="Orange">Orange</option><option value="Palo Pinto">Palo Pinto</option><option value="Panola">Panola</option><option value="Parker">Parker</option><option value="Parmer">Parmer</option><option value="Pecos">Pecos</option><option value="Polk">Polk</option><option value="Potter">Potter</option><option value="Presidio">Presidio</option><option value="Rains">Rains</option><option value="Randall">Randall</option><option value="Reagan">Reagan</option><option value="Real">Real</option><option value="Red River">Red River</option><option value="Reeves">Reeves</option><option value="Refugio">Refugio</option><option value="Roberts">Roberts</option><option value="Robertson">Robertson</option><option value="Rockwall">Rockwall</option><option value="Runnels">Runnels</option><option value="Rusk">Rusk</option><option value="Sabine">Sabine</option><option value="San Augustine">San Augustine</option><option value="San Jacinto">San Jacinto</option><option value="San Patricio">San Patricio</option><option value="San Saba">San Saba</option><option value="Schleicher">Schleicher</option><option value="Scurry">Scurry</option><option value="Shackelford">Shackelford</option><option value="Shelby">Shelby</option><option value="Sherman">Sherman</option><option value="Smith">Smith</option><option value="Somervell">Somervell</option><option value="Starr">Starr</option><option value="Stephens">Stephens</option><option value="Sterling">Sterling</option><option value="Stonewall">Stonewall</option><option value="Sutton">Sutton</option><option value="Swisher">Swisher</option><option value="Tarrant">Tarrant</option><option value="Taylor">Taylor</option><option value="Terrell">Terrell</option><option value="Terry">Terry</option><option value="Throckmorton">Throckmorton</option><option value="Titus">Titus</option><option value="Tom Green">Tom Green</option><option value="Travis">Travis</option><option value="Trinity">Trinity</option><option value="Tyler">Tyler</option><option value="Upshur">Upshur</option><option value="Upton">Upton</option><option value="Uvalde">Uvalde</option><option value="Val Verde">Val Verde</option><option value="Van Zandt">Van Zandt</option><option value="Victoria">Victoria</option><option value="Walker">Walker</option><option value="Waller">Waller</option><option value="Ward">Ward</option><option value="Washington">Washington</option><option value="Webb">Webb</option><option value="Wharton">Wharton</option><option value="Wheeler">Wheeler</option><option value="Wichita">Wichita</option><option value="Wilbarger">Wilbarger</option><option value="Willacy">Willacy</option><option value="Williamson">Williamson</option><option value="Wilson">Wilson</option><option value="Winkler">Winkler</option><option value="Wise">Wise</option><option value="Wood">Wood</option><option value="Yoakum">Yoakum</option><option value="Young">Young</option><option value="Zapata">Zapata</option><option value="Zavala">Zavala</option></select></div><div class="form-group form-inline"><label class="control-label" for="city">City:</label><space /><span id="cityInfo" class="label label-info">i</span><space /><select size="4" name="city" list="DSO Cities" multiple="multiple" id="city" class="form-control"><option value="Select One">Select One</option><option value="Unincorporated Areas">Unincorporated Areas</option><option value="Abbott">Abbott</option><option value="Abernathy">Abernathy</option><option value="Abilene">Abilene</option><option value="Ackerly">Ackerly</option><option value="Addison">Addison</option><option value="Adrian">Adrian</option><option value="Agua Dulce">Agua Dulce</option><option value="Alamo">Alamo</option><option value="Alamo Heights">Alamo Heights</option><option value="Alba">Alba</option><option value="Albany">Albany</option><option value="Aledo">Aledo</option><option value="Alice">Alice</option><option value="Allen">Allen</option><option value="Alma">Alma</option><option value="Alpine">Alpine</option><option value="Alto">Alto</option><option value="Alton">Alton</option><option value="Alvarado">Alvarado</option><option value="Alvin">Alvin</option><option value="Alvord">Alvord</option><option value="Amarillo">Amarillo</option><option value="Ames">Ames</option><option value="Amherst">Amherst</option><option value="Anahuac">Anahuac</option><option value="Anderson">Anderson</option><option value="Andrews">Andrews</option><option value="Angleton">Angleton</option><option value="Angus">Angus</option><option value="Anna">Anna</option><option value="Annetta">Annetta</option><option value="Annetta North">Annetta North</option><option value="Annetta South">Annetta South</option><option value="Annona">Annona</option><option value="Anson">Anson</option><option value="Anthony">Anthony</option><option value="Anton">Anton</option><option value="Appleby">Appleby</option><option value="Aquilla">Aquilla</option><option value="Aransas Pass">Aransas Pass</option><option value="Archer City">Archer City</option><option value="Arcola">Arcola</option><option value="Argyle">Argyle</option><option value="Arlington">Arlington</option><option value="Arp">Arp</option><option value="Asherton">Asherton</option><option value="Aspermont">Aspermont</option><option value="Athens">Athens</option><option value="Atlanta">Atlanta</option><option value="Aubrey">Aubrey</option><option value="Aurora">Aurora</option><option value="Austin">Austin</option><option value="Austwell">Austwell</option><option value="Avery">Avery</option><option value="Avinger">Avinger</option><option value="Azle">Azle</option><option value="Bailey">Bailey</option><option value="Bailey's Prairie">Bailey's Prairie</option><option value="Baird">Baird</option><option value="Balch Springs">Balch Springs</option><option value="Balcones Heights">Balcones Heights</option><option value="Ballinger">Ballinger</option><option value="Balmorhea">Balmorhea</option><option value="Bandera">Bandera</option><option value="Bangs">Bangs</option><option value="Bardwell">Bardwell</option><option value="Barry">Barry</option><option value="Barstow">Barstow</option><option value="Bartlett">Bartlett</option><option value="Bartonville">Bartonville</option><option value="Bastrop">Bastrop</option><option value="Bay City">Bay City</option><option value="Bayou Vista">Bayou Vista</option><option value="Bayside">Bayside</option><option value="Baytown">Baytown</option><option value="Bayview">Bayview</option><option value="Beach City">Beach City</option><option value="Bear Creek">Bear Creek</option><option value="Beasley">Beasley</option><option value="Beaumont">Beaumont</option><option value="Beckville">Beckville</option><option value="Bedford">Bedford</option><option value="Bedias">Bedias</option><option value="Bee Cave">Bee Cave</option><option value="Beeville">Beeville</option><option value="Bellaire">Bellaire</option><option value="Bellevue">Bellevue</option><option value="Bellmead">Bellmead</option><option value="Bells">Bells</option><option value="Bellville">Bellville</option><option value="Belton">Belton</option><option value="Benavides">Benavides</option><option value="Benbrook">Benbrook</option><option value="Benjamin">Benjamin</option><option value="Berryville">Berryville</option><option value="Bertram">Bertram</option><option value="Beverly Hills">Beverly Hills</option><option value="Bevil Oaks">Bevil Oaks</option><option value="Big Lake">Big Lake</option><option value="Big Sandy">Big Sandy</option><option value="Big Spring">Big Spring</option><option value="Big Wells">Big Wells</option><option value="Bishop">Bishop</option><option value="Bishop Hills">Bishop Hills</option><option value="Blackwell">Blackwell</option><option value="Blanco">Blanco</option><option value="Blanket">Blanket</option><option value="Bloomburg">Bloomburg</option><option value="Blooming Grove">Blooming Grove</option><option value="Blossom">Blossom</option><option value="Blue Mound">Blue Mound</option><option value="Blue Ridge">Blue Ridge</option><option value="Blum">Blum</option><option value="Boerne">Boerne</option><option value="Bogata">Bogata</option><option value="Bonham">Bonham</option><option value="Bonney">Bonney</option><option value="Booker">Booker</option><option value="Borger">Borger</option><option value="Bovina">Bovina</option><option value="Bowie">Bowie</option><option value="Boyd">Boyd</option><option value="Brackettville">Brackettville</option><option value="Brady">Brady</option><option value="Brazoria">Brazoria</option><option value="Brazos Bend">Brazos Bend</option><option value="Brazos Country">Brazos Country</option><option value="Breckenridge">Breckenridge</option><option value="Bremond">Bremond</option><option value="Brenham">Brenham</option><option value="Briarcliff">Briarcliff</option><option value="Briaroaks">Briaroaks</option><option value="Bridge City">Bridge City</option><option value="Bridgeport">Bridgeport</option><option value="Broaddus">Broaddus</option><option value="Bronte">Bronte</option><option value="Brookshire">Brookshire</option><option value="Brookside Village">Brookside Village</option><option value="Browndell">Browndell</option><option value="Brownfield">Brownfield</option><option value="Brownsboro">Brownsboro</option><option value="Brownsville">Brownsville</option><option value="Brownwood">Brownwood</option><option value="Bruceville-Eddy">Bruceville-Eddy</option><option value="Bryan">Bryan</option><option value="Bryson">Bryson</option><option value="Buckholts">Buckholts</option><option value="Buda">Buda</option><option value="Buffalo">Buffalo</option><option value="Buffalo Gap">Buffalo Gap</option><option value="Buffalo Springs">Buffalo Springs</option><option value="Bullard">Bullard</option><option value="Bulverde">Bulverde</option><option value="Bunker Hill Village">Bunker Hill Village</option><option value="Burkburnett">Burkburnett</option><option value="Burke">Burke</option><option value="Burleson">Burleson</option><option value="Burnet">Burnet</option><option value="Burton">Burton</option><option value="Byers">Byers</option><option value="Bynum">Bynum</option><option value="Cactus">Cactus</option><option value="Caddo Mills">Caddo Mills</option><option value="Caldwell">Caldwell</option><option value="Callisburg">Callisburg</option><option value="Calvert">Calvert</option><option value="Cameron">Cameron</option><option value="Camp Wood">Camp Wood</option><option value="Campbell">Campbell</option><option value="Canadian">Canadian</option><option value="Caney City">Caney City</option><option value="Canton">Canton</option><option value="Canyon">Canyon</option><option value="Carbon">Carbon</option><option value="Carl's Corner">Carl's Corner</option><option value="Carmine">Carmine</option><option value="Carrizo Springs">Carrizo Springs</option><option value="Carrollton">Carrollton</option><option value="Carthage">Carthage</option><option value="Cashion">Cashion</option><option value="Castle Hills">Castle Hills</option><option value="Castroville">Castroville</option><option value="Cedar Hill">Cedar Hill</option><option value="Cedar Park">Cedar Park</option><option value="Celeste">Celeste</option><option value="Celina">Celina</option><option value="Center">Center</option><option value="Centerville">Centerville</option><option value="Chandler">Chandler</option><option value="Channing">Channing</option><option value="Charlotte">Charlotte</option><option value="Chester">Chester</option><option value="Chico">Chico</option><option value="Childress">Childress</option><option value="Chillicothe">Chillicothe</option><option value="China">China</option><option value="China Grove">China Grove</option><option value="Chireno">Chireno</option><option value="Christine">Christine</option><option value="Cibolo">Cibolo</option><option value="Cisco">Cisco</option><option value="Clarendon">Clarendon</option><option value="Clarksville">Clarksville</option><option value="Clarksville City">Clarksville City</option><option value="Claude">Claude</option><option value="Clear Lake Shores">Clear Lake Shores</option><option value="Cleburne">Cleburne</option><option value="Cleveland">Cleveland</option><option value="Clifton">Clifton</option><option value="Clint">Clint</option><option value="Clute">Clute</option><option value="Clyde">Clyde</option><option value="Coahoma">Coahoma</option><option value="Cockrell Hill">Cockrell Hill</option><option value="Coffee City">Coffee City</option><option value="Coldspring">Coldspring</option><option value="Coleman">Coleman</option><option value="College Station">College Station</option><option value="Colleyville">Colleyville</option><option value="Collinsville">Collinsville</option><option value="Colmesneil">Colmesneil</option><option value="Colorado City">Colorado City</option><option value="Columbus">Columbus</option><option value="Comanche">Comanche</option><option value="Combes">Combes</option><option value="Combine">Combine</option><option value="Commerce">Commerce</option><option value="Como">Como</option><option value="Conroe">Conroe</option><option value="Converse">Converse</option><option value="Cool">Cool</option><option value="Coolidge">Coolidge</option><option value="Cooper">Cooper</option><option value="Coppell">Coppell</option><option value="Copper Canyon">Copper Canyon</option><option value="Copperas Cove">Copperas Cove</option><option value="Corinth">Corinth</option><option value="Corpus Christi">Corpus Christi</option><option value="Corral City">Corral City</option><option value="Corrigan">Corrigan</option><option value="Corsicana">Corsicana</option><option value="Cottonwood">Cottonwood</option><option value="Cottonwood Shores">Cottonwood Shores</option><option value="Cotulla">Cotulla</option><option value="Cove">Cove</option><option value="Covington">Covington</option><option value="Crandall">Crandall</option><option value="Crane">Crane</option><option value="Cranfills Gap">Cranfills Gap</option><option value="Crawford">Crawford</option><option value="Creedmoor">Creedmoor</option><option value="Cresson">Cresson</option><option value="Crockett">Crockett</option><option value="Crosbyton">Crosbyton</option><option value="Cross Plains">Cross Plains</option><option value="Cross Roads">Cross Roads</option><option value="Cross Timber">Cross Timber</option><option value="Crowell">Crowell</option><option value="Crowley">Crowley</option><option value="Crystal City">Crystal City</option><option value="Cuero">Cuero</option><option value="Cumby">Cumby</option><option value="Cuney">Cuney</option><option value="Cushing">Cushing</option><option value="Cut and Shoot">Cut and Shoot</option><option value="Daingerfield">Daingerfield</option><option value="Daisetta">Daisetta</option><option value="Dalhart">Dalhart</option><option value="Dallas">Dallas</option><option value="Dalworthington Gardens">Dalworthington Gardens</option><option value="Danbury">Danbury</option><option value="Darrouzett">Darrouzett</option><option value="Dawson">Dawson</option><option value="Dayton">Dayton</option><option value="Dayton Lakes">Dayton Lakes</option><option value="De Leon">De Leon</option><option value="Dean">Dean</option><option value="Decatur">Decatur</option><option value="DeCordova">DeCordova</option><option value="Deer Park">Deer Park</option><option value="DeKalb">DeKalb</option><option value="Del Rio">Del Rio</option><option value="Dell City">Dell City</option><option value="Denison">Denison</option><option value="Denton">Denton</option><option value="Denver City">Denver City</option><option value="Deport">Deport</option><option value="DeSoto">DeSoto</option><option value="Detroit">Detroit</option><option value="Devers">Devers</option><option value="Devine">Devine</option><option value="Diboll">Diboll</option><option value="Dickens">Dickens</option><option value="Dickinson">Dickinson</option><option value="Dilley">Dilley</option><option value="Dimmitt">Dimmitt</option><option value="Dish">Dish</option><option value="Dodd City">Dodd City</option><option value="Dodson">Dodson</option><option value="Domino">Domino</option><option value="Donna">Donna</option><option value="Dorchester">Dorchester</option><option value="Double Oak">Double Oak</option><option value="Douglassville">Douglassville</option><option value="Dripping Springs">Dripping Springs</option><option value="Driscoll">Driscoll</option><option value="Dublin">Dublin</option><option value="Dumas">Dumas</option><option value="Duncanville">Duncanville</option><option value="Eagle Lake">Eagle Lake</option><option value="Eagle Pass">Eagle Pass</option><option value="Early">Early</option><option value="Earth">Earth</option><option value="East Bernard">East Bernard</option><option value="East Mountain">East Mountain</option><option value="East Tawakoni">East Tawakoni</option><option value="Eastland">Eastland</option><option value="Easton">Easton</option><option value="Ector">Ector</option><option value="Edcouch">Edcouch</option><option value="Eden">Eden</option><option value="Edgecliff">Edgecliff</option><option value="Edgewood">Edgewood</option><option value="Edinburg">Edinburg</option><option value="Edmonson">Edmonson</option><option value="Edna">Edna</option><option value="Edom">Edom</option><option value="El Campo">El Campo</option><option value="El Cenizo">El Cenizo</option><option value="El Lago">El Lago</option><option value="El Paso">El Paso</option><option value="Eldorado">Eldorado</option><option value="Electra">Electra</option><option value="Elgin">Elgin</option><option value="Elkhart">Elkhart</option><option value="Elmendorf">Elmendorf</option><option value="Elsa">Elsa</option><option value="Emhouse">Emhouse</option><option value="Emory">Emory</option><option value="Enchanted Oaks">Enchanted Oaks</option><option value="Encinal">Encinal</option><option value="Ennis">Ennis</option><option value="Escobares">Escobares</option><option value="Estelline">Estelline</option><option value="Euless">Euless</option><option value="Eureka">Eureka</option><option value="Eustace">Eustace</option><option value="Evant">Evant</option><option value="Everman">Everman</option><option value="Fair Oaks Ranch">Fair Oaks Ranch</option><option value="Fairchilds">Fairchilds</option><option value="Fairfield">Fairfield</option><option value="Fairview">Fairview</option><option value="Falfurrias">Falfurrias</option><option value="Falls City">Falls City</option><option value="Farmers Branch">Farmers Branch</option><option value="Farmersville">Farmersville</option><option value="Farwell">Farwell</option><option value="Fate">Fate</option><option value="Fayetteville">Fayetteville</option><option value="Ferris">Ferris</option><option value="Flatonia">Flatonia</option><option value="Florence">Florence</option><option value="Floresville">Floresville</option><option value="Flower Mound">Flower Mound</option><option value="Floydada">Floydada</option><option value="Follett">Follett</option><option value="Forest Hill">Forest Hill</option><option value="Forney">Forney</option><option value="Forsan">Forsan</option><option value="Fort Stockton">Fort Stockton</option><option value="Fort Worth">Fort Worth</option><option value="Franklin">Franklin</option><option value="Frankston">Frankston</option><option value="Fredericksburg">Fredericksburg</option><option value="Freeport">Freeport</option><option value="Freer">Freer</option><option value="Friendswood">Friendswood</option><option value="Friona">Friona</option><option value="Frisco">Frisco</option><option value="Fritch">Fritch</option><option value="Frost">Frost</option><option value="Fruitvale">Fruitvale</option><option value="Fulshear">Fulshear</option><option value="Fulton">Fulton</option><option value="Gainesville">Gainesville</option><option value="Galena Park">Galena Park</option><option value="Gallatin">Gallatin</option><option value="Galveston">Galveston</option><option value="Ganado">Ganado</option><option value="Garden Ridge">Garden Ridge</option><option value="Garland">Garland</option><option value="Garrett">Garrett</option><option value="Garrison">Garrison</option><option value="Gary">Gary</option><option value="Gatesville">Gatesville</option><option value="George West">George West</option><option value="Georgetown">Georgetown</option><option value="Gholson">Gholson</option><option value="Giddings">Giddings</option><option value="Gilmer">Gilmer</option><option value="Gladewater">Gladewater</option><option value="Glen Rose">Glen Rose</option><option value="Glenn Heights">Glenn Heights</option><option value="Godley">Godley</option><option value="Goldsmith">Goldsmith</option><option value="Goldthwaite">Goldthwaite</option><option value="Goliad">Goliad</option><option value="Golinda">Golinda</option><option value="Gonzales">Gonzales</option><option value="Goodlow">Goodlow</option><option value="Goodrich">Goodrich</option><option value="Gordon">Gordon</option><option value="Goree">Goree</option><option value="Gorman">Gorman</option><option value="Graford">Graford</option><option value="Graham">Graham</option><option value="Granbury">Granbury</option><option value="Grand Prairie">Grand Prairie</option><option value="Grand Saline">Grand Saline</option><option value="Grandfalls">Grandfalls</option><option value="Grandview">Grandview</option><option value="Granger">Granger</option><option value="Granite Shoals">Granite Shoals</option><option value="Granjeno">Granjeno</option><option value="Grapeland">Grapeland</option><option value="Grapevine">Grapevine</option><option value="Grays Prairie">Grays Prairie</option><option value="Greenville">Greenville</option><option value="Gregory">Gregory</option><option value="Grey Forest">Grey Forest</option><option value="Groesbeck">Groesbeck</option><option value="Groom">Groom</option><option value="Groves">Groves</option><option value="Groveton">Groveton</option><option value="Gruver">Gruver</option><option value="Gun Barrel City">Gun Barrel City</option><option value="Gunter">Gunter</option><option value="Gustine">Gustine</option><option value="Hackberry">Hackberry</option><option value="Hale Center">Hale Center</option><option value="Hallettsville">Hallettsville</option><option value="Hallsburg">Hallsburg</option><option value="Hallsville">Hallsville</option><option value="Haltom City">Haltom City</option><option value="Hamilton">Hamilton</option><option value="Hamlin">Hamlin</option><option value="Happy">Happy</option><option value="Hardin">Hardin</option><option value="Harker Heights">Harker Heights</option><option value="Harlingen">Harlingen</option><option value="Hart">Hart</option><option value="Haskell">Haskell</option><option value="Haslet">Haslet</option><option value="Hawk Cove">Hawk Cove</option><option value="Hawkins">Hawkins</option><option value="Hawley">Hawley</option><option value="Hays">Hays</option><option value="Hearne">Hearne</option><option value="Heath">Heath</option><option value="Hebron">Hebron</option><option value="Hedley">Hedley</option><option value="Hedwig Village">Hedwig Village</option><option value="Helotes">Helotes</option><option value="Hemphill">Hemphill</option><option value="Hempstead">Hempstead</option><option value="Henderson">Henderson</option><option value="Henrietta">Henrietta</option><option value="Hereford">Hereford</option><option value="Hewitt">Hewitt</option><option value="Hickory Creek">Hickory Creek</option><option value="Hico">Hico</option><option value="Hidalgo">Hidalgo</option><option value="Hideaway">Hideaway</option><option value="Higgins">Higgins</option><option value="Highland Haven">Highland Haven</option><option value="Highland Park">Highland Park</option><option value="Highland Village">Highland Village</option><option value="Hill Country Village">Hill Country Village</option><option value="Hillcrest Village">Hillcrest Village</option><option value="Hillsboro">Hillsboro</option><option value="Hilshire Village">Hilshire Village</option><option value="Hitchcock">Hitchcock</option><option value="Holiday Lakes">Holiday Lakes</option><option value="Holland">Holland</option><option value="Holliday">Holliday</option><option value="Hollywood Park">Hollywood Park</option><option value="Hondo">Hondo</option><option value="Honey Grove">Honey Grove</option><option value="Hooks">Hooks</option><option value="Horizon City">Horizon City</option><option value="Horseshoe Bay">Horseshoe Bay</option><option value="Houston">Houston</option><option value="Howardwick">Howardwick</option><option value="Howe">Howe</option><option value="Hubbard">Hubbard</option><option value="Hudson">Hudson</option><option value="Hudson Oaks">Hudson Oaks</option><option value="Hughes Springs">Hughes Springs</option><option value="Humble">Humble</option><option value="Hunters Creek Village">Hunters Creek Village</option><option value="Huntington">Huntington</option><option value="Huntsville">Huntsville</option><option value="Hurst">Hurst</option><option value="Hutchins">Hutchins</option><option value="Hutto">Hutto</option><option value="Huxley">Huxley</option><option value="Idalou">Idalou</option><option value="Impact">Impact</option><option value="Indian Lake">Indian Lake</option><option value="Industry">Industry</option><option value="Ingleside">Ingleside</option><option value="Ingleside On The Bay">Ingleside On The Bay</option><option value="Ingram">Ingram</option><option value="Iola">Iola</option><option value="Iowa Colony">Iowa Colony</option><option value="Iowa Park">Iowa Park</option><option value="Iraan">Iraan</option><option value="Iredell">Iredell</option><option value="Irving">Irving</option><option value="Italy">Italy</option><option value="Itasca">Itasca</option><option value="Ivanhoe">Ivanhoe</option><option value="Jacinto City">Jacinto City</option><option value="Jacksboro">Jacksboro</option><option value="Jacksonville">Jacksonville</option><option value="Jamaica Beach">Jamaica Beach</option><option value="Jarrell">Jarrell</option><option value="Jasper">Jasper</option><option value="Jayton">Jayton</option><option value="Jefferson">Jefferson</option><option value="Jersey Village">Jersey Village</option><option value="Jewett">Jewett</option><option value="Joaquin">Joaquin</option><option value="Johnson City">Johnson City</option><option value="Jolly">Jolly</option><option value="Jones Creek">Jones Creek</option><option value="Jonestown">Jonestown</option><option value="Josephine">Josephine</option><option value="Joshua">Joshua</option><option value="Jourdanton">Jourdanton</option><option value="Junction">Junction</option><option value="Justin">Justin</option><option value="Karnes City">Karnes City</option><option value="Katy">Katy</option><option value="Kaufman">Kaufman</option><option value="Keene">Keene</option><option value="Keller">Keller</option><option value="Kemah">Kemah</option><option value="Kemp">Kemp</option><option value="Kempner">Kempner</option><option value="Kendleton">Kendleton</option><option value="Kenedy">Kenedy</option><option value="Kenefick">Kenefick</option><option value="Kennard">Kennard</option><option value="Kennedale">Kennedale</option><option value="Kerens">Kerens</option><option value="Kermit">Kermit</option><option value="Kerrville">Kerrville</option><option value="Kilgore">Kilgore</option><option value="Killeen">Killeen</option><option value="Kingsville">Kingsville</option><option value="Kirby">Kirby</option><option value="Kirbyville">Kirbyville</option><option value="Kirvin">Kirvin</option><option value="Knollwood">Knollwood</option><option value="Knox City">Knox City</option><option value="Kosse">Kosse</option><option value="Kountze">Kountze</option><option value="Kress">Kress</option><option value="Krugerville">Krugerville</option><option value="Krum">Krum</option><option value="Kurten">Kurten</option><option value="Kyle">Kyle</option><option value="La Feria">La Feria</option><option value="La Grange">La Grange</option><option value="La Grulla">La Grulla</option><option value="La Joya">La Joya</option><option value="La Marque">La Marque</option><option value="La Porte">La Porte</option><option value="La Vernia">La Vernia</option><option value="La Villa">La Villa</option><option value="La Ward">La Ward</option><option value="LaCoste">LaCoste</option><option value="Lacy-Lakeview">Lacy-Lakeview</option><option value="Ladonia">Ladonia</option><option value="Lago Vista">Lago Vista</option><option value="Laguna Vista">Laguna Vista</option><option value="Lake Bridgeport">Lake Bridgeport</option><option value="Lake City">Lake City</option><option value="Lake Dallas">Lake Dallas</option><option value="Lake Jackson">Lake Jackson</option><option value="Lake Tanglewood">Lake Tanglewood</option><option value="Lake Worth">Lake Worth</option><option value="Lakeport">Lakeport</option><option value="Lakeside (San Patricio)">Lakeside (San Patricio)</option><option value="Lakeside (Tarrant)">Lakeside (Tarrant)</option><option value="Lakeside City">Lakeside City</option><option value="Lakeview">Lakeview</option><option value="Lakeway">Lakeway</option><option value="Lakewood Village">Lakewood Village</option><option value="Lamesa">Lamesa</option><option value="Lampasas">Lampasas</option><option value="Lancaster">Lancaster</option><option value="Laredo">Laredo</option><option value="Latexo">Latexo</option><option value="Lavon">Lavon</option><option value="Lawn">Lawn</option><option value="League City">League City</option><option value="Leakey">Leakey</option><option value="Leander">Leander</option><option value="Leary">Leary</option><option value="Lefors">Lefors</option><option value="Leon Valley">Leon Valley</option><option value="Leona">Leona</option><option value="Leonard">Leonard</option><option value="Leroy">Leroy</option><option value="Levelland">Levelland</option><option value="Lewisville">Lewisville</option><option value="Lexington">Lexington</option><option value="Liberty">Liberty</option><option value="Liberty Hill">Liberty Hill</option><option value="Lincoln Park">Lincoln Park</option><option value="Lindale">Lindale</option><option value="Linden">Linden</option><option value="Lindsay">Lindsay</option><option value="Lipan">Lipan</option><option value="Little Elm">Little Elm</option><option value="Little River Academy">Little River Academy</option><option value="Littlefield">Littlefield</option><option value="Live Oak">Live Oak</option><option value="Liverpool">Liverpool</option><option value="Livingston">Livingston</option><option value="Llano">Llano</option><option value="Lockhart">Lockhart</option><option value="Lockney">Lockney</option><option value="Log Cabin">Log Cabin</option><option value="Lometa">Lometa</option><option value="Lone Oak">Lone Oak</option><option value="Lone Star">Lone Star</option><option value="Longview">Longview</option><option value="Loraine">Loraine</option><option value="Lorena">Lorena</option><option value="Lorenzo">Lorenzo</option><option value="Los Fresnos">Los Fresnos</option><option value="Los Indios">Los Indios</option><option value="Los Ybanez">Los Ybanez</option><option value="Lott">Lott</option><option value="Lovelady">Lovelady</option><option value="Lowry Crossing">Lowry Crossing</option><option value="Lubbock">Lubbock</option><option value="Lucas">Lucas</option><option value="Lueders">Lueders</option><option value="Lufkin">Lufkin</option><option value="Luling">Luling</option><option value="Lumberton">Lumberton</option><option value="Lyford">Lyford</option><option value="Lytle">Lytle</option><option value="Mabank">Mabank</option><option value="Madisonville">Madisonville</option><option value="Magnolia">Magnolia</option><option value="Malakoff">Malakoff</option><option value="Malone">Malone</option><option value="Manor">Manor</option><option value="Mansfield">Mansfield</option><option value="Manvel">Manvel</option><option value="Marble Falls">Marble Falls</option><option value="Marfa">Marfa</option><option value="Marietta">Marietta</option><option value="Marion">Marion</option><option value="Marlin">Marlin</option><option value="Marquez">Marquez</option><option value="Marshall">Marshall</option><option value="Mart">Mart</option><option value="Martindale">Martindale</option><option value="Mason">Mason</option><option value="Matador">Matador</option><option value="Mathis">Mathis</option><option value="Maud">Maud</option><option value="Maypearl">Maypearl</option><option value="McAllen">McAllen</option><option value="McCamey">McCamey</option><option value="McGregor">McGregor</option><option value="McKinney">McKinney</option><option value="McLean">McLean</option><option value="McLendon-Chisholm">McLendon-Chisholm</option><option value="Meadow">Meadow</option><option value="Meadowlakes">Meadowlakes</option><option value="Meadows Place">Meadows Place</option><option value="Megargel">Megargel</option><option value="Melissa">Melissa</option><option value="Melvin">Melvin</option><option value="Memphis">Memphis</option><option value="Menard">Menard</option><option value="Mercedes">Mercedes</option><option value="Meridian">Meridian</option><option value="Merkel">Merkel</option><option value="Mertens">Mertens</option><option value="Mertzon">Mertzon</option><option value="Mesquite">Mesquite</option><option value="Mexia">Mexia</option><option value="Miami">Miami</option><option value="Midland">Midland</option><option value="Midlothian">Midlothian</option><option value="Midway">Midway</option><option value="Milano">Milano</option><option value="Mildred">Mildred</option><option value="Miles">Miles</option><option value="Milford">Milford</option><option value="Miller's Cove">Miller's Cove</option><option value="Millsap">Millsap</option><option value="Mineola">Mineola</option><option value="Mineral Wells">Mineral Wells</option><option value="Mingus">Mingus</option><option value="Mission">Mission</option><option value="Missouri City">Missouri City</option><option value="Mobeetie">Mobeetie</option><option value="Mobile City">Mobile City</option><option value="Monahans">Monahans</option><option value="Mont Belvieu">Mont Belvieu</option><option value="Montgomery">Montgomery</option><option value="Moody">Moody</option><option value="Moore Station">Moore Station</option><option value="Moran">Moran</option><option value="Morgan">Morgan</option><option value="Morgan's Point">Morgan's Point</option><option value="Morgan's Point Resort">Morgan's Point Resort</option><option value="Morton">Morton</option><option value="Moulton">Moulton</option><option value="Mount Calm">Mount Calm</option><option value="Mount Enterprise">Mount Enterprise</option><option value="Mount Pleasant">Mount Pleasant</option><option value="Mount Vernon">Mount Vernon</option><option value="Mountain City">Mountain City</option><option value="Muenster">Muenster</option><option value="Muleshoe">Muleshoe</option><option value="Mullin">Mullin</option><option value="Munday">Munday</option><option value="Murchison">Murchison</option><option value="Murphy">Murphy</option><option value="Mustang">Mustang</option><option value="Mustang Ridge">Mustang Ridge</option><option value="Nacogdoches">Nacogdoches</option><option value="Naples">Naples</option><option value="Nash">Nash</option><option value="Nassau Bay">Nassau Bay</option><option value="Natalia">Natalia</option><option value="Navarro">Navarro</option><option value="Navasota">Navasota</option><option value="Nazareth">Nazareth</option><option value="Nederland">Nederland</option><option value="Needville">Needville</option><option value="Nesbitt">Nesbitt</option><option value="Nevada">Nevada</option><option value="New Berlin">New Berlin</option><option value="New Boston">New Boston</option><option value="New Braunfels">New Braunfels</option><option value="New Chapel Hill">New Chapel Hill</option><option value="New Deal">New Deal</option><option value="New Fairview">New Fairview</option><option value="New Home">New Home</option><option value="New Hope">New Hope</option><option value="New London">New London</option><option value="New Summerfield">New Summerfield</option><option value="New Waverly">New Waverly</option><option value="Newark">Newark</option><option value="Newcastle">Newcastle</option><option value="Newton">Newton</option><option value="Neylandville">Neylandville</option><option value="Niederwald">Niederwald</option><option value="Nixon">Nixon</option><option value="Nocona">Nocona</option><option value="Nolanville">Nolanville</option><option value="Nome">Nome</option><option value="Noonday">Noonday</option><option value="Nordheim">Nordheim</option><option value="Normangee">Normangee</option><option value="North Cleveland">North Cleveland</option><option value="North Richland Hills">North Richland Hills</option><option value="Northlake">Northlake</option><option value="Novice">Novice</option><option value="Oak Grove">Oak Grove</option><option value="Oak Leaf">Oak Leaf</option><option value="Oak Point">Oak Point</option><option value="Oak Ridge (Cooke)">Oak Ridge (Cooke)</option><option value="Oak Ridge (Kaufman)">Oak Ridge (Kaufman)</option><option value="Oak Ridge North">Oak Ridge North</option><option value="Oak Valley">Oak Valley</option><option value="Oakwood">Oakwood</option><option value="O'Brien">O'Brien</option><option value="Odem">Odem</option><option value="Odessa">Odessa</option><option value="O'Donnell">O'Donnell</option><option value="Oglesby">Oglesby</option><option value="Old River-Winfree">Old River-Winfree</option><option value="Olmos Park">Olmos Park</option><option value="Olney">Olney</option><option value="Olton">Olton</option><option value="Omaha">Omaha</option><option value="Onalaska">Onalaska</option><option value="Opdyke West">Opdyke West</option><option value="Orange">Orange</option><option value="Orange Grove">Orange Grove</option><option value="Orchard">Orchard</option><option value="Ore City">Ore City</option><option value="Overton">Overton</option><option value="Ovilla">Ovilla</option><option value="Oyster Creek">Oyster Creek</option><option value="Paducah">Paducah</option><option value="Paint Rock">Paint Rock</option><option value="Palacios">Palacios</option><option value="Palestine">Palestine</option><option value="Palisades">Palisades</option><option value="Palm Valley">Palm Valley</option><option value="Palmer">Palmer</option><option value="Palmhurst">Palmhurst</option><option value="Palmview">Palmview</option><option value="Pampa">Pampa</option><option value="Panhandle">Panhandle</option><option value="Panorama Village">Panorama Village</option><option value="Pantego">Pantego</option><option value="Paradise">Paradise</option><option value="Paris">Paris</option><option value="Parker">Parker</option><option value="Pasadena">Pasadena</option><option value="Pattison">Pattison</option><option value="Patton Village">Patton Village</option><option value="Payne Springs">Payne Springs</option><option value="Pearland">Pearland</option><option value="Pearsall">Pearsall</option><option value="Pecan Gap">Pecan Gap</option><option value="Pecan Hill">Pecan Hill</option><option value="Pecos">Pecos</option><option value="Pelican Bay">Pelican Bay</option><option value="Penelope">Penelope</option><option value="Penitas">Penitas</option><option value="Perryton">Perryton</option><option value="Petersburg">Petersburg</option><option value="Petrolia">Petrolia</option><option value="Petronila">Petronila</option><option value="Pflugerville">Pflugerville</option><option value="Pharr">Pharr</option><option value="Pilot Point">Pilot Point</option><option value="Pine Forest">Pine Forest</option><option value="Pine Island">Pine Island</option><option value="Pinehurst">Pinehurst</option><option value="Pineland">Pineland</option><option value="Piney Point Village">Piney Point Village</option><option value="Pittsburg">Pittsburg</option><option value="Plains">Plains</option><option value="Plainview">Plainview</option><option value="Plano">Plano</option><option value="Pleak">Pleak</option><option value="Pleasant Valley">Pleasant Valley</option><option value="Pleasanton">Pleasanton</option><option value="Plum Grove">Plum Grove</option><option value="Point">Point</option><option value="Point Blank">Point Blank</option><option value="Point Comfort">Point Comfort</option><option value="Point Venture">Point Venture</option><option value="Ponder">Ponder</option><option value="Port Aransas">Port Aransas</option><option value="Port Arthur">Port Arthur</option><option value="Port Isabel">Port Isabel</option><option value="Port Lavaca">Port Lavaca</option><option value="Port Neches">Port Neches</option><option value="Portland">Portland</option><option value="Post">Post</option><option value="Post Oak Bend">Post Oak Bend</option><option value="Poteet">Poteet</option><option value="Poth">Poth</option><option value="Pottsboro">Pottsboro</option><option value="Powell">Powell</option><option value="Poynor">Poynor</option><option value="Prairie View">Prairie View</option><option value="Premont">Premont</option><option value="Presidio">Presidio</option><option value="Primera">Primera</option><option value="Princeton">Princeton</option><option value="Progreso">Progreso</option><option value="Progreso Lakes">Progreso Lakes</option><option value="Prosper">Prosper</option><option value="Providence Village">Providence Village</option><option value="Putnam">Putnam</option><option value="Pyote">Pyote</option><option value="Quanah">Quanah</option><option value="Queen City">Queen City</option><option value="Quinlan">Quinlan</option><option value="Quintana">Quintana</option><option value="Quitaque">Quitaque</option><option value="Quitman">Quitman</option><option value="Ralls">Ralls</option><option value="Rancho Viejo">Rancho Viejo</option><option value="Ranger">Ranger</option><option value="Rangerville">Rangerville</option><option value="Rankin">Rankin</option><option value="Ransom Canyon">Ransom Canyon</option><option value="Ravenna">Ravenna</option><option value="Raymondville">Raymondville</option><option value="Red Lick">Red Lick</option><option value="Red Oak">Red Oak</option><option value="Redwater">Redwater</option><option value="Refugio">Refugio</option><option value="Reklaw">Reklaw</option><option value="Reno (Lamar)">Reno (Lamar)</option><option value="Reno (Parker)">Reno (Parker)</option><option value="Retreat">Retreat</option><option value="Rhome">Rhome</option><option value="Rice">Rice</option><option value="Richardson">Richardson</option><option value="Richland">Richland</option><option value="Richland Hills">Richland Hills</option><option value="Richland Springs">Richland Springs</option><option value="Richmond">Richmond</option><option value="Richwood">Richwood</option><option value="Riesel">Riesel</option><option value="Rio Bravo">Rio Bravo</option><option value="Rio Grande City">Rio Grande City</option><option value="Rio Hondo">Rio Hondo</option><option value="Rio Vista">Rio Vista</option><option value="Rising Star">Rising Star</option><option value="River Oaks">River Oaks</option><option value="Riverside">Riverside</option><option value="Roanoke">Roanoke</option><option value="Roaring Springs">Roaring Springs</option><option value="Robert Lee">Robert Lee</option><option value="Robinson">Robinson</option><option value="Robstown">Robstown</option><option value="Roby">Roby</option><option value="Rochester">Rochester</option><option value="Rockdale">Rockdale</option><option value="Rockport">Rockport</option><option value="Rocksprings">Rocksprings</option><option value="Rockwall">Rockwall</option><option value="Rocky Mound">Rocky Mound</option><option value="Rogers">Rogers</option><option value="Rollingwood">Rollingwood</option><option value="Roma">Roma</option><option value="Roman Forest">Roman Forest</option><option value="Ropesville">Ropesville</option><option value="Roscoe">Roscoe</option><option value="Rose City">Rose City</option><option value="Rose Hill Acres">Rose Hill Acres</option><option value="Rosebud">Rosebud</option><option value="Rosenberg">Rosenberg</option><option value="Ross">Ross</option><option value="Rosser">Rosser</option><option value="Rotan">Rotan</option><option value="Round Mountain">Round Mountain</option><option value="Round Rock">Round Rock</option><option value="Round Top">Round Top</option><option value="Rowlett">Rowlett</option><option value="Roxton">Roxton</option><option value="Royse City">Royse City</option><option value="Rule">Rule</option><option value="Runaway Bay">Runaway Bay</option><option value="Runge">Runge</option><option value="Rusk">Rusk</option><option value="Sabinal">Sabinal</option><option value="Sachse">Sachse</option><option value="Sadler">Sadler</option><option value="Saginaw">Saginaw</option><option value="Saint Hedwig">Saint Hedwig</option><option value="Saint Jo">Saint Jo</option><option value="Saint Paul">Saint Paul</option><option value="Salado">Salado</option><option value="San Angelo">San Angelo</option><option value="San Antonio">San Antonio</option><option value="San Augustine">San Augustine</option><option value="San Benito">San Benito</option><option value="San Diego">San Diego</option><option value="San Felipe">San Felipe</option><option value="San Juan">San Juan</option><option value="San Leanna">San Leanna</option><option value="San Marcos">San Marcos</option><option value="San Patricio">San Patricio</option><option value="San Perlita">San Perlita</option><option value="San Saba">San Saba</option><option value="Sanctuary">Sanctuary</option><option value="Sandy Point">Sandy Point</option><option value="Sanford">Sanford</option><option value="Sanger">Sanger</option><option value="Sansom Park">Sansom Park</option><option value="Santa Anna">Santa Anna</option><option value="Santa Clara">Santa Clara</option><option value="Santa Fe">Santa Fe</option><option value="Santa Rosa">Santa Rosa</option><option value="Savoy">Savoy</option><option value="Schertz">Schertz</option><option value="Schulenburg">Schulenburg</option><option value="Scotland">Scotland</option><option value="Scottsville">Scottsville</option><option value="Scurry">Scurry</option><option value="Seabrook">Seabrook</option><option value="Seadrift">Seadrift</option><option value="Seagoville">Seagoville</option><option value="Seagraves">Seagraves</option><option value="Sealy">Sealy</option><option value="Seguin">Seguin</option><option value="Selma">Selma</option><option value="Seminole">Seminole</option><option value="Seven Oaks">Seven Oaks</option><option value="Seven Points">Seven Points</option><option value="Seymour">Seymour</option><option value="Shady Shores">Shady Shores</option><option value="Shallowater">Shallowater</option><option value="Shamrock">Shamrock</option><option value="Shavano Park">Shavano Park</option><option value="Shenandoah">Shenandoah</option><option value="Shepherd">Shepherd</option><option value="Sherman">Sherman</option><option value="Shiner">Shiner</option><option value="Shoreacres">Shoreacres</option><option value="Silsbee">Silsbee</option><option value="Silverton">Silverton</option><option value="Simonton">Simonton</option><option value="Sinton">Sinton</option><option value="Skellytown">Skellytown</option><option value="Slaton">Slaton</option><option value="Smiley">Smiley</option><option value="Smithville">Smithville</option><option value="Smyer">Smyer</option><option value="Snook">Snook</option><option value="Snyder">Snyder</option><option value="Socorro">Socorro</option><option value="Somerset">Somerset</option><option value="Somerville">Somerville</option><option value="Sonora">Sonora</option><option value="Sour Lake">Sour Lake</option><option value="South Houston">South Houston</option><option value="South Mountain">South Mountain</option><option value="South Padre Island">South Padre Island</option><option value="Southlake">Southlake</option><option value="Southmayd">Southmayd</option><option value="Southside Place">Southside Place</option><option value="Spearman">Spearman</option><option value="Splendora">Splendora</option><option value="Spofford">Spofford</option><option value="Spring Valley">Spring Valley</option><option value="Springlake">Springlake</option><option value="Springtown">Springtown</option><option value="Spur">Spur</option><option value="Stafford">Stafford</option><option value="Stagecoach">Stagecoach</option><option value="Stamford">Stamford</option><option value="Stanton">Stanton</option><option value="Staples">Staples</option><option value="Star Harbor">Star Harbor</option><option value="Stephenville">Stephenville</option><option value="Sterling City">Sterling City</option><option value="Stinnett">Stinnett</option><option value="Stockdale">Stockdale</option><option value="Stratford">Stratford</option><option value="Strawn">Strawn</option><option value="Streetman">Streetman</option><option value="Sudan">Sudan</option><option value="Sugar Land">Sugar Land</option><option value="Sullivan City">Sullivan City</option><option value="Sulphur Springs">Sulphur Springs</option><option value="Sun Valley">Sun Valley</option><option value="Sundown">Sundown</option><option value="Sunnyvale">Sunnyvale</option><option value="Sunray">Sunray</option><option value="Sunrise Beach Village">Sunrise Beach Village</option><option value="Sunset Valley">Sunset Valley</option><option value="Surfside Beach">Surfside Beach</option><option value="Sweeny">Sweeny</option><option value="Sweetwater">Sweetwater</option><option value="Taft">Taft</option><option value="Tahoka">Tahoka</option><option value="Talco">Talco</option><option value="Talty">Talty</option><option value="Tatum">Tatum</option><option value="Taylor">Taylor</option><option value="Taylor Lake Village">Taylor Lake Village</option><option value="Taylor Landing">Taylor Landing</option><option value="Teague">Teague</option><option value="Tehuacana">Tehuacana</option><option value="Temple">Temple</option><option value="Tenaha">Tenaha</option><option value="Terrell">Terrell</option><option value="Terrell Hills">Terrell Hills</option><option value="Texarkana">Texarkana</option><option value="Texas City">Texas City</option><option value="Texhoma">Texhoma</option><option value="Texline">Texline</option><option value="The Colony">The Colony</option><option value="Thompsons">Thompsons</option><option value="Thorndale">Thorndale</option><option value="Thornton">Thornton</option><option value="Thorntonville">Thorntonville</option><option value="Thrall">Thrall</option><option value="Three Rivers">Three Rivers</option><option value="Throckmorton">Throckmorton</option><option value="Tiki Island">Tiki Island</option><option value="Timbercreek Canyon">Timbercreek Canyon</option><option value="Timpson">Timpson</option><option value="Tioga">Tioga</option><option value="Tira">Tira</option><option value="Toco">Toco</option><option value="Todd Mission">Todd Mission</option><option value="Tolar">Tolar</option><option value="Tom Bean">Tom Bean</option><option value="Tomball">Tomball</option><option value="Tool">Tool</option><option value="Toyah">Toyah</option><option value="Trent">Trent</option><option value="Trenton">Trenton</option><option value="Trinidad">Trinidad</option><option value="Trinity">Trinity</option><option value="Trophy Club">Trophy Club</option><option value="Troup">Troup</option><option value="Troy">Troy</option><option value="Tulia">Tulia</option><option value="Turkey">Turkey</option><option value="Tuscola">Tuscola</option><option value="Tye">Tye</option><option value="Tyler">Tyler</option><option value="Uhland">Uhland</option><option value="Uncertain">Uncertain</option><option value="Union Grove">Union Grove</option><option value="Union Valley">Union Valley</option><option value="Universal City">Universal City</option><option value="University Park">University Park</option><option value="Uvalde">Uvalde</option><option value="Valentine">Valentine</option><option value="Valley Mills">Valley Mills</option><option value="Valley View">Valley View</option><option value="Van">Van</option><option value="Van Alstyne">Van Alstyne</option><option value="Van Horn">Van Horn</option><option value="Vega">Vega</option><option value="Venus">Venus</option><option value="Vernon">Vernon</option><option value="Victoria">Victoria</option><option value="Vidor">Vidor</option><option value="Village of The Hills">Village of The Hills</option><option value="Villiage of Volente">Villiage of Volente</option><option value="Vinton">Vinton</option><option value="Von Ormy">Von Ormy</option><option value="Waco">Waco</option><option value="Waelder">Waelder</option><option value="Wake Village">Wake Village</option><option value="Waller">Waller</option><option value="Wallis">Wallis</option><option value="Walnut Springs">Walnut Springs</option><option value="Warren City">Warren City</option><option value="Waskom">Waskom</option><option value="Watauga">Watauga</option><option value="Waxahachie">Waxahachie</option><option value="Weatherford">Weatherford</option><option value="Webberville">Webberville</option><option value="Webster">Webster</option><option value="Weimar">Weimar</option><option value="Weinert">Weinert</option><option value="Weir">Weir</option><option value="Wellington">Wellington</option><option value="Wellman">Wellman</option><option value="Wells">Wells</option><option value="Weslaco">Weslaco</option><option value="West">West</option><option value="West Columbia">West Columbia</option><option value="West Lake Hills">West Lake Hills</option><option value="West Orange">West Orange</option><option value="West Tawakoni">West Tawakoni</option><option value="West University Place">West University Place</option><option value="Westbrook">Westbrook</option><option value="Westlake">Westlake</option><option value="Weston">Weston</option><option value="Weston Lakes">Weston Lakes</option><option value="Westover Hills">Westover Hills</option><option value="Westworth Village">Westworth Village</option><option value="Wharton">Wharton</option><option value="Wheeler">Wheeler</option><option value="White Deer">White Deer</option><option value="White Oak">White Oak</option><option value="White Settlement">White Settlement</option><option value="Whiteface">Whiteface</option><option value="Whitehouse">Whitehouse</option><option value="Whitesboro">Whitesboro</option><option value="Whitewright">Whitewright</option><option value="Whitney">Whitney</option><option value="Wichita Falls">Wichita Falls</option><option value="Wickett">Wickett</option><option value="Willis">Willis</option><option value="Willow Park">Willow Park</option><option value="Wills Point">Wills Point</option><option value="Wilmer">Wilmer</option><option value="Wilson">Wilson</option><option value="Wimberley">Wimberley</option><option value="Windcrest">Windcrest</option><option value="Windom">Windom</option><option value="Windthorst">Windthorst</option><option value="Winfield">Winfield</option><option value="Wink">Wink</option><option value="Winnsboro">Winnsboro</option><option value="Winona">Winona</option><option value="Winters">Winters</option><option value="Wixon Valley">Wixon Valley</option><option value="Wolfe City">Wolfe City</option><option value="Wolfforth">Wolfforth</option><option value="Woodbranch Village">Woodbranch Village</option><option value="Woodcreek">Woodcreek</option><option value="Woodloch">Woodloch</option><option value="Woodsboro">Woodsboro</option><option value="Woodson">Woodson</option><option value="Woodville">Woodville</option><option value="Woodway">Woodway</option><option value="Wortham">Wortham</option><option value="Wylie">Wylie</option><option value="Yantis">Yantis</option><option value="Yoakum">Yoakum</option><option value="Yorktown">Yorktown</option><option value="Zavalla">Zavalla</option></select><br /><div id="otherValueDiv" class="form-group form-inline" style="display:none"><br /><label class="editOption control-label" for="otherValue">Please Write in State Park, Agency, Etc: </label><space /><br /><input type="text" name="otherValue" id="otherValue" style="form-control input-sm" /></div><div class="form-group form-inline" style="display:none"><textarea id="cityTmp" name="cityTmp" /><br /><textarea id="city2" name="city2"></textarea><br /><!--<textarea id="city3" name="city3"></textarea>--></div></div><div class="form-group required form-inline"><label class="control-label" for="dsoYesNo">DSO:</label>
        Yes 
                     
                     
                     
                     <input id="dsoYesNo1" type="radio" style="form-control input-sm" name="dsoYesNo" value="Yes" onclick="hideDSOdrop();alphabetizeDSOdrop();deselectTheDSO2Value()" /><!--";filterSelectList()"might need to move this (alphabetizeDSOdrop) somewhere else tried onclick on dropdown, added another Please Select-->
        No (Clears Pick DSO, need this not to do that)
                     
                     
                     
                     <input id="dsoYesNo2" type="radio" style="form-control input-sm" name="dsoYesNo" value="No" onclick="CreateOrphanLink();hideDSOdrop()" /></div><div style="display:nonea" id="dsoDropdown" class="form-group form-inline"><label class="control-label" name="pickDSO" for="pickDSO">Pick DSO:</label><space /><!--expression that if a check box on dso is checked, dont show here. When DSO choosen here, check a  box on that DSO. Epression here Would weed out yeses and cause them not to display. Neeed to make this list only show DSOs for County in above selected --><!--<span id="fk" onchange="touchTheDSOisSelectedTextBox()">--><span id="fk" name="fk" onchange="touchTheDSOisSelectedTextBox()"><foreignkey table="Core" type="select"><!--<if test="@countyCopyDSO = @county">--><!--<if test="@DSOisSelected = '' ">--><eocfield type="fk" table="Core" name="countyCopyDSO" /> / 
                        <dataid /> / <eocfield type="fk" table="Core" name="county" /> / <eocfield type="fk" table="Core" name="city" /> / <eocfield type="fk" table="Core" name="otherValue" /> / <eocfield type="fk" table="Core" name="DSOisSelected" /> / <externalexpression name="totalcountDSO" table="Core">sum(case when dsoSelected!='' then 1 else 0 end)</externalexpression> / <dataid table="Supplemental" /> / <relatedexpression name="dsoSelectedTestExp" table="Supplemental">case when dsoYesNo='Yes' then 1 else 0 end</relatedexpression><!--COUNTS - take out if needed, from here<externalexpression name="extExpr" table="Core">count(*)</externalexpression> this externalexpression here needs to be below outside of the foreignkey or it will not work / <externalexpression name="totalcountDSO" table="Core">sum(case when dsoSelected!='' then 1 else 0 end)</externalexpression>COUNTS - take out if needed, to here--><!--</if>--><!--</if>--></foreignkey><!--<eocfield type="fk" table="Core" name="dsoSelected"/> must be in foreign keys to work with if statement--></span><space /><button id="disableDrop" name="disableDrop">DIS</button><space /><button id="ableDrop" name="ableDrop">ABLE</button><br /><br />

                     DSO<space /><input type="text" table="Core" name="DSOisSelected" id="DSOisSelected" value="" /><br />
                     DSO2<space /><input type="text" name="DSOisSelected2" id="DSOisSelected2" value="" /><span id="copyForeignKeyValues"><div style="display:nonea"><textarea name="copyFK" id="copyFK" style="form-control input-sm" /></div></span><span id="copyForeignKeyValuesCounty"><div style="display:nonea"><textarea name="copyFKCounty" id="copyFKCounty" style="form-control input-sm" /></div></span></div><hr /><!--<if test="1=0">
                       <eocfield type="fk" table="Core" name="county"/>
                       <eocfield type="fk" table="Core" name="city"/>

                  </if> no dice--><!--///////////////////////////////////NEED/////////////////////////////////////--><div id="dsoIsPicked" name="dsoIsPicked" style="display:nonea"><eocrepeatallrecords><dataid table="Supplemental" /><label class="control-label" for="dsoYesNo">DSO Picked:</label><space />(this is the Bubble city and county until dso is chosen)<div id="linkToDSO" style="display:nonea"><viewlink name="Input (DO NOT ASSIGN)"><value-of select="@county" /> / <value-of select="@city" /></viewlink></div></eocrepeatallrecords><br /><button type="button" id="deselectDSOValue" name="deselectDSOValue">DESELECT DSO</button><br /><!--this externalexpression below needs to be here or the one in the foreignkey will not work--><div id="totalDSOsandLinkedDSOs" style="display:nonea">
                  Total DSOs: <externalexpression name="extExpr" table="Core">count(*)</externalexpression><br />
                  DSOs linked up already: <externalexpression name="totalcountDSO" table="Core">sum(case when DSOisSelected!='' then 1 else 0 end)</externalexpression></div><hr />
                  Bubbles <expression name="dsoSelectedTestExp" table="Supplemental">case when dsoYesNo='Yes' then 1 else 0 end</expression><!--<externalexpression name="totalcountDSOforBubble" table="Core">sum(case when dsoSelectedTest!='' then 1 else 0 end)</externalexpression>--></div><!--///////////////////////////////////NEED/////////////////////////////////////--><div style="display:nonea" id="dsoRecDate" class="form-group form-inline"><label class="control-label" for="impactedCountiesDSO">DSO Rec'd Date:</label><space /><br /><textarea name="impactedCountiesDSO" id="impactedCountiesDSO" placeholder="XX/XX/XXXX" style="form-control input-sm" /><br /></div><fieldset><h3><span class="label label-default">Disaster Declarations Dates</span></h3><div class="hide form-group form-inline"><label class="control-label" for="declarationIssued">Was a Local Disaster Declaration Issued?:</label>
                        Yes<input id="declarationIssued1" type="radio" style="form-control input-sm" name="declarationIssued" value="Yes" />
                        No<input id="declarationIssued2" type="radio" style="form-control input-sm" name="declarationIssued" value="No" /></div><div class="form-group form-inline"><label class="control-label" for="dateDecRec">Local Disaster Declared Issued Rec'd Date:</label><space /><br /><textarea name="dateDecRec" id="dateDecRec" placeholder="XX/XX/XXXX" style="form-control input-sm" onchange="localDec()" /><br /></div></fieldset><fieldset><!--<h3>
                     <span class="label label-default">State Disaster Declared</span>
                  </h3>--><div class="hide form-group form-inline"><label class="control-label" for="declarationIssuedState">Was a State Disaster Declaration Issued?:</label>
                     Yes<input id="declarationIssuedState1" type="radio" style="form-control input-sm" name="declarationIssuedState" value="Yes" />
                     No<input id="declarationIssuedState2" type="radio" style="form-control input-sm" name="declarationIssuedState" value="No" /></div><div class="form-group form-inline"><label class="control-label" for="dateDecRecState">State Disaster Declared Issued Rec'd Date:</label><space /><br /><textarea name="dateDecRecState" id="dateDecRecState" placeholder="XX/XX/XXXX" style="form-control input-sm" onchange="stateDec()" /><br /></div></fieldset><fieldset><!--<h3>
                     <span class="label label-default">Federal Disaster Declaration</span>
                  </h3>--><div class="hide form-group form-inline"><label class="control-label" for="declarationIssuedFederal">Was a Federal Disaster Declaration Issued?:</label>
                     Yes<input id="declarationIssuedFederal1" type="radio" style="form-control input-sm" name="declarationIssuedFederal" value="Yes" />
                     No<input id="declarationIssuedFederal2" type="radio" style="form-control input-sm" name="declarationIssuedFederal" value="No" /></div><div class="form-group form-inline"><label class="control-label" for="dateDecRecFederal">Federal Disaster Declared Issued Rec'd Date:</label><space /><br /><textarea name="dateDecRecFederal" id="dateDecRecFederal" placeholder="XX/XX/XXXX" style="form-control input-sm" onchange="federalDec()" /><br /></div></fieldset><!--hidden--><div class="form-group form-inline hide"><label class="control-label" for="countyLetter">Letter to the Gov:</label><space />
        Yes 
                     
                     
                     
                     <input type="radio" name="countyLetter" style="form-control input-sm" value="Yes" /> No 
                     
                     
                     
                     <input type="radio" style="form-control input-sm" name="countyLetter" value="No" /><br /></div><h3><span class="label label-default">Other</span></h3><div class="form-group form-inline"><label class="control-label" for="ack1">Acknowledge Letter Sent 1 Date:</label><space /><br /><textarea name="ack1" id="ack1" placeholder="XX/XX/XXXX" style="form-control input-sm" /><br /></div><div class="form-group form-inline hide"><label class="control-label" for="assistanceRequested">Assistance Req'd on DSO or Letter to Governor Date:</label><space /><br /><textarea name="assistanceRequested" id="assistanceRequested" placeholder="XX/XX/XXXX" style="form-control input-sm" /><br /></div><div class="form-group form-inline"><label class="control-label" for="assistanceRequestedDate">Assistance Req'd Date:</label><space /><br /><textarea name="assistanceRequestedDate" id="assistanceRequestedDate" placeholder="XX/XX/XXXX" style="form-control input-sm" /><br /></div><div class="form-group form-inline"><label class="control-label" for="ack2">Acknowledge Letter Sent 2 Date:</label><space /><br /><textarea name="ack2" id="ack2" placeholder="XX/XX/XXXX" style="form-control input-sm" /><br /></div><h3><span class="label label-default">PDA Initial Contact</span></h3><div class="form-group form-inline"><label class="control-label" for="iaInitialContactDate">PDA Initial Contact Date:</label><space /><br /><textarea name="iaInitialContactDate" id="iaInitialContactDate" placeholder="XX/XX/XXXX Not in Recovery Sum Display" style="form-control input-sm" /><br /></div><!--<div class="form-group form-inline">
                     <label class="control-label" for="iaPdaRequested">Date PDA Requested:</label>
                     <space/>
                     <textarea name="iaPdaRequested" id="iaPdaRequested" placeholder="XX/XX/XXXX" style="form-control input-sm"/>
                  </div>--><fieldset><h3><span class="label label-default">IA FEMA Vetting</span></h3><div class="form-group form-inline"><label class="control-label" for="iaPDAScheduled">IA PDA Scheduled Date:</label><space /><br /><textarea name="iaPDAScheduled" id="iaPDAScheduled" placeholder="XX/XX/XXXX" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="iaPDAComplete">IA PDA Complete Date:</label><space /><br /><textarea name="iaPDAComplete" id="iaPDAComplete" placeholder="XX/XX/XXXX" style="form-control input-sm" onchange="checkFemaBoxV1OnDateEntry()" /><br /></div><div class="form-group form-inline"><label class="control-label" for="femaCheckboxV1">Housing PDAs have been completed and numbers have been vetted between IA and FEMA:</label><space /><input name="femaCheckboxV1" id="femaCheckboxV1" type="checkbox" value="Yes" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="IAComments">IA Commments:</label><space /><br /><textarea name="IAComments" id="IAComments" style="form-control input-sm" /><br /></div></fieldset><!--<div class="form-group form-inline">
                     <label class="control-label" for="paPdaRequested">Date PA PDA Requested:</label>
                     <space/>
                     <textarea name="paPdaRequested" id="paPdaRequested" placeholder="XX/XX/XXXX" style="form-control input-sm"/>
                  </div>--><fieldset><h3><span class="label label-default">PA FEMA Vetting</span></h3><div class="form-group form-inline"><label class="control-label" for="paPDAScheduled">PA PDA Scheduled Date:</label><space /><br /><textarea name="paPDAScheduled" id="paPDAScheduled" placeholder="XX/XX/XXXX" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="paPDAComplete">PA PDA Complete Date:</label><space /><br /><textarea name="paPDAComplete" id="paPDAComplete" placeholder="XX/XX/XXXX" style="form-control input-sm" onchange="checkFemaBoxV2OnDateEntry()" /><br /></div></fieldset><div class="form-group form-inline"><label class="control-label" for="femaCheckboxV2">Infrastructure PDAs have been completed and numbers have been vetted between PA and FEMA:</label><space /><input name="femaCheckboxV2" id="femaCheckboxV2" type="checkbox" value="Yes" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="PAComments">PA Commments:</label><space /><br /><textarea name="PAComments" id="PAComments" style="form-control input-sm" /><br /></div></fieldset><fieldset><h3><span class="label label-default">Attachments</span></h3><div class="form-group form-inline"><label class="control-label" for="decAttachment">Dec Attachment:</label><input type="file" name="decAttachment" size="40" /></div><div class="form-group form-inline"><label class="control-label" for="letterAttachment">Letter Attachment:</label><input type="file" name="letterAttachment" id="letterAttachment" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="otherAttachment">Other Attachment:</label><input type="file" name="otherAttachment" id="otherAttachment" style="form-control input-sm" /><br /></div></fieldset><fieldset><h3><span class="label label-default">Hide</span></h3><div class="form-group form-inline"><label class="control-label" for="hide">Hide:</label><space /><input name="hide" id="hide" type="checkbox" value="Yes" style="form-control input-sm" /></div><div /><input type="text" id="dateTimeUpdate" name="dateTimeUpdate" style="display:none" /><br /></fieldset><div id="buttons"><savebutton id="saveBtn" class="hide" /><button id="saveBtn2" type="button" class="btn btn-info" onclick="copyFKValues()">Save</button><space /><cancelbutton class="btn btn-danger" /><space /><pdflink type="button" class="btn btn-warning">PDF</pdflink></div><div style="display:none" id="incidentNameContainer"><savebutton view="Bubble Auto Redirect Input" /><incidentname /></div><space /><div style="display:none"><!--I hid this, it was showing since 11-22 webeoc problems--><dataimport /></div></div><span class="hideForFF" style="display:nonea;" width="900px"><textarea name="currentChangeLog" id="currentChangeLog" /><embedview id="historyEmbedView" view="Bubble Audit Input (DO NOT ASSIGN)" name="historyEmbedView" /></span><span style="display:width:900px;height:400px"><embedview id="selectedWordView" view="Bubble Input 2 (DO NOT ASSIGN)" name="selectedWordView" /></span></form></div></body><script type="text/javascript" /></html></view><view tablename="DSO Audit" name="DSO Audit Input (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="13622263-db70-482e-bf69-2ca33b427afc" assignable="1"><html><head><script type="text/javascript">
     
  function start(){
    console.log('DSO Audit Input Starts');
    window.parent.auditInProgress; 
if( window.parent.auditInProgress==true){
window.parent.window.parent.document.getElementsByName('cmdSave')[0].click();
console.log('DSO Audit Input cmdSave Clicks');
}
  }
    
    
  function injectHistory(key,user,date,log){
       if(log!=''){
             window.parent.auditInProgress = true;
document.getElementById('fk').getElementsByTagName('input')[0].value=key;
  document.getElementsByName('auditUser')[0].value=user;
    document.getElementsByName('dateTime')[0].value=date; 
     document.getElementsByName('audit')[0].value=log;
     
     document.getElementsByName('cmdSave')[0].click();
     console.log('DSO Audit Input injectHistory');

  }
  }
    window.onload = start;
  
  </script><style type="text/css">
  html, body, form, a, abbr, acronym, address, blockquote, caption, div, dd, dl, dt, fieldset, h1, h2, h3, h4, h5, h6, img, label, legend, li, ol, p, pre, span, table, tbody, td, tfoot, th, thead, tr, ul{border:0;margin:0;padding:0;}
  body{background-color:#d1d2d4;color:#000;margin:1.0em;font:normal 0.9em arial;}
  div.container{border:solid 1px;border-color:#0069aa;}
  div.content{margin:1em;}
  table.input{border-collapse:collapse;width:100%;empty-cells:show;}
  table.input td, table.input th{padding:0.1em 0.3em 0.1em 0.3em;}
  table.input th{text-align:right;}
  h1.heading{font-weight:normal;font-size:1.75em;padding:0.1em 0.5em 0.1em 0.5em;margin:0;border:solid 1px;color:#fff;
  background: #0069aa url(../images/gradient_35.png) repeat-x scroll left top;
  ;border-bottom-color:#606265;border-left-color:#009EFF;border-right-color:#606265;border-top-color:#009EFF;}
  .buttons{text-align:left;margin:1.0em;}
  .buttons button, .buttons input[type=submit], .buttons input[type=button], .buttons input[type=reset]{margin:0 0.2em 0 0.2em;}
</style></head><body><div class="container agencytemplate_boardbackground"><form><div class="content"><table class="input agencytemplate_tableentry"><tbody><tr><td align="right" width="25%" selected="false">FK</td>
	
"
      <td selected="true" rowSpan="1"><span id="fk">FK:<foreignkey table="Core" type="text"></foreignkey></span></td></tr><tr><td align="right" width="25%" selected="false" rowSpan="1">User</td><td selected="false" rowSpan="1"><input type="text" name="auditUser" size="40" value="" required="false" recipient="false" subject="false" message="false" receiver="false" notification="false" mobilerecipient="false" mobilemessage="false" /></td></tr><tr><td align="right" width="25%" selected="false" rowSpan="1">Date Time</td><td selected="false" rowSpan="1"><input type="text" name="dateTime" size="40" value="" required="false" recipient="false" subject="false" message="false" receiver="false" notification="false" mobilerecipient="false" mobilemessage="false" /></td></tr><tr><td align="right" width="25%" selected="false" rowSpan="1">Audit</td><td selected="false" rowSpan="1"><textarea name="audit" rows="4" cols="40" required="false" recipient="false" subject="false" message="false" receiver="false" notification="false" mobilerecipient="false" mobilemessage="false" /></td></tr></tbody></table></div></form></div></body></html></view><view tablename="DSO Audit" name="Bubble Audit Input (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="7980608d-0da7-4c0a-ae81-10acc7b613e9" assignable="1"><html version="6" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><head /><body><script type="text/javascript">
//startOf: injectHistory function
function injectHistory(dataid,dateTime,user,msg) {
  
  console.log("function inject history(,"+dataid+","+dateTime+","+user+","+msg);
 
  if(msg!='') {
    document.getElementById('fk').getElementsByTagName('input')[0].value=dataid;
    document.getElementsByName('saveDateTime')[0].value=dateTime;
    document.getElementsByName('currentUser')[0].value=user;
    document.getElementsByName('msg')[0].value=msg;
    document.getElementsByName('cmdSave')[0].click();
    //alert("msg created");
  } else {
    window.parent.window.parent.someSaveBttn();
    //alert("ELSE NO msg");
 
  }
}
//startOf: run function this looks at status and if 0 it changes the status to 1 and starts autoRun()
var run=function() {
  
  if(window.parent.window.parent.scribe.status===0) {//alert('Embeded run1');
    window.parent.window.parent.scribe.status=1;
    window.parent.window.parent.scribe.autoRun();
    //alert("autoRun started");
  } else if(window.parent.window.parent.scribe.status===1) {
    //alert('embeded run2');
    window.parent.window.parent.someSaveBttn();
    //alert("This code needs to run for intial history on Bubble Audit Input");
  }
};
var tryAndRetry;
function start(){
//alert('embeded start');
    tryAndRetry = setInterval(function(){
        console.log('*Embeded loop has started');
      if(window.parent.window.parent.scribe){
        clearInterval(tryAndRetry);run();};},500);
    //alert("start runs BAI");
}
window.onload=start;
</script><form><div width="1" height="1"><span id="fk">
    FK History:
            <foreignkey table="Supplemental" type="text" /></span><br />
  Date/Time: 
         <input type="text" name="saveDateTime" /><br />
  User: 
         <input type="text" name="currentUser" /><br />
  Message: 
         <textarea name="msg" /></div></form></body></html></view><view tablename="Core" name="DSO OPS Options Input" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="e7a1e7e7-d393-499b-8446-bcfa188dd463" assignable="0"><html version="6" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><head><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link href="suit/5.3.2/css/boards.css" rel="stylesheet" media="screen" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/jquery.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.js" /><style type="text/css">
.hide{display:none;}
.form-controlLG{width:100px;}
.saveButtons{
   height: 35px;
}
    </style><script type="text/javascript">
   function start(){
      document.getElementById('editKey').value = document.getElementById('dataidSpan2').getElementsByTagName('u')[0].innerHTML;
}
   
      window.onload = start;
   </script></head><body><div class="container agencytemplate_boardbackground"><form role="form"><div class="content"><h1><span class="label label-default">DSO</span></h1><br /><div class="form-group form-inline"><label class="control-label" for="dataidNum">Dataid:</label><space /><span id="dataidSpan2"><dataid /></span><space /><label class="control-label" for="editKey">Edit Key:</label><space /><input name="editKey" id="editKey" class="form-control" style="form-control input-sm" readonly="" /></div><div class="form-group form-inline"><label class="control-label" for="webeocIncident">Incident:</label><space /><input name="webeocIncident" id="webeocIncident" class="form-control" style="form-control input-sm" readonly="" /></div><div class="form-group form-inline"><label class="control-label" for="jurisdictionType">Jurisdiction Type:</label><space /><input name="jurisdictionType" id="jurisdictionType" class="form-control" style="form-control input-sm" readonly="" /></div><div class="form-group form-inline"><label class="control-label" for="County">County:</label><space /><input class="form-control" name="county" id="county" style="form-control input-sm" readonly="" /></div><div class="form-group form-inline"><label class="control-label" for="city">City:</label><space /><input name="city" id="city" class="form-control" style="form-control input-sm" readonly="" /></div><div class="form-group form-inline"><label class="control-label" for="dateOfDisaster">Inclusive dates of the disaster:</label><space /><input name="dateOfDisaster1" id="dateOfDisaster1" class="form-control" style="form-control input-sm" readonly="" /> - 
                    
                     <input name="dateOfDisaster2" id="dateOfDisaster2" class="form-control" style="form-control input-sm" readonly="" /></div><h1><span class="label label-default">WebEOC DSO Admin Features</span></h1><br /><div class="form-group form-inline"><label for="socProcessed">Soc Processing Options:</label><space /><select name="socProcessed" class="form-control" id="socProcessed"><option>Not Processed</option><option>Processed</option></select></div><div class="form-group form-inline"><label class="control-label" for="hidden">Disable Online Editing:</label><space /><input name="dsoDisable" id="dsoDisable" type="checkbox" style="form-control input-sm" value="Yes" /></div><div class="form-group form-inline"><label class="control-label" for="hidden">Cancel:</label><space /><input name="hidden" id="hidden" type="checkbox" style="form-control input-sm" value="Yes" /></div><div class="form-group form-inline"><label class="control-label" for="city">Notes:</label><space /><textarea class="form-control" name="notesOPS" style="form-control input-sm" /></div><div id="buttons"><savebutton class="btn btn-info saveButtons" /><space /><cancelbutton class="btn btn-danger saveButtons" /><space /></div></div></form></div></body></html></view><view tablename="Supplemental" name="Vetting Input IA (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="4a44d5c3-a506-4bab-9ff4-82f976dcdc7b" assignable="0"><html version="6" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><head><title>IA Extra County Info</title><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/jquery.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.js" /><style type="text/css">
     /* body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}*/
  div.container{border:none;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
    </style><script type="text/javascript">

       function alphabetizeDSOdrop(){
  $("#fkID").html($("#fkID option").sort(function (a, b) {
    return a.text == b.text ? 0 : a.text &lt; b.text ? -1 : 1
}))
}

function hideDSOdrop() {
            if (document.getElementById('dsoYesNo1').checked==true) {
                document.getElementById('dsoDropdown').style.display="";
                var fk = document.getElementById('fk').getElementsByTagName('select')[0];
                for (var i=0; i&lt; fk.options.length; i++){
                if(fk.options[i].value===''){
                    fk.remove(fk.options[i]);
                }
                }

            } else {
                document.getElementById('dsoDropdown').style.display="none";
                CreateOrphanLink();
            }
        }
        function CreateOrphanLink(){
            var fk = document.getElementById('fk').getElementsByTagName('select')[0];
            var a = document.createElement('option');
            a.value='0';
            a.text='Please Select';
            fk.appendChild(a);
            fk.selectedIndex=fk.options.length-1;
        }


function start(){
   hideDSOdrop();
}

window.onload=start;
    </script></head><body><div class="container agencytemplate_boardbackground"><form id="input1" role="form"><h1><span class="label label-default">IA Supplemental Information</span></h1><br /><!--<tr>
               <td class="webeoc-section-header" colSpan="2" selected="false">Details</td>
            </tr>
            <tr>
               <td width="15%" selected="false" rowSpan="1" colSpan="1">Label</td>
               <td selected="true" rowSpan="1" colSpan="1">Field</td>
            </tr>--><!--<legend>Choose the DSO</legend>
            <div class="form-group required form-inline">
                     <label class="control-label" for="dsoYesNo">DSO:</label>
        Yes 
                     
                     
                     <input id="dsoYesNo1" type="radio" style="form-control input-sm" name="dsoYesNo" value="Yes" onclick="hideDSOdrop();alphabetizeDSOdrop()"/>
        No 
                     
                     
                     <input id="dsoYesNo2" type="radio" style="form-control input-sm" name="dsoYesNo" value="No" onclick="hideDSOdrop();"/>
                  </div>
                  <div style="display:none" id="dsoDropdown" class="form-group form-inline">
                     <label class="control-label" name="pickDSO" for="pickDSO">Pick DSO:</label>
                     <space/>
                     <span id="fk">
                        <foreignkey table="Core" type="select">
                           <eocfield type="fk" table="Core" name="county"/> /
                           
                           
                           <eocfield type="fk" table="Core" name="city"/>
                        </foreignkey>
                     </span>
                  </div>--><h3><span class="label label-default">IA FEMA Vetting</span></h3><div class="form-group form-inline"><label class="control-label" for="femaCheckboxV1">Housing PDAs have been completed and numbers have been vetted between IA and FEMA:</label><space /><input name="femaCheckboxV1" id="femaCheckboxV1" type="checkbox" value="Yes" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="IAComments">IA Comments:</label><space /><textarea name="IAComments" id="IAComments" style="form-control input-sm" /></div><br /><h3><span class="label label-default">FEMA Declaration</span></h3><div class="form-group form-inline"><label class="control-label" for="femaDeclaration">FEMA Declaration:</label><space /><input name="femaDeclaration" id="femaDeclaration" type="checkbox" value="Yes" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="femaDeclarationComments">IA FEMA Declaration Comments:</label><space /><textarea name="femaDeclarationComments" id="femaDeclarationComments" style="form-control input-sm" /></div><br /><h3><span class="label label-default">SBA Declaration</span></h3><div class="form-group form-inline"><label class="control-label" for="sbaDeclaration">SBA Declaration:</label><space /><input name="sbaDeclaration" id="sbaDeclaration" type="checkbox" value="Yes" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="sbaDeclarationComments">SBA Declaration Comments:</label><space /><textarea name="sbaDeclarationComments" id="sbaDeclarationComments" style="form-control input-sm" /></div><br /><footer><div class="webeoc-footer"><savebutton class="btn btn-info">Save</savebutton><space /><cancelbutton class="btn btn-danger" /><space /></div></footer></form></div></body></html></view><view tablename="Supplemental" name="Vetting Input PA (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="e1220b4d-4cc4-4b5d-9851-99ad20642827" assignable="0"><html version="6" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><head><title>PA Extra County Info</title><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/jquery.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.js" /><style type="text/css">
     /* body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}*/
  div.container{border:none;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
    </style><script type="text/javascript">

       function alphabetizeDSOdrop(){
  $("#fkID").html($("#fkID option").sort(function (a, b) {
    return a.text == b.text ? 0 : a.text &lt; b.text ? -1 : 1
}))
}

function hideDSOdrop() {
            if (document.getElementById('dsoYesNo1').checked==true) {
                document.getElementById('dsoDropdown').style.display="";
                var fk = document.getElementById('fk').getElementsByTagName('select')[0];
                for (var i=0; i&lt; fk.options.length; i++){
                if(fk.options[i].value===''){
                    fk.remove(fk.options[i]);
                }
                }

            } else {
                document.getElementById('dsoDropdown').style.display="none";
                CreateOrphanLink();
            }
        }
        function CreateOrphanLink(){
            var fk = document.getElementById('fk').getElementsByTagName('select')[0];
            var a = document.createElement('option');
            a.value='0';
            a.text='Please Select';
            fk.appendChild(a);
            fk.selectedIndex=fk.options.length-1;
        }


function start(){
   hideDSOdrop();
}

window.onload=start;
    </script></head><body><div class="container agencytemplate_boardbackground"><form id="input1" role="form"><h1><span class="label label-default">PA Supplemental Information</span></h1><br /><!--<tr>
               <td class="webeoc-section-header" colSpan="2" selected="false">Details</td>
            </tr>
            <tr>
               <td width="15%" selected="false" rowSpan="1" colSpan="1">Label</td>
               <td selected="true" rowSpan="1" colSpan="1">Field</td>
            </tr>--><!--<legend>Choose the DSO</legend>
            <div class="form-group required form-inline">
                     <label class="control-label" for="dsoYesNo">DSO:</label>
        Yes 
                     
                     
                     <input id="dsoYesNo1" type="radio" style="form-control input-sm" name="dsoYesNo" value="Yes" onclick="hideDSOdrop();alphabetizeDSOdrop()"/>
        No 
                     
                     
                     <input id="dsoYesNo2" type="radio" style="form-control input-sm" name="dsoYesNo" value="No" onclick="hideDSOdrop();"/>
                  </div>
                  <div style="display:none" id="dsoDropdown" class="form-group form-inline">
                     <label class="control-label" name="pickDSO" for="pickDSO">Pick DSO:</label>
                     <space/>
                     <span id="fk">
                        <foreignkey table="Core" type="select">
                           <eocfield type="fk" table="Core" name="county"/> /
                           
                           
                           <eocfield type="fk" table="Core" name="city"/>
                        </foreignkey>
                     </span>
                  </div>
                  <div class="form-group required form-inline">
                     <label class="control-label" for="jurisdictionType">Jurisdiction Type:</label>
        City 
                     
                     
                     
                     <input id="jurisdictionType1" type="radio" style="form-control input-sm" name="jurisdictionType" value="City"/>
        County 
                     
                     
                     
                     <input id="jurisdictionType2" type="radio" style="form-control input-sm" name="jurisdictionType" checked="true" value="County"/>
                  </div>
            <br/>
            <br/>--><h3><span class="label label-default">PA FEMA Vetting</span></h3><div class="form-group form-inline"><label class="control-label" for="femaCheckboxV2">Infrastructure PDAs have been completed and numbers have been vetted between PA and FEMA:</label><space /><input name="femaCheckboxV2" id="femaCheckboxV2" type="checkbox" value="Yes" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="PAComments">PA Comments:</label><space /><textarea name="PAComments" id="PAComments" style="form-control input-sm" /></div><br /><h3><span class="label label-default">FEMA Declaration</span></h3><div class="form-group form-inline"><label class="control-label" for="femaDeclaration">FEMA Declaration:</label><space /><input name="femaDeclaration" id="femaDeclaration" type="checkbox" value="Yes" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="femaDeclarationComments2">PA FEMA Declaration Comments:</label><space /><textarea name="femaDeclarationComments2" id="femaDeclarationComments2" style="form-control input-sm" /></div><br /><footer><div class="webeoc-footer"><savebutton class="btn btn-info">Save</savebutton><space /><cancelbutton class="btn btn-danger" /><space /></div></footer></form></div></body></html></view><view tablename="Core" name="InputForDsoSelected (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="408dcb89-c367-4020-b5e6-2f0bf8e60ce8" assignable="0"><lists oldlistname="DSO Cities" listname="DSO Cities" sblist="0" listguid="379C8EED-D6C1-4DAE-B6CB-0DC4D09C75C9" depth="0" comments=""><listitems name="Gregory" listvalue="" ordervalue="432" listitemid="2630" islist="0"/><listitems name="Grey Forest" listvalue="" ordervalue="433" listitemid="2631" islist="0"/><listitems name="Groesbeck" listvalue="" ordervalue="434" listitemid="2632" islist="0"/><listitems name="Groom" listvalue="" ordervalue="435" listitemid="2633" islist="0"/><listitems name="Groves" listvalue="" ordervalue="436" listitemid="2634" islist="0"/><listitems name="Groveton" listvalue="" ordervalue="437" listitemid="2635" islist="0"/><listitems name="Gruver" listvalue="" ordervalue="438" listitemid="2636" islist="0"/><listitems name="Gun Barrel City" listvalue="" ordervalue="439" listitemid="2637" islist="0"/><listitems name="Gunter" listvalue="" ordervalue="440" listitemid="2638" islist="0"/><listitems name="Gustine" listvalue="" ordervalue="441" listitemid="2639" islist="0"/><listitems name="Hackberry" listvalue="" ordervalue="442" listitemid="2640" islist="0"/><listitems name="Hale Center" listvalue="" ordervalue="443" listitemid="2641" islist="0"/><listitems name="Hallettsville" listvalue="" ordervalue="444" listitemid="2642" islist="0"/><listitems name="Hallsburg" listvalue="" ordervalue="445" listitemid="2643" islist="0"/><listitems name="Hallsville" listvalue="" ordervalue="446" listitemid="2644" islist="0"/><listitems name="Haltom City" listvalue="" ordervalue="447" listitemid="2645" islist="0"/><listitems name="Hamilton" listvalue="" ordervalue="448" listitemid="2646" islist="0"/><listitems name="Hamlin" listvalue="" ordervalue="449" listitemid="2647" islist="0"/><listitems name="Happy" listvalue="" ordervalue="450" listitemid="2648" islist="0"/><listitems name="Hardin" listvalue="" ordervalue="451" listitemid="2649" islist="0"/><listitems name="Harker Heights" listvalue="" ordervalue="452" listitemid="2650" islist="0"/><listitems name="Harlingen" listvalue="" ordervalue="453" listitemid="2651" islist="0"/><listitems name="Hart" listvalue="" ordervalue="454" listitemid="2652" islist="0"/><listitems name="Haskell" listvalue="" ordervalue="455" listitemid="2653" islist="0"/><listitems name="Haslet" listvalue="" ordervalue="456" listitemid="2654" islist="0"/><listitems name="Hawk Cove" listvalue="" ordervalue="457" listitemid="2655" islist="0"/><listitems name="Hawkins" listvalue="" ordervalue="458" listitemid="2656" islist="0"/><listitems name="Hawley" listvalue="" ordervalue="459" listitemid="2657" islist="0"/><listitems name="Hays" listvalue="" ordervalue="460" listitemid="2658" islist="0"/><listitems name="Hearne" listvalue="" ordervalue="461" listitemid="2659" islist="0"/><listitems name="Heath" listvalue="" ordervalue="462" listitemid="2660" islist="0"/><listitems name="Hebron" listvalue="" ordervalue="463" listitemid="2661" islist="0"/><listitems name="Hedley" listvalue="" ordervalue="464" listitemid="2662" islist="0"/><listitems name="Hedwig Village" listvalue="" ordervalue="465" listitemid="2663" islist="0"/><listitems name="Helotes" listvalue="" ordervalue="466" listitemid="2664" islist="0"/><listitems name="Hemphill" listvalue="" ordervalue="467" listitemid="2665" islist="0"/><listitems name="Hempstead" listvalue="" ordervalue="468" listitemid="2666" islist="0"/><listitems name="Henderson" listvalue="" ordervalue="469" listitemid="2667" islist="0"/><listitems name="Henrietta" listvalue="" ordervalue="470" listitemid="2668" islist="0"/><listitems name="Hereford" listvalue="" ordervalue="471" listitemid="2669" islist="0"/><listitems name="Hewitt" listvalue="" ordervalue="472" listitemid="2670" islist="0"/><listitems name="Hickory Creek" listvalue="" ordervalue="473" listitemid="2671" islist="0"/><listitems name="Hico" listvalue="" ordervalue="474" listitemid="2672" islist="0"/><listitems name="Hidalgo" listvalue="" ordervalue="475" listitemid="2673" islist="0"/><listitems name="Hideaway" listvalue="" ordervalue="476" listitemid="2674" islist="0"/><listitems name="Higgins" listvalue="" ordervalue="477" listitemid="2675" islist="0"/><listitems name="Highland Haven" listvalue="" ordervalue="478" listitemid="2676" islist="0"/><listitems name="Highland Park" listvalue="" ordervalue="479" listitemid="2677" islist="0"/><listitems name="Highland Village" listvalue="" ordervalue="480" listitemid="2678" islist="0"/><listitems name="Hill Country Village" listvalue="" ordervalue="481" listitemid="2679" islist="0"/><listitems name="Hillcrest Village" listvalue="" ordervalue="482" listitemid="2680" islist="0"/><listitems name="Hillsboro" listvalue="" ordervalue="483" listitemid="2681" islist="0"/><listitems name="Hilshire Village" listvalue="" ordervalue="484" listitemid="2682" islist="0"/><listitems name="Hitchcock" listvalue="" ordervalue="485" listitemid="2683" islist="0"/><listitems name="Holiday Lakes" listvalue="" ordervalue="486" listitemid="2684" islist="0"/><listitems name="Holland" listvalue="" ordervalue="487" listitemid="2685" islist="0"/><listitems name="Holliday" listvalue="" ordervalue="488" listitemid="2686" islist="0"/><listitems name="Hollywood Park" listvalue="" ordervalue="489" listitemid="2687" islist="0"/><listitems name="Hondo" listvalue="" ordervalue="490" listitemid="2688" islist="0"/><listitems name="Honey Grove" listvalue="" ordervalue="491" listitemid="2689" islist="0"/><listitems name="Hooks" listvalue="" ordervalue="492" listitemid="2690" islist="0"/><listitems name="Horizon City" listvalue="" ordervalue="493" listitemid="2691" islist="0"/><listitems name="Horseshoe Bay" listvalue="" ordervalue="494" listitemid="2692" islist="0"/><listitems name="Houston" listvalue="" ordervalue="495" listitemid="2693" islist="0"/><listitems name="Howardwick" listvalue="" ordervalue="496" listitemid="2694" islist="0"/><listitems name="Howe" listvalue="" ordervalue="497" listitemid="2695" islist="0"/><listitems name="Hubbard" listvalue="" ordervalue="498" listitemid="2696" islist="0"/><listitems name="Hudson" listvalue="" ordervalue="499" listitemid="2697" islist="0"/><listitems name="Hudson Oaks" listvalue="" ordervalue="500" listitemid="2698" islist="0"/><listitems name="Hughes Springs" listvalue="" ordervalue="501" listitemid="2699" islist="0"/><listitems name="Humble" listvalue="" ordervalue="502" listitemid="2700" islist="0"/><listitems name="Hunters Creek Village" listvalue="" ordervalue="503" listitemid="2701" islist="0"/><listitems name="Huntington" listvalue="" ordervalue="504" listitemid="2702" islist="0"/><listitems name="Huntsville" listvalue="" ordervalue="505" listitemid="2703" islist="0"/><listitems name="Hurst" listvalue="" ordervalue="506" listitemid="2704" islist="0"/><listitems name="Hutchins" listvalue="" ordervalue="507" listitemid="2705" islist="0"/><listitems name="Hutto" listvalue="" ordervalue="508" listitemid="2706" islist="0"/><listitems name="Huxley" listvalue="" ordervalue="509" listitemid="2707" islist="0"/><listitems name="Idalou" listvalue="" ordervalue="510" listitemid="2708" islist="0"/><listitems name="Impact" listvalue="" ordervalue="511" listitemid="2709" islist="0"/><listitems name="Indian Lake" listvalue="" ordervalue="512" listitemid="2710" islist="0"/><listitems name="Industry" listvalue="" ordervalue="513" listitemid="2711" islist="0"/><listitems name="Ingleside" listvalue="" ordervalue="514" listitemid="2712" islist="0"/><listitems name="Ingleside On The Bay" listvalue="" ordervalue="515" listitemid="2713" islist="0"/><listitems name="Ingram" listvalue="" ordervalue="516" listitemid="2714" islist="0"/><listitems name="Iola" listvalue="" ordervalue="517" listitemid="2715" islist="0"/><listitems name="Iowa Colony" listvalue="" ordervalue="518" listitemid="2716" islist="0"/><listitems name="Iowa Park" listvalue="" ordervalue="519" listitemid="2717" islist="0"/><listitems name="Iraan" listvalue="" ordervalue="520" listitemid="2718" islist="0"/><listitems name="Iredell" listvalue="" ordervalue="521" listitemid="2719" islist="0"/><listitems name="Irving" listvalue="" ordervalue="522" listitemid="2720" islist="0"/><listitems name="Italy" listvalue="" ordervalue="523" listitemid="2721" islist="0"/><listitems name="Itasca" listvalue="" ordervalue="524" listitemid="2722" islist="0"/><listitems name="Ivanhoe" listvalue="" ordervalue="525" listitemid="2723" islist="0"/><listitems name="Jacinto City" listvalue="" ordervalue="526" listitemid="2724" islist="0"/><listitems name="Jacksboro" listvalue="" ordervalue="527" listitemid="2725" islist="0"/><listitems name="Jacksonville" listvalue="" ordervalue="528" listitemid="2726" islist="0"/><listitems name="Jamaica Beach" listvalue="" ordervalue="529" listitemid="2727" islist="0"/><listitems name="Jarrell" listvalue="" ordervalue="530" listitemid="2728" islist="0"/><listitems name="Jasper" listvalue="" ordervalue="531" listitemid="2729" islist="0"/><listitems name="Jayton" listvalue="" ordervalue="532" listitemid="2730" islist="0"/><listitems name="Jefferson" listvalue="" ordervalue="533" listitemid="2731" islist="0"/><listitems name="Jersey Village" listvalue="" ordervalue="534" listitemid="2732" islist="0"/><listitems name="Jewett" listvalue="" ordervalue="535" listitemid="2733" islist="0"/><listitems name="Joaquin" listvalue="" ordervalue="536" listitemid="2734" islist="0"/><listitems name="Johnson City" listvalue="" ordervalue="537" listitemid="2735" islist="0"/><listitems name="Jolly" listvalue="" ordervalue="538" listitemid="2736" islist="0"/><listitems name="Jones Creek" listvalue="" ordervalue="539" listitemid="2737" islist="0"/><listitems name="Jonestown" listvalue="" ordervalue="540" listitemid="2738" islist="0"/><listitems name="Josephine" listvalue="" ordervalue="541" listitemid="2739" islist="0"/><listitems name="Joshua" listvalue="" ordervalue="542" listitemid="2740" islist="0"/><listitems name="Jourdanton" listvalue="" ordervalue="543" listitemid="2741" islist="0"/><listitems name="Junction" listvalue="" ordervalue="544" listitemid="2742" islist="0"/><listitems name="Justin" listvalue="" ordervalue="545" listitemid="2743" islist="0"/><listitems name="Karnes City" listvalue="" ordervalue="546" listitemid="2744" islist="0"/><listitems name="Katy" listvalue="" ordervalue="547" listitemid="2745" islist="0"/><listitems name="Kaufman" listvalue="" ordervalue="548" listitemid="2746" islist="0"/><listitems name="Keene" listvalue="" ordervalue="549" listitemid="2747" islist="0"/><listitems name="Keller" listvalue="" ordervalue="550" listitemid="2748" islist="0"/><listitems name="Kemah" listvalue="" ordervalue="551" listitemid="2749" islist="0"/><listitems name="Kemp" listvalue="" ordervalue="552" listitemid="2750" islist="0"/><listitems name="Kempner" listvalue="" ordervalue="553" listitemid="2751" islist="0"/><listitems name="Kendleton" listvalue="" ordervalue="554" listitemid="2752" islist="0"/><listitems name="Kenedy" listvalue="" ordervalue="555" listitemid="2753" islist="0"/><listitems name="Kenefick" listvalue="" ordervalue="556" listitemid="2754" islist="0"/><listitems name="Kennard" listvalue="" ordervalue="557" listitemid="2755" islist="0"/><listitems name="Kennedale" listvalue="" ordervalue="558" listitemid="2756" islist="0"/><listitems name="Kerens" listvalue="" ordervalue="559" listitemid="2757" islist="0"/><listitems name="Kermit" listvalue="" ordervalue="560" listitemid="2758" islist="0"/><listitems name="Kerrville" listvalue="" ordervalue="561" listitemid="2759" islist="0"/><listitems name="Kilgore" listvalue="" ordervalue="562" listitemid="2760" islist="0"/><listitems name="Killeen" listvalue="" ordervalue="563" listitemid="2761" islist="0"/><listitems name="Kingsville" listvalue="" ordervalue="564" listitemid="2762" islist="0"/><listitems name="Kirby" listvalue="" ordervalue="565" listitemid="2763" islist="0"/><listitems name="Kirbyville" listvalue="" ordervalue="566" listitemid="2764" islist="0"/><listitems name="Kirvin" listvalue="" ordervalue="567" listitemid="2765" islist="0"/><listitems name="Knollwood" listvalue="" ordervalue="568" listitemid="2766" islist="0"/><listitems name="Knox City" listvalue="" ordervalue="569" listitemid="2767" islist="0"/><listitems name="Kosse" listvalue="" ordervalue="570" listitemid="2768" islist="0"/><listitems name="Kountze" listvalue="" ordervalue="571" listitemid="2769" islist="0"/><listitems name="Kress" listvalue="" ordervalue="572" listitemid="2770" islist="0"/><listitems name="Krugerville" listvalue="" ordervalue="573" listitemid="2771" islist="0"/><listitems name="Krum" listvalue="" ordervalue="574" listitemid="2772" islist="0"/><listitems name="Kurten" listvalue="" ordervalue="575" listitemid="2773" islist="0"/><listitems name="Kyle" listvalue="" ordervalue="576" listitemid="2774" islist="0"/><listitems name="La Feria" listvalue="" ordervalue="577" listitemid="2775" islist="0"/><listitems name="La Grange" listvalue="" ordervalue="578" listitemid="2776" islist="0"/><listitems name="La Grulla" listvalue="" ordervalue="579" listitemid="2777" islist="0"/><listitems name="La Joya" listvalue="" ordervalue="580" listitemid="2778" islist="0"/><listitems name="La Marque" listvalue="" ordervalue="581" listitemid="2779" islist="0"/><listitems name="La Porte" listvalue="" ordervalue="582" listitemid="2780" islist="0"/><listitems name="La Vernia" listvalue="" ordervalue="583" listitemid="2781" islist="0"/><listitems name="La Villa" listvalue="" ordervalue="584" listitemid="2782" islist="0"/><listitems name="La Ward" listvalue="" ordervalue="585" listitemid="2783" islist="0"/><listitems name="LaCoste" listvalue="" ordervalue="586" listitemid="2784" islist="0"/><listitems name="Lacy-Lakeview" listvalue="" ordervalue="587" listitemid="2785" islist="0"/><listitems name="Ladonia" listvalue="" ordervalue="588" listitemid="2786" islist="0"/><listitems name="Lago Vista" listvalue="" ordervalue="589" listitemid="2787" islist="0"/><listitems name="Laguna Vista" listvalue="" ordervalue="590" listitemid="2788" islist="0"/><listitems name="Lake Bridgeport" listvalue="" ordervalue="591" listitemid="2789" islist="0"/><listitems name="Lake City" listvalue="" ordervalue="592" listitemid="2790" islist="0"/><listitems name="Lake Dallas" listvalue="" ordervalue="593" listitemid="2791" islist="0"/><listitems name="Lake Jackson" listvalue="" ordervalue="594" listitemid="2792" islist="0"/><listitems name="Lake Tanglewood" listvalue="" ordervalue="595" listitemid="2793" islist="0"/><listitems name="Lake Worth" listvalue="" ordervalue="596" listitemid="2794" islist="0"/><listitems name="Lakeport" listvalue="" ordervalue="597" listitemid="2795" islist="0"/><listitems name="Lakeside (San Patricio)" listvalue="" ordervalue="598" listitemid="2796" islist="0"/><listitems name="Lakeside (Tarrant)" listvalue="" ordervalue="599" listitemid="2797" islist="0"/><listitems name="Lakeside City" listvalue="" ordervalue="600" listitemid="2798" islist="0"/><listitems name="Lakeview" listvalue="" ordervalue="601" listitemid="2799" islist="0"/><listitems name="Lakeway" listvalue="" ordervalue="602" listitemid="2800" islist="0"/><listitems name="Lakewood Village" listvalue="" ordervalue="603" listitemid="2801" islist="0"/><listitems name="Lamesa" listvalue="" ordervalue="604" listitemid="2802" islist="0"/><listitems name="Lampasas" listvalue="" ordervalue="605" listitemid="2803" islist="0"/><listitems name="Lancaster" listvalue="" ordervalue="606" listitemid="2804" islist="0"/><listitems name="Laredo" listvalue="" ordervalue="607" listitemid="2805" islist="0"/><listitems name="Latexo" listvalue="" ordervalue="608" listitemid="2806" islist="0"/><listitems name="Lavon" listvalue="" ordervalue="609" listitemid="2807" islist="0"/><listitems name="Lawn" listvalue="" ordervalue="610" listitemid="2808" islist="0"/><listitems name="League City" listvalue="" ordervalue="611" listitemid="2809" islist="0"/><listitems name="Leakey" listvalue="" ordervalue="612" listitemid="2810" islist="0"/><listitems name="Leander" listvalue="" ordervalue="613" listitemid="2811" islist="0"/><listitems name="Leary" listvalue="" ordervalue="614" listitemid="2812" islist="0"/><listitems name="Lefors" listvalue="" ordervalue="615" listitemid="2813" islist="0"/><listitems name="Leon Valley" listvalue="" ordervalue="616" listitemid="2814" islist="0"/><listitems name="Leona" listvalue="" ordervalue="617" listitemid="2815" islist="0"/><listitems name="Leonard" listvalue="" ordervalue="618" listitemid="2816" islist="0"/><listitems name="Leroy" listvalue="" ordervalue="619" listitemid="2817" islist="0"/><listitems name="Levelland" listvalue="" ordervalue="620" listitemid="2818" islist="0"/><listitems name="Lewisville" listvalue="" ordervalue="621" listitemid="2819" islist="0"/><listitems name="Lexington" listvalue="" ordervalue="622" listitemid="2820" islist="0"/><listitems name="Liberty" listvalue="" ordervalue="623" listitemid="2821" islist="0"/><listitems name="Liberty Hill" listvalue="" ordervalue="624" listitemid="2822" islist="0"/><listitems name="Lincoln Park" listvalue="" ordervalue="625" listitemid="2823" islist="0"/><listitems name="Lindale" listvalue="" ordervalue="626" listitemid="2824" islist="0"/><listitems name="Linden" listvalue="" ordervalue="627" listitemid="2825" islist="0"/><listitems name="Lindsay" listvalue="" ordervalue="628" listitemid="2826" islist="0"/><listitems name="Lipan" listvalue="" ordervalue="629" listitemid="2827" islist="0"/><listitems name="Little Elm" listvalue="" ordervalue="630" listitemid="2828" islist="0"/><listitems name="Little River Academy" listvalue="" ordervalue="631" listitemid="2829" islist="0"/><listitems name="Littlefield" listvalue="" ordervalue="632" listitemid="2830" islist="0"/><listitems name="Live Oak" listvalue="" ordervalue="633" listitemid="2831" islist="0"/><listitems name="Liverpool" listvalue="" ordervalue="634" listitemid="2832" islist="0"/><listitems name="Livingston" listvalue="" ordervalue="635" listitemid="2833" islist="0"/><listitems name="Llano" listvalue="" ordervalue="636" listitemid="2834" islist="0"/><listitems name="Lockhart" listvalue="" ordervalue="637" listitemid="2835" islist="0"/><listitems name="Lockney" listvalue="" ordervalue="638" listitemid="2836" islist="0"/><listitems name="Log Cabin" listvalue="" ordervalue="639" listitemid="2837" islist="0"/><listitems name="Lometa" listvalue="" ordervalue="640" listitemid="2838" islist="0"/><listitems name="Lone Oak" listvalue="" ordervalue="641" listitemid="2839" islist="0"/><listitems name="Lone Star" listvalue="" ordervalue="642" listitemid="2840" islist="0"/><listitems name="Longview" listvalue="" ordervalue="643" listitemid="2841" islist="0"/><listitems name="Loraine" listvalue="" ordervalue="644" listitemid="2842" islist="0"/><listitems name="Lorena" listvalue="" ordervalue="645" listitemid="2843" islist="0"/><listitems name="Select One" listvalue="" ordervalue="1" listitemid="2199" islist="0"/><listitems name="Unincorporated Areas" listvalue="" ordervalue="2" listitemid="2200" islist="0"/><listitems name="Abbott" listvalue="" ordervalue="3" listitemid="2201" islist="0"/><listitems name="Abernathy" listvalue="" ordervalue="4" listitemid="2202" islist="0"/><listitems name="Abilene" listvalue="" ordervalue="5" listitemid="2203" islist="0"/><listitems name="Ackerly" listvalue="" ordervalue="6" listitemid="2204" islist="0"/><listitems name="Addison" listvalue="" ordervalue="7" listitemid="2205" islist="0"/><listitems name="Adrian" listvalue="" ordervalue="8" listitemid="2206" islist="0"/><listitems name="Agua Dulce" listvalue="" ordervalue="9" listitemid="2207" islist="0"/><listitems name="Alamo" listvalue="" ordervalue="10" listitemid="2208" islist="0"/><listitems name="Alamo Heights" listvalue="" ordervalue="11" listitemid="2209" islist="0"/><listitems name="Alba" listvalue="" ordervalue="12" listitemid="2210" islist="0"/><listitems name="Albany" listvalue="" ordervalue="13" listitemid="2211" islist="0"/><listitems name="Aledo" listvalue="" ordervalue="14" listitemid="2212" islist="0"/><listitems name="Alice" listvalue="" ordervalue="15" listitemid="2213" islist="0"/><listitems name="Allen" listvalue="" ordervalue="16" listitemid="2214" islist="0"/><listitems name="Alma" listvalue="" ordervalue="17" listitemid="2215" islist="0"/><listitems name="Alpine" listvalue="" ordervalue="18" listitemid="2216" islist="0"/><listitems name="Alto" listvalue="" ordervalue="19" listitemid="2217" islist="0"/><listitems name="Alton" listvalue="" ordervalue="20" listitemid="2218" islist="0"/><listitems name="Alvarado" listvalue="" ordervalue="21" listitemid="2219" islist="0"/><listitems name="Alvin" listvalue="" ordervalue="22" listitemid="2220" islist="0"/><listitems name="Alvord" listvalue="" ordervalue="23" listitemid="2221" islist="0"/><listitems name="Amarillo" listvalue="" ordervalue="24" listitemid="2222" islist="0"/><listitems name="Ames" listvalue="" ordervalue="25" listitemid="2223" islist="0"/><listitems name="Amherst" listvalue="" ordervalue="26" listitemid="2224" islist="0"/><listitems name="Anahuac" listvalue="" ordervalue="27" listitemid="2225" islist="0"/><listitems name="Anderson" listvalue="" ordervalue="28" listitemid="2226" islist="0"/><listitems name="Andrews" listvalue="" ordervalue="29" listitemid="2227" islist="0"/><listitems name="Angleton" listvalue="" ordervalue="30" listitemid="2228" islist="0"/><listitems name="Angus" listvalue="" ordervalue="31" listitemid="2229" islist="0"/><listitems name="Anna" listvalue="" ordervalue="32" listitemid="2230" islist="0"/><listitems name="Annetta" listvalue="" ordervalue="33" listitemid="2231" islist="0"/><listitems name="Annetta North" listvalue="" ordervalue="34" listitemid="2232" islist="0"/><listitems name="Annetta South" listvalue="" ordervalue="35" listitemid="2233" islist="0"/><listitems name="Annona" listvalue="" ordervalue="36" listitemid="2234" islist="0"/><listitems name="Anson" listvalue="" ordervalue="37" listitemid="2235" islist="0"/><listitems name="Anthony" listvalue="" ordervalue="38" listitemid="2236" islist="0"/><listitems name="Anton" listvalue="" ordervalue="39" listitemid="2237" islist="0"/><listitems name="Appleby" listvalue="" ordervalue="40" listitemid="2238" islist="0"/><listitems name="Aquilla" listvalue="" ordervalue="41" listitemid="2239" islist="0"/><listitems name="Aransas Pass" listvalue="" ordervalue="42" listitemid="2240" islist="0"/><listitems name="Archer City" listvalue="" ordervalue="43" listitemid="2241" islist="0"/><listitems name="Arcola" listvalue="" ordervalue="44" listitemid="2242" islist="0"/><listitems name="Argyle" listvalue="" ordervalue="45" listitemid="2243" islist="0"/><listitems name="Arlington" listvalue="" ordervalue="46" listitemid="2244" islist="0"/><listitems name="Arp" listvalue="" ordervalue="47" listitemid="2245" islist="0"/><listitems name="Asherton" listvalue="" ordervalue="48" listitemid="2246" islist="0"/><listitems name="Aspermont" listvalue="" ordervalue="49" listitemid="2247" islist="0"/><listitems name="Athens" listvalue="" ordervalue="50" listitemid="2248" islist="0"/><listitems name="Atlanta" listvalue="" ordervalue="51" listitemid="2249" islist="0"/><listitems name="Aubrey" listvalue="" ordervalue="52" listitemid="2250" islist="0"/><listitems name="Aurora" listvalue="" ordervalue="53" listitemid="2251" islist="0"/><listitems name="Austin" listvalue="" ordervalue="54" listitemid="2252" islist="0"/><listitems name="Austwell" listvalue="" ordervalue="55" listitemid="2253" islist="0"/><listitems name="Avery" listvalue="" ordervalue="56" listitemid="2254" islist="0"/><listitems name="Avinger" listvalue="" ordervalue="57" listitemid="2255" islist="0"/><listitems name="Azle" listvalue="" ordervalue="58" listitemid="2256" islist="0"/><listitems name="Bailey" listvalue="" ordervalue="59" listitemid="2257" islist="0"/><listitems name="Bailey's Prairie" listvalue="" ordervalue="60" listitemid="2258" islist="0"/><listitems name="Baird" listvalue="" ordervalue="61" listitemid="2259" islist="0"/><listitems name="Balch Springs" listvalue="" ordervalue="62" listitemid="2260" islist="0"/><listitems name="Balcones Heights" listvalue="" ordervalue="63" listitemid="2261" islist="0"/><listitems name="Ballinger" listvalue="" ordervalue="64" listitemid="2262" islist="0"/><listitems name="Balmorhea" listvalue="" ordervalue="65" listitemid="2263" islist="0"/><listitems name="Bandera" listvalue="" ordervalue="66" listitemid="2264" islist="0"/><listitems name="Bangs" listvalue="" ordervalue="67" listitemid="2265" islist="0"/><listitems name="Bardwell" listvalue="" ordervalue="68" listitemid="2266" islist="0"/><listitems name="Barry" listvalue="" ordervalue="69" listitemid="2267" islist="0"/><listitems name="Barstow" listvalue="" ordervalue="70" listitemid="2268" islist="0"/><listitems name="Bartlett" listvalue="" ordervalue="71" listitemid="2269" islist="0"/><listitems name="Bartonville" listvalue="" ordervalue="72" listitemid="2270" islist="0"/><listitems name="Bastrop" listvalue="" ordervalue="73" listitemid="2271" islist="0"/><listitems name="Bay City" listvalue="" ordervalue="74" listitemid="2272" islist="0"/><listitems name="Bayou Vista" listvalue="" ordervalue="75" listitemid="2273" islist="0"/><listitems name="Bayside" listvalue="" ordervalue="76" listitemid="2274" islist="0"/><listitems name="Baytown" listvalue="" ordervalue="77" listitemid="2275" islist="0"/><listitems name="Bayview" listvalue="" ordervalue="78" listitemid="2276" islist="0"/><listitems name="Beach City" listvalue="" ordervalue="79" listitemid="2277" islist="0"/><listitems name="Bear Creek" listvalue="" ordervalue="80" listitemid="2278" islist="0"/><listitems name="Beasley" listvalue="" ordervalue="81" listitemid="2279" islist="0"/><listitems name="Beaumont" listvalue="" ordervalue="82" listitemid="2280" islist="0"/><listitems name="Beckville" listvalue="" ordervalue="83" listitemid="2281" islist="0"/><listitems name="Bedford" listvalue="" ordervalue="84" listitemid="2282" islist="0"/><listitems name="Bedias" listvalue="" ordervalue="85" listitemid="2283" islist="0"/><listitems name="Bee Cave" listvalue="" ordervalue="86" listitemid="2284" islist="0"/><listitems name="Beeville" listvalue="" ordervalue="87" listitemid="2285" islist="0"/><listitems name="Bellaire" listvalue="" ordervalue="88" listitemid="2286" islist="0"/><listitems name="Bellevue" listvalue="" ordervalue="89" listitemid="2287" islist="0"/><listitems name="Bellmead" listvalue="" ordervalue="90" listitemid="2288" islist="0"/><listitems name="Bells" listvalue="" ordervalue="91" listitemid="2289" islist="0"/><listitems name="Bellville" listvalue="" ordervalue="92" listitemid="2290" islist="0"/><listitems name="Belton" listvalue="" ordervalue="93" listitemid="2291" islist="0"/><listitems name="Benavides" listvalue="" ordervalue="94" listitemid="2292" islist="0"/><listitems name="Benbrook" listvalue="" ordervalue="95" listitemid="2293" islist="0"/><listitems name="Benjamin" listvalue="" ordervalue="96" listitemid="2294" islist="0"/><listitems name="Berryville" listvalue="" ordervalue="97" listitemid="2295" islist="0"/><listitems name="Bertram" listvalue="" ordervalue="98" listitemid="2296" islist="0"/><listitems name="Beverly Hills" listvalue="" ordervalue="99" listitemid="2297" islist="0"/><listitems name="Bevil Oaks" listvalue="" ordervalue="100" listitemid="2298" islist="0"/><listitems name="Big Lake" listvalue="" ordervalue="101" listitemid="2299" islist="0"/><listitems name="Big Sandy" listvalue="" ordervalue="102" listitemid="2300" islist="0"/><listitems name="Big Spring" listvalue="" ordervalue="103" listitemid="2301" islist="0"/><listitems name="Big Wells" listvalue="" ordervalue="104" listitemid="2302" islist="0"/><listitems name="Bishop" listvalue="" ordervalue="105" listitemid="2303" islist="0"/><listitems name="Bishop Hills" listvalue="" ordervalue="106" listitemid="2304" islist="0"/><listitems name="Blackwell" listvalue="" ordervalue="107" listitemid="2305" islist="0"/><listitems name="Blanco" listvalue="" ordervalue="108" listitemid="2306" islist="0"/><listitems name="Blanket" listvalue="" ordervalue="109" listitemid="2307" islist="0"/><listitems name="Bloomburg" listvalue="" ordervalue="110" listitemid="2308" islist="0"/><listitems name="Blooming Grove" listvalue="" ordervalue="111" listitemid="2309" islist="0"/><listitems name="Blossom" listvalue="" ordervalue="112" listitemid="2310" islist="0"/><listitems name="Blue Mound" listvalue="" ordervalue="113" listitemid="2311" islist="0"/><listitems name="Blue Ridge" listvalue="" ordervalue="114" listitemid="2312" islist="0"/><listitems name="Blum" listvalue="" ordervalue="115" listitemid="2313" islist="0"/><listitems name="Boerne" listvalue="" ordervalue="116" listitemid="2314" islist="0"/><listitems name="Bogata" listvalue="" ordervalue="117" listitemid="2315" islist="0"/><listitems name="Bonham" listvalue="" ordervalue="118" listitemid="2316" islist="0"/><listitems name="Bonney" listvalue="" ordervalue="119" listitemid="2317" islist="0"/><listitems name="Booker" listvalue="" ordervalue="120" listitemid="2318" islist="0"/><listitems name="Borger" listvalue="" ordervalue="121" listitemid="2319" islist="0"/><listitems name="Bovina" listvalue="" ordervalue="122" listitemid="2320" islist="0"/><listitems name="Bowie" listvalue="" ordervalue="123" listitemid="2321" islist="0"/><listitems name="Boyd" listvalue="" ordervalue="124" listitemid="2322" islist="0"/><listitems name="Brackettville" listvalue="" ordervalue="125" listitemid="2323" islist="0"/><listitems name="Brady" listvalue="" ordervalue="126" listitemid="2324" islist="0"/><listitems name="Brazoria" listvalue="" ordervalue="127" listitemid="2325" islist="0"/><listitems name="Brazos Bend" listvalue="" ordervalue="128" listitemid="2326" islist="0"/><listitems name="Brazos Country" listvalue="" ordervalue="129" listitemid="2327" islist="0"/><listitems name="Breckenridge" listvalue="" ordervalue="130" listitemid="2328" islist="0"/><listitems name="Bremond" listvalue="" ordervalue="131" listitemid="2329" islist="0"/><listitems name="Brenham" listvalue="" ordervalue="132" listitemid="2330" islist="0"/><listitems name="Briarcliff" listvalue="" ordervalue="133" listitemid="2331" islist="0"/><listitems name="Briaroaks" listvalue="" ordervalue="134" listitemid="2332" islist="0"/><listitems name="Bridge City" listvalue="" ordervalue="135" listitemid="2333" islist="0"/><listitems name="Bridgeport" listvalue="" ordervalue="136" listitemid="2334" islist="0"/><listitems name="Broaddus" listvalue="" ordervalue="137" listitemid="2335" islist="0"/><listitems name="Bronte" listvalue="" ordervalue="138" listitemid="2336" islist="0"/><listitems name="Brookshire" listvalue="" ordervalue="139" listitemid="2337" islist="0"/><listitems name="Brookside Village" listvalue="" ordervalue="140" listitemid="2338" islist="0"/><listitems name="Browndell" listvalue="" ordervalue="141" listitemid="2339" islist="0"/><listitems name="Brownfield" listvalue="" ordervalue="142" listitemid="2340" islist="0"/><listitems name="Brownsboro" listvalue="" ordervalue="143" listitemid="2341" islist="0"/><listitems name="Brownsville" listvalue="" ordervalue="144" listitemid="2342" islist="0"/><listitems name="Brownwood" listvalue="" ordervalue="145" listitemid="2343" islist="0"/><listitems name="Bruceville-Eddy" listvalue="" ordervalue="146" listitemid="2344" islist="0"/><listitems name="Bryan" listvalue="" ordervalue="147" listitemid="2345" islist="0"/><listitems name="Bryson" listvalue="" ordervalue="148" listitemid="2346" islist="0"/><listitems name="Buckholts" listvalue="" ordervalue="149" listitemid="2347" islist="0"/><listitems name="Buda" listvalue="" ordervalue="150" listitemid="2348" islist="0"/><listitems name="Buffalo" listvalue="" ordervalue="151" listitemid="2349" islist="0"/><listitems name="Buffalo Gap" listvalue="" ordervalue="152" listitemid="2350" islist="0"/><listitems name="Buffalo Springs" listvalue="" ordervalue="153" listitemid="2351" islist="0"/><listitems name="Bullard" listvalue="" ordervalue="154" listitemid="2352" islist="0"/><listitems name="Bulverde" listvalue="" ordervalue="155" listitemid="2353" islist="0"/><listitems name="Bunker Hill Village" listvalue="" ordervalue="156" listitemid="2354" islist="0"/><listitems name="Burkburnett" listvalue="" ordervalue="157" listitemid="2355" islist="0"/><listitems name="Burke" listvalue="" ordervalue="158" listitemid="2356" islist="0"/><listitems name="Burleson" listvalue="" ordervalue="159" listitemid="2357" islist="0"/><listitems name="Burnet" listvalue="" ordervalue="160" listitemid="2358" islist="0"/><listitems name="Burton" listvalue="" ordervalue="161" listitemid="2359" islist="0"/><listitems name="Byers" listvalue="" ordervalue="162" listitemid="2360" islist="0"/><listitems name="Bynum" listvalue="" ordervalue="163" listitemid="2361" islist="0"/><listitems name="Cactus" listvalue="" ordervalue="164" listitemid="2362" islist="0"/><listitems name="Caddo Mills" listvalue="" ordervalue="165" listitemid="2363" islist="0"/><listitems name="Caldwell" listvalue="" ordervalue="166" listitemid="2364" islist="0"/><listitems name="Callisburg" listvalue="" ordervalue="167" listitemid="2365" islist="0"/><listitems name="Calvert" listvalue="" ordervalue="168" listitemid="2366" islist="0"/><listitems name="Cameron" listvalue="" ordervalue="169" listitemid="2367" islist="0"/><listitems name="Camp Wood" listvalue="" ordervalue="170" listitemid="2368" islist="0"/><listitems name="Campbell" listvalue="" ordervalue="171" listitemid="2369" islist="0"/><listitems name="Canadian" listvalue="" ordervalue="172" listitemid="2370" islist="0"/><listitems name="Caney City" listvalue="" ordervalue="173" listitemid="2371" islist="0"/><listitems name="Canton" listvalue="" ordervalue="174" listitemid="2372" islist="0"/><listitems name="Canyon" listvalue="" ordervalue="175" listitemid="2373" islist="0"/><listitems name="Carbon" listvalue="" ordervalue="176" listitemid="2374" islist="0"/><listitems name="Carl's Corner" listvalue="" ordervalue="177" listitemid="2375" islist="0"/><listitems name="Carmine" listvalue="" ordervalue="178" listitemid="2376" islist="0"/><listitems name="Carrizo Springs" listvalue="" ordervalue="179" listitemid="2377" islist="0"/><listitems name="Carrollton" listvalue="" ordervalue="180" listitemid="2378" islist="0"/><listitems name="Carthage" listvalue="" ordervalue="181" listitemid="2379" islist="0"/><listitems name="Cashion" listvalue="" ordervalue="182" listitemid="2380" islist="0"/><listitems name="Castle Hills" listvalue="" ordervalue="183" listitemid="2381" islist="0"/><listitems name="Castroville" listvalue="" ordervalue="184" listitemid="2382" islist="0"/><listitems name="Cedar Hill" listvalue="" ordervalue="185" listitemid="2383" islist="0"/><listitems name="Cedar Park" listvalue="" ordervalue="186" listitemid="2384" islist="0"/><listitems name="Celeste" listvalue="" ordervalue="187" listitemid="2385" islist="0"/><listitems name="Celina" listvalue="" ordervalue="188" listitemid="2386" islist="0"/><listitems name="Center" listvalue="" ordervalue="189" listitemid="2387" islist="0"/><listitems name="Centerville" listvalue="" ordervalue="190" listitemid="2388" islist="0"/><listitems name="Chandler" listvalue="" ordervalue="191" listitemid="2389" islist="0"/><listitems name="Channing" listvalue="" ordervalue="192" listitemid="2390" islist="0"/><listitems name="Charlotte" listvalue="" ordervalue="193" listitemid="2391" islist="0"/><listitems name="Chester" listvalue="" ordervalue="194" listitemid="2392" islist="0"/><listitems name="Chico" listvalue="" ordervalue="195" listitemid="2393" islist="0"/><listitems name="Childress" listvalue="" ordervalue="196" listitemid="2394" islist="0"/><listitems name="Chillicothe" listvalue="" ordervalue="197" listitemid="2395" islist="0"/><listitems name="China" listvalue="" ordervalue="198" listitemid="2396" islist="0"/><listitems name="China Grove" listvalue="" ordervalue="199" listitemid="2397" islist="0"/><listitems name="Chireno" listvalue="" ordervalue="200" listitemid="2398" islist="0"/><listitems name="Christine" listvalue="" ordervalue="201" listitemid="2399" islist="0"/><listitems name="Cibolo" listvalue="" ordervalue="202" listitemid="2400" islist="0"/><listitems name="Cisco" listvalue="" ordervalue="203" listitemid="2401" islist="0"/><listitems name="Clarendon" listvalue="" ordervalue="204" listitemid="2402" islist="0"/><listitems name="Clarksville" listvalue="" ordervalue="205" listitemid="2403" islist="0"/><listitems name="Clarksville City" listvalue="" ordervalue="206" listitemid="2404" islist="0"/><listitems name="Claude" listvalue="" ordervalue="207" listitemid="2405" islist="0"/><listitems name="Clear Lake Shores" listvalue="" ordervalue="208" listitemid="2406" islist="0"/><listitems name="Cleburne" listvalue="" ordervalue="209" listitemid="2407" islist="0"/><listitems name="Cleveland" listvalue="" ordervalue="210" listitemid="2408" islist="0"/><listitems name="Clifton" listvalue="" ordervalue="211" listitemid="2409" islist="0"/><listitems name="Clint" listvalue="" ordervalue="212" listitemid="2410" islist="0"/><listitems name="Clute" listvalue="" ordervalue="213" listitemid="2411" islist="0"/><listitems name="Clyde" listvalue="" ordervalue="214" listitemid="2412" islist="0"/><listitems name="Coahoma" listvalue="" ordervalue="215" listitemid="2413" islist="0"/><listitems name="Cockrell Hill" listvalue="" ordervalue="216" listitemid="2414" islist="0"/><listitems name="Coffee City" listvalue="" ordervalue="217" listitemid="2415" islist="0"/><listitems name="Coldspring" listvalue="" ordervalue="218" listitemid="2416" islist="0"/><listitems name="Coleman" listvalue="" ordervalue="219" listitemid="2417" islist="0"/><listitems name="College Station" listvalue="" ordervalue="220" listitemid="2418" islist="0"/><listitems name="Colleyville" listvalue="" ordervalue="221" listitemid="2419" islist="0"/><listitems name="Collinsville" listvalue="" ordervalue="222" listitemid="2420" islist="0"/><listitems name="Colmesneil" listvalue="" ordervalue="223" listitemid="2421" islist="0"/><listitems name="Colorado City" listvalue="" ordervalue="224" listitemid="2422" islist="0"/><listitems name="Columbus" listvalue="" ordervalue="225" listitemid="2423" islist="0"/><listitems name="Comanche" listvalue="" ordervalue="226" listitemid="2424" islist="0"/><listitems name="Combes" listvalue="" ordervalue="227" listitemid="2425" islist="0"/><listitems name="Combine" listvalue="" ordervalue="228" listitemid="2426" islist="0"/><listitems name="Commerce" listvalue="" ordervalue="229" listitemid="2427" islist="0"/><listitems name="Como" listvalue="" ordervalue="230" listitemid="2428" islist="0"/><listitems name="Conroe" listvalue="" ordervalue="231" listitemid="2429" islist="0"/><listitems name="Converse" listvalue="" ordervalue="232" listitemid="2430" islist="0"/><listitems name="Cool" listvalue="" ordervalue="233" listitemid="2431" islist="0"/><listitems name="Coolidge" listvalue="" ordervalue="234" listitemid="2432" islist="0"/><listitems name="Cooper" listvalue="" ordervalue="235" listitemid="2433" islist="0"/><listitems name="Coppell" listvalue="" ordervalue="236" listitemid="2434" islist="0"/><listitems name="Copper Canyon" listvalue="" ordervalue="237" listitemid="2435" islist="0"/><listitems name="Copperas Cove" listvalue="" ordervalue="238" listitemid="2436" islist="0"/><listitems name="Corinth" listvalue="" ordervalue="239" listitemid="2437" islist="0"/><listitems name="Corpus Christi" listvalue="" ordervalue="240" listitemid="2438" islist="0"/><listitems name="Corral City" listvalue="" ordervalue="241" listitemid="2439" islist="0"/><listitems name="Corrigan" listvalue="" ordervalue="242" listitemid="2440" islist="0"/><listitems name="Corsicana" listvalue="" ordervalue="243" listitemid="2441" islist="0"/><listitems name="Cottonwood" listvalue="" ordervalue="244" listitemid="2442" islist="0"/><listitems name="Cottonwood Shores" listvalue="" ordervalue="245" listitemid="2443" islist="0"/><listitems name="Cotulla" listvalue="" ordervalue="246" listitemid="2444" islist="0"/><listitems name="Cove" listvalue="" ordervalue="247" listitemid="2445" islist="0"/><listitems name="Covington" listvalue="" ordervalue="248" listitemid="2446" islist="0"/><listitems name="Crandall" listvalue="" ordervalue="249" listitemid="2447" islist="0"/><listitems name="Crane" listvalue="" ordervalue="250" listitemid="2448" islist="0"/><listitems name="Cranfills Gap" listvalue="" ordervalue="251" listitemid="2449" islist="0"/><listitems name="Crawford" listvalue="" ordervalue="252" listitemid="2450" islist="0"/><listitems name="Creedmoor" listvalue="" ordervalue="253" listitemid="2451" islist="0"/><listitems name="Cresson" listvalue="" ordervalue="254" listitemid="2452" islist="0"/><listitems name="Crockett" listvalue="" ordervalue="255" listitemid="2453" islist="0"/><listitems name="Crosbyton" listvalue="" ordervalue="256" listitemid="2454" islist="0"/><listitems name="Cross Plains" listvalue="" ordervalue="257" listitemid="2455" islist="0"/><listitems name="Cross Roads" listvalue="" ordervalue="258" listitemid="2456" islist="0"/><listitems name="Cross Timber" listvalue="" ordervalue="259" listitemid="2457" islist="0"/><listitems name="Crowell" listvalue="" ordervalue="260" listitemid="2458" islist="0"/><listitems name="Crowley" listvalue="" ordervalue="261" listitemid="2459" islist="0"/><listitems name="Crystal City" listvalue="" ordervalue="262" listitemid="2460" islist="0"/><listitems name="Cuero" listvalue="" ordervalue="263" listitemid="2461" islist="0"/><listitems name="Cumby" listvalue="" ordervalue="264" listitemid="2462" islist="0"/><listitems name="Cuney" listvalue="" ordervalue="265" listitemid="2463" islist="0"/><listitems name="Cushing" listvalue="" ordervalue="266" listitemid="2464" islist="0"/><listitems name="Cut and Shoot" listvalue="" ordervalue="267" listitemid="2465" islist="0"/><listitems name="Daingerfield" listvalue="" ordervalue="268" listitemid="2466" islist="0"/><listitems name="Daisetta" listvalue="" ordervalue="269" listitemid="2467" islist="0"/><listitems name="Dalhart" listvalue="" ordervalue="270" listitemid="2468" islist="0"/><listitems name="Dallas" listvalue="" ordervalue="271" listitemid="2469" islist="0"/><listitems name="Dalworthington Gardens" listvalue="" ordervalue="272" listitemid="2470" islist="0"/><listitems name="Danbury" listvalue="" ordervalue="273" listitemid="2471" islist="0"/><listitems name="Darrouzett" listvalue="" ordervalue="274" listitemid="2472" islist="0"/><listitems name="Dawson" listvalue="" ordervalue="275" listitemid="2473" islist="0"/><listitems name="Dayton" listvalue="" ordervalue="276" listitemid="2474" islist="0"/><listitems name="Dayton Lakes" listvalue="" ordervalue="277" listitemid="2475" islist="0"/><listitems name="De Leon" listvalue="" ordervalue="278" listitemid="2476" islist="0"/><listitems name="Dean" listvalue="" ordervalue="279" listitemid="2477" islist="0"/><listitems name="Decatur" listvalue="" ordervalue="280" listitemid="2478" islist="0"/><listitems name="DeCordova" listvalue="" ordervalue="281" listitemid="2479" islist="0"/><listitems name="Deer Park" listvalue="" ordervalue="282" listitemid="2480" islist="0"/><listitems name="DeKalb" listvalue="" ordervalue="283" listitemid="2481" islist="0"/><listitems name="Del Rio" listvalue="" ordervalue="284" listitemid="2482" islist="0"/><listitems name="Dell City" listvalue="" ordervalue="285" listitemid="2483" islist="0"/><listitems name="Denison" listvalue="" ordervalue="286" listitemid="2484" islist="0"/><listitems name="Denton" listvalue="" ordervalue="287" listitemid="2485" islist="0"/><listitems name="Denver City" listvalue="" ordervalue="288" listitemid="2486" islist="0"/><listitems name="Deport" listvalue="" ordervalue="289" listitemid="2487" islist="0"/><listitems name="DeSoto" listvalue="" ordervalue="290" listitemid="2488" islist="0"/><listitems name="Detroit" listvalue="" ordervalue="291" listitemid="2489" islist="0"/><listitems name="Devers" listvalue="" ordervalue="292" listitemid="2490" islist="0"/><listitems name="Devine" listvalue="" ordervalue="293" listitemid="2491" islist="0"/><listitems name="Diboll" listvalue="" ordervalue="294" listitemid="2492" islist="0"/><listitems name="Dickens" listvalue="" ordervalue="295" listitemid="2493" islist="0"/><listitems name="Dickinson" listvalue="" ordervalue="296" listitemid="2494" islist="0"/><listitems name="Dilley" listvalue="" ordervalue="297" listitemid="2495" islist="0"/><listitems name="Dimmitt" listvalue="" ordervalue="298" listitemid="2496" islist="0"/><listitems name="Dish" listvalue="" ordervalue="299" listitemid="2497" islist="0"/><listitems name="Dodd City" listvalue="" ordervalue="300" listitemid="2498" islist="0"/><listitems name="Dodson" listvalue="" ordervalue="301" listitemid="2499" islist="0"/><listitems name="Domino" listvalue="" ordervalue="302" listitemid="2500" islist="0"/><listitems name="Donna" listvalue="" ordervalue="303" listitemid="2501" islist="0"/><listitems name="Dorchester" listvalue="" ordervalue="304" listitemid="2502" islist="0"/><listitems name="Double Oak" listvalue="" ordervalue="305" listitemid="2503" islist="0"/><listitems name="Douglassville" listvalue="" ordervalue="306" listitemid="2504" islist="0"/><listitems name="Dripping Springs" listvalue="" ordervalue="307" listitemid="2505" islist="0"/><listitems name="Driscoll" listvalue="" ordervalue="308" listitemid="2506" islist="0"/><listitems name="Dublin" listvalue="" ordervalue="309" listitemid="2507" islist="0"/><listitems name="Dumas" listvalue="" ordervalue="310" listitemid="2508" islist="0"/><listitems name="Duncanville" listvalue="" ordervalue="311" listitemid="2509" islist="0"/><listitems name="Eagle Lake" listvalue="" ordervalue="312" listitemid="2510" islist="0"/><listitems name="Eagle Pass" listvalue="" ordervalue="313" listitemid="2511" islist="0"/><listitems name="Early" listvalue="" ordervalue="314" listitemid="2512" islist="0"/><listitems name="Earth" listvalue="" ordervalue="315" listitemid="2513" islist="0"/><listitems name="East Bernard" listvalue="" ordervalue="316" listitemid="2514" islist="0"/><listitems name="East Mountain" listvalue="" ordervalue="317" listitemid="2515" islist="0"/><listitems name="East Tawakoni" listvalue="" ordervalue="318" listitemid="2516" islist="0"/><listitems name="Eastland" listvalue="" ordervalue="319" listitemid="2517" islist="0"/><listitems name="Easton" listvalue="" ordervalue="320" listitemid="2518" islist="0"/><listitems name="Ector" listvalue="" ordervalue="321" listitemid="2519" islist="0"/><listitems name="Edcouch" listvalue="" ordervalue="322" listitemid="2520" islist="0"/><listitems name="Eden" listvalue="" ordervalue="323" listitemid="2521" islist="0"/><listitems name="Edgecliff" listvalue="" ordervalue="324" listitemid="2522" islist="0"/><listitems name="Edgewood" listvalue="" ordervalue="325" listitemid="2523" islist="0"/><listitems name="Edinburg" listvalue="" ordervalue="326" listitemid="2524" islist="0"/><listitems name="Edmonson" listvalue="" ordervalue="327" listitemid="2525" islist="0"/><listitems name="Edna" listvalue="" ordervalue="328" listitemid="2526" islist="0"/><listitems name="Edom" listvalue="" ordervalue="329" listitemid="2527" islist="0"/><listitems name="El Campo" listvalue="" ordervalue="330" listitemid="2528" islist="0"/><listitems name="El Cenizo" listvalue="" ordervalue="331" listitemid="2529" islist="0"/><listitems name="El Lago" listvalue="" ordervalue="332" listitemid="2530" islist="0"/><listitems name="El Paso" listvalue="" ordervalue="333" listitemid="2531" islist="0"/><listitems name="Eldorado" listvalue="" ordervalue="334" listitemid="2532" islist="0"/><listitems name="Electra" listvalue="" ordervalue="335" listitemid="2533" islist="0"/><listitems name="Elgin" listvalue="" ordervalue="336" listitemid="2534" islist="0"/><listitems name="Elkhart" listvalue="" ordervalue="337" listitemid="2535" islist="0"/><listitems name="Elmendorf" listvalue="" ordervalue="338" listitemid="2536" islist="0"/><listitems name="Elsa" listvalue="" ordervalue="339" listitemid="2537" islist="0"/><listitems name="Emhouse" listvalue="" ordervalue="340" listitemid="2538" islist="0"/><listitems name="Emory" listvalue="" ordervalue="341" listitemid="2539" islist="0"/><listitems name="Enchanted Oaks" listvalue="" ordervalue="342" listitemid="2540" islist="0"/><listitems name="Encinal" listvalue="" ordervalue="343" listitemid="2541" islist="0"/><listitems name="Ennis" listvalue="" ordervalue="344" listitemid="2542" islist="0"/><listitems name="Escobares" listvalue="" ordervalue="345" listitemid="2543" islist="0"/><listitems name="Estelline" listvalue="" ordervalue="346" listitemid="2544" islist="0"/><listitems name="Euless" listvalue="" ordervalue="347" listitemid="2545" islist="0"/><listitems name="Eureka" listvalue="" ordervalue="348" listitemid="2546" islist="0"/><listitems name="Eustace" listvalue="" ordervalue="349" listitemid="2547" islist="0"/><listitems name="Evant" listvalue="" ordervalue="350" listitemid="2548" islist="0"/><listitems name="Everman" listvalue="" ordervalue="351" listitemid="2549" islist="0"/><listitems name="Fair Oaks Ranch" listvalue="" ordervalue="352" listitemid="2550" islist="0"/><listitems name="Fairchilds" listvalue="" ordervalue="353" listitemid="2551" islist="0"/><listitems name="Fairfield" listvalue="" ordervalue="354" listitemid="2552" islist="0"/><listitems name="Fairview" listvalue="" ordervalue="355" listitemid="2553" islist="0"/><listitems name="Falfurrias" listvalue="" ordervalue="356" listitemid="2554" islist="0"/><listitems name="Falls City" listvalue="" ordervalue="357" listitemid="2555" islist="0"/><listitems name="Farmers Branch" listvalue="" ordervalue="358" listitemid="2556" islist="0"/><listitems name="Farmersville" listvalue="" ordervalue="359" listitemid="2557" islist="0"/><listitems name="Farwell" listvalue="" ordervalue="360" listitemid="2558" islist="0"/><listitems name="Fate" listvalue="" ordervalue="361" listitemid="2559" islist="0"/><listitems name="Fayetteville" listvalue="" ordervalue="362" listitemid="2560" islist="0"/><listitems name="Ferris" listvalue="" ordervalue="363" listitemid="2561" islist="0"/><listitems name="Flatonia" listvalue="" ordervalue="364" listitemid="2562" islist="0"/><listitems name="Florence" listvalue="" ordervalue="365" listitemid="2563" islist="0"/><listitems name="Floresville" listvalue="" ordervalue="366" listitemid="2564" islist="0"/><listitems name="Flower Mound" listvalue="" ordervalue="367" listitemid="2565" islist="0"/><listitems name="Floydada" listvalue="" ordervalue="368" listitemid="2566" islist="0"/><listitems name="Follett" listvalue="" ordervalue="369" listitemid="2567" islist="0"/><listitems name="Forest Hill" listvalue="" ordervalue="370" listitemid="2568" islist="0"/><listitems name="Forney" listvalue="" ordervalue="371" listitemid="2569" islist="0"/><listitems name="Forsan" listvalue="" ordervalue="372" listitemid="2570" islist="0"/><listitems name="Fort Stockton" listvalue="" ordervalue="373" listitemid="2571" islist="0"/><listitems name="Fort Worth" listvalue="" ordervalue="374" listitemid="2572" islist="0"/><listitems name="Franklin" listvalue="" ordervalue="375" listitemid="2573" islist="0"/><listitems name="Frankston" listvalue="" ordervalue="376" listitemid="2574" islist="0"/><listitems name="Fredericksburg" listvalue="" ordervalue="377" listitemid="2575" islist="0"/><listitems name="Freeport" listvalue="" ordervalue="378" listitemid="2576" islist="0"/><listitems name="Freer" listvalue="" ordervalue="379" listitemid="2577" islist="0"/><listitems name="Friendswood" listvalue="" ordervalue="380" listitemid="2578" islist="0"/><listitems name="Friona" listvalue="" ordervalue="381" listitemid="2579" islist="0"/><listitems name="Frisco" listvalue="" ordervalue="382" listitemid="2580" islist="0"/><listitems name="Fritch" listvalue="" ordervalue="383" listitemid="2581" islist="0"/><listitems name="Frost" listvalue="" ordervalue="384" listitemid="2582" islist="0"/><listitems name="Fruitvale" listvalue="" ordervalue="385" listitemid="2583" islist="0"/><listitems name="Fulshear" listvalue="" ordervalue="386" listitemid="2584" islist="0"/><listitems name="Fulton" listvalue="" ordervalue="387" listitemid="2585" islist="0"/><listitems name="Gainesville" listvalue="" ordervalue="388" listitemid="2586" islist="0"/><listitems name="Galena Park" listvalue="" ordervalue="389" listitemid="2587" islist="0"/><listitems name="Gallatin" listvalue="" ordervalue="390" listitemid="2588" islist="0"/><listitems name="Galveston" listvalue="" ordervalue="391" listitemid="2589" islist="0"/><listitems name="Ganado" listvalue="" ordervalue="392" listitemid="2590" islist="0"/><listitems name="Garden Ridge" listvalue="" ordervalue="393" listitemid="2591" islist="0"/><listitems name="Garland" listvalue="" ordervalue="394" listitemid="2592" islist="0"/><listitems name="Garrett" listvalue="" ordervalue="395" listitemid="2593" islist="0"/><listitems name="Garrison" listvalue="" ordervalue="396" listitemid="2594" islist="0"/><listitems name="Gary" listvalue="" ordervalue="397" listitemid="2595" islist="0"/><listitems name="Gatesville" listvalue="" ordervalue="398" listitemid="2596" islist="0"/><listitems name="George West" listvalue="" ordervalue="399" listitemid="2597" islist="0"/><listitems name="Georgetown" listvalue="" ordervalue="400" listitemid="2598" islist="0"/><listitems name="Gholson" listvalue="" ordervalue="401" listitemid="2599" islist="0"/><listitems name="Giddings" listvalue="" ordervalue="402" listitemid="2600" islist="0"/><listitems name="Gilmer" listvalue="" ordervalue="403" listitemid="2601" islist="0"/><listitems name="Gladewater" listvalue="" ordervalue="404" listitemid="2602" islist="0"/><listitems name="Glen Rose" listvalue="" ordervalue="405" listitemid="2603" islist="0"/><listitems name="Glenn Heights" listvalue="" ordervalue="406" listitemid="2604" islist="0"/><listitems name="Godley" listvalue="" ordervalue="407" listitemid="2605" islist="0"/><listitems name="Goldsmith" listvalue="" ordervalue="408" listitemid="2606" islist="0"/><listitems name="Goldthwaite" listvalue="" ordervalue="409" listitemid="2607" islist="0"/><listitems name="Goliad" listvalue="" ordervalue="410" listitemid="2608" islist="0"/><listitems name="Golinda" listvalue="" ordervalue="411" listitemid="2609" islist="0"/><listitems name="Gonzales" listvalue="" ordervalue="412" listitemid="2610" islist="0"/><listitems name="Goodlow" listvalue="" ordervalue="413" listitemid="2611" islist="0"/><listitems name="Goodrich" listvalue="" ordervalue="414" listitemid="2612" islist="0"/><listitems name="Gordon" listvalue="" ordervalue="415" listitemid="2613" islist="0"/><listitems name="Goree" listvalue="" ordervalue="416" listitemid="2614" islist="0"/><listitems name="Gorman" listvalue="" ordervalue="417" listitemid="2615" islist="0"/><listitems name="Graford" listvalue="" ordervalue="418" listitemid="2616" islist="0"/><listitems name="Graham" listvalue="" ordervalue="419" listitemid="2617" islist="0"/><listitems name="Granbury" listvalue="" ordervalue="420" listitemid="2618" islist="0"/><listitems name="Grand Prairie" listvalue="" ordervalue="421" listitemid="2619" islist="0"/><listitems name="Grand Saline" listvalue="" ordervalue="422" listitemid="2620" islist="0"/><listitems name="Grandfalls" listvalue="" ordervalue="423" listitemid="2621" islist="0"/><listitems name="Grandview" listvalue="" ordervalue="424" listitemid="2622" islist="0"/><listitems name="Granger" listvalue="" ordervalue="425" listitemid="2623" islist="0"/><listitems name="Granite Shoals" listvalue="" ordervalue="426" listitemid="2624" islist="0"/><listitems name="Granjeno" listvalue="" ordervalue="427" listitemid="2625" islist="0"/><listitems name="Grapeland" listvalue="" ordervalue="428" listitemid="2626" islist="0"/><listitems name="Grapevine" listvalue="" ordervalue="429" listitemid="2627" islist="0"/><listitems name="Grays Prairie" listvalue="" ordervalue="430" listitemid="2628" islist="0"/><listitems name="Greenville" listvalue="" ordervalue="431" listitemid="2629" islist="0"/><listitems name="Lorenzo" listvalue="" ordervalue="646" listitemid="2844" islist="0"/><listitems name="Los Fresnos" listvalue="" ordervalue="647" listitemid="2845" islist="0"/><listitems name="Los Indios" listvalue="" ordervalue="648" listitemid="2846" islist="0"/><listitems name="Los Ybanez" listvalue="" ordervalue="649" listitemid="2847" islist="0"/><listitems name="Lott" listvalue="" ordervalue="650" listitemid="2848" islist="0"/><listitems name="Lovelady" listvalue="" ordervalue="651" listitemid="2849" islist="0"/><listitems name="Lowry Crossing" listvalue="" ordervalue="652" listitemid="2850" islist="0"/><listitems name="Lubbock" listvalue="" ordervalue="653" listitemid="2851" islist="0"/><listitems name="Lucas" listvalue="" ordervalue="654" listitemid="2852" islist="0"/><listitems name="Lueders" listvalue="" ordervalue="655" listitemid="2853" islist="0"/><listitems name="Lufkin" listvalue="" ordervalue="656" listitemid="2854" islist="0"/><listitems name="Luling" listvalue="" ordervalue="657" listitemid="2855" islist="0"/><listitems name="Lumberton" listvalue="" ordervalue="658" listitemid="2856" islist="0"/><listitems name="Lyford" listvalue="" ordervalue="659" listitemid="2857" islist="0"/><listitems name="Lytle" listvalue="" ordervalue="660" listitemid="2858" islist="0"/><listitems name="Mabank" listvalue="" ordervalue="661" listitemid="2859" islist="0"/><listitems name="Madisonville" listvalue="" ordervalue="662" listitemid="2860" islist="0"/><listitems name="Magnolia" listvalue="" ordervalue="663" listitemid="2861" islist="0"/><listitems name="Malakoff" listvalue="" ordervalue="664" listitemid="2862" islist="0"/><listitems name="Malone" listvalue="" ordervalue="665" listitemid="2863" islist="0"/><listitems name="Manor" listvalue="" ordervalue="666" listitemid="2864" islist="0"/><listitems name="Mansfield" listvalue="" ordervalue="667" listitemid="2865" islist="0"/><listitems name="Manvel" listvalue="" ordervalue="668" listitemid="2866" islist="0"/><listitems name="Marble Falls" listvalue="" ordervalue="669" listitemid="2867" islist="0"/><listitems name="Marfa" listvalue="" ordervalue="670" listitemid="2868" islist="0"/><listitems name="Marietta" listvalue="" ordervalue="671" listitemid="2869" islist="0"/><listitems name="Marion" listvalue="" ordervalue="672" listitemid="2870" islist="0"/><listitems name="Marlin" listvalue="" ordervalue="673" listitemid="2871" islist="0"/><listitems name="Marquez" listvalue="" ordervalue="674" listitemid="2872" islist="0"/><listitems name="Marshall" listvalue="" ordervalue="675" listitemid="2873" islist="0"/><listitems name="Mart" listvalue="" ordervalue="676" listitemid="2874" islist="0"/><listitems name="Martindale" listvalue="" ordervalue="677" listitemid="2875" islist="0"/><listitems name="Mason" listvalue="" ordervalue="678" listitemid="2876" islist="0"/><listitems name="Matador" listvalue="" ordervalue="679" listitemid="2877" islist="0"/><listitems name="Mathis" listvalue="" ordervalue="680" listitemid="2878" islist="0"/><listitems name="Maud" listvalue="" ordervalue="681" listitemid="2879" islist="0"/><listitems name="Maypearl" listvalue="" ordervalue="682" listitemid="2880" islist="0"/><listitems name="McAllen" listvalue="" ordervalue="683" listitemid="2881" islist="0"/><listitems name="McCamey" listvalue="" ordervalue="684" listitemid="2882" islist="0"/><listitems name="McGregor" listvalue="" ordervalue="685" listitemid="2883" islist="0"/><listitems name="McKinney" listvalue="" ordervalue="686" listitemid="2884" islist="0"/><listitems name="McLean" listvalue="" ordervalue="687" listitemid="2885" islist="0"/><listitems name="McLendon-Chisholm" listvalue="" ordervalue="688" listitemid="2886" islist="0"/><listitems name="Meadow" listvalue="" ordervalue="689" listitemid="2887" islist="0"/><listitems name="Meadowlakes" listvalue="" ordervalue="690" listitemid="2888" islist="0"/><listitems name="Meadows Place" listvalue="" ordervalue="691" listitemid="2889" islist="0"/><listitems name="Megargel" listvalue="" ordervalue="692" listitemid="2890" islist="0"/><listitems name="Melissa" listvalue="" ordervalue="693" listitemid="2891" islist="0"/><listitems name="Melvin" listvalue="" ordervalue="694" listitemid="2892" islist="0"/><listitems name="Memphis" listvalue="" ordervalue="695" listitemid="2893" islist="0"/><listitems name="Menard" listvalue="" ordervalue="696" listitemid="2894" islist="0"/><listitems name="Mercedes" listvalue="" ordervalue="697" listitemid="2895" islist="0"/><listitems name="Meridian" listvalue="" ordervalue="698" listitemid="2896" islist="0"/><listitems name="Merkel" listvalue="" ordervalue="699" listitemid="2897" islist="0"/><listitems name="Mertens" listvalue="" ordervalue="700" listitemid="2898" islist="0"/><listitems name="Mertzon" listvalue="" ordervalue="701" listitemid="2899" islist="0"/><listitems name="Mesquite" listvalue="" ordervalue="702" listitemid="2900" islist="0"/><listitems name="Mexia" listvalue="" ordervalue="703" listitemid="2901" islist="0"/><listitems name="Miami" listvalue="" ordervalue="704" listitemid="2902" islist="0"/><listitems name="Midland" listvalue="" ordervalue="705" listitemid="2903" islist="0"/><listitems name="Midlothian" listvalue="" ordervalue="706" listitemid="2904" islist="0"/><listitems name="Midway" listvalue="" ordervalue="707" listitemid="2905" islist="0"/><listitems name="Milano" listvalue="" ordervalue="708" listitemid="2906" islist="0"/><listitems name="Mildred" listvalue="" ordervalue="709" listitemid="2907" islist="0"/><listitems name="Miles" listvalue="" ordervalue="710" listitemid="2908" islist="0"/><listitems name="Milford" listvalue="" ordervalue="711" listitemid="2909" islist="0"/><listitems name="Miller's Cove" listvalue="" ordervalue="712" listitemid="2910" islist="0"/><listitems name="Millsap" listvalue="" ordervalue="713" listitemid="2911" islist="0"/><listitems name="Mineola" listvalue="" ordervalue="714" listitemid="2912" islist="0"/><listitems name="Mineral Wells" listvalue="" ordervalue="715" listitemid="2913" islist="0"/><listitems name="Mingus" listvalue="" ordervalue="716" listitemid="2914" islist="0"/><listitems name="Mission" listvalue="" ordervalue="717" listitemid="2915" islist="0"/><listitems name="Missouri City" listvalue="" ordervalue="718" listitemid="2916" islist="0"/><listitems name="Mobeetie" listvalue="" ordervalue="719" listitemid="2917" islist="0"/><listitems name="Mobile City" listvalue="" ordervalue="720" listitemid="2918" islist="0"/><listitems name="Monahans" listvalue="" ordervalue="721" listitemid="2919" islist="0"/><listitems name="Mont Belvieu" listvalue="" ordervalue="722" listitemid="2920" islist="0"/><listitems name="Montgomery" listvalue="" ordervalue="723" listitemid="2921" islist="0"/><listitems name="Moody" listvalue="" ordervalue="724" listitemid="2922" islist="0"/><listitems name="Moore Station" listvalue="" ordervalue="725" listitemid="2923" islist="0"/><listitems name="Moran" listvalue="" ordervalue="726" listitemid="2924" islist="0"/><listitems name="Morgan" listvalue="" ordervalue="727" listitemid="2925" islist="0"/><listitems name="Morgan's Point" listvalue="" ordervalue="728" listitemid="2926" islist="0"/><listitems name="Morgan's Point Resort" listvalue="" ordervalue="729" listitemid="2927" islist="0"/><listitems name="Morton" listvalue="" ordervalue="730" listitemid="2928" islist="0"/><listitems name="Moulton" listvalue="" ordervalue="731" listitemid="2929" islist="0"/><listitems name="Mount Calm" listvalue="" ordervalue="732" listitemid="2930" islist="0"/><listitems name="Mount Enterprise" listvalue="" ordervalue="733" listitemid="2931" islist="0"/><listitems name="Mount Pleasant" listvalue="" ordervalue="734" listitemid="2932" islist="0"/><listitems name="Mount Vernon" listvalue="" ordervalue="735" listitemid="2933" islist="0"/><listitems name="Mountain City" listvalue="" ordervalue="736" listitemid="2934" islist="0"/><listitems name="Muenster" listvalue="" ordervalue="737" listitemid="2935" islist="0"/><listitems name="Muleshoe" listvalue="" ordervalue="738" listitemid="2936" islist="0"/><listitems name="Mullin" listvalue="" ordervalue="739" listitemid="2937" islist="0"/><listitems name="Munday" listvalue="" ordervalue="740" listitemid="2938" islist="0"/><listitems name="Murchison" listvalue="" ordervalue="741" listitemid="2939" islist="0"/><listitems name="Murphy" listvalue="" ordervalue="742" listitemid="2940" islist="0"/><listitems name="Mustang" listvalue="" ordervalue="743" listitemid="2941" islist="0"/><listitems name="Mustang Ridge" listvalue="" ordervalue="744" listitemid="2942" islist="0"/><listitems name="Nacogdoches" listvalue="" ordervalue="745" listitemid="2943" islist="0"/><listitems name="Naples" listvalue="" ordervalue="746" listitemid="2944" islist="0"/><listitems name="Nash" listvalue="" ordervalue="747" listitemid="2945" islist="0"/><listitems name="Nassau Bay" listvalue="" ordervalue="748" listitemid="2946" islist="0"/><listitems name="Natalia" listvalue="" ordervalue="749" listitemid="2947" islist="0"/><listitems name="Navarro" listvalue="" ordervalue="750" listitemid="2948" islist="0"/><listitems name="Navasota" listvalue="" ordervalue="751" listitemid="2949" islist="0"/><listitems name="Nazareth" listvalue="" ordervalue="752" listitemid="2950" islist="0"/><listitems name="Nederland" listvalue="" ordervalue="753" listitemid="2951" islist="0"/><listitems name="Needville" listvalue="" ordervalue="754" listitemid="2952" islist="0"/><listitems name="Nesbitt" listvalue="" ordervalue="755" listitemid="2953" islist="0"/><listitems name="Nevada" listvalue="" ordervalue="756" listitemid="2954" islist="0"/><listitems name="New Berlin" listvalue="" ordervalue="757" listitemid="2955" islist="0"/><listitems name="New Boston" listvalue="" ordervalue="758" listitemid="2956" islist="0"/><listitems name="New Braunfels" listvalue="" ordervalue="759" listitemid="2957" islist="0"/><listitems name="New Chapel Hill" listvalue="" ordervalue="760" listitemid="2958" islist="0"/><listitems name="New Deal" listvalue="" ordervalue="761" listitemid="2959" islist="0"/><listitems name="New Fairview" listvalue="" ordervalue="762" listitemid="2960" islist="0"/><listitems name="New Home" listvalue="" ordervalue="763" listitemid="2961" islist="0"/><listitems name="New Hope" listvalue="" ordervalue="764" listitemid="2962" islist="0"/><listitems name="New London" listvalue="" ordervalue="765" listitemid="2963" islist="0"/><listitems name="New Summerfield" listvalue="" ordervalue="766" listitemid="2964" islist="0"/><listitems name="New Waverly" listvalue="" ordervalue="767" listitemid="2965" islist="0"/><listitems name="Newark" listvalue="" ordervalue="768" listitemid="2966" islist="0"/><listitems name="Newcastle" listvalue="" ordervalue="769" listitemid="2967" islist="0"/><listitems name="Newton" listvalue="" ordervalue="770" listitemid="2968" islist="0"/><listitems name="Neylandville" listvalue="" ordervalue="771" listitemid="2969" islist="0"/><listitems name="Niederwald" listvalue="" ordervalue="772" listitemid="2970" islist="0"/><listitems name="Nixon" listvalue="" ordervalue="773" listitemid="2971" islist="0"/><listitems name="Nocona" listvalue="" ordervalue="774" listitemid="2972" islist="0"/><listitems name="Nolanville" listvalue="" ordervalue="775" listitemid="2973" islist="0"/><listitems name="Nome" listvalue="" ordervalue="776" listitemid="2974" islist="0"/><listitems name="Noonday" listvalue="" ordervalue="777" listitemid="2975" islist="0"/><listitems name="Nordheim" listvalue="" ordervalue="778" listitemid="2976" islist="0"/><listitems name="Normangee" listvalue="" ordervalue="779" listitemid="2977" islist="0"/><listitems name="North Cleveland" listvalue="" ordervalue="780" listitemid="2978" islist="0"/><listitems name="North Richland Hills" listvalue="" ordervalue="781" listitemid="2979" islist="0"/><listitems name="Northlake" listvalue="" ordervalue="782" listitemid="2980" islist="0"/><listitems name="Novice" listvalue="" ordervalue="783" listitemid="2981" islist="0"/><listitems name="Oak Grove" listvalue="" ordervalue="784" listitemid="2982" islist="0"/><listitems name="Oak Leaf" listvalue="" ordervalue="785" listitemid="2983" islist="0"/><listitems name="Oak Point" listvalue="" ordervalue="786" listitemid="2984" islist="0"/><listitems name="Oak Ridge (Cooke)" listvalue="" ordervalue="787" listitemid="2985" islist="0"/><listitems name="Oak Ridge (Kaufman)" listvalue="" ordervalue="788" listitemid="2986" islist="0"/><listitems name="Oak Ridge North" listvalue="" ordervalue="789" listitemid="2987" islist="0"/><listitems name="Oak Valley" listvalue="" ordervalue="790" listitemid="2988" islist="0"/><listitems name="Oakwood" listvalue="" ordervalue="791" listitemid="2989" islist="0"/><listitems name="O'Brien" listvalue="" ordervalue="792" listitemid="2990" islist="0"/><listitems name="Odem" listvalue="" ordervalue="793" listitemid="2991" islist="0"/><listitems name="Odessa" listvalue="" ordervalue="794" listitemid="2992" islist="0"/><listitems name="O'Donnell" listvalue="" ordervalue="795" listitemid="2993" islist="0"/><listitems name="Oglesby" listvalue="" ordervalue="796" listitemid="2994" islist="0"/><listitems name="Old River-Winfree" listvalue="" ordervalue="797" listitemid="2995" islist="0"/><listitems name="Olmos Park" listvalue="" ordervalue="798" listitemid="2996" islist="0"/><listitems name="Olney" listvalue="" ordervalue="799" listitemid="2997" islist="0"/><listitems name="Olton" listvalue="" ordervalue="800" listitemid="2998" islist="0"/><listitems name="Omaha" listvalue="" ordervalue="801" listitemid="2999" islist="0"/><listitems name="Onalaska" listvalue="" ordervalue="802" listitemid="3000" islist="0"/><listitems name="Opdyke West" listvalue="" ordervalue="803" listitemid="3001" islist="0"/><listitems name="Orange" listvalue="" ordervalue="804" listitemid="3002" islist="0"/><listitems name="Orange Grove" listvalue="" ordervalue="805" listitemid="3003" islist="0"/><listitems name="Orchard" listvalue="" ordervalue="806" listitemid="3004" islist="0"/><listitems name="Ore City" listvalue="" ordervalue="807" listitemid="3005" islist="0"/><listitems name="Overton" listvalue="" ordervalue="808" listitemid="3006" islist="0"/><listitems name="Ovilla" listvalue="" ordervalue="809" listitemid="3007" islist="0"/><listitems name="Oyster Creek" listvalue="" ordervalue="810" listitemid="3008" islist="0"/><listitems name="Paducah" listvalue="" ordervalue="811" listitemid="3009" islist="0"/><listitems name="Paint Rock" listvalue="" ordervalue="812" listitemid="3010" islist="0"/><listitems name="Palacios" listvalue="" ordervalue="813" listitemid="3011" islist="0"/><listitems name="Palestine" listvalue="" ordervalue="814" listitemid="3012" islist="0"/><listitems name="Palisades" listvalue="" ordervalue="815" listitemid="3013" islist="0"/><listitems name="Palm Valley" listvalue="" ordervalue="816" listitemid="3014" islist="0"/><listitems name="Palmer" listvalue="" ordervalue="817" listitemid="3015" islist="0"/><listitems name="Palmhurst" listvalue="" ordervalue="818" listitemid="3016" islist="0"/><listitems name="Palmview" listvalue="" ordervalue="819" listitemid="3017" islist="0"/><listitems name="Pampa" listvalue="" ordervalue="820" listitemid="3018" islist="0"/><listitems name="Panhandle" listvalue="" ordervalue="821" listitemid="3019" islist="0"/><listitems name="Panorama Village" listvalue="" ordervalue="822" listitemid="3020" islist="0"/><listitems name="Pantego" listvalue="" ordervalue="823" listitemid="3021" islist="0"/><listitems name="Paradise" listvalue="" ordervalue="824" listitemid="3022" islist="0"/><listitems name="Paris" listvalue="" ordervalue="825" listitemid="3023" islist="0"/><listitems name="Parker" listvalue="" ordervalue="826" listitemid="3024" islist="0"/><listitems name="Pasadena" listvalue="" ordervalue="827" listitemid="3025" islist="0"/><listitems name="Pattison" listvalue="" ordervalue="828" listitemid="3026" islist="0"/><listitems name="Patton Village" listvalue="" ordervalue="829" listitemid="3027" islist="0"/><listitems name="Payne Springs" listvalue="" ordervalue="830" listitemid="3028" islist="0"/><listitems name="Pearland" listvalue="" ordervalue="831" listitemid="3029" islist="0"/><listitems name="Pearsall" listvalue="" ordervalue="832" listitemid="3030" islist="0"/><listitems name="Pecan Gap" listvalue="" ordervalue="833" listitemid="3031" islist="0"/><listitems name="Pecan Hill" listvalue="" ordervalue="834" listitemid="3032" islist="0"/><listitems name="Pecos" listvalue="" ordervalue="835" listitemid="3033" islist="0"/><listitems name="Pelican Bay" listvalue="" ordervalue="836" listitemid="3034" islist="0"/><listitems name="Penelope" listvalue="" ordervalue="837" listitemid="3035" islist="0"/><listitems name="Penitas" listvalue="" ordervalue="838" listitemid="3036" islist="0"/><listitems name="Perryton" listvalue="" ordervalue="839" listitemid="3037" islist="0"/><listitems name="Petersburg" listvalue="" ordervalue="840" listitemid="3038" islist="0"/><listitems name="Petrolia" listvalue="" ordervalue="841" listitemid="3039" islist="0"/><listitems name="Petronila" listvalue="" ordervalue="842" listitemid="3040" islist="0"/><listitems name="Pflugerville" listvalue="" ordervalue="843" listitemid="3041" islist="0"/><listitems name="Pharr" listvalue="" ordervalue="844" listitemid="3042" islist="0"/><listitems name="Pilot Point" listvalue="" ordervalue="845" listitemid="3043" islist="0"/><listitems name="Pine Forest" listvalue="" ordervalue="846" listitemid="3044" islist="0"/><listitems name="Pine Island" listvalue="" ordervalue="847" listitemid="3045" islist="0"/><listitems name="Pinehurst" listvalue="" ordervalue="848" listitemid="3046" islist="0"/><listitems name="Pineland" listvalue="" ordervalue="849" listitemid="3047" islist="0"/><listitems name="Piney Point Village" listvalue="" ordervalue="850" listitemid="3048" islist="0"/><listitems name="Pittsburg" listvalue="" ordervalue="851" listitemid="3049" islist="0"/><listitems name="Plains" listvalue="" ordervalue="852" listitemid="3050" islist="0"/><listitems name="Plainview" listvalue="" ordervalue="853" listitemid="3051" islist="0"/><listitems name="Plano" listvalue="" ordervalue="854" listitemid="3052" islist="0"/><listitems name="Pleak" listvalue="" ordervalue="855" listitemid="3053" islist="0"/><listitems name="Pleasant Valley" listvalue="" ordervalue="856" listitemid="3054" islist="0"/><listitems name="Pleasanton" listvalue="" ordervalue="857" listitemid="3055" islist="0"/><listitems name="Plum Grove" listvalue="" ordervalue="858" listitemid="3056" islist="0"/><listitems name="Point" listvalue="" ordervalue="859" listitemid="3057" islist="0"/><listitems name="Point Blank" listvalue="" ordervalue="860" listitemid="3058" islist="0"/><listitems name="Point Comfort" listvalue="" ordervalue="861" listitemid="3059" islist="0"/><listitems name="Point Venture" listvalue="" ordervalue="862" listitemid="3060" islist="0"/><listitems name="Ponder" listvalue="" ordervalue="863" listitemid="3061" islist="0"/><listitems name="Port Aransas" listvalue="" ordervalue="864" listitemid="3062" islist="0"/><listitems name="Port Arthur" listvalue="" ordervalue="865" listitemid="3063" islist="0"/><listitems name="Port Isabel" listvalue="" ordervalue="866" listitemid="3064" islist="0"/><listitems name="Port Lavaca" listvalue="" ordervalue="867" listitemid="3065" islist="0"/><listitems name="Port Neches" listvalue="" ordervalue="868" listitemid="3066" islist="0"/><listitems name="Portland" listvalue="" ordervalue="869" listitemid="3067" islist="0"/><listitems name="Post" listvalue="" ordervalue="870" listitemid="3068" islist="0"/><listitems name="Post Oak Bend" listvalue="" ordervalue="871" listitemid="3069" islist="0"/><listitems name="Poteet" listvalue="" ordervalue="872" listitemid="3070" islist="0"/><listitems name="Poth" listvalue="" ordervalue="873" listitemid="3071" islist="0"/><listitems name="Pottsboro" listvalue="" ordervalue="874" listitemid="3072" islist="0"/><listitems name="Powell" listvalue="" ordervalue="875" listitemid="3073" islist="0"/><listitems name="Poynor" listvalue="" ordervalue="876" listitemid="3074" islist="0"/><listitems name="Prairie View" listvalue="" ordervalue="877" listitemid="3075" islist="0"/><listitems name="Premont" listvalue="" ordervalue="878" listitemid="3076" islist="0"/><listitems name="Presidio" listvalue="" ordervalue="879" listitemid="3077" islist="0"/><listitems name="Primera" listvalue="" ordervalue="880" listitemid="3078" islist="0"/><listitems name="Princeton" listvalue="" ordervalue="881" listitemid="3079" islist="0"/><listitems name="Progreso" listvalue="" ordervalue="882" listitemid="3080" islist="0"/><listitems name="Progreso Lakes" listvalue="" ordervalue="883" listitemid="3081" islist="0"/><listitems name="Prosper" listvalue="" ordervalue="884" listitemid="3082" islist="0"/><listitems name="Providence Village" listvalue="" ordervalue="885" listitemid="3083" islist="0"/><listitems name="Putnam" listvalue="" ordervalue="886" listitemid="3084" islist="0"/><listitems name="Pyote" listvalue="" ordervalue="887" listitemid="3085" islist="0"/><listitems name="Quanah" listvalue="" ordervalue="888" listitemid="3086" islist="0"/><listitems name="Queen City" listvalue="" ordervalue="889" listitemid="3087" islist="0"/><listitems name="Quinlan" listvalue="" ordervalue="890" listitemid="3088" islist="0"/><listitems name="Quintana" listvalue="" ordervalue="891" listitemid="3089" islist="0"/><listitems name="Quitaque" listvalue="" ordervalue="892" listitemid="3090" islist="0"/><listitems name="Quitman" listvalue="" ordervalue="893" listitemid="3091" islist="0"/><listitems name="Ralls" listvalue="" ordervalue="894" listitemid="3092" islist="0"/><listitems name="Rancho Viejo" listvalue="" ordervalue="895" listitemid="3093" islist="0"/><listitems name="Ranger" listvalue="" ordervalue="896" listitemid="3094" islist="0"/><listitems name="Rangerville" listvalue="" ordervalue="897" listitemid="3095" islist="0"/><listitems name="Rankin" listvalue="" ordervalue="898" listitemid="3096" islist="0"/><listitems name="Ransom Canyon" listvalue="" ordervalue="899" listitemid="3097" islist="0"/><listitems name="Ravenna" listvalue="" ordervalue="900" listitemid="3098" islist="0"/><listitems name="Raymondville" listvalue="" ordervalue="901" listitemid="3099" islist="0"/><listitems name="Red Lick" listvalue="" ordervalue="902" listitemid="3100" islist="0"/><listitems name="Red Oak" listvalue="" ordervalue="903" listitemid="3101" islist="0"/><listitems name="Redwater" listvalue="" ordervalue="904" listitemid="3102" islist="0"/><listitems name="Refugio" listvalue="" ordervalue="905" listitemid="3103" islist="0"/><listitems name="Reklaw" listvalue="" ordervalue="906" listitemid="3104" islist="0"/><listitems name="Reno (Lamar)" listvalue="" ordervalue="907" listitemid="3105" islist="0"/><listitems name="Reno (Parker)" listvalue="" ordervalue="908" listitemid="3106" islist="0"/><listitems name="Retreat" listvalue="" ordervalue="909" listitemid="3107" islist="0"/><listitems name="Rhome" listvalue="" ordervalue="910" listitemid="3108" islist="0"/><listitems name="Rice" listvalue="" ordervalue="911" listitemid="3109" islist="0"/><listitems name="Richardson" listvalue="" ordervalue="912" listitemid="3110" islist="0"/><listitems name="Richland" listvalue="" ordervalue="913" listitemid="3111" islist="0"/><listitems name="Richland Hills" listvalue="" ordervalue="914" listitemid="3112" islist="0"/><listitems name="Richland Springs" listvalue="" ordervalue="915" listitemid="3113" islist="0"/><listitems name="Richmond" listvalue="" ordervalue="916" listitemid="3114" islist="0"/><listitems name="Richwood" listvalue="" ordervalue="917" listitemid="3115" islist="0"/><listitems name="Riesel" listvalue="" ordervalue="918" listitemid="3116" islist="0"/><listitems name="Rio Bravo" listvalue="" ordervalue="919" listitemid="3117" islist="0"/><listitems name="Rio Grande City" listvalue="" ordervalue="920" listitemid="3118" islist="0"/><listitems name="Rio Hondo" listvalue="" ordervalue="921" listitemid="3119" islist="0"/><listitems name="Rio Vista" listvalue="" ordervalue="922" listitemid="3120" islist="0"/><listitems name="Rising Star" listvalue="" ordervalue="923" listitemid="3121" islist="0"/><listitems name="River Oaks" listvalue="" ordervalue="924" listitemid="3122" islist="0"/><listitems name="Riverside" listvalue="" ordervalue="925" listitemid="3123" islist="0"/><listitems name="Roanoke" listvalue="" ordervalue="926" listitemid="3124" islist="0"/><listitems name="Roaring Springs" listvalue="" ordervalue="927" listitemid="3125" islist="0"/><listitems name="Robert Lee" listvalue="" ordervalue="928" listitemid="3126" islist="0"/><listitems name="Robinson" listvalue="" ordervalue="929" listitemid="3127" islist="0"/><listitems name="Robstown" listvalue="" ordervalue="930" listitemid="3128" islist="0"/><listitems name="Roby" listvalue="" ordervalue="931" listitemid="3129" islist="0"/><listitems name="Rochester" listvalue="" ordervalue="932" listitemid="3130" islist="0"/><listitems name="Rockdale" listvalue="" ordervalue="933" listitemid="3131" islist="0"/><listitems name="Rockport" listvalue="" ordervalue="934" listitemid="3132" islist="0"/><listitems name="Rocksprings" listvalue="" ordervalue="935" listitemid="3133" islist="0"/><listitems name="Rockwall" listvalue="" ordervalue="936" listitemid="3134" islist="0"/><listitems name="Rocky Mound" listvalue="" ordervalue="937" listitemid="3135" islist="0"/><listitems name="Rogers" listvalue="" ordervalue="938" listitemid="3136" islist="0"/><listitems name="Rollingwood" listvalue="" ordervalue="939" listitemid="3137" islist="0"/><listitems name="Roma" listvalue="" ordervalue="940" listitemid="3138" islist="0"/><listitems name="Roman Forest" listvalue="" ordervalue="941" listitemid="3139" islist="0"/><listitems name="Ropesville" listvalue="" ordervalue="942" listitemid="3140" islist="0"/><listitems name="Roscoe" listvalue="" ordervalue="943" listitemid="3141" islist="0"/><listitems name="Rose City" listvalue="" ordervalue="944" listitemid="3142" islist="0"/><listitems name="Rose Hill Acres" listvalue="" ordervalue="945" listitemid="3143" islist="0"/><listitems name="Rosebud" listvalue="" ordervalue="946" listitemid="3144" islist="0"/><listitems name="Rosenberg" listvalue="" ordervalue="947" listitemid="3145" islist="0"/><listitems name="Ross" listvalue="" ordervalue="948" listitemid="3146" islist="0"/><listitems name="Rosser" listvalue="" ordervalue="949" listitemid="3147" islist="0"/><listitems name="Rotan" listvalue="" ordervalue="950" listitemid="3148" islist="0"/><listitems name="Round Mountain" listvalue="" ordervalue="951" listitemid="3149" islist="0"/><listitems name="Round Rock" listvalue="" ordervalue="952" listitemid="3150" islist="0"/><listitems name="Round Top" listvalue="" ordervalue="953" listitemid="3151" islist="0"/><listitems name="Rowlett" listvalue="" ordervalue="954" listitemid="3152" islist="0"/><listitems name="Roxton" listvalue="" ordervalue="955" listitemid="3153" islist="0"/><listitems name="Royse City" listvalue="" ordervalue="956" listitemid="3154" islist="0"/><listitems name="Rule" listvalue="" ordervalue="957" listitemid="3155" islist="0"/><listitems name="Runaway Bay" listvalue="" ordervalue="958" listitemid="3156" islist="0"/><listitems name="Runge" listvalue="" ordervalue="959" listitemid="3157" islist="0"/><listitems name="Rusk" listvalue="" ordervalue="960" listitemid="3158" islist="0"/><listitems name="Sabinal" listvalue="" ordervalue="961" listitemid="3159" islist="0"/><listitems name="Sachse" listvalue="" ordervalue="962" listitemid="3160" islist="0"/><listitems name="Sadler" listvalue="" ordervalue="963" listitemid="3161" islist="0"/><listitems name="Saginaw" listvalue="" ordervalue="964" listitemid="3162" islist="0"/><listitems name="Saint Hedwig" listvalue="" ordervalue="965" listitemid="3163" islist="0"/><listitems name="Saint Jo" listvalue="" ordervalue="966" listitemid="3164" islist="0"/><listitems name="Saint Paul" listvalue="" ordervalue="967" listitemid="3165" islist="0"/><listitems name="Salado" listvalue="" ordervalue="968" listitemid="3166" islist="0"/><listitems name="San Angelo" listvalue="" ordervalue="969" listitemid="3167" islist="0"/><listitems name="San Antonio" listvalue="" ordervalue="970" listitemid="3168" islist="0"/><listitems name="San Augustine" listvalue="" ordervalue="971" listitemid="3169" islist="0"/><listitems name="San Benito" listvalue="" ordervalue="972" listitemid="3170" islist="0"/><listitems name="San Diego" listvalue="" ordervalue="973" listitemid="3171" islist="0"/><listitems name="San Felipe" listvalue="" ordervalue="974" listitemid="3172" islist="0"/><listitems name="San Juan" listvalue="" ordervalue="975" listitemid="3173" islist="0"/><listitems name="San Leanna" listvalue="" ordervalue="976" listitemid="3174" islist="0"/><listitems name="San Marcos" listvalue="" ordervalue="977" listitemid="3175" islist="0"/><listitems name="San Patricio" listvalue="" ordervalue="978" listitemid="3176" islist="0"/><listitems name="San Perlita" listvalue="" ordervalue="979" listitemid="3177" islist="0"/><listitems name="San Saba" listvalue="" ordervalue="980" listitemid="3178" islist="0"/><listitems name="Sanctuary" listvalue="" ordervalue="981" listitemid="3179" islist="0"/><listitems name="Sandy Point" listvalue="" ordervalue="982" listitemid="3180" islist="0"/><listitems name="Sanford" listvalue="" ordervalue="983" listitemid="3181" islist="0"/><listitems name="Sanger" listvalue="" ordervalue="984" listitemid="3182" islist="0"/><listitems name="Sansom Park" listvalue="" ordervalue="985" listitemid="3183" islist="0"/><listitems name="Santa Anna" listvalue="" ordervalue="986" listitemid="3184" islist="0"/><listitems name="Santa Clara" listvalue="" ordervalue="987" listitemid="3185" islist="0"/><listitems name="Santa Fe" listvalue="" ordervalue="988" listitemid="3186" islist="0"/><listitems name="Santa Rosa" listvalue="" ordervalue="989" listitemid="3187" islist="0"/><listitems name="Savoy" listvalue="" ordervalue="990" listitemid="3188" islist="0"/><listitems name="Schertz" listvalue="" ordervalue="991" listitemid="3189" islist="0"/><listitems name="Schulenburg" listvalue="" ordervalue="992" listitemid="3190" islist="0"/><listitems name="Scotland" listvalue="" ordervalue="993" listitemid="3191" islist="0"/><listitems name="Scottsville" listvalue="" ordervalue="994" listitemid="3192" islist="0"/><listitems name="Scurry" listvalue="" ordervalue="995" listitemid="3193" islist="0"/><listitems name="Seabrook" listvalue="" ordervalue="996" listitemid="3194" islist="0"/><listitems name="Seadrift" listvalue="" ordervalue="997" listitemid="3195" islist="0"/><listitems name="Seagoville" listvalue="" ordervalue="998" listitemid="3196" islist="0"/><listitems name="Seagraves" listvalue="" ordervalue="999" listitemid="3197" islist="0"/><listitems name="Sealy" listvalue="" ordervalue="1000" listitemid="3198" islist="0"/><listitems name="Seguin" listvalue="" ordervalue="1001" listitemid="3199" islist="0"/><listitems name="Selma" listvalue="" ordervalue="1002" listitemid="3200" islist="0"/><listitems name="Seminole" listvalue="" ordervalue="1003" listitemid="3201" islist="0"/><listitems name="Seven Oaks" listvalue="" ordervalue="1004" listitemid="3202" islist="0"/><listitems name="Seven Points" listvalue="" ordervalue="1005" listitemid="3203" islist="0"/><listitems name="Seymour" listvalue="" ordervalue="1006" listitemid="3204" islist="0"/><listitems name="Shady Shores" listvalue="" ordervalue="1007" listitemid="3205" islist="0"/><listitems name="Shallowater" listvalue="" ordervalue="1008" listitemid="3206" islist="0"/><listitems name="Shamrock" listvalue="" ordervalue="1009" listitemid="3207" islist="0"/><listitems name="Shavano Park" listvalue="" ordervalue="1010" listitemid="3208" islist="0"/><listitems name="Shenandoah" listvalue="" ordervalue="1011" listitemid="3209" islist="0"/><listitems name="Shepherd" listvalue="" ordervalue="1012" listitemid="3210" islist="0"/><listitems name="Sherman" listvalue="" ordervalue="1013" listitemid="3211" islist="0"/><listitems name="Shiner" listvalue="" ordervalue="1014" listitemid="3212" islist="0"/><listitems name="Shoreacres" listvalue="" ordervalue="1015" listitemid="3213" islist="0"/><listitems name="Silsbee" listvalue="" ordervalue="1016" listitemid="3214" islist="0"/><listitems name="Silverton" listvalue="" ordervalue="1017" listitemid="3215" islist="0"/><listitems name="Simonton" listvalue="" ordervalue="1018" listitemid="3216" islist="0"/><listitems name="Sinton" listvalue="" ordervalue="1019" listitemid="3217" islist="0"/><listitems name="Skellytown" listvalue="" ordervalue="1020" listitemid="3218" islist="0"/><listitems name="Slaton" listvalue="" ordervalue="1021" listitemid="3219" islist="0"/><listitems name="Smiley" listvalue="" ordervalue="1022" listitemid="3220" islist="0"/><listitems name="Smithville" listvalue="" ordervalue="1023" listitemid="3221" islist="0"/><listitems name="Smyer" listvalue="" ordervalue="1024" listitemid="3222" islist="0"/><listitems name="Snook" listvalue="" ordervalue="1025" listitemid="3223" islist="0"/><listitems name="Snyder" listvalue="" ordervalue="1026" listitemid="3224" islist="0"/><listitems name="Socorro" listvalue="" ordervalue="1027" listitemid="3225" islist="0"/><listitems name="Somerset" listvalue="" ordervalue="1028" listitemid="3226" islist="0"/><listitems name="Somerville" listvalue="" ordervalue="1029" listitemid="3227" islist="0"/><listitems name="Sonora" listvalue="" ordervalue="1030" listitemid="3228" islist="0"/><listitems name="Sour Lake" listvalue="" ordervalue="1031" listitemid="3229" islist="0"/><listitems name="South Houston" listvalue="" ordervalue="1032" listitemid="3230" islist="0"/><listitems name="South Mountain" listvalue="" ordervalue="1033" listitemid="3231" islist="0"/><listitems name="South Padre Island" listvalue="" ordervalue="1034" listitemid="3232" islist="0"/><listitems name="Southlake" listvalue="" ordervalue="1035" listitemid="3233" islist="0"/><listitems name="Southmayd" listvalue="" ordervalue="1036" listitemid="3234" islist="0"/><listitems name="Southside Place" listvalue="" ordervalue="1037" listitemid="3235" islist="0"/><listitems name="Spearman" listvalue="" ordervalue="1038" listitemid="3236" islist="0"/><listitems name="Splendora" listvalue="" ordervalue="1039" listitemid="3237" islist="0"/><listitems name="Spofford" listvalue="" ordervalue="1040" listitemid="3238" islist="0"/><listitems name="Spring Valley" listvalue="" ordervalue="1041" listitemid="3239" islist="0"/><listitems name="Springlake" listvalue="" ordervalue="1042" listitemid="3240" islist="0"/><listitems name="Springtown" listvalue="" ordervalue="1043" listitemid="3241" islist="0"/><listitems name="Spur" listvalue="" ordervalue="1044" listitemid="3242" islist="0"/><listitems name="Stafford" listvalue="" ordervalue="1045" listitemid="3243" islist="0"/><listitems name="Stagecoach" listvalue="" ordervalue="1046" listitemid="3244" islist="0"/><listitems name="Stamford" listvalue="" ordervalue="1047" listitemid="3245" islist="0"/><listitems name="Stanton" listvalue="" ordervalue="1048" listitemid="3246" islist="0"/><listitems name="Staples" listvalue="" ordervalue="1049" listitemid="3247" islist="0"/><listitems name="Star Harbor" listvalue="" ordervalue="1050" listitemid="3248" islist="0"/><listitems name="Stephenville" listvalue="" ordervalue="1051" listitemid="3249" islist="0"/><listitems name="Sterling City" listvalue="" ordervalue="1052" listitemid="3250" islist="0"/><listitems name="Stinnett" listvalue="" ordervalue="1053" listitemid="3251" islist="0"/><listitems name="Stockdale" listvalue="" ordervalue="1054" listitemid="3252" islist="0"/><listitems name="Stratford" listvalue="" ordervalue="1055" listitemid="3253" islist="0"/><listitems name="Strawn" listvalue="" ordervalue="1056" listitemid="3254" islist="0"/><listitems name="Streetman" listvalue="" ordervalue="1057" listitemid="3255" islist="0"/><listitems name="Sudan" listvalue="" ordervalue="1058" listitemid="3256" islist="0"/><listitems name="Sugar Land" listvalue="" ordervalue="1059" listitemid="3257" islist="0"/><listitems name="Sullivan City" listvalue="" ordervalue="1060" listitemid="3258" islist="0"/><listitems name="Sulphur Springs" listvalue="" ordervalue="1061" listitemid="3259" islist="0"/><listitems name="Sun Valley" listvalue="" ordervalue="1062" listitemid="3260" islist="0"/><listitems name="Sundown" listvalue="" ordervalue="1063" listitemid="3261" islist="0"/><listitems name="Sunnyvale" listvalue="" ordervalue="1064" listitemid="3262" islist="0"/><listitems name="Sunray" listvalue="" ordervalue="1065" listitemid="3263" islist="0"/><listitems name="Sunrise Beach Village" listvalue="" ordervalue="1066" listitemid="3264" islist="0"/><listitems name="Sunset Valley" listvalue="" ordervalue="1067" listitemid="3265" islist="0"/><listitems name="Surfside Beach" listvalue="" ordervalue="1068" listitemid="3266" islist="0"/><listitems name="Sweeny" listvalue="" ordervalue="1069" listitemid="3267" islist="0"/><listitems name="Sweetwater" listvalue="" ordervalue="1070" listitemid="3268" islist="0"/><listitems name="Taft" listvalue="" ordervalue="1071" listitemid="3269" islist="0"/><listitems name="Tahoka" listvalue="" ordervalue="1072" listitemid="3270" islist="0"/><listitems name="Talco" listvalue="" ordervalue="1073" listitemid="3271" islist="0"/><listitems name="Talty" listvalue="" ordervalue="1074" listitemid="3272" islist="0"/><listitems name="Tatum" listvalue="" ordervalue="1075" listitemid="3273" islist="0"/><listitems name="Taylor" listvalue="" ordervalue="1076" listitemid="3274" islist="0"/><listitems name="Taylor Lake Village" listvalue="" ordervalue="1077" listitemid="3275" islist="0"/><listitems name="Taylor Landing" listvalue="" ordervalue="1078" listitemid="3276" islist="0"/><listitems name="Teague" listvalue="" ordervalue="1079" listitemid="3277" islist="0"/><listitems name="Tehuacana" listvalue="" ordervalue="1080" listitemid="3278" islist="0"/><listitems name="Temple" listvalue="" ordervalue="1081" listitemid="3279" islist="0"/><listitems name="Tenaha" listvalue="" ordervalue="1082" listitemid="3280" islist="0"/><listitems name="Terrell" listvalue="" ordervalue="1083" listitemid="3281" islist="0"/><listitems name="Terrell Hills" listvalue="" ordervalue="1084" listitemid="3282" islist="0"/><listitems name="Texarkana" listvalue="" ordervalue="1085" listitemid="3283" islist="0"/><listitems name="Texas City" listvalue="" ordervalue="1086" listitemid="3284" islist="0"/><listitems name="Texhoma" listvalue="" ordervalue="1087" listitemid="3285" islist="0"/><listitems name="Texline" listvalue="" ordervalue="1088" listitemid="3286" islist="0"/><listitems name="The Colony" listvalue="" ordervalue="1089" listitemid="3287" islist="0"/><listitems name="Thompsons" listvalue="" ordervalue="1090" listitemid="3288" islist="0"/><listitems name="Thorndale" listvalue="" ordervalue="1091" listitemid="3289" islist="0"/><listitems name="Thornton" listvalue="" ordervalue="1092" listitemid="3290" islist="0"/><listitems name="Thorntonville" listvalue="" ordervalue="1093" listitemid="3291" islist="0"/><listitems name="Thrall" listvalue="" ordervalue="1094" listitemid="3292" islist="0"/><listitems name="Three Rivers" listvalue="" ordervalue="1095" listitemid="3293" islist="0"/><listitems name="Throckmorton" listvalue="" ordervalue="1096" listitemid="3294" islist="0"/><listitems name="Tiki Island" listvalue="" ordervalue="1097" listitemid="3295" islist="0"/><listitems name="Timbercreek Canyon" listvalue="" ordervalue="1098" listitemid="3296" islist="0"/><listitems name="Timpson" listvalue="" ordervalue="1099" listitemid="3297" islist="0"/><listitems name="Tioga" listvalue="" ordervalue="1100" listitemid="3298" islist="0"/><listitems name="Tira" listvalue="" ordervalue="1101" listitemid="3299" islist="0"/><listitems name="Toco" listvalue="" ordervalue="1102" listitemid="3300" islist="0"/><listitems name="Todd Mission" listvalue="" ordervalue="1103" listitemid="3301" islist="0"/><listitems name="Tolar" listvalue="" ordervalue="1104" listitemid="3302" islist="0"/><listitems name="Tom Bean" listvalue="" ordervalue="1105" listitemid="3303" islist="0"/><listitems name="Tomball" listvalue="" ordervalue="1106" listitemid="3304" islist="0"/><listitems name="Tool" listvalue="" ordervalue="1107" listitemid="3305" islist="0"/><listitems name="Toyah" listvalue="" ordervalue="1108" listitemid="3306" islist="0"/><listitems name="Trent" listvalue="" ordervalue="1109" listitemid="3307" islist="0"/><listitems name="Trenton" listvalue="" ordervalue="1110" listitemid="3308" islist="0"/><listitems name="Trinidad" listvalue="" ordervalue="1111" listitemid="3309" islist="0"/><listitems name="Trinity" listvalue="" ordervalue="1112" listitemid="3310" islist="0"/><listitems name="Trophy Club" listvalue="" ordervalue="1113" listitemid="3311" islist="0"/><listitems name="Troup" listvalue="" ordervalue="1114" listitemid="3312" islist="0"/><listitems name="Troy" listvalue="" ordervalue="1115" listitemid="3313" islist="0"/><listitems name="Tulia" listvalue="" ordervalue="1116" listitemid="3314" islist="0"/><listitems name="Turkey" listvalue="" ordervalue="1117" listitemid="3315" islist="0"/><listitems name="Tuscola" listvalue="" ordervalue="1118" listitemid="3316" islist="0"/><listitems name="Tye" listvalue="" ordervalue="1119" listitemid="3317" islist="0"/><listitems name="Tyler" listvalue="" ordervalue="1120" listitemid="3318" islist="0"/><listitems name="Uhland" listvalue="" ordervalue="1121" listitemid="3319" islist="0"/><listitems name="Uncertain" listvalue="" ordervalue="1122" listitemid="3320" islist="0"/><listitems name="Union Grove" listvalue="" ordervalue="1123" listitemid="3321" islist="0"/><listitems name="Union Valley" listvalue="" ordervalue="1124" listitemid="3322" islist="0"/><listitems name="Universal City" listvalue="" ordervalue="1125" listitemid="3323" islist="0"/><listitems name="University Park" listvalue="" ordervalue="1126" listitemid="3324" islist="0"/><listitems name="Uvalde" listvalue="" ordervalue="1127" listitemid="3325" islist="0"/><listitems name="Valentine" listvalue="" ordervalue="1128" listitemid="3326" islist="0"/><listitems name="Valley Mills" listvalue="" ordervalue="1129" listitemid="3327" islist="0"/><listitems name="Valley View" listvalue="" ordervalue="1130" listitemid="3328" islist="0"/><listitems name="Van" listvalue="" ordervalue="1131" listitemid="3329" islist="0"/><listitems name="Van Alstyne" listvalue="" ordervalue="1132" listitemid="3330" islist="0"/><listitems name="Van Horn" listvalue="" ordervalue="1133" listitemid="3331" islist="0"/><listitems name="Vega" listvalue="" ordervalue="1134" listitemid="3332" islist="0"/><listitems name="Venus" listvalue="" ordervalue="1135" listitemid="3333" islist="0"/><listitems name="Vernon" listvalue="" ordervalue="1136" listitemid="3334" islist="0"/><listitems name="Victoria" listvalue="" ordervalue="1137" listitemid="3335" islist="0"/><listitems name="Vidor" listvalue="" ordervalue="1138" listitemid="3336" islist="0"/><listitems name="Village of The Hills" listvalue="" ordervalue="1139" listitemid="3337" islist="0"/><listitems name="Villiage of Volente" listvalue="" ordervalue="1140" listitemid="3338" islist="0"/><listitems name="Vinton" listvalue="" ordervalue="1141" listitemid="3339" islist="0"/><listitems name="Von Ormy" listvalue="" ordervalue="1142" listitemid="3340" islist="0"/><listitems name="Waco" listvalue="" ordervalue="1143" listitemid="3341" islist="0"/><listitems name="Waelder" listvalue="" ordervalue="1144" listitemid="3342" islist="0"/><listitems name="Wake Village" listvalue="" ordervalue="1145" listitemid="3343" islist="0"/><listitems name="Waller" listvalue="" ordervalue="1146" listitemid="3344" islist="0"/><listitems name="Wallis" listvalue="" ordervalue="1147" listitemid="3345" islist="0"/><listitems name="Walnut Springs" listvalue="" ordervalue="1148" listitemid="3346" islist="0"/><listitems name="Warren City" listvalue="" ordervalue="1149" listitemid="3347" islist="0"/><listitems name="Waskom" listvalue="" ordervalue="1150" listitemid="3348" islist="0"/><listitems name="Watauga" listvalue="" ordervalue="1151" listitemid="3349" islist="0"/><listitems name="Waxahachie" listvalue="" ordervalue="1152" listitemid="3350" islist="0"/><listitems name="Weatherford" listvalue="" ordervalue="1153" listitemid="3351" islist="0"/><listitems name="Webberville" listvalue="" ordervalue="1154" listitemid="3352" islist="0"/><listitems name="Webster" listvalue="" ordervalue="1155" listitemid="3353" islist="0"/><listitems name="Weimar" listvalue="" ordervalue="1156" listitemid="3354" islist="0"/><listitems name="Weinert" listvalue="" ordervalue="1157" listitemid="3355" islist="0"/><listitems name="Weir" listvalue="" ordervalue="1158" listitemid="3356" islist="0"/><listitems name="Wellington" listvalue="" ordervalue="1159" listitemid="3357" islist="0"/><listitems name="Wellman" listvalue="" ordervalue="1160" listitemid="3358" islist="0"/><listitems name="Wells" listvalue="" ordervalue="1161" listitemid="3359" islist="0"/><listitems name="Weslaco" listvalue="" ordervalue="1162" listitemid="3360" islist="0"/><listitems name="West" listvalue="" ordervalue="1163" listitemid="3361" islist="0"/><listitems name="West Columbia" listvalue="" ordervalue="1164" listitemid="3362" islist="0"/><listitems name="West Lake Hills" listvalue="" ordervalue="1165" listitemid="3363" islist="0"/><listitems name="West Orange" listvalue="" ordervalue="1166" listitemid="3364" islist="0"/><listitems name="West Tawakoni" listvalue="" ordervalue="1167" listitemid="3365" islist="0"/><listitems name="West University Place" listvalue="" ordervalue="1168" listitemid="3366" islist="0"/><listitems name="Westbrook" listvalue="" ordervalue="1169" listitemid="3367" islist="0"/><listitems name="Westlake" listvalue="" ordervalue="1170" listitemid="3368" islist="0"/><listitems name="Weston" listvalue="" ordervalue="1171" listitemid="3369" islist="0"/><listitems name="Weston Lakes" listvalue="" ordervalue="1172" listitemid="3370" islist="0"/><listitems name="Westover Hills" listvalue="" ordervalue="1173" listitemid="3371" islist="0"/><listitems name="Westworth Village" listvalue="" ordervalue="1174" listitemid="3372" islist="0"/><listitems name="Wharton" listvalue="" ordervalue="1175" listitemid="3373" islist="0"/><listitems name="Wheeler" listvalue="" ordervalue="1176" listitemid="3374" islist="0"/><listitems name="White Deer" listvalue="" ordervalue="1177" listitemid="3375" islist="0"/><listitems name="White Oak" listvalue="" ordervalue="1178" listitemid="3376" islist="0"/><listitems name="White Settlement" listvalue="" ordervalue="1179" listitemid="3377" islist="0"/><listitems name="Whiteface" listvalue="" ordervalue="1180" listitemid="3378" islist="0"/><listitems name="Whitehouse" listvalue="" ordervalue="1181" listitemid="3379" islist="0"/><listitems name="Whitesboro" listvalue="" ordervalue="1182" listitemid="3380" islist="0"/><listitems name="Whitewright" listvalue="" ordervalue="1183" listitemid="3381" islist="0"/><listitems name="Whitney" listvalue="" ordervalue="1184" listitemid="3382" islist="0"/><listitems name="Wichita Falls" listvalue="" ordervalue="1185" listitemid="3383" islist="0"/><listitems name="Wickett" listvalue="" ordervalue="1186" listitemid="3384" islist="0"/><listitems name="Willis" listvalue="" ordervalue="1187" listitemid="3385" islist="0"/><listitems name="Willow Park" listvalue="" ordervalue="1188" listitemid="3386" islist="0"/><listitems name="Wills Point" listvalue="" ordervalue="1189" listitemid="3387" islist="0"/><listitems name="Wilmer" listvalue="" ordervalue="1190" listitemid="3388" islist="0"/><listitems name="Wilson" listvalue="" ordervalue="1191" listitemid="3389" islist="0"/><listitems name="Wimberley" listvalue="" ordervalue="1192" listitemid="3390" islist="0"/><listitems name="Windcrest" listvalue="" ordervalue="1193" listitemid="3391" islist="0"/><listitems name="Windom" listvalue="" ordervalue="1194" listitemid="3392" islist="0"/><listitems name="Windthorst" listvalue="" ordervalue="1195" listitemid="3393" islist="0"/><listitems name="Winfield" listvalue="" ordervalue="1196" listitemid="3394" islist="0"/><listitems name="Wink" listvalue="" ordervalue="1197" listitemid="3395" islist="0"/><listitems name="Winnsboro" listvalue="" ordervalue="1198" listitemid="3396" islist="0"/><listitems name="Winona" listvalue="" ordervalue="1199" listitemid="3397" islist="0"/><listitems name="Winters" listvalue="" ordervalue="1200" listitemid="3398" islist="0"/><listitems name="Wixon Valley" listvalue="" ordervalue="1201" listitemid="3399" islist="0"/><listitems name="Wolfe City" listvalue="" ordervalue="1202" listitemid="3400" islist="0"/><listitems name="Wolfforth" listvalue="" ordervalue="1203" listitemid="3401" islist="0"/><listitems name="Woodbranch Village" listvalue="" ordervalue="1204" listitemid="3402" islist="0"/><listitems name="Woodcreek" listvalue="" ordervalue="1205" listitemid="3403" islist="0"/><listitems name="Woodloch" listvalue="" ordervalue="1206" listitemid="3404" islist="0"/><listitems name="Woodsboro" listvalue="" ordervalue="1207" listitemid="3405" islist="0"/><listitems name="Woodson" listvalue="" ordervalue="1208" listitemid="3406" islist="0"/><listitems name="Woodville" listvalue="" ordervalue="1209" listitemid="3407" islist="0"/><listitems name="Woodway" listvalue="" ordervalue="1210" listitemid="3408" islist="0"/><listitems name="Wortham" listvalue="" ordervalue="1211" listitemid="3409" islist="0"/><listitems name="Wylie" listvalue="" ordervalue="1212" listitemid="3410" islist="0"/><listitems name="Yantis" listvalue="" ordervalue="1213" listitemid="3411" islist="0"/><listitems name="Yoakum" listvalue="" ordervalue="1214" listitemid="3412" islist="0"/><listitems name="Yorktown" listvalue="" ordervalue="1215" listitemid="3413" islist="0"/><listitems name="Zavalla" listvalue="" ordervalue="1216" listitemid="3414" islist="0"/></lists><html version="6" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><head><title>DSO Form</title><!--this works--><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/jquery.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.js" /><style type="text/css"> 
        #container {  margin: 50px;
        }
        .form-group.required .control-label:after {
  content:"*";
  color:red;
}
    </style><script type="text/javascript">
                var cityArrayCopy = [];
      var cats = true;
            var scribe = { 
            status: 0,
            autoRun: function () { },
            baseArray: [],
            changesMade: false,
            Evaluation: function() {
    var a=[];
    for(var i=0; i &lt; scribe.fields4History.length; i++) {
      var b=document.getElementsByName(scribe.fields4History[i][0]);
      for(var k=0; k &lt; b.length; k++) {
        var result=[];
        if(b[k].tagName==="SELECT") {
            var ms = b[k].selectedOptions;
            var msr =[];
            for(var msi=0; msi &lt; ms.length; ms++){
               msr.push(ms[msi].text);
            }
             result.push(scribe.fields4History[i][1]);
             result.push(msr.join(','));   
        } else if (b[k].type==="radio" || b[k].type==="checkbox") {
          result.push(scribe.fields4History[i][1]);
          if(b[k].checked===true) {
            result.push('Selected');
          } else {
            result.push('Not Selected');
          }
        } else {
          result.push(scribe.fields4History[i][1]);
          result.push(b[k].value);
        }
        a.push(result);
        
      }
    }
    return a;
            },
            inicialReview: function () {
                scribe.baseArray = scribe.Evaluation();
            },
            postReview: function () {
                var p = [];
                var f = scribe.Evaluation();
                for (var i = 0; i &lt; f.length; i++) {
                    if (f[i][1] !== scribe.baseArray[i][1]) {
                        p.push(f[i][0] + ': ' + f[i][1]);
                    }
                }
                p = p.join('\r\n');
                if (p.length &gt; 0) { scribe.changesMade = true; } else {
                document.getElementById('cancelbtn').click();
                //cancels unedited save
                }
                return p;
            }
        };
        function removeOptions(obj) {
            if (obj == null) return;
            if (obj.options == null) return;
            obj.options.length = 0;
        }

        function iaAverage() {
   var a1 = document.getElementById("sfhCovByInsurance").value;
   var a2 = document.getElementById("mhCovByInsurance").value;
   var a3 = document.getElementById("mfuCovByInsurance").value;
   var num = 0;
   if (a1 != ("" || 0)) {
       num += 1
   } else {
       a1 = 0;
   };
   if (a2 != ("" || 0)) {
       num += 1
   } else {
       a2 = 0;
   };
   if (a3 != ("" || 0)) {
       num += 1
   } else {
       a3 = 0;
   };
   var avg = (parseFloat(a1) + parseFloat(a2) + parseFloat(a3)) / num;
   if (num === 0) {
    document.getElementById("totalsCovByInsurance").value = '';
       return false;

   } else {
       document.getElementById("totalsCovByInsurance").value = avg;
   }
}


       function autoSum() {
            var fields = ["totalsAffected", "totalsMinorDamage", "totalsMajorDamage", "totalsDestroyed", "numberTotal", "coveredTotal", "totalTotal", "sitesTotals", "repairCostTotals", "insuranceTotals", "sitesOtherTotal", "repairCostTotal", "insuranceCostTotal"];
            for (var i = 0; i &lt; fields.length; i++) {
                var objs = document.getElementsByClassName(fields[i]);
                for (var h = 0; h &lt; objs.length; h++) {
                    objs[h].idByClass = fields[i];
                    objs[h].onblur = function () {
                        var t = 0;
                        var a = document.getElementsByClassName(this.idByClass);
                        for (var b = 0; b &lt; a.length; b++) {
                            if (a[b].value != '') {
                                var u = removeNonNumber(a[b].value);
                                t+= parseFloat(u);
                                a[b].value = comma(u);
                                /*if (isNaN(a[b].value) === false) {
                                    t += parseFloat(a[b].value)
                                }
                                else {
                                    numError(a[b].value);
                                    a[b].value = 0;

                                }*/
                            }
                        }
                        document.getElementById(this.idByClass).value = comma(t);
                        console.log('sums run');
                    };
                }
            }
        }
        
        function removeNonNumber(a) {
            a = a.replace(/[^0-9.-]+/g, '');
            var t = 0;
            if (a != '') {
                if (isNaN(a) === false) {
                    t += parseFloat(a)
                } else {
                    return 0;

                }
            }
            return t.toFixed(2);
        }
        function comma(x) {
            if (isNaN(x) === true || x == "") {
                x == undefined ? x = '' : x = x;
                return x;
            }
            x = parseFloat(x).toFixed(2);
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            //return x;
        }
        function commandInfoWindow(clickedId, title, message) {
            $('#' + clickedId).click(function () {
                BootstrapDialog.show({
                    title: title,
                    message: function (dialog) {
                        var $content = $(message);
                        return $content;
                    },

                });
            })

        }

        function addOption(select, optionTxt, selected) {
            var option = document.createElement("option");
            option.text = optionTxt;
            option.id = optionTxt;
            option.selected = selected;
            try {
                select.add(option, null);
            }
            catch (ex) {
                select.add(option);
            }
        }

//the code below works, it is just too long to be the correct color
        var cityMatrix = [["Hill", "Abbott"], ["Hale", "Abernathy"], ["Lubbock", "Abernathy"], ["Jones", "Abilene"], ["Taylor", "Abilene"], ["Dawson", "Ackerly"], ["Martin", "Ackerly"], ["Collin", "Addison"], ["Dallas", "Addison"], ["Oldham", "Adrian"], ["Nueces", "Agua Dulce"], ["Hidalgo", "Alamo"], ["Bexar", "Alamo Heights"], ["Wood", "Alba"], ["Rains", "Alba"], ["Shackelford", "Albany"], ["Parker", "Aledo"], ["Jim Wells", "Alice"], ["Collin", "Allen"], ["Ellis", "Alma"], ["Brewster", "Alpine"], ["Cherokee", "Alto"], ["Hidalgo", "Alton"], ["Johnson", "Alvarado"], ["Brazoria", "Alvin"], ["Galveston", "Alvin"], ["Wise", "Alvord"], ["Potter", "Amarillo"], ["Randall", "Amarillo"], ["Liberty", "Ames"], ["Lamb", "Amherst"], ["Chambers", "Anahuac"], ["Grimes", "Anderson"], ["Andrews", "Andrews"], ["Brazoria", "Angleton"], ["Navarro", "Angus"], ["Collin", "Anna"], ["Parker", "Annetta"], ["Parker", "Annetta North"], ["Parker", "Annetta South"], ["Red River", "Annona"], ["Jones", "Anson"], ["El Paso", "Anthony"], ["Hockley", "Anton"], ["Nacogdoches", "Appleby"], ["Hill", "Aquilla"], ["Aransas", "Aransas Pass"], ["San Patricio", "Aransas Pass"], ["Nueces", "Aransas Pass"], ["Archer", "Archer City"], ["Fort Bend", "Arcola"], ["Denton", "Argyle"], ["Tarrant", "Arlington"], ["Smith", "Arp"], ["Dimmit", "Asherton"], ["Stonewall", "Aspermont"], ["Henderson", "Athens"], ["Cass", "Atlanta"], ["Denton", "Aubrey"], ["Wise", "Aurora"], ["Williamson", "Austin"], ["Travis", "Austin"], ["Hays", "Austin"], ["Refugio", "Austwell"], ["Red River", "Avery"], ["Cass", "Avinger"], ["Parker", "Azle"], ["Tarrant", "Azle"], ["Fannin", "Bailey"], ["Brazoria", "Bailey's Prairie"], ["Callahan", "Baird"], ["Dallas", "Balch Springs"], ["Bexar", "Balcones Heights"], ["Runnels", "Ballinger"], ["Reeves", "Balmorhea"], ["Bandera", "Bandera"], ["Brown", "Bangs"], ["Ellis", "Bardwell"], ["Navarro", "Barry"], ["Ward", "Barstow"], ["Williamson", "Bartlett"], ["Bell", "Bartlett"], ["Denton", "Bartonville"], ["Bastrop", "Bastrop"], ["Matagorda", "Bay City"], ["Galveston", "Bayou Vista"], ["Refugio", "Bayside"], ["Harris", "Baytown"], ["Chambers", "Baytown"], ["Cameron", "Bayview"], ["Chambers", "Beach City"], ["Hays", "Bear Creek"], ["Fort Bend", "Beasley"], ["Jefferson", "Beaumont"], ["Hardin", "Beaumont"], ["Orange", "Beaumont"], ["Panola", "Beckville"], ["Tarrant", "Bedford"], ["Grimes", "Bedias"], ["Travis", "Bee Cave"], ["Bee", "Beeville"], ["Harris", "Bellaire"], ["Clay", "Bellevue"], ["McLennan", "Bellmead"], ["Grayson", "Bells"], ["Austin", "Bellville"], ["Bell", "Belton"], ["Duval", "Benavides"], ["Tarrant", "Benbrook"], ["Knox", "Benjamin"], ["Henderson", "Berryville"], ["Burnet", "Bertram"], ["McLennan", "Beverly Hills"], ["Jefferson", "Bevil Oaks"], ["Hardin", "Bevil Oaks"], ["Reagan", "Big Lake"], ["Upshur", "Big Sandy"], ["Howard", "Big Spring"], ["Dimmit", "Big Wells"], ["Nueces", "Bishop"], ["Potter", "Bishop Hills"], ["Coke", "Blackwell"], ["Nolan", "Blackwell"], ["Blanco", "Blanco"], ["Brown", "Blanket"], ["Cass", "Bloomburg"], ["Navarro", "Blooming Grove"], ["Lamar", "Blossom"], ["Tarrant", "Blue Mound"], ["Collin", "Blue Ridge"], ["Hill", "Blum"], ["Kendall", "Boerne"], ["Red River", "Bogata"], ["Fannin", "Bonham"], ["Brazoria", "Bonney"], ["Ochiltree", "Booker"], ["Lipscomb", "Booker"], ["Hutchinson", "Borger"], ["Parmer", "Bovina"], ["Montague", "Bowie"], ["Wise", "Boyd"], ["Kinney", "Brackettville"], ["McCulloch", "Brady"], ["Brazoria", "Brazoria"], ["Hood", "Brazos Bend"], ["Austin", "Brazos Country"], ["Stephens", "Breckenridge"], ["Robertson", "Bremond"], ["Washington", "Brenham"], ["Travis", "Briarcliff"], ["Johnson", "Briaroaks"], ["Orange", "Bridge City"], ["Wise", "Bridgeport"], ["San Augustine", "Broaddus"], ["Coke", "Bronte"], ["Waller", "Brookshire"], ["Harris", "Brookside Village"], ["Brazoria", "Brookside Village"], ["Jasper", "Browndell"], ["Terry", "Brownfield"], ["Henderson", "Brownsboro"], ["Cameron", "Brownsville"], ["Brown", "Brownwood"], ["McLennan", "Bruceville-Eddy"], ["Falls", "Bruceville-Eddy"], ["Brazos", "Bryan"], ["Jack", "Bryson"], ["Milam", "Buckholts"], ["Hays", "Buda"], ["Leon", "Buffalo"], ["Taylor", "Buffalo Gap"], ["Lubbock", "Buffalo Springs"], ["Smith", "Bullard"], ["Cherokee", "Bullard"], ["Comal", "Bulverde"], ["Harris", "Bunker Hill Village"], ["Wichita", "Burkburnett"], ["Angelina", "Burke"], ["Tarrant", "Burleson"], ["Johnson", "Burleson"], ["Burnet", "Burnet"], ["Washington", "Burton"], ["Clay", "Byers"], ["Hill", "Bynum"], ["Sherman", "Cactus"], ["Moore", "Cactus"], ["Hunt", "Caddo Mills"], ["Burleson", "Caldwell"], ["Cooke", "Callisburg"], ["Robertson", "Calvert"], ["Milam", "Cameron"], ["Real", "Camp Wood"], ["Hunt", "Campbell"], ["Hemphill", "Canadian"], ["Henderson", "Caney City"], ["Van Zandt", "Canton"], ["Randall", "Canyon"], ["Eastland", "Carbon"], ["Hill", "Carl's Corner"], ["Washington", "Carmine"], ["Fayette", "Carmine"], ["Dimmit", "Carrizo Springs"], ["Denton", "Carrollton"], ["Collin", "Carrollton"], ["Dallas", "Carrollton"], ["Panola", "Carthage"], ["Wichita", "Cashion"], ["Bexar", "Castle Hills"], ["Medina", "Castroville"], ["Dallas", "Cedar Hill"], ["Ellis", "Cedar Hill"], ["Williamson", "Cedar Park"], ["Travis", "Cedar Park"], ["Hunt", "Celeste"], ["Denton", "Celina"], ["Collin", "Celina"], ["Grayson", "Celina"], ["Shelby", "Center"], ["Leon", "Centerville"], ["Henderson", "Chandler"], ["Hartley", "Channing"], ["Atascosa", "Charlotte"], ["Tyler", "Chester"], ["Wise", "Chico"], ["Childress", "Childress"], ["Hardeman", "Chillicothe"], ["Jefferson", "China"], ["Bexar", "China Grove"], ["Nacogdoches", "Chireno"], ["Atascosa", "Christine"], ["Guadalupe", "Cibolo"], ["Bexar", "Cibolo"], ["Eastland", "Cisco"], ["Donley", "Clarendon"], ["Red River", "Clarksville"], ["Upshur", "Clarksville City"], ["Gregg", "Clarksville City"], ["Armstrong", "Claude"], ["Galveston", "Clear Lake Shores"], ["Johnson", "Cleburne"], ["Liberty", "Cleveland"], ["Bosque", "Clifton"], ["El Paso", "Clint"], ["Brazoria", "Clute"], ["Callahan", "Clyde"], ["Howard", "Coahoma"], ["Dallas", "Cockrell Hill"], ["Henderson", "Coffee City"], ["San Jacinto", "Coldspring"], ["Coleman", "Coleman"], ["Brazos", "College Station"], ["Tarrant", "Colleyville"], ["Grayson", "Collinsville"], ["Tyler", "Colmesneil"], ["Mitchell", "Colorado City"], ["Colorado", "Columbus"], ["Comanche", "Comanche"], ["Cameron", "Combes"], ["Dallas", "Combine"], ["Kaufman", "Combine"], ["Hunt", "Commerce"], ["Hopkins", "Como"], ["Montgomery", "Conroe"], ["Bexar", "Converse"], ["Parker", "Cool"], ["Limestone", "Coolidge"], ["Delta", "Cooper"], ["Denton", "Coppell"], ["Dallas", "Coppell"], ["Tarrant", "Coppell"], ["Denton", "Copper Canyon"], ["Coryell", "Copperas Cove"], ["Lampasas", "Copperas Cove"], ["Bell", "Copperas Cove"], ["Denton", "Corinth"], ["Aransas", "Corpus Christi"], ["San Patricio", "Corpus Christi"], ["Nueces", "Corpus Christi"], ["Kleberg", "Corpus Christi"], ["Denton", "Corral City"], ["Polk", "Corrigan"], ["Navarro", "Corsicana"], ["Kaufman", "Cottonwood"], ["Burnet", "Cottonwood Shores"], ["La Salle", "Cotulla"], ["Chambers", "Cove"], ["Hill", "Covington"], ["Kaufman", "Crandall"], ["Crane", "Crane"], ["Bosque", "Cranfills Gap"], ["McLennan", "Crawford"], ["Travis", "Creedmoor"], ["Hays", "Creedmoor"], ["Parker", "Cresson"], ["Hood", "Cresson"], ["Johnson", "Cresson"], ["Houston", "Crockett"], ["Crosby", "Crosbyton"], ["Callahan", "Cross Plains"], ["Denton", "Cross Roads"], ["Johnson", "Cross Timber"], ["Foard", "Crowell"], ["Tarrant", "Crowley"], ["Johnson", "Crowley"], ["Zavala", "Crystal City"], ["DeWitt", "Cuero"], ["Hopkins", "Cumby"], ["Cherokee", "Cuney"], ["Nacogdoches", "Cushing"], ["Montgomery", "Cut and Shoot"], ["Morris", "Daingerfield"], ["Liberty", "Daisetta"], ["Dallam", "Dalhart"], ["Hartley", "Dalhart"], ["Denton", "Dallas"], ["Collin", "Dallas"], ["Rockwall", "Dallas"], ["Dallas", "Dallas"], ["Kaufman", "Dallas"], ["Tarrant", "Dalworthington Gardens"], ["Brazoria", "Danbury"], ["Lipscomb", "Darrouzett"], ["Navarro", "Dawson"], ["Liberty", "Dayton"], ["Liberty", "Dayton Lakes"], ["Comanche", "De Leon"], ["Clay", "Dean"], ["Wise", "Decatur"], ["Hood", "DeCordova"], ["Harris", "Deer Park"], ["Bowie", "DeKalb"], ["Val Verde", "Del Rio"], ["Hudspeth", "Dell City"], ["Grayson", "Denison"], ["Denton", "Denton"], ["Gaines", "Denver City"], ["Yoakum", "Denver City"], ["Red River", "Deport"], ["Lamar", "Deport"], ["Dallas", "DeSoto"], ["Red River", "Detroit"], ["Liberty", "Devers"], ["Medina", "Devine"], ["Angelina", "Diboll"], ["Dickens", "Dickens"], ["Galveston", "Dickinson"], ["Frio", "Dilley"], ["Castro", "Dimmitt"], ["Denton", "Dish"], ["Fannin", "Dodd City"], ["Collingsworth", "Dodson"], ["Cass", "Domino"], ["Hidalgo", "Donna"], ["Grayson", "Dorchester"], ["Denton", "Double Oak"], ["Cass", "Douglassville"], ["Hays", "Dripping Springs"], ["Nueces", "Driscoll"], ["Erath", "Dublin"], ["Moore", "Dumas"], ["Dallas", "Duncanville"], ["Colorado", "Eagle Lake"], ["Maverick", "Eagle Pass"], ["Brown", "Early"], ["Lamb", "Earth"], ["Fort Bend", "East Bernard"], ["Wharton", "East Bernard"], ["Upshur", "East Mountain"], ["Gregg", "East Mountain"], ["Rains", "East Tawakoni"], ["Eastland", "Eastland"], ["Gregg", "Easton"], ["Rusk", "Easton"], ["Fannin", "Ector"], ["Hidalgo", "Edcouch"], ["Concho", "Eden"], ["Tarrant", "Edgecliff"], ["Van Zandt", "Edgewood"], ["Hidalgo", "Edinburg"], ["Hale", "Edmonson"], ["Jackson", "Edna"], ["Van Zandt", "Edom"], ["Wharton", "El Campo"], ["Webb", "El Cenizo"], ["Harris", "El Lago"], ["El Paso", "El Paso"], ["Schleicher", "Eldorado"], ["Wichita", "Electra"], ["Travis", "Elgin"], ["Bastrop", "Elgin"], ["Anderson", "Elkhart"], ["Bexar", "Elmendorf"], ["Wilson", "Elmendorf"], ["Hidalgo", "Elsa"], ["Navarro", "Emhouse"], ["Rains", "Emory"], ["Henderson", "Enchanted Oaks"], ["La Salle", "Encinal"], ["Kaufman", "Ennis"], ["Ellis", "Ennis"], ["Starr", "Escobares"], ["Hall", "Estelline"], ["Dallas", "Euless"], ["Tarrant", "Euless"], ["Navarro", "Eureka"], ["Henderson", "Eustace"], ["Hamilton", "Evant"], ["Coryell", "Evant"], ["Tarrant", "Everman"], ["Kendall", "Fair Oaks Ranch"], ["Comal", "Fair Oaks Ranch"], ["Bexar", "Fair Oaks Ranch"], ["Fort Bend", "Fairchilds"], ["Freestone", "Fairfield"], ["Collin", "Fairview"], ["Brooks", "Falfurrias"], ["Karnes", "Falls City"], ["Dallas", "Farmers Branch"], ["Collin", "Farmersville"], ["Parmer", "Farwell"], ["Rockwall", "Fate"], ["Fayette", "Fayetteville"], ["Dallas", "Ferris"], ["Ellis", "Ferris"], ["Fayette", "Flatonia"], ["Williamson", "Florence"], ["Wilson", "Floresville"], ["Denton", "Flower Mound"], ["Tarrant", "Flower Mound"], ["Floyd", "Floydada"], ["Lipscomb", "Follett"], ["Tarrant", "Forest Hill"], ["Kaufman", "Forney"], ["Howard", "Forsan"], ["Pecos", "Fort Stockton"], ["Wise", "Fort Worth"], ["Denton", "Fort Worth"], ["Parker", "Fort Worth"], ["Dallas", "Fort Worth"], ["Tarrant", "Fort Worth"], ["Johnson", "Fort Worth"], ["Robertson", "Franklin"], ["Henderson", "Frankston"], ["Anderson", "Frankston"], ["Gillespie", "Fredericksburg"], ["Brazoria", "Freeport"], ["Duval", "Freer"], ["Harris", "Friendswood"], ["Brazoria", "Friendswood"], ["Galveston", "Friendswood"], ["Parmer", "Friona"], ["Denton", "Frisco"], ["Collin", "Frisco"], ["Moore", "Fritch"], ["Hutchinson", "Fritch"], ["Navarro", "Frost"], ["Van Zandt", "Fruitvale"], ["Fort Bend", "Fulshear"], ["Aransas", "Fulton"], ["Cooke", "Gainesville"], ["Harris", "Galena Park"], ["Cherokee", "Gallatin"], ["Galveston", "Galveston"], ["Jackson", "Ganado"], ["Comal", "Garden Ridge"], ["Collin", "Garland"], ["Dallas", "Garland"], ["Ellis", "Garrett"], ["Nacogdoches", "Garrison"], ["Panola", "Gary"], ["Coryell", "Gatesville"], ["Live Oak", "George West"], ["Williamson", "Georgetown"], ["McLennan", "Gholson"], ["Lee", "Giddings"], ["Upshur", "Gilmer"], ["Upshur", "Gladewater"], ["Gregg", "Gladewater"], ["Somervell", "Glen Rose"], ["Dallas", "Glenn Heights"], ["Ellis", "Glenn Heights"], ["Johnson", "Godley"], ["Ector", "Goldsmith"], ["Mills", "Goldthwaite"], ["Goliad", "Goliad"], ["McLennan", "Golinda"], ["Falls", "Golinda"], ["Gonzales", "Gonzales"], ["Navarro", "Goodlow"], ["Polk", "Goodrich"], ["Palo Pinto", "Gordon"], ["Knox", "Goree"], ["Eastland", "Gorman"], ["Comanche", "Gorman"], ["Palo Pinto", "Graford"], ["Young", "Graham"], ["Hood", "Granbury"], ["Dallas", "Grand Prairie"], ["Tarrant", "Grand Prairie"], ["Ellis", "Grand Prairie"], ["Van Zandt", "Grand Saline"], ["Ward", "Grandfalls"], ["Johnson", "Grandview"], ["Williamson", "Granger"], ["Burnet", "Granite Shoals"], ["Hidalgo", "Granjeno"], ["Houston", "Grapeland"], ["Denton", "Grapevine"], ["Dallas", "Grapevine"], ["Tarrant", "Grapevine"], ["Kaufman", "Grays Prairie"], ["Hunt", "Greenville"], ["San Patricio", "Gregory"], ["Bexar", "Grey Forest"], ["Limestone", "Groesbeck"], ["Carson", "Groom"], ["Jefferson", "Groves"], ["Trinity", "Groveton"], ["Hansford", "Gruver"], ["Henderson", "Gun Barrel City"], ["Grayson", "Gunter"], ["Comanche", "Gustine"], ["Denton", "Hackberry"], ["Hale", "Hale Center"], ["Lavaca", "Hallettsville"], ["McLennan", "Hallsburg"], ["Harrison", "Hallsville"], ["Tarrant", "Haltom City"], ["Hamilton", "Hamilton"], ["Fisher", "Hamlin"], ["Jones", "Hamlin"], ["Randall", "Happy"], ["Swisher", "Happy"], ["Liberty", "Hardin"], ["Bell", "Harker Heights"], ["Cameron", "Harlingen"], ["Castro", "Hart"], ["Haskell", "Haskell"], ["Denton", "Haslet"], ["Tarrant", "Haslet"], ["Hunt", "Hawk Cove"], ["Wood", "Hawkins"], ["Jones", "Hawley"], ["Hays", "Hays"], ["Robertson", "Hearne"], ["Rockwall", "Heath"], ["Kaufman", "Heath"], ["Denton", "Hebron"], ["Collin", "Hebron"], ["Donley", "Hedley"], ["Harris", "Hedwig Village"], ["Bexar", "Helotes"], ["Sabine", "Hemphill"], ["Waller", "Hempstead"], ["Rusk", "Henderson"], ["Clay", "Henrietta"], ["Deaf Smith", "Hereford"], ["McLennan", "Hewitt"], ["Denton", "Hickory Creek"], ["Hamilton", "Hico"], ["Hidalgo", "Hidalgo"], ["Smith", "Hideaway"], ["Lipscomb", "Higgins"], ["Burnet", "Highland Haven"], ["Dallas", "Highland Park"], ["Denton", "Highland Village"], ["Bexar", "Hill Country Village"], ["Brazoria", "Hillcrest Village"], ["Hill", "Hillsboro"], ["Harris", "Hilshire Village"], ["Brazoria", "Hitchcock"], ["Galveston", "Hitchcock"], ["Brazoria", "Holiday Lakes"], ["Bell", "Holland"], ["Archer", "Holliday"], ["Bexar", "Hollywood Park"], ["Medina", "Hondo"], ["Fannin", "Honey Grove"], ["Bowie", "Hooks"], ["El Paso", "Horizon City"], ["Burnet", "Horseshoe Bay"], ["Llano", "Horseshoe Bay"], ["Montgomery", "Houston"], ["Harris", "Houston"], ["Fort Bend", "Houston"], ["Brazoria", "Houston"], ["Donley", "Howardwick"], ["Grayson", "Howe"], ["Hill", "Hubbard"], ["Angelina", "Hudson"], ["Parker", "Hudson Oaks"], ["Morris", "Hughes Springs"], ["Cass", "Hughes Springs"], ["Harris", "Humble"], ["Harris", "Hunters Creek Village"], ["Angelina", "Huntington"], ["Walker", "Huntsville"], ["Tarrant", "Hurst"], ["Dallas", "Hutchins"], ["Williamson", "Hutto"], ["Shelby", "Huxley"], ["Lubbock", "Idalou"], ["Taylor", "Impact"], ["Cameron", "Indian Lake"], ["Austin", "Industry"], ["San Patricio", "Ingleside"], ["San Patricio", "Ingleside On The Bay"], ["Kerr", "Ingram"], ["Grimes", "Iola"], ["Brazoria", "Iowa Colony"], ["Wichita", "Iowa Park"], ["Pecos", "Iraan"], ["Bosque", "Iredell"], ["Dallas", "Irving"], ["Tarrant", "Irving"], ["Ellis", "Italy"], ["Hill", "Itasca"], ["Tyler", "Ivanhoe"], ["Harris", "Jacinto City"], ["Jack", "Jacksboro"], ["Cherokee", "Jacksonville"], ["Galveston", "Jamaica Beach"], ["Williamson", "Jarrell"], ["Jasper", "Jasper"], ["Kent", "Jayton"], ["Marion", "Jefferson"], ["Harris", "Jersey Village"], ["Leon", "Jewett"], ["Shelby", "Joaquin"], ["Blanco", "Johnson City"], ["Clay", "Jolly"], ["Brazoria", "Jones Creek"], ["Travis", "Jonestown"], ["Hunt", "Josephine"], ["Collin", "Josephine"], ["Johnson", "Joshua"], ["Atascosa", "Jourdanton"], ["Kimble", "Junction"], ["Denton", "Justin"], ["Karnes", "Karnes City"], ["Waller", "Katy"], ["Harris", "Katy"], ["Fort Bend", "Katy"], ["Kaufman", "Kaufman"], ["Johnson", "Keene"], ["Tarrant", "Keller"], ["Galveston", "Kemah"], ["Kaufman", "Kemp"], ["Lampasas", "Kempner"], ["Fort Bend", "Kendleton"], ["Karnes", "Kenedy"], ["Liberty", "Kenefick"], ["Houston", "Kennard"], ["Tarrant", "Kennedale"], ["Henderson", "Kerens"], ["Navarro", "Kerens"], ["Winkler", "Kermit"], ["Kerr", "Kerrville"], ["Gregg", "Kilgore"], ["Rusk", "Kilgore"], ["Coryell", "Killeen"], ["Bell", "Killeen"], ["Kleberg", "Kingsville"], ["Bexar", "Kirby"], ["Jasper", "Kirbyville"], ["Freestone", "Kirvin"], ["Grayson", "Knollwood"], ["Knox", "Knox City"], ["Limestone", "Kosse"], ["Hardin", "Kountze"], ["Swisher", "Kress"], ["Denton", "Krugerville"], ["Denton", "Krum"], ["Brazos", "Kurten"], ["Hays", "Kyle"], ["Cameron", "La Feria"], ["Fayette", "La Grange"], ["Starr", "La Grulla"], ["Hidalgo", "La Joya"], ["Galveston", "La Marque"], ["Harris", "La Porte"], ["Wilson", "La Vernia"], ["Hidalgo", "La Villa"], ["Jackson", "La Ward"], ["Medina", "LaCoste"], ["McLennan", "Lacy-Lakeview"], ["Fannin", "Ladonia"], ["Travis", "Lago Vista"], ["Cameron", "Laguna Vista"], ["Wise", "Lake Bridgeport"], ["San Patricio", "Lake City"], ["Denton", "Lake Dallas"], ["Brazoria", "Lake Jackson"], ["Randall", "Lake Tanglewood"], ["Tarrant", "Lake Worth"], ["Gregg", "Lakeport"], ["San Patricio", "Lakeside (San Patricio)"], ["Tarrant", "Lakeside (Tarrant)"], ["Wichita", "Lakeside City"], ["Archer", "Lakeside City"], ["Hall", "Lakeview"], ["Travis", "Lakeway"], ["Denton", "Lakewood Village"], ["Dawson", "Lamesa"], ["Lampasas", "Lampasas"], ["Dallas", "Lancaster"], ["Ellis", "Lancaster"], ["Webb", "Laredo"], ["Houston", "Latexo"], ["Collin", "Lavon"], ["Taylor", "Lawn"], ["Harris", "League City"], ["Brazoria", "League City"], ["Galveston", "League City"], ["Real", "Leakey"], ["Williamson", "Leander"], ["Travis", "Leander"], ["Bowie", "Leary"], ["Gray", "Lefors"], ["Bexar", "Leon Valley"], ["Leon", "Leona"], ["Fannin", "Leonard"], ["McLennan", "Leroy"], ["Hockley", "Levelland"], ["Denton", "Lewisville"], ["Lee", "Lexington"], ["Liberty", "Liberty"], ["Williamson", "Liberty Hill"], ["Denton", "Lincoln Park"], ["Smith", "Lindale"], ["Cass", "Linden"], ["Cooke", "Lindsay"], ["Hood", "Lipan"], ["Denton", "Little Elm"], ["Bell", "Little River Academy"], ["Lamb", "Littlefield"], ["Bexar", "Live Oak"], ["Brazoria", "Liverpool"], ["Polk", "Livingston"], ["Llano", "Llano"], ["Caldwell", "Lockhart"], ["Floyd", "Lockney"], ["Henderson", "Log Cabin"], ["Lampasas", "Lometa"], ["Hunt", "Lone Oak"], ["Morris", "Lone Star"], ["Harrison", "Longview"], ["Gregg", "Longview"], ["Mitchell", "Loraine"], ["McLennan", "Lorena"], ["Crosby", "Lorenzo"], ["Cameron", "Los Fresnos"], ["Cameron", "Los Indios"], ["Dawson", "Los Ybanez"], ["Falls", "Lott"], ["Houston", "Lovelady"], ["Collin", "Lowry Crossing"], ["Lubbock", "Lubbock"], ["Collin", "Lucas"], ["Jones", "Lueders"], ["Shackelford", "Lueders"], ["Angelina", "Lufkin"], ["Guadalupe", "Luling"], ["Caldwell", "Luling"], ["Hardin", "Lumberton"], ["Willacy", "Lyford"], ["Bexar", "Lytle"], ["Medina", "Lytle"], ["Atascosa", "Lytle"], ["Van Zandt", "Mabank"], ["Henderson", "Mabank"], ["Kaufman", "Mabank"], ["Madison", "Madisonville"], ["Montgomery", "Magnolia"], ["Henderson", "Malakoff"], ["Hill", "Malone"], ["Travis", "Manor"], ["Tarrant", "Mansfield"], ["Ellis", "Mansfield"], ["Johnson", "Mansfield"], ["Brazoria", "Manvel"], ["Burnet", "Marble Falls"], ["Presidio", "Marfa"], ["Cass", "Marietta"], ["Guadalupe", "Marion"], ["Falls", "Marlin"], ["Leon", "Marquez"], ["Harrison", "Marshall"], ["McLennan", "Mart"], ["Limestone", "Mart"], ["Guadalupe", "Martindale"], ["Caldwell", "Martindale"], ["Mason", "Mason"], ["Motley", "Matador"], ["San Patricio", "Mathis"], ["Bowie", "Maud"], ["Ellis", "Maypearl"], ["Hidalgo", "McAllen"], ["Upton", "McCamey"], ["Coryell", "McGregor"], ["McLennan", "McGregor"], ["Collin", "McKinney"], ["Gray", "McLean"], ["Rockwall", "McLendon-Chisholm"], ["Kaufman", "McLendon-Chisholm"], ["Terry", "Meadow"], ["Burnet", "Meadowlakes"], ["Harris", "Meadows Place"], ["Fort Bend", "Meadows Place"], ["Archer", "Megargel"], ["Collin", "Melissa"], ["McCulloch", "Melvin"], ["Hall", "Memphis"], ["Menard", "Menard"], ["Hidalgo", "Mercedes"], ["Bosque", "Meridian"], ["Taylor", "Merkel"], ["Hill", "Mertens"], ["Irion", "Mertzon"], ["Dallas", "Mesquite"], ["Kaufman", "Mesquite"], ["Limestone", "Mexia"], ["Roberts", "Miami"], ["Martin", "Midland"], ["Midland", "Midland"], ["Ellis", "Midlothian"], ["Madison", "Midway"], ["Milam", "Milano"], ["Navarro", "Mildred"], ["Runnels", "Miles"], ["Ellis", "Milford"], ["Titus", "Miller's Cove"], ["Parker", "Millsap"], ["Wood", "Mineola"], ["Palo Pinto", "Mineral Wells"], ["Parker", "Mineral Wells"], ["Palo Pinto", "Mingus"], ["Hidalgo", "Mission"], ["Harris", "Missouri City"], ["Fort Bend", "Missouri City"], ["Wheeler", "Mobeetie"], ["Rockwall", "Mobile City"], ["Winkler", "Monahans"], ["Ward", "Monahans"], ["Liberty", "Mont Belvieu"], ["Harris", "Mont Belvieu"], ["Chambers", "Mont Belvieu"], ["Montgomery", "Montgomery"], ["McLennan", "Moody"], ["Henderson", "Moore Station"], ["Shackelford", "Moran"], ["Bosque", "Morgan"], ["Harris", "Morgan's Point"], ["Bell", "Morgan's Point Resort"], ["Cochran", "Morton"], ["Lavaca", "Moulton"], ["Hill", "Mount Calm"], ["Rusk", "Mount Enterprise"], ["Titus", "Mount Pleasant"], ["Franklin", "Mount Vernon"], ["Hays", "Mountain City"], ["Cooke", "Muenster"], ["Bailey", "Muleshoe"], ["Mills", "Mullin"], ["Knox", "Munday"], ["Henderson", "Murchison"], ["Collin", "Murphy"], ["Navarro", "Mustang"], ["Travis", "Mustang Ridge"], ["Caldwell", "Mustang Ridge"], ["Nacogdoches", "Nacogdoches"], ["Morris", "Naples"], ["Bowie", "Nash"], ["Harris", "Nassau Bay"], ["Medina", "Natalia"], ["Navarro", "Navarro"], ["Brazos", "Navasota"], ["Grimes", "Navasota"], ["Castro", "Nazareth"], ["Jefferson", "Nederland"], ["Fort Bend", "Needville"], ["Harrison", "Nesbitt"], ["Collin", "Nevada"], ["Guadalupe", "New Berlin"], ["Bexar", "New Berlin"], ["Bowie", "New Boston"], ["Comal", "New Braunfels"], ["Guadalupe", "New Braunfels"], ["Smith", "New Chapel Hill"], ["Lubbock", "New Deal"], ["Wise", "New Fairview"], ["Lynn", "New Home"], ["Collin", "New Hope"], ["Rusk", "New London"], ["Cherokee", "New Summerfield"], ["Walker", "New Waverly"], ["Wise", "Newark"], ["Young", "Newcastle"], ["Newton", "Newton"], ["Hunt", "Neylandville"], ["Hays", "Niederwald"], ["Caldwell", "Niederwald"], ["Wilson", "Nixon"], ["Gonzales", "Nixon"], ["Montague", "Nocona"], ["Bell", "Nolanville"], ["Jefferson", "Nome"], ["Smith", "Noonday"], ["DeWitt", "Nordheim"], ["Leon", "Normangee"], ["Madison", "Normangee"], ["Liberty", "North Cleveland"], ["Tarrant", "North Richland Hills"], ["Denton", "Northlake"], ["Coleman", "Novice"], ["Kaufman", "Oak Grove"], ["Ellis", "Oak Leaf"], ["Denton", "Oak Point"], ["Cooke", "Oak Ridge (Cooke)"], ["Kaufman", "Oak Ridge (Kaufman)"], ["Montgomery", "Oak Ridge North"], ["Navarro", "Oak Valley"], ["Leon", "Oakwood"], ["Haskell", "O'Brien"], ["San Patricio", "Odem"], ["Ector", "Odessa"], ["Midland", "Odessa"], ["Dawson", "O'Donnell"], ["Lynn", "O'Donnell"], ["Coryell", "Oglesby"], ["Liberty", "Old River-Winfree"], ["Chambers", "Old River-Winfree"], ["Bexar", "Olmos Park"], ["Young", "Olney"], ["Lamb", "Olton"], ["Morris", "Omaha"], ["Polk", "Onalaska"], ["Hockley", "Opdyke West"], ["Orange", "Orange"], ["Jim Wells", "Orange Grove"], ["Fort Bend", "Orchard"], ["Upshur", "Ore City"], ["Marion", "Ore City"], ["Smith", "Overton"], ["Rusk", "Overton"], ["Dallas", "Ovilla"], ["Ellis", "Ovilla"], ["Brazoria", "Oyster Creek"], ["Cottle", "Paducah"], ["Concho", "Paint Rock"], ["Matagorda", "Palacios"], ["Anderson", "Palestine"], ["Randall", "Palisades"], ["Cameron", "Palm Valley"], ["Ellis", "Palmer"], ["Hidalgo", "Palmhurst"], ["Hidalgo", "Palmview"], ["Gray", "Pampa"], ["Carson", "Panhandle"], ["Montgomery", "Panorama Village"], ["Tarrant", "Pantego"], ["Wise", "Paradise"], ["Lamar", "Paris"], ["Collin", "Parker"], ["Harris", "Pasadena"], ["Waller", "Pattison"], ["Montgomery", "Patton Village"], ["Henderson", "Payne Springs"], ["Harris", "Pearland"], ["Fort Bend", "Pearland"], ["Brazoria", "Pearland"], ["Galveston", "Pearland"], ["Frio", "Pearsall"], ["Delta", "Pecan Gap"], ["Fannin", "Pecan Gap"], ["Ellis", "Pecan Hill"], ["Reeves", "Pecos"], ["Tarrant", "Pelican Bay"], ["Hill", "Penelope"], ["Hidalgo", "Penitas"], ["Ochiltree", "Perryton"], ["Hale", "Petersburg"], ["Clay", "Petrolia"], ["Nueces", "Petronila"], ["Williamson", "Pflugerville"], ["Travis", "Pflugerville"], ["Hidalgo", "Pharr"], ["Denton", "Pilot Point"], ["Collin", "Pilot Point"], ["Orange", "Pine Forest"], ["Waller", "Pine Island"], ["Orange", "Pinehurst"], ["Sabine", "Pineland"], ["Harris", "Piney Point Village"], ["Camp", "Pittsburg"], ["Yoakum", "Plains"], ["Hale", "Plainview"], ["Denton", "Plano"], ["Collin", "Plano"], ["Fort Bend", "Pleak"], ["Wichita", "Pleasant Valley"], ["Atascosa", "Pleasanton"], ["Montgomery", "Plum Grove"], ["Liberty", "Plum Grove"], ["Rains", "Point"], ["San Jacinto", "Point Blank"], ["Calhoun", "Point Comfort"], ["Travis", "Point Venture"], ["Denton", "Ponder"], ["Aransas", "Port Aransas"], ["Nueces", "Port Aransas"], ["Jefferson", "Port Arthur"], ["Orange", "Port Arthur"], ["Cameron", "Port Isabel"], ["Calhoun", "Port Lavaca"], ["Jefferson", "Port Neches"], ["San Patricio", "Portland"], ["Garza", "Post"], ["Kaufman", "Post Oak Bend"], ["Atascosa", "Poteet"], ["Wilson", "Poth"], ["Grayson", "Pottsboro"], ["Navarro", "Powell"], ["Henderson", "Poynor"], ["Waller", "Prairie View"], ["Jim Wells", "Premont"], ["Presidio", "Presidio"], ["Cameron", "Primera"], ["Collin", "Princeton"], ["Hidalgo", "Progreso"], ["Hidalgo", "Progreso Lakes"], ["Denton", "Prosper"], ["Collin", "Prosper"], ["Denton", "Providence Village"], ["Callahan", "Putnam"], ["Ward", "Pyote"], ["Hardeman", "Quanah"], ["Cass", "Queen City"], ["Hunt", "Quinlan"], ["Brazoria", "Quintana"], ["Briscoe", "Quitaque"], ["Wood", "Quitman"], ["Crosby", "Ralls"], ["Cameron", "Rancho Viejo"], ["Eastland", "Ranger"], ["Cameron", "Rangerville"], ["Upton", "Rankin"], ["Lubbock", "Ransom Canyon"], ["Fannin", "Ravenna"], ["Willacy", "Raymondville"], ["Bowie", "Red Lick"], ["Dallas", "Red Oak"], ["Ellis", "Red Oak"], ["Bowie", "Redwater"], ["Refugio", "Refugio"], ["Rusk", "Reklaw"], ["Cherokee", "Reklaw"], ["Lamar", "Reno (Lamar)"], ["Parker", "Reno (Parker)"], ["Tarrant", "Reno (Parker)"], ["Navarro", "Retreat"], ["Wise", "Rhome"], ["Ellis", "Rice"], ["Navarro", "Rice"], ["Collin", "Richardson"], ["Dallas", "Richardson"], ["Navarro", "Richland"], ["Tarrant", "Richland Hills"], ["San Saba", "Richland Springs"], ["Fort Bend", "Richmond"], ["Brazoria", "Richwood"], ["McLennan", "Riesel"], ["Webb", "Rio Bravo"], ["Starr", "Rio Grande City"], ["Cameron", "Rio Hondo"], ["Johnson", "Rio Vista"], ["Eastland", "Rising Star"], ["Tarrant", "River Oaks"], ["Walker", "Riverside"], ["Denton", "Roanoke"], ["Motley", "Roaring Springs"], ["Coke", "Robert Lee"], ["McLennan", "Robinson"], ["Nueces", "Robstown"], ["Fisher", "Roby"], ["Haskell", "Rochester"], ["Milam", "Rockdale"], ["Aransas", "Rockport"], ["Edwards", "Rocksprings"], ["Collin", "Rockwall"], ["Rockwall", "Rockwall"], ["Camp", "Rocky Mound"], ["Bell", "Rogers"], ["Travis", "Rollingwood"], ["Starr", "Roma"], ["Montgomery", "Roman Forest"], ["Hockley", "Ropesville"], ["Nolan", "Roscoe"], ["Orange", "Rose City"], ["Jefferson", "Rose Hill Acres"], ["Hardin", "Rose Hill Acres"], ["Falls", "Rosebud"], ["Fort Bend", "Rosenberg"], ["McLennan", "Ross"], ["Kaufman", "Rosser"], ["Fisher", "Rotan"], ["Blanco", "Round Mountain"], ["Williamson", "Round Rock"], ["Travis", "Round Rock"], ["Fayette", "Round Top"], ["Rockwall", "Rowlett"], ["Dallas", "Rowlett"], ["Lamar", "Roxton"], ["Hunt", "Royse City"], ["Collin", "Royse City"], ["Rockwall", "Royse City"], ["Haskell", "Rule"], ["Wise", "Runaway Bay"], ["Karnes", "Runge"], ["Cherokee", "Rusk"], ["Uvalde", "Sabinal"], ["Collin", "Sachse"], ["Dallas", "Sachse"], ["Grayson", "Sadler"], ["Tarrant", "Saginaw"], ["Bexar", "Saint Hedwig"], ["Montague", "Saint Jo"], ["Collin", "Saint Paul"], ["Bell", "Salado"], ["Tom Green", "San Angelo"], ["Comal", "San Antonio"], ["Bexar", "San Antonio"], ["Medina", "San Antonio"], ["San Augustine", "San Augustine"], ["Cameron", "San Benito"], ["Jim Wells", "San Diego"], ["Duval", "San Diego"], ["Austin", "San Felipe"], ["Hidalgo", "San Juan"], ["Travis", "San Leanna"], ["Guadalupe", "San Marcos"], ["Hays", "San Marcos"], ["Caldwell", "San Marcos"], ["San Patricio", "San Patricio"], ["Nueces", "San Patricio"], ["Willacy", "San Perlita"], ["San Saba", "San Saba"], ["Parker", "Sanctuary"], ["Brazoria", "Sandy Point"], ["Hutchinson", "Sanford"], ["Denton", "Sanger"], ["Cooke", "Sanger"], ["Tarrant", "Sansom Park"], ["Coleman", "Santa Anna"], ["Guadalupe", "Santa Clara"], ["Galveston", "Santa Fe"], ["Cameron", "Santa Rosa"], ["Fannin", "Savoy"], ["Comal", "Schertz"], ["Guadalupe", "Schertz"], ["Bexar", "Schertz"], ["Fayette", "Schulenburg"], ["Clay", "Scotland"], ["Archer", "Scotland"], ["Harrison", "Scottsville"], ["Kaufman", "Scurry"], ["Harris", "Seabrook"], ["Calhoun", "Seadrift"], ["Dallas", "Seagoville"], ["Kaufman", "Seagoville"], ["Gaines", "Seagraves"], ["Austin", "Sealy"], ["Guadalupe", "Seguin"], ["Comal", "Selma"], ["Guadalupe", "Selma"], ["Bexar", "Selma"], ["Gaines", "Seminole"], ["Polk", "Seven Oaks"], ["Henderson", "Seven Points"], ["Baylor", "Seymour"], ["Denton", "Shady Shores"], ["Lubbock", "Shallowater"], ["Wheeler", "Shamrock"], ["Bexar", "Shavano Park"], ["Montgomery", "Shenandoah"], ["San Jacinto", "Shepherd"], ["Grayson", "Sherman"], ["Lavaca", "Shiner"], ["Harris", "Shoreacres"], ["Hardin", "Silsbee"], ["Briscoe", "Silverton"], ["Fort Bend", "Simonton"], ["San Patricio", "Sinton"], ["Carson", "Skellytown"], ["Lubbock", "Slaton"], ["Gonzales", "Smiley"], ["Bastrop", "Smithville"], ["Hockley", "Smyer"], ["Burleson", "Snook"], ["Scurry", "Snyder"], ["El Paso", "Socorro"], ["Bexar", "Somerset"], ["Burleson", "Somerville"], ["Sutton", "Sonora"], ["Hardin", "Sour Lake"], ["Harris", "South Houston"], ["Coryell", "South Mountain"], ["Cameron", "South Padre Island"], ["Denton", "Southlake"], ["Tarrant", "Southlake"], ["Grayson", "Southmayd"], ["Harris", "Southside Place"], ["Hansford", "Spearman"], ["Montgomery", "Splendora"], ["Kinney", "Spofford"], ["Harris", "Spring Valley"], ["Lamb", "Springlake"], ["Parker", "Springtown"], ["Dickens", "Spur"], ["Harris", "Stafford"], ["Fort Bend", "Stafford"], ["Montgomery", "Stagecoach"], ["Haskell", "Stamford"], ["Jones", "Stamford"], ["Martin", "Stanton"], ["Guadalupe", "Staples"], ["Caldwell", "Staples"], ["Henderson", "Star Harbor"], ["Erath", "Stephenville"], ["Sterling", "Sterling City"], ["Hutchinson", "Stinnett"], ["Wilson", "Stockdale"], ["Sherman", "Stratford"], ["Palo Pinto", "Strawn"], ["Freestone", "Streetman"], ["Navarro", "Streetman"], ["Lamb", "Sudan"], ["Fort Bend", "Sugar Land"], ["Hidalgo", "Sullivan City"], ["Hopkins", "Sulphur Springs"], ["Lamar", "Sun Valley"], ["Hockley", "Sundown"], ["Dallas", "Sunnyvale"], ["Kaufman", "Sunnyvale"], ["Moore", "Sunray"], ["Burnet", "Sunrise Beach Village"], ["Llano", "Sunrise Beach Village"], ["Travis", "Sunset Valley"], ["Brazoria", "Surfside Beach"], ["Brazoria", "Sweeny"], ["Nolan", "Sweetwater"], ["San Patricio", "Taft"], ["Lynn", "Tahoka"], ["Titus", "Talco"], ["Kaufman", "Talty"], ["Rusk", "Tatum"], ["Panola", "Tatum"], ["Williamson", "Taylor"], ["Harris", "Taylor Lake Village"], ["Jefferson", "Taylor Landing"], ["Freestone", "Teague"], ["Limestone", "Tehuacana"], ["Bell", "Temple"], ["Shelby", "Tenaha"], ["Kaufman", "Terrell"], ["Bexar", "Terrell Hills"], ["Bowie", "Texarkana"], ["Chambers", "Texas City"], ["Galveston", "Texas City"], ["Sherman", "Texhoma"], ["Dallam", "Texline"], ["Denton", "The Colony"], ["Fort Bend", "Thompsons"], ["Williamson", "Thorndale"], ["Milam", "Thorndale"], ["Limestone", "Thornton"], ["Ward", "Thorntonville"], ["Williamson", "Thrall"], ["Live Oak", "Three Rivers"], ["Throckmorton", "Throckmorton"], ["Galveston", "Tiki Island"], ["Randall", "Timbercreek Canyon"], ["Shelby", "Timpson"], ["Grayson", "Tioga"], ["Hopkins", "Tira"], ["Lamar", "Toco"], ["Grimes", "Todd Mission"], ["Hood", "Tolar"], ["Grayson", "Tom Bean"], ["Montgomery", "Tomball"], ["Harris", "Tomball"], ["Henderson", "Tool"], ["Reeves", "Toyah"], ["Taylor", "Trent"], ["Grayson", "Trenton"], ["Fannin", "Trenton"], ["Henderson", "Trinidad"], ["Navarro", "Trinidad"], ["Trinity", "Trinity"], ["Denton", "Trophy Club"], ["Tarrant", "Trophy Club"], ["Smith", "Troup"], ["Cherokee", "Troup"], ["Bell", "Troy"], ["Swisher", "Tulia"], ["Hall", "Turkey"], ["Taylor", "Tuscola"], ["Taylor", "Tye"], ["Smith", "Tyler"], ["Hays", "Uhland"], ["Caldwell", "Uhland"], ["Harrison", "Uncertain"], ["Upshur", "Union Grove"], ["Hunt", "Union Valley"], ["Guadalupe", "Universal City"], ["Bexar", "Universal City"], ["Dallas", "University Park"], ["Uvalde", "Uvalde"], ["Jeff Davis", "Valentine"], ["Bosque", "Valley Mills"], ["McLennan", "Valley Mills"], ["Cooke", "Valley View"], ["Van Zandt", "Van"], ["Collin", "Van Alstyne"], ["Grayson", "Van Alstyne"], ["Culberson", "Van Horn"], ["Oldham", "Vega"], ["Ellis", "Venus"], ["Johnson", "Venus"], ["Wilbarger", "Vernon"], ["Victoria", "Victoria"], ["Orange", "Vidor"], ["Travis", "Village of The Hills"], ["Travis", "Villiage of Volente"], ["El Paso", "Vinton"], ["Bexar", "Von Ormy"], ["McLennan", "Waco"], ["Gonzales", "Waelder"], ["Bowie", "Wake Village"], ["Waller", "Waller"], ["Harris", "Waller"], ["Austin", "Wallis"], ["Bosque", "Walnut Springs"], ["Upshur", "Warren City"], ["Gregg", "Warren City"], ["Harrison", "Waskom"], ["Tarrant", "Watauga"], ["Ellis", "Waxahachie"], ["Parker", "Weatherford"], ["Travis", "Webberville"], ["Bastrop", "Webberville"], ["Harris", "Webster"], ["Galveston", "Webster"], ["Colorado", "Weimar"], ["Haskell", "Weinert"], ["Williamson", "Weir"], ["Collingsworth", "Wellington"], ["Terry", "Wellman"], ["Cherokee", "Wells"], ["Hidalgo", "Weslaco"], ["McLennan", "West"], ["Brazoria", "West Columbia"], ["Travis", "West Lake Hills"], ["Orange", "West Orange"], ["Hunt", "West Tawakoni"], ["Harris", "West University Place"], ["Mitchell", "Westbrook"], ["Denton", "Westlake"], ["Tarrant", "Westlake"], ["Collin", "Weston"], ["Fort Bend", "Weston Lakes"], ["Tarrant", "Westover Hills"], ["Tarrant", "Westworth Village"], ["Wharton", "Wharton"], ["Wheeler", "Wheeler"], ["Carson", "White Deer"], ["Gregg", "White Oak"], ["Tarrant", "White Settlement"], ["Cochran", "Whiteface"], ["Hockley", "Whiteface"], ["Smith", "Whitehouse"], ["Grayson", "Whitesboro"], ["Grayson", "Whitewright"], ["Fannin", "Whitewright"], ["Hill", "Whitney"], ["Wichita", "Wichita Falls"], ["Ward", "Wickett"], ["Montgomery", "Willis"], ["Parker", "Willow Park"], ["Van Zandt", "Wills Point"], ["Dallas", "Wilmer"], ["Lynn", "Wilson"], ["Hays", "Wimberley"], ["Bexar", "Windcrest"], ["Fannin", "Windom"], ["Clay", "Windthorst"], ["Archer", "Windthorst"], ["Titus", "Winfield"], ["Winkler", "Wink"], ["Franklin", "Winnsboro"], ["Wood", "Winnsboro"], ["Smith", "Winona"], ["Runnels", "Winters"], ["Brazos", "Wixon Valley"], ["Hunt", "Wolfe City"], ["Lubbock", "Wolfforth"], ["Montgomery", "Woodbranch Village"], ["Hays", "Woodcreek"], ["Montgomery", "Woodloch"], ["Refugio", "Woodsboro"], ["Throckmorton", "Woodson"], ["Tyler", "Woodville"], ["McLennan", "Woodway"], ["Freestone", "Wortham"], ["Limestone", "Wortham"], ["Collin", "Wylie"], ["Rockwall", "Wylie"], ["Dallas", "Wylie"], ["Wood", "Yantis"], ["Lavaca", "Yoakum"], ["DeWitt", "Yoakum"], ["DeWitt", "Yorktown"], ["Angelina", "Zavalla"]];


        var countyList = ["Anderson", "Andrews", "Angelina", "Aransas", "Archer", "Armstrong", "Atascosa", "Austin", "Bailey", "Bandera", "Bastrop", "Baylor", "Bee", "Bell", "Bexar", "Blanco", "Borden", "Bosque", "Bowie", "Brazoria", "Brazos", "Brewster", "Briscoe", "Brooks", "Brown", "Burleson", "Burnet", "Caldwell", "Calhoun", "Callahan", "Cameron", "Camp", "Carson", "Cass", "Castro", "Chambers", "Cherokee", "Childress", "Clay", "Cochran", "Coke", "Coleman", "Collin", "Collingsworth", "Colorado", "Comal", "Comanche", "Concho", "Cooke", "Coryell", "Cottle", "Crane", "Crockett", "Crosby", "Culberson", "Dallam", "Dallas", "Dawson", "Deaf Smith", "Delta", "Denton", "DeWitt", "Dickens", "Dimmit", "Donley", "Duval", "Eastland", "Ector", "Edwards", "El Paso", "Ellis", "Erath", "Falls", "Fannin", "Fayette", "Fisher", "Floyd", "Foard", "Fort Bend", "Franklin", "Freestone", "Frio", "Gaines", "Galveston", "Garza", "Gillespie", "Glasscock", "Goliad", "Gonzales", "Gray", "Grayson", "Gregg", "Grimes", "Guadalupe", "Hale", "Hall", "Hamilton", "Hansford", "Hardeman", "Hardin", "Harris", "Harrison", "Hartley", "Haskell", "Hays", "Hemphill", "Henderson", "Hidalgo", "Hill", "Hockley", "Hood", "Hopkins", "Houston", "Howard", "Hudspeth", "Hunt", "Hutchinson", "Irion", "Jack", "Jackson", "Jasper", "Jeff Davis", "Jefferson", "Jim Hogg", "Jim Wells", "Johnson", "Jones", "Karnes", "Kaufman", "Kendall", "Kenedy", "Kent", "Kerr", "Kimble", "King", "Kinney", "Kleberg", "Knox", "La Salle", "Lamar", "Lamb", "Lampasas", "Lavaca", "Lee", "Leon", "Liberty", "Limestone", "Lipscomb", "Live Oak", "Llano", "Loving", "Lubbock", "Lynn", "Madison", "Marion", "Martin", "Mason", "Matagorda", "Maverick", "McCulloch", "McLennan", "McMullen", "Medina", "Menard", "Midland", "Milam", "Mills", "Mitchell", "Montague", "Montgomery", "Moore", "Morris", "Motley", "Nacogdoches", "Navarro", "Newton", "Nolan", "Nueces", "Ochiltree", "Oldham", "Orange", "Palo Pinto", "Panola", "Parker", "Parmer", "Pecos", "Polk", "Potter", "Presidio", "Rains", "Randall", "Reagan", "Real", "Red River", "Reeves", "Refugio", "Roberts", "Robertson", "Rockwall", "Runnels", "Rusk", "Sabine", "San Augustine", "San Jacinto", "San Patricio", "San Saba", "Schleicher", "Scurry", "Shackelford", "Shelby", "Sherman", "Smith", "Somervell", "Starr", "Stephens", "Sterling", "Stonewall", "Sutton", "Swisher", "Tarrant", "Taylor", "Terrell", "Terry", "Throckmorton", "Titus", "Tom Green", "Travis", "Trinity", "Tyler", "Upshur", "Upton", "Uvalde", "Val Verde", "Van Zandt", "Victoria", "Walker", "Waller", "Ward", "Washington", "Webb", "Wharton", "Wheeler", "Wichita", "Wilbarger", "Willacy", "Williamson", "Wilson", "Winkler", "Wise", "Wood", "Yoakum", "Young", "Zapata", "Zavala"];
  
        function sortOrderCounty(co) {
            for (var i = 0; i &lt; countyList.length; i++) {
                if (co == countyList[i]) {
                    document.getElementById('sortCountyOrder').value = i;
                    if (document.getElementById('jurisdictionType1').checked == false) {
                        //document.getElementById('sortCityOrder').value = '';  //commented out 11/07/16 to stop city field from being blanked out on update
                    }
                    return;
                    
                }
            }
        }

        function sortOrderCity(ci) {
          var co="";
          var a  = document.getElementById('county');
          if(a.selectedIndex!=0){
            co=a.options[a.selectedIndex].text;
          }
            for (var i = 0; i &lt; cityMatrix.length; i++) {
                if (ci == cityMatrix[i][1] &amp;&amp; document.getElementById('jurisdictionType1').checked==true &amp;&amp; (co=="" || co == cityMatrix[i][0])){
                    document.getElementById('sortCityOrder').value = i;
                    return;
                }
                if (ci == cityMatrix[i][1] &amp;&amp; document.getElementById('jurisdictionType2').checked==true) {
                    document.getElementById('sortCityOrder').value = i;
                    return;
                }
            }
        }

       function consolidateEmails() {
          var a = [document.getElementsByName('submitterEmail')[0], document.getElementsByName('additionalEmails')[0], document.getElementsByName('countyEmail')[0], document.getElementsByName('ddcEmail')[0]];
          var b = [];
            for (var e =0; e&lt;a.length;e++) {
              if (a[e].value != "") {
          var f = a[e].value.split(',');
             for (var i = 0; i &lt; f.length; i++) {
        b.push(f[i]);
      }
    }
  }
        return b.join(',');
}

        function sendEmails(){
          var c = document.getElementsByName('city')[0];
          var cr=[];
          for(var i = 0; i&lt;c.options.length;i++){
            if(c.options[i].selected===true){
              cr.push(c.options[i].text)
            }
          }
          document.getElementsByName('emailSubject')[0].value='DSO for ' + document.getElementById('county').value + " / " + cr.join(', ') + " (" + document.getElementById('webeocIncident').value + ")";
          

          var body = "An Updated DSO # " + document.getElementById('editKey').value + " for " + document.getElementById('county').value + " / " + cr.join(', ') + " (" + document.getElementById('webeocIncident').value + ")" + " has been submitted to the SOC. \n\n" + "To update this request, go to https://olympus.soc.texas.gov/services/dso/default.aspx?key=" + document.getElementById('editKey').value + "\n\n" + 
                     "Please email soc@dps.texas.gov if you have any questions. \n\n" + " DO NOT REPLY";
        
        document.getElementsByName('emailBody')[0].value=body;
        document.getElementsByName('emailTo')[0].value=consolidateEmails();
        };


//Email val from DSOwebform

function validateEmail(email) {
            var str = email.replace(/\s/g, '');
var re = /\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}\b/g;
            return re.test(str);
        }

function finalEmailCheck() {
            var checkEmail = function (a) {
                for (var i = 0; i &lt; a.length; i++) {
                    if (a[i] != '' &amp;&amp; validateEmail(a[i]) == false) {alert('Please check your email format. Incomplete or extra characters may exist.');
                        return false;
                        
                    }
                }
            };
            var e = document.getElementById('submitterEmail').value.split(/[ ,;]+/);
            if(checkEmail(e) != false){
                document.getElementById('submitterEmail').value=e.join(',');
            };
            var b = document.getElementById('additionalEmails').value.split(/[ ,;]+/);
            if(checkEmail(b) != false){
                document.getElementById('additionalEmails').value=b.join(',');
            };
            var c = document.getElementById('countyEmail').value.split(/[ ,;]+/);
            if(checkEmail(c) != false){
                document.getElementById('countyEmail').value=c.join(',');
            };
            var d = document.getElementById('ddcEmail').value.split(/[ ,;]+/);
            if(checkEmail(d) != false){
                document.getElementById('ddcEmail').value=d.join(',');
            };

        }
 
        var updateDateTime=function() {
          var a=new Date();
          var b=(a.getMonth()+1)+"/"+pad(a.getDate())+"/"+a.getFullYear();

           b+=" "+pad(a.getHours())+":"+pad(a.getMinutes())+":"+pad(a.getSeconds());
           document.getElementById("updated").value=b;
}

        var pad=function(num) {
          if(num &lt; 10) {
            return "0" + num; 
  } else {
            return num; 
  }
}

      var submitDateTime=function() {
        var a=new Date();
        var b=(a.getMonth()+1)+"/"+pad(a.getDate())+"/"+a.getFullYear();

        b+=" "+pad(a.getHours())+":"+pad(a.getMinutes())+":"+pad(a.getSeconds());
        document.getElementById("submitedDateTime").value=b;
  
}

      function rebuildingCityCountyOptionsOnJTypeCheck(a) {
            $(a).on("click", function () {
                var coList = document.getElementById("county");
                removeOptions(coList);
                addOption(coList, 'Select One', true);
                for (var k = 0; k &lt; countyList.length; k++) {
                    addOption(coList, countyList[k], false);
                }
                var cityList = document.getElementById("city");
                removeOptions(cityList);
                addOption(cityList, "Select One", true);
                addOption(cityList, "Unincorporated Areas", false);
                for (var k = 0; k &lt; cityMatrix.length; k++) {
                    addOption(cityList, cityMatrix[k][1], false);
                }
                $("#sortCountyOrder").val(0);
                $("#sortCityOrder").val(0);
                $("#county").prop("disabled", false);
                $("#city").prop("disabled", false);
            });
        }

      function updateOrFirstTime(){
  if ('<xsl:value-of select="/data/@dataid" />'!=0){
               updateDateTime();
              

            } else {
                submitDateTime();
            }
}

       function selectOptionsIfExistsInArray() {
                    var textAreaValue = $("#cityTmp").val();
                    var textAreaValueSplit = textAreaValue.split(",");
                    cityArrayCopy = textAreaValueSplit;
                    $("#city").val("");
                    for(var i = 0; i &lt; cityArrayCopy.length; i++) {

                        $("[name = city] option").filter(function() {
                            return($(this).text() === cityArrayCopy[i]);
                        }).prop("selected", true);

                        $("#cityTmp").val("");
                        $("#city").focus();
                    }
                }

        function start() {


         
          if (document.getElementsByName('datalinkid')[0]){
            document.getElementsByName('datalinkid')[0].checked=true;
      } else { alert('The data links are not configured correctly. Please contact your local WebEOC Admin.');
}
//startOf: event actions


          $("input:text").focus(function() {
              $(this).select();
          }).blur(function() {
              $(this).val($(this).val().replace(/\$/g, ''));
             
          });
          
          countyEmailHideReveal();
          $("#notRealSave").click(function() {

          if($("#repairCost01").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost01", "#cat01", "#cat01");
          }
          if($("#cat01").val() !== "" &amp;&amp; $("#repairCost01").val() == "" ){
            $("#cat01").val("");            
          }
          if($("#repairCost02").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost02", "#cat02", "#cat02");
          }
          if($("#cat02").val() !== "" &amp;&amp; $("#repairCost02").val() == "" ){
            $("#cat02").val(""); 
          }
          if($("#repairCost03").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost03", "#cat03", "#cat03");
          }
          if($("#cat03").val() !== "" &amp;&amp; $("#repairCost03").val() == "" ){
            $("#cat03").val(""); 
          }
          if($("#repairCost04").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost04", "#cat04", "#cat04");
          }
          if($("#cat04").val() !== "" &amp;&amp; $("#repairCost04").val() == "" ){
            $("#cat04").val(""); 
          }
          if($("#repairCost05").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost05", "#cat05", "#cat05");
          }
          if($("#cat05").val() !== "" &amp;&amp; $("#repairCost05").val() == "" ){
            $("#cat05").val(""); 
          }
          if($("#repairCost06").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost06", "#cat06", "#cat06");
          }
          if($("#cat06").val() !== "" &amp;&amp; $("#repairCost06").val() == "" ){
            $("#cat06").val(""); 
          }
          if($("#repairCost07").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost07", "#cat07", "#cat07");
          }
          if($("#cat07").val() !== "" &amp;&amp; $("#repairCost07").val() == "" ){
            $("#cat07").val(""); 
          }
          if($("#repairCost08").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost08", "#cat08", "#cat08");
          }
          if($("#cat08").val() !== "" &amp;&amp; $("#repairCost08").val() == "" ){
            $("#cat08").val(""); 
          }
          if($("#repairCost09").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost09", "#cat09", "#cat09");
          }
          if($("#cat09").val() !== "" &amp;&amp; $("#repairCost09").val() == "" ){
            $("#cat09").val(""); 
          }
          if($("#repairCost10").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost10", "#cat10", "#cat10");
          }
          if($("#cat10").val() !== "" &amp;&amp; $("#repairCost10").val() == "" ){
            $("#cat10").val(""); 
          }
          if($("#repairCost11").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost11", "#cat11", "#cat11");
          }
          if($("#cat11").val() !== "" &amp;&amp; $("#repairCost11").val() == "" ){
            $("#cat11").val("");
          }
          if($("#repairCost12").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost12", "#cat12", "#cat12");
          }
          if($("#cat12").val() !== "" &amp;&amp; $("#repairCost12").val() == "" ){
            $("#cat12").val("");
          }
          if($("#repairCost13").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost13", "#cat13", "#cat13");
          }
          if($("#cat13").val() !== "" &amp;&amp; $("#repairCost13").val() == "" ){
            $("#cat13").val("");
          }
          if($("#repairCost14").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost14", "#cat14", "#cat14");
          }
          if($("#cat14").val() !== "" &amp;&amp; $("#repairCost14").val() == "" ){
            $("#cat14").val("");
          }
          if($("#repairCost15").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost15", "#cat15", "#cat15");
          }
          if($("#cat15").val() !== "" &amp;&amp; $("#repairCost15").val() == "" ){
            $("#cat15").val("");
          }


             if(!$(".jTypeCLASS").is(":checked")) {
                  alert("Please fill in the missing required field, Jurisdiction Type. Pick one City or County.");
                  $("#jurisdictionType1").focus().select();
      
                  return false;

              } else if($("#county").val() === "Select One"){
                alert("Please make a choice in the missing required field, County.");
                  $("#county").focus().select();
      
                  return false;

              } else if($("#city").val() === "Select One"){
                alert("Please make a choice in the missing required field, City.");
                  $("#city").focus().select();
      
                  return false;

              } else if($("#contactPerson").val() === "") {
                alert("Please fill in the missing required field, Contact Person.");
                  $("#contactPerson").focus().select();
      
                  return false;

              } else if($("#contactPersonTitle").val() === "") {
                alert("Please fill in the missing required field, Contact Person Title.");
                  $("#contactPersonTitle").focus().select();
      
                  return false;

              } else {
                if (cats === true){
                  copySelectedOptionsToTextAreaThenCopyTextAreaValueToArray();
                  updateOrFirstTime();
                  sendEmails();
                  fakeSubmit();
                } else {
                  return false;
                  
              } 
          }
             
          });
          //end of notRealSave click

          rebuildingCityCountyOptionsOnJTypeCheck("#jurisdictionType1");
          rebuildingCityCountyOptionsOnJTypeCheck("#jurisdictionType2");
           document.getElementById('editKey').value = document.getElementById('dataidSpan').getElementsByTagName('u')[0].innerHTML;
           popIncidentName();
           document.getElementById('jurisdictionType1').onchange=TypeJurisdiciton;
        document.getElementById('jurisdictionType2').onchange=TypeJurisdiciton;
            
            autoSum();
    if ('<xsl:value-of select="/data/@dataid" />'!=0){
            disableInputsIA();
            disableInputsPA();
    }
           
            var counties = window.parent.window.parent.counties;
        var countieslist= document.getElementById('county');
        
        
       document.getElementById('city').onchange = function () {

                sortOrderCity(this.options[this.selectedIndex].text);
                var coList = document.getElementById("county");
                var coSelected = coList.options[coList.selectedIndex].text;
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(coList);
                    addOption(coList, 'Select One', true);
                    for (var k = 0; k &lt; countyList.length; k++) {
                        addOption(coList, countyList[k], false);

                    }
                } else if (this.options[this.selectedIndex].text == 'Unincorporated Areas') {document.getElementById('sortCityOrder').value='0';
 
                } else {
                    removeOptions(coList);
                    addOption(coList, 'Select One', false);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        if (cityMatrix[k][1] === this.options[this.selectedIndex].text) {
                            var selected = false;
                            if (cityMatrix[k][0] == coSelected) { selected = true; }
                            addOption(coList, cityMatrix[k][0], selected);

                        }
                    }
                }


            }
       
       document.getElementById('county').onchange = function () {
                sortOrderCounty(this.options[this.selectedIndex].text);
                var cityList = document.getElementById("city");
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        addOption(cityList, cityMatrix[k][1], false);
                    }
                } else {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    if(document.getElementById('jurisdictionType2').checked ==true){
                      addOption(cityList, "Unincorporated Areas", true);
                    } else {
                     //do nothing
                    }
                    for (var k = 0; k &lt; cityMatrix.length; k++) {

                        if (cityMatrix[k][0] === this.options[this.selectedIndex].text) {
                            addOption(cityList, cityMatrix[k][1], false);
                        }
                    }
                }
            }
          
           
            $('.datepicker').datepicker();


            commandInfoWindow('affectedSpan', 'Affected', '<div><b>Structure is habitable.  Some minor damage may be eligible for assistance.  Look for the following:</b><ul><li>A few missing shingles;</li><li>Some broken windows;</li><li>Damage to cars;</li><li>Damage to Air Conditioner Compressor only;</li><li>Single Family/Multi Family Residences - 0” - 6” of water</li><li>Mobile Homes- Ground level to within 12” of bottom board.</li></ul></div>');
            commandInfoWindow('minorDamageSpan', 'Minor Damage', '<div><b>Structure is habitable with minor repairs.  Look for the following:</b><ul><li>Many missing shingles, broken windows and doors;</li><li>Siding loose, missing or damaged;</li><li>Minor shifting or settling of foundation;</li><li>Damaged septic systems (flood);</li><li>Single Family/Multi-Family Residences – 6” to 18” of water,</li><li>Mobile Homes- Within 12” of bottom board to 3” above floor level.</li></ul></div>');
            commandInfoWindow('majorDamageSpan', 'Major Damage', '<div><b>Structure is currently uninhabitable and extensive repair is required to make it habitable. Look for  the following:</b><ul><li>Portions of the roof, including decking, missing;</li><li>Twisted, bowed or cracked walls;</li><li>Penetration of structure by trees or cars, etc.;</li><li>Single Family/Multi Family Residences - 18” – 48” of water,</li><li>Mobile Homes – 3” – 12” above floor level.</li></ul></div>');
            commandInfoWindow('destroyedSpan', 'Destroyed', '<div><b>Structure is permanently uninhabitable and can not be repaired.  Look for the following:</b><ul><li>Structure gone, only foundation remains;</li><li>Major sections of walls missing or collapsed;</li><li>Entire roof gone with noticeable distortion of the walls;</li><li>Structure has shifted off of its foundation;</li><li>*Single Family/Multi-Family Residences - More than 48” of water;</li><li>*Mobile Homes - over 12" for mobile homes.</li><li>*requires further investigation</li></ul></div>');
            commandInfoWindow('insuranceSpan', 'Estimating Insurance', '<div><b>The following are general guidelines to estimating insurance coverage.</b><ul><li>Renters are less likely to have insurance.</li><li>Low income residents are less likely to have insurance.</li><li>Homeowners who are still paying off their mortgage will normally have the appropriate type of insurance.</li><li>Residents who are flooded and reside in an area that does not participate in the NFIP or in an area that has been sanctioned for NFIP code enforcement violations will not have flood insurance.</li><li>Residents who are flooded but whose property is not located in the Special Flood Hazard Area (SFHA) will probably not have flood insurance.</li></ul></div>');
            commandInfoWindow('businessesEconomicInjuryInfo', 'Business Economic Injury', '<div>SBA makes an economic injury declaration in reliance on a state certification that at least five small business concerns in a disaster area have suffered substantial economic injury as a result of the disaster and are in need of financial assistance not otherwise available on reasonable terms.<ul><li>Does not cover lost income</li><li>Businesses claiming the loss would have to provide financials and accounting records to prove the loss</li><li>Businesses compensated with insurance would have to prove their injury is substantial after insurance claims are paid</li></ul></div>')
            commandInfoWindow('emergencyProtectiveMeasuresInfo', 'Emergency Protective Measures', '<div>Includes response costs, protection of life &amp; property, and then um temporary repairs as examples</div>');
            commandInfoWindow('buildingEquipmentInfo', 'Building &amp; Equipment', '<div>Also includes vehicles and contents of buildings</div>');
            commandInfoWindow('cityInfo', 'City Options', '<div><ul><li>Multiple cities can be selected when reporting for the County by holding down the Ctrl whild clicking on the city names.</li><li>Only a single city is allowed to be selected when filling the DSO out for a City</li></ul></div>');
            commandInfoWindow('catAInfo','Category A: Debris Removal','<div>Clearance of trees and woody debris; certain building wreckage; damaged/ destroyed building contents; sand, mud, silt, and gravel; vehicles; and other disaster-related material deposited on public and, in very limited cases, private property.</div>');
            commandInfoWindow('catBInfo','Category B: Emergency Protective Measures','<div>Measures taken before, during, and after a disaster to eliminate/reduce an immediate threat to life, public health, or safety, or to eliminate/reduce an immediate threat of significant damage to improved public and private property through cost-effective measures.</div>');
            commandInfoWindow('catCInfo','Category C: Roads and Bridges','<div>Repair of roads, bridges, and associated features, such as shoulders, ditches, culverts, lighting, and signs.</div>');
            commandInfoWindow('catDInfo','Category D: Water Control Facilities','<div>Repair of drainage channels, pumping facilities, and some irrigation facilities. Repair of levees, dams, and flood control channels fall under Category D, but the eligibility of these facilities is restricted.</div>');
            commandInfoWindow('catEInfo','Category E: Buildings and Equipment','<div>Repair or replacement of buildings, including their contents and systems; heavy equipment; and vehicles.</div>');
            commandInfoWindow('catFInfo','Category F: Utilities','<div>Repair of water treatment and delivery systems; power generation facilities and distribution facilities; sewage collection and treatment facilities; and communications.</div>');
            commandInfoWindow('catGInfo','Category G: Parks, Recreational Facilities, and Other Facilities','<div>Repair and restoration of parks, playgrounds, pools, cemeteries, mass transit facilities, and beaches. This category also is used for any work or facility that cannot be characterized adequately by Categories A-F.</div>');
        
            scribe.fields4History = [
            ["webeocIncident", "WebEOC Incident"],
            ["county", "County"],
            ["city", "City"],
            ["type", "Incident Type"],
            ["cat01", "Other Category Type 01"],
            ["cat02", "Other Category Type 02"],
            ["cat03", "Other Category Type 03"],
            ["cat04", "Other Category Type 04"],
            ["cat05", "Other Category Type 05"],
            ["cat06", "Other Category Type 06"],
            ["cat07", "Other Category Type 07"],
            ["cat08", "Other Category Type 08"],
            ["cat09", "Other Category Type 09"],
            ["cat10", "Other Category Type 10"],
            ["cat11", "Other Category Type 11"],
            ["cat12", "Other Category Type 12"],
            ["cat13", "Other Category Type 13"],
            ["cat14", "Other Category Type 14"],
            ["cat15", "Other Category Type 15"],
            ["jurisdictionType", "Jurisdiction Type"],
            ["population", "Population"],
            ["nfip", "NFIP"],
            ["dateOfDisaster1", "State Date of Disaster"],
            ["dateOfDisaster2", "End Date of Disaster"],
            ["continuing", "Disaster Continuing"],
            ["declarationIssued", "Declaration Declared"],
            ["contactPerson", "Contact Person"],
            ["contactPersonTitle", "Contact Person Title"],
            ["address", "Address"],
            ["phone", "Phone"],
            ["mobilePhone", "Mobile Phone"],
            ["fax", "Fax"],
            ["pager", "Pager"],
            ["dutyPhone", "Duty Phone"],
            ["sfhAffected", "Single Faimly Homes Affected"],
            ["sfhMinorDamage", "Single Faimly Homes Minor"],
            ["sfhMajorDamage", "Single Faimly Homes Major"],
            ["sfhDestroyed", "Single Faimly Homes Destroyed"],
            ["sfhCovByInsurance", "Single Faimly Home Insured"],
            ["mhAffected", "Mobile Homes Affected"],
            ["mhMinorDamage", "Mobile Homes Minor "],
            ["mhMajorDamage", "Mobile Homes Major"],
            ["mhDestroyed", "Mobile Homes Destroyed"],
            ["mhCovByInsurance", "Mobile Home Insured"],
            ["mfuAffected", "Multi-Family Units Affected"],
            ["mfuMinorDamage", "Multi-Family Units Minor"],
            ["mfuMajorDamage", "Multi-Family Units  Major"],
            ["mfuDestroyed", "Multi-Family Units Insurance"],
            ["mfuCovByInsurance", "Multi-Family Units Affected"],
            ["totalsAffected", "Total Residental Affected"],
            ["totalsMinorDamage", "Total Residental Minor"],
            ["totalsMajorDamage", "Total Residental Major"],
            ["totalsDestroyed", "Total Residental Destroyed"],
            ["totalsCovByInsurance", "Total Residental Insured"],
            ["homesIsolated", "Homes Isolated"],
            ["numberMinorDamage", "Business Minor Damage"],
            ["coveredMinorDamage", "Business Minor Insured"],
            ["totalMinorDamage", "Business Minor Repair $"],
            ["numberMajorDamage", "Business Major Damage"],
            ["coveredMajorDamage", "Business Major Insured"],
            ["totalMajorDamage", "Business Major Repair $"],
            ["numberTotal", "Business Damaged"],
            ["coveredTotal", "Business Insured"],
            ["totalTotal", "Business Repair $"],
            ["businessesCeased", "Businesses Ceased Operations"],
            ["businessesEconomicInjury", "Nusinessess Economic Injury"],
            ["numberUnemployed", "Number Unemployed"],
            ["sitesDebrisClearance", "CAT A Sites"],
            ["repairCostDebrisClearance", "CAT A Estimated Cost"],
            ["insuranceDebrisClearance", "CAT A Insured"],
            ["sitesEmergency", "CAT B Sites"],
            ["repairCostEmergency", "CAT B Estimated Cost"],
            ["insuranceEmergency", "CAT B Insured"],
            ["sitesRoadPaved", "CAT C Sites"],
            ["repairCostRoadPaved", "CAT C Estimated Cost"],
            ["insuranceRoadPaved", "CAT C Insured"],
            ["sitesWaterControlFacilities", "CAT D Sites"],
            ["repairCostWaterControlFacilities", "CAT D Estimated Cost"],
            ["insuranceWaterControlFacilities", "CAT D Insured"],
            ["sitesBuildingsEquipment", "CAT E Sites"],
            ["repairCostBuildingsEquipment", "CAT E Estimated Cost"],
            ["insuranceBuildingsEquipment", "CAT E Insured"],
            ["sitesUtilitySystems", "CAT F Sites"],
            ["repairCostUtilitySystems", "CAT F Estimated Cost"],
            ["insuranceUtilitySystems", "CAT F Insured"],
            ["sitesOther", "CAT G Sites"],
            ["repairCostOther", "CAT G Estimated Cost"],
            ["insuranceOther", "CAT G Insured"],
            ["sitesTotals", "CAT Site Total"],
            ["repairCostTotals", "CAT Cost Total"],
            ["insuranceTotals", "CAT Insured Total"],
            ["annualMaintenanceBudget", "Annual Maintenace Budget"],
            ["startOfFiscalYear", "Start of Fiscal Year"],
            ["orgFacility01", "Other Facility 01"],
            ["sites01", "Other Sites 01"],
            ["repairCost01", "Other Repair Cost 01"],
            ["insurance01", "Other Insured 01"],
            ["orgFacility02", "Other Facility 02"],
            ["sites02", "Other Sites 02"],
            ["repairCost02", "Other Repair Cost 02"],
            ["insurance02", "Other Insured 02"],
            ["orgFacility03", "Other Facility 03"],
            ["sites03", "Other Sites 03"],
            ["repairCost03", "Other Repair Cost 03"],
            ["insurance03", "Other Insured 03"],
            ["orgFacility04", "Other Facility 04"],
            ["sites04", "Other Sites 04"],
            ["repairCost04", "Other Repair Cost 04"],
            ["insurance04", "Other Insured 04"],
            ["orgFacility05", "Other Facility 05"],
            ["sites05", "Other Sites 05"],
            ["repairCost05", "Other Repair Cost 05"],
            ["insurance05", "Other Insured 05"],
            ["orgFacility06", "Other Facility 06"],
            ["sites06", "Other Sites 06"],
            ["repairCost06", "Other Repair Cost 06"],
            ["insurance06", "Other Insured 06"],
            ["orgFacility07", "Other Facility 07"],
            ["sites07", "Other Sites 07"],
            ["repairCost07", "Other Repair Cost 07"],
            ["insurance07", "Other Insured 07"],
            ["orgFacility08", "Other Facility 08"],
            ["sites08", "Other Sites 08"],
            ["repairCost08", "Other Repair Cost 08"],
            ["insurance08", "Other Insured 08"],
            ["orgFacility09", "Other Facility 09"],
            ["sites09", "Other Sites 09"],
            ["repairCost09", "Other Repair Cost 09"],
            ["insurance09", "Other Insured 09"],
            ["orgFacility10", "Other Facility 10"],
            ["sites10", "Other Sites 10"],
            ["repairCost10", "Other Repair Cost 10"],
            ["insurance10", "Other Insured 10"],
            ["orgFacility11", "Other Facility 11"],
            ["sites11", "Other Sites 11"],
            ["repairCost11", "Other Repair Cost 11"],
            ["insurance11", "Other Insured 11"],
            ["orgFacility12", "Other Facility 12"],
            ["sites12", "Other Sites 12"],
            ["repairCost12", "Other Repair Cost 12"],
            ["insurance12", "Other Insured 12"],
            ["orgFacility13", "Other Facility 13"],
            ["sites13", "Other Sites 13"],
            ["repairCost13", "Other Repair Cost 13"],
            ["insurance13", "Other Insured 13"],
            ["orgFacility14", "Other Facility 14"],
            ["sites14", "Other Sites 14"],
            ["repairCost14", "Other Repair Cost 14"],
            ["insurance14", "Other Insured 14"],
            ["orgFacility15", "Other Facility 15"],
            ["sites15", "Other Sites 15"],
            ["repairCost15", "Other Repair Cost 15"],
            ["insurance15", "Other Insured 15"],
            ["sitesOtherTotal", "Other Sites Total"],
            ["repairCostTotal", "Other Repair Cost Total"],
            ["insuranceCostTotal", "Other Insured Total"],
            ["submitterName", "Submitter Name"],
            ["submitterEmail", "Submitter Email"],
            ["additionalEmails", "Additional Emails"],
            ["countyEmail", "County Email"],
            ["ddcEmail", "DDC Email"],
            ["notes", "Notes"],
              ["hidden","Hidden"],
              ["socProcessed","SOC Processed"]
            ];
            scribe.inicialReview();
            $("#county").prop("disabled", true);
            $("#city").prop("disabled", true);
            if ('<xsl:value-of select="/data/@dataid" />'!=0){
               $("#county").prop("disabled", false);
                $("#city").prop("disabled", false);

                //startOf: doing stuff on update/edit
                var countySelectListOnUpdate = document.getElementById("county");
                sortOrderCounty(countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text);
                var cityList = document.getElementById("city");
                if (countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text == 'Select One') {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        addOption(cityList, cityMatrix[k][1], false);
                    }
                } else {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {

                        if (cityMatrix[k][0] === countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text) {
                            addOption(cityList, cityMatrix[k][1], false);
                        }
                    }
                }


                setTimeout(function() {
                  
                    selectOptionsIfExistsInArray();
                }, 1000);
            } 
            
            
        }

        function copySelectedOptionsToTextAreaThenCopyTextAreaValueToArray() {
                    document.getElementById("cityTmp").value += $("#city").val();
                }



        function fakeSubmit() {
      
          var tf= document.getElementById('auditEmbed');
           if(tf.contentWindow){
              tf.contentWindow.document.getElementById('frameBody').contentWindow.frames.injectHistory(document.getElementsByName('dataid')[0].value,'<value-of select="/data/@username" />','<value-of select="/data/@currentdate" />'+' '+'<value-of select="/data/@currenttime" />',scribe.postReview());

          } else {
            tf.contentDocument.document.getElementById('frameBody').contentDocument.frames.injectHistory(document.getElementsByName('dataid')[0].value,'<value-of select="/data/@username" />','<value-of select="/data/@currentdate" />'+' '+'<value-of select="/data/@currenttime" />',scribe.postReview());
          }
        
        }

//this will work but something else is putting it there
        function removeUniAreas(){
          
          $("#city option:contains(Unincorporated Areas)").remove();
        }

        function TypeJurisdiciton(){
          var a = document.getElementById('jurisdictionType1');
        

          if(a.checked==true){
            
            
          document.getElementById('city').multiple=false;
          document.getElementById('city').size=1;
        } else {
          document.getElementById('city').multiple=true;
          document.getElementById('city').size=4;
          document.getElementById('sortCityOrder').value='0';
        }

      }

      function popIncidentName(){
        var first = document.getElementById('webeocIncident'),
          second = document.getElementById('incidentName');

          second.value = first.value;
}


      function countyEmailHideReveal() {
      if (document.getElementById('jurisdictionType1').checked ==true) {
      document.getElementById('countyEmailHide').style.display="";
      } else {
      document.getElementById('countyEmailHide').style.display="none";
    
 }
}


function validatingCatSelectOptionIfEstimatedIsNotEmpty(a, b, c) {
    if($(a).val() != "" &amp;&amp; $(b).val() === "") {
        alert("Please select a value for Cat A-G");
        $(c).focus().select();
        event.preventDefault();
        //maybe not in IE / safari ------NEEDS TEST
        //event.stopPropagation(); //this does not work in firefox, maybe not in IE / safari ------NEEDS TEST
        cats = false;
        console.log(cats);
        console.log("cats false above");
        console.log("validatingCatSelectOptionIfEstimatedIsNotEmpty runs and stops form");

    } else {
        cats = true;
         console.log(cats);
        console.log("cats true above");

        console.log("validatingCatSelectOptionIfEstimatedIsNotEmpty else finishes");
    }
}

Object.defineProperty(HTMLSelectElement.prototype, "selectedOptions", {
    get: (function() {
        try {
            document.querySelector(":checked");
            return function() {
                return this.querySelectorAll(":checked");
            };
        } catch (e) {
            return function() {
                if (!this.multiple) {
                    return this.selectedIndex &gt;= 0
                            ? [this.options[this.selectedIndex]] : [];
                }
                for (var i = 0, a = []; i &lt; this.options.length; i++)
                    if (this.options[i].selected) a.push(this.options[i]);
                return a;
                console.log(a);
                console.log("Object.defineProperty(HTMLSelectElement.prototype a ABOVE");
            };
        }
    })()
});


function saveButtonRuns(){
  console.log("real save button is clicked");
}



function disableInputsIA(){
  var a = document.getElementById('femaTestIA').textContent;
if (a[0]=='1'){
  $('input.lockTheseIA').attr('disabled', 'disabled');
} else {
  $('input.lockTheseIA').removeAttr('disabled');
}
}

function disableInputsPA(){
  var a = document.getElementById('femaTestPA').textContent;
if (a[0]=='1'){
  $('input.lockThesePA').attr('disabled', 'disabled');
} else {
  $('input.lockThesePA').removeAttr('disabled');
}
}



        window.onload = start;
    </script></head><body><div class="container agencytemplate_boardbackground"><form role="form"><div class="content"><span style="display:none"><div id="femaTestIA"><relatedexpression name="femaIACheckTest" table="Supplemental">sum(case when femaCheckboxV1='Yes' then 1 else 0 end)
        </relatedexpression></div><div id="femaTestPA"><relatedexpression name="femaPACheckTest" table="Supplemental">sum(case when femaCheckboxV2='Yes' then 1 else 0 end)
        </relatedexpression></div></span><div id="hidden" style="display:nonea"><div class="form-group form-inline"><label class="control-label" for="sortCountyOrder">Sort County Order:</label><input name="sortCountyOrder" id="sortCountyOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="sortCityOrder">Sort City Order:</label><input name="sortCityOrder" id="sortCityOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="submitedDateTime">Submited DateTime:</label><input name="submitedDateTime" id="submitedDateTime" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="updated">Updated:</label><input name="updated" id="updated" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="incidentName">Incident Name:</label><input name="incidentName" id="incidentName" type="text" style="form-control input-sm" /></div><!--<div class="form-group form-inline">
                     <label class="control-label" for="additionalEmails"> Additional Emails:</label>
                     <input name="additionalEmails" id="additionalEmails" type="text" style="form-control input-sm"/>
                  </div>--><div class="form-group form-inline"><label class="control-label" for="editKey">editKey:</label><input name="editKey" id="editKey" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="dsoSelected">dsoSelected:</label><input name="dsoSelected" id="dsoSelected" type="checkbox" value="Yes" style="form-control input-sm" /></div><span id="dataidSpan"><dataid /></span></div><div id="container"><h1><span class="label label-default">Incident</span></h1><br /><!--<input type="text" name="incidentName3" id="incidentName3" class="form-control hide">
              <attribute name="value">
                <incidentname />
              </attribute>
            </input>--><div class="form-group form-inline"><label class="control-label" for="webeocIncident">Incident:</label><space /><input type="text" name="webeocIncident" id="webeocIncident" style="form-control input-sm" /></div><br /><h1><span class="label label-default">General</span></h1><br /><div class="form-group required form-inline" id="jurisdictionTypeDIV"><label id="jurisdictionTypeLabel" class="control-label" for="jurisdictionType">Jurisdiction Type:</label>
        City 
                     
                     
                     
                     
                     
                     <input id="jurisdictionType1" type="radio" class="form-control input-sm jTypeCLASS" name="jurisdictionType" value="City" onclick="countyEmailHideReveal();removeUniAreas()" />
        County 
                     
                     
                     
                     
                     
                     <input id="jurisdictionType2" type="radio" class="form-control input-sm jTypeCLASS" name="jurisdictionType" value="County" onclick="countyEmailHideReveal()" /></div><div class="form-group form-inline"><label class="control-label" for="county">County:</label><space /><select id="county" name="county"><option value="">Please Select:</option><option value="Anderson">Anderson</option><option value="Andrews">Andrews</option><option value="Angelina">Angelina</option><option value="Aransas">Aransas</option><option value="Archer">Archer</option><option value="Armstrong">Armstrong</option><option value="Atascosa">Atascosa</option><option value="Austin">Austin</option><option value="Bailey">Bailey</option><option value="Bandera">Bandera</option><option value="Bastrop">Bastrop</option><option value="Baylor">Baylor</option><option value="Bee">Bee</option><option value="Bell">Bell</option><option value="Bexar">Bexar</option><option value="Blanco">Blanco</option><option value="Borden">Borden</option><option value="Bosque">Bosque</option><option value="Bowie">Bowie</option><option value="Brazoria">Brazoria</option><option value="Brazos">Brazos</option><option value="Brewster">Brewster</option><option value="Briscoe">Briscoe</option><option value="Brooks">Brooks</option><option value="Brown">Brown</option><option value="Burleson">Burleson</option><option value="Burnet">Burnet</option><option value="Caldwell">Caldwell</option><option value="Calhoun">Calhoun</option><option value="Callahan">Callahan</option><option value="Cameron">Cameron</option><option value="Camp">Camp</option><option value="Carson">Carson</option><option value="Cass">Cass</option><option value="Castro">Castro</option><option value="Chambers">Chambers</option><option value="Cherokee">Cherokee</option><option value="Childress">Childress</option><option value="Clay">Clay</option><option value="Cochran">Cochran</option><option value="Coke">Coke</option><option value="Coleman">Coleman</option><option value="Collin">Collin</option><option value="Collingsworth">Collingsworth</option><option value="Colorado">Colorado</option><option value="Comal">Comal</option><option value="Comanche">Comanche</option><option value="Concho">Concho</option><option value="Cooke">Cooke</option><option value="Coryell">Coryell</option><option value="Cottle">Cottle</option><option value="Crane">Crane</option><option value="Crockett">Crockett</option><option value="Crosby">Crosby</option><option value="Culberson">Culberson</option><option value="Dallam">Dallam</option><option value="Dallas">Dallas</option><option value="Dawson">Dawson</option><option value="Deaf Smith">Deaf Smith</option><option value="Delta">Delta</option><option value="Denton">Denton</option><option value="DeWitt">DeWitt</option><option value="Dickens">Dickens</option><option value="Dimmit">Dimmit</option><option value="Donley">Donley</option><option value="Duval">Duval</option><option value="Eastland">Eastland</option><option value="Ector">Ector</option><option value="Edwards">Edwards</option><option value="El Paso">El Paso</option><option value="Ellis">Ellis</option><option value="Erath">Erath</option><option value="Falls">Falls</option><option value="Fannin">Fannin</option><option value="Fayette">Fayette</option><option value="Fisher">Fisher</option><option value="Floyd">Floyd</option><option value="Foard">Foard</option><option value="Fort Bend">Fort Bend</option><option value="Franklin">Franklin</option><option value="Freestone">Freestone</option><option value="Frio">Frio</option><option value="Gaines">Gaines</option><option value="Galveston">Galveston</option><option value="Garza">Garza</option><option value="Gillespie">Gillespie</option><option value="Glasscock">Glasscock</option><option value="Goliad">Goliad</option><option value="Gonzales">Gonzales</option><option value="Gray">Gray</option><option value="Grayson">Grayson</option><option value="Gregg">Gregg</option><option value="Grimes">Grimes</option><option value="Guadalupe">Guadalupe</option><option value="Hale">Hale</option><option value="Hall">Hall</option><option value="Hamilton">Hamilton</option><option value="Hansford">Hansford</option><option value="Hardeman">Hardeman</option><option value="Hardin">Hardin</option><option value="Harris">Harris</option><option value="Harrison">Harrison</option><option value="Hartley">Hartley</option><option value="Haskell">Haskell</option><option value="Hays">Hays</option><option value="Hemphill">Hemphill</option><option value="Henderson">Henderson</option><option value="Hidalgo">Hidalgo</option><option value="Hill">Hill</option><option value="Hockley">Hockley</option><option value="Hood">Hood</option><option value="Hopkins">Hopkins</option><option value="Houston">Houston</option><option value="Howard">Howard</option><option value="Hudspeth">Hudspeth</option><option value="Hunt">Hunt</option><option value="Hutchinson">Hutchinson</option><option value="Irion">Irion</option><option value="Jack">Jack</option><option value="Jackson">Jackson</option><option value="Jasper">Jasper</option><option value="Jeff Davis">Jeff Davis</option><option value="Jefferson">Jefferson</option><option value="Jim Hogg">Jim Hogg</option><option value="Jim Wells">Jim Wells</option><option value="Johnson">Johnson</option><option value="Jones">Jones</option><option value="Karnes">Karnes</option><option value="Kaufman">Kaufman</option><option value="Kendall">Kendall</option><option value="Kenedy">Kenedy</option><option value="Kent">Kent</option><option value="Kerr">Kerr</option><option value="Kimble">Kimble</option><option value="King">King</option><option value="Kinney">Kinney</option><option value="Kleberg">Kleberg</option><option value="Knox">Knox</option><option value="La Salle">La Salle</option><option value="Lamar">Lamar</option><option value="Lamb">Lamb</option><option value="Lampasas">Lampasas</option><option value="Lavaca">Lavaca</option><option value="Lee">Lee</option><option value="Leon">Leon</option><option value="Liberty">Liberty</option><option value="Limestone">Limestone</option><option value="Lipscomb">Lipscomb</option><option value="Live Oak">Live Oak</option><option value="Llano">Llano</option><option value="Loving">Loving</option><option value="Lubbock">Lubbock</option><option value="Lynn">Lynn</option><option value="Madison">Madison</option><option value="Marion">Marion</option><option value="Martin">Martin</option><option value="Mason">Mason</option><option value="Matagorda">Matagorda</option><option value="Maverick">Maverick</option><option value="McCulloch">McCulloch</option><option value="McLennan">McLennan</option><option value="McMullen">McMullen</option><option value="Medina">Medina</option><option value="Menard">Menard</option><option value="Midland">Midland</option><option value="Milam">Milam</option><option value="Mills">Mills</option><option value="Mitchell">Mitchell</option><option value="Montague">Montague</option><option value="Montgomery">Montgomery</option><option value="Moore">Moore</option><option value="Morris">Morris</option><option value="Motley">Motley</option><option value="Nacogdoches">Nacogdoches</option><option value="Navarro">Navarro</option><option value="Newton">Newton</option><option value="Nolan">Nolan</option><option value="Nueces">Nueces</option><option value="Ochiltree">Ochiltree</option><option value="Oldham">Oldham</option><option value="Orange">Orange</option><option value="Palo Pinto">Palo Pinto</option><option value="Panola">Panola</option><option value="Parker">Parker</option><option value="Parmer">Parmer</option><option value="Pecos">Pecos</option><option value="Polk">Polk</option><option value="Potter">Potter</option><option value="Presidio">Presidio</option><option value="Rains">Rains</option><option value="Randall">Randall</option><option value="Reagan">Reagan</option><option value="Real">Real</option><option value="Red River">Red River</option><option value="Reeves">Reeves</option><option value="Refugio">Refugio</option><option value="Roberts">Roberts</option><option value="Robertson">Robertson</option><option value="Rockwall">Rockwall</option><option value="Runnels">Runnels</option><option value="Rusk">Rusk</option><option value="Sabine">Sabine</option><option value="San Augustine">San Augustine</option><option value="San Jacinto">San Jacinto</option><option value="San Patricio">San Patricio</option><option value="San Saba">San Saba</option><option value="Schleicher">Schleicher</option><option value="Scurry">Scurry</option><option value="Shackelford">Shackelford</option><option value="Shelby">Shelby</option><option value="Sherman">Sherman</option><option value="Smith">Smith</option><option value="Somervell">Somervell</option><option value="Starr">Starr</option><option value="Stephens">Stephens</option><option value="Sterling">Sterling</option><option value="Stonewall">Stonewall</option><option value="Sutton">Sutton</option><option value="Swisher">Swisher</option><option value="Tarrant">Tarrant</option><option value="Taylor">Taylor</option><option value="Terrell">Terrell</option><option value="Terry">Terry</option><option value="Throckmorton">Throckmorton</option><option value="Titus">Titus</option><option value="Tom Green">Tom Green</option><option value="Travis">Travis</option><option value="Trinity">Trinity</option><option value="Tyler">Tyler</option><option value="Upshur">Upshur</option><option value="Upton">Upton</option><option value="Uvalde">Uvalde</option><option value="Val Verde">Val Verde</option><option value="Van Zandt">Van Zandt</option><option value="Victoria">Victoria</option><option value="Walker">Walker</option><option value="Waller">Waller</option><option value="Ward">Ward</option><option value="Washington">Washington</option><option value="Webb">Webb</option><option value="Wharton">Wharton</option><option value="Wheeler">Wheeler</option><option value="Wichita">Wichita</option><option value="Wilbarger">Wilbarger</option><option value="Willacy">Willacy</option><option value="Williamson">Williamson</option><option value="Wilson">Wilson</option><option value="Winkler">Winkler</option><option value="Wise">Wise</option><option value="Wood">Wood</option><option value="Yoakum">Yoakum</option><option value="Young">Young</option><option value="Zapata">Zapata</option><option value="Zavala">Zavala</option></select><!-- </select>--></div><div class="form-group form-inline"><label class="control-label" for="city">City:</label><space /><span id="cityInfo" class="label label-info">i</span><space /><select size="4" name="city" list="DSO Cities" multiple="multiple" id="city" class="form-control"><option value="Select One">Select One</option><option value="Unincorporated Areas">Unincorporated Areas</option><option value="Abbott">Abbott</option><option value="Abernathy">Abernathy</option><option value="Abilene">Abilene</option><option value="Ackerly">Ackerly</option><option value="Addison">Addison</option><option value="Adrian">Adrian</option><option value="Agua Dulce">Agua Dulce</option><option value="Alamo">Alamo</option><option value="Alamo Heights">Alamo Heights</option><option value="Alba">Alba</option><option value="Albany">Albany</option><option value="Aledo">Aledo</option><option value="Alice">Alice</option><option value="Allen">Allen</option><option value="Alma">Alma</option><option value="Alpine">Alpine</option><option value="Alto">Alto</option><option value="Alton">Alton</option><option value="Alvarado">Alvarado</option><option value="Alvin">Alvin</option><option value="Alvord">Alvord</option><option value="Amarillo">Amarillo</option><option value="Ames">Ames</option><option value="Amherst">Amherst</option><option value="Anahuac">Anahuac</option><option value="Anderson">Anderson</option><option value="Andrews">Andrews</option><option value="Angleton">Angleton</option><option value="Angus">Angus</option><option value="Anna">Anna</option><option value="Annetta">Annetta</option><option value="Annetta North">Annetta North</option><option value="Annetta South">Annetta South</option><option value="Annona">Annona</option><option value="Anson">Anson</option><option value="Anthony">Anthony</option><option value="Anton">Anton</option><option value="Appleby">Appleby</option><option value="Aquilla">Aquilla</option><option value="Aransas Pass">Aransas Pass</option><option value="Archer City">Archer City</option><option value="Arcola">Arcola</option><option value="Argyle">Argyle</option><option value="Arlington">Arlington</option><option value="Arp">Arp</option><option value="Asherton">Asherton</option><option value="Aspermont">Aspermont</option><option value="Athens">Athens</option><option value="Atlanta">Atlanta</option><option value="Aubrey">Aubrey</option><option value="Aurora">Aurora</option><option value="Austin">Austin</option><option value="Austwell">Austwell</option><option value="Avery">Avery</option><option value="Avinger">Avinger</option><option value="Azle">Azle</option><option value="Bailey">Bailey</option><option value="Bailey's Prairie">Bailey's Prairie</option><option value="Baird">Baird</option><option value="Balch Springs">Balch Springs</option><option value="Balcones Heights">Balcones Heights</option><option value="Ballinger">Ballinger</option><option value="Balmorhea">Balmorhea</option><option value="Bandera">Bandera</option><option value="Bangs">Bangs</option><option value="Bardwell">Bardwell</option><option value="Barry">Barry</option><option value="Barstow">Barstow</option><option value="Bartlett">Bartlett</option><option value="Bartonville">Bartonville</option><option value="Bastrop">Bastrop</option><option value="Bay City">Bay City</option><option value="Bayou Vista">Bayou Vista</option><option value="Bayside">Bayside</option><option value="Baytown">Baytown</option><option value="Bayview">Bayview</option><option value="Beach City">Beach City</option><option value="Bear Creek">Bear Creek</option><option value="Beasley">Beasley</option><option value="Beaumont">Beaumont</option><option value="Beckville">Beckville</option><option value="Bedford">Bedford</option><option value="Bedias">Bedias</option><option value="Bee Cave">Bee Cave</option><option value="Beeville">Beeville</option><option value="Bellaire">Bellaire</option><option value="Bellevue">Bellevue</option><option value="Bellmead">Bellmead</option><option value="Bells">Bells</option><option value="Bellville">Bellville</option><option value="Belton">Belton</option><option value="Benavides">Benavides</option><option value="Benbrook">Benbrook</option><option value="Benjamin">Benjamin</option><option value="Berryville">Berryville</option><option value="Bertram">Bertram</option><option value="Beverly Hills">Beverly Hills</option><option value="Bevil Oaks">Bevil Oaks</option><option value="Big Lake">Big Lake</option><option value="Big Sandy">Big Sandy</option><option value="Big Spring">Big Spring</option><option value="Big Wells">Big Wells</option><option value="Bishop">Bishop</option><option value="Bishop Hills">Bishop Hills</option><option value="Blackwell">Blackwell</option><option value="Blanco">Blanco</option><option value="Blanket">Blanket</option><option value="Bloomburg">Bloomburg</option><option value="Blooming Grove">Blooming Grove</option><option value="Blossom">Blossom</option><option value="Blue Mound">Blue Mound</option><option value="Blue Ridge">Blue Ridge</option><option value="Blum">Blum</option><option value="Boerne">Boerne</option><option value="Bogata">Bogata</option><option value="Bonham">Bonham</option><option value="Bonney">Bonney</option><option value="Booker">Booker</option><option value="Borger">Borger</option><option value="Bovina">Bovina</option><option value="Bowie">Bowie</option><option value="Boyd">Boyd</option><option value="Brackettville">Brackettville</option><option value="Brady">Brady</option><option value="Brazoria">Brazoria</option><option value="Brazos Bend">Brazos Bend</option><option value="Brazos Country">Brazos Country</option><option value="Breckenridge">Breckenridge</option><option value="Bremond">Bremond</option><option value="Brenham">Brenham</option><option value="Briarcliff">Briarcliff</option><option value="Briaroaks">Briaroaks</option><option value="Bridge City">Bridge City</option><option value="Bridgeport">Bridgeport</option><option value="Broaddus">Broaddus</option><option value="Bronte">Bronte</option><option value="Brookshire">Brookshire</option><option value="Brookside Village">Brookside Village</option><option value="Browndell">Browndell</option><option value="Brownfield">Brownfield</option><option value="Brownsboro">Brownsboro</option><option value="Brownsville">Brownsville</option><option value="Brownwood">Brownwood</option><option value="Bruceville-Eddy">Bruceville-Eddy</option><option value="Bryan">Bryan</option><option value="Bryson">Bryson</option><option value="Buckholts">Buckholts</option><option value="Buda">Buda</option><option value="Buffalo">Buffalo</option><option value="Buffalo Gap">Buffalo Gap</option><option value="Buffalo Springs">Buffalo Springs</option><option value="Bullard">Bullard</option><option value="Bulverde">Bulverde</option><option value="Bunker Hill Village">Bunker Hill Village</option><option value="Burkburnett">Burkburnett</option><option value="Burke">Burke</option><option value="Burleson">Burleson</option><option value="Burnet">Burnet</option><option value="Burton">Burton</option><option value="Byers">Byers</option><option value="Bynum">Bynum</option><option value="Cactus">Cactus</option><option value="Caddo Mills">Caddo Mills</option><option value="Caldwell">Caldwell</option><option value="Callisburg">Callisburg</option><option value="Calvert">Calvert</option><option value="Cameron">Cameron</option><option value="Camp Wood">Camp Wood</option><option value="Campbell">Campbell</option><option value="Canadian">Canadian</option><option value="Caney City">Caney City</option><option value="Canton">Canton</option><option value="Canyon">Canyon</option><option value="Carbon">Carbon</option><option value="Carl's Corner">Carl's Corner</option><option value="Carmine">Carmine</option><option value="Carrizo Springs">Carrizo Springs</option><option value="Carrollton">Carrollton</option><option value="Carthage">Carthage</option><option value="Cashion">Cashion</option><option value="Castle Hills">Castle Hills</option><option value="Castroville">Castroville</option><option value="Cedar Hill">Cedar Hill</option><option value="Cedar Park">Cedar Park</option><option value="Celeste">Celeste</option><option value="Celina">Celina</option><option value="Center">Center</option><option value="Centerville">Centerville</option><option value="Chandler">Chandler</option><option value="Channing">Channing</option><option value="Charlotte">Charlotte</option><option value="Chester">Chester</option><option value="Chico">Chico</option><option value="Childress">Childress</option><option value="Chillicothe">Chillicothe</option><option value="China">China</option><option value="China Grove">China Grove</option><option value="Chireno">Chireno</option><option value="Christine">Christine</option><option value="Cibolo">Cibolo</option><option value="Cisco">Cisco</option><option value="Clarendon">Clarendon</option><option value="Clarksville">Clarksville</option><option value="Clarksville City">Clarksville City</option><option value="Claude">Claude</option><option value="Clear Lake Shores">Clear Lake Shores</option><option value="Cleburne">Cleburne</option><option value="Cleveland">Cleveland</option><option value="Clifton">Clifton</option><option value="Clint">Clint</option><option value="Clute">Clute</option><option value="Clyde">Clyde</option><option value="Coahoma">Coahoma</option><option value="Cockrell Hill">Cockrell Hill</option><option value="Coffee City">Coffee City</option><option value="Coldspring">Coldspring</option><option value="Coleman">Coleman</option><option value="College Station">College Station</option><option value="Colleyville">Colleyville</option><option value="Collinsville">Collinsville</option><option value="Colmesneil">Colmesneil</option><option value="Colorado City">Colorado City</option><option value="Columbus">Columbus</option><option value="Comanche">Comanche</option><option value="Combes">Combes</option><option value="Combine">Combine</option><option value="Commerce">Commerce</option><option value="Como">Como</option><option value="Conroe">Conroe</option><option value="Converse">Converse</option><option value="Cool">Cool</option><option value="Coolidge">Coolidge</option><option value="Cooper">Cooper</option><option value="Coppell">Coppell</option><option value="Copper Canyon">Copper Canyon</option><option value="Copperas Cove">Copperas Cove</option><option value="Corinth">Corinth</option><option value="Corpus Christi">Corpus Christi</option><option value="Corral City">Corral City</option><option value="Corrigan">Corrigan</option><option value="Corsicana">Corsicana</option><option value="Cottonwood">Cottonwood</option><option value="Cottonwood Shores">Cottonwood Shores</option><option value="Cotulla">Cotulla</option><option value="Cove">Cove</option><option value="Covington">Covington</option><option value="Crandall">Crandall</option><option value="Crane">Crane</option><option value="Cranfills Gap">Cranfills Gap</option><option value="Crawford">Crawford</option><option value="Creedmoor">Creedmoor</option><option value="Cresson">Cresson</option><option value="Crockett">Crockett</option><option value="Crosbyton">Crosbyton</option><option value="Cross Plains">Cross Plains</option><option value="Cross Roads">Cross Roads</option><option value="Cross Timber">Cross Timber</option><option value="Crowell">Crowell</option><option value="Crowley">Crowley</option><option value="Crystal City">Crystal City</option><option value="Cuero">Cuero</option><option value="Cumby">Cumby</option><option value="Cuney">Cuney</option><option value="Cushing">Cushing</option><option value="Cut and Shoot">Cut and Shoot</option><option value="Daingerfield">Daingerfield</option><option value="Daisetta">Daisetta</option><option value="Dalhart">Dalhart</option><option value="Dallas">Dallas</option><option value="Dalworthington Gardens">Dalworthington Gardens</option><option value="Danbury">Danbury</option><option value="Darrouzett">Darrouzett</option><option value="Dawson">Dawson</option><option value="Dayton">Dayton</option><option value="Dayton Lakes">Dayton Lakes</option><option value="De Leon">De Leon</option><option value="Dean">Dean</option><option value="Decatur">Decatur</option><option value="DeCordova">DeCordova</option><option value="Deer Park">Deer Park</option><option value="DeKalb">DeKalb</option><option value="Del Rio">Del Rio</option><option value="Dell City">Dell City</option><option value="Denison">Denison</option><option value="Denton">Denton</option><option value="Denver City">Denver City</option><option value="Deport">Deport</option><option value="DeSoto">DeSoto</option><option value="Detroit">Detroit</option><option value="Devers">Devers</option><option value="Devine">Devine</option><option value="Diboll">Diboll</option><option value="Dickens">Dickens</option><option value="Dickinson">Dickinson</option><option value="Dilley">Dilley</option><option value="Dimmitt">Dimmitt</option><option value="Dish">Dish</option><option value="Dodd City">Dodd City</option><option value="Dodson">Dodson</option><option value="Domino">Domino</option><option value="Donna">Donna</option><option value="Dorchester">Dorchester</option><option value="Double Oak">Double Oak</option><option value="Douglassville">Douglassville</option><option value="Dripping Springs">Dripping Springs</option><option value="Driscoll">Driscoll</option><option value="Dublin">Dublin</option><option value="Dumas">Dumas</option><option value="Duncanville">Duncanville</option><option value="Eagle Lake">Eagle Lake</option><option value="Eagle Pass">Eagle Pass</option><option value="Early">Early</option><option value="Earth">Earth</option><option value="East Bernard">East Bernard</option><option value="East Mountain">East Mountain</option><option value="East Tawakoni">East Tawakoni</option><option value="Eastland">Eastland</option><option value="Easton">Easton</option><option value="Ector">Ector</option><option value="Edcouch">Edcouch</option><option value="Eden">Eden</option><option value="Edgecliff">Edgecliff</option><option value="Edgewood">Edgewood</option><option value="Edinburg">Edinburg</option><option value="Edmonson">Edmonson</option><option value="Edna">Edna</option><option value="Edom">Edom</option><option value="El Campo">El Campo</option><option value="El Cenizo">El Cenizo</option><option value="El Lago">El Lago</option><option value="El Paso">El Paso</option><option value="Eldorado">Eldorado</option><option value="Electra">Electra</option><option value="Elgin">Elgin</option><option value="Elkhart">Elkhart</option><option value="Elmendorf">Elmendorf</option><option value="Elsa">Elsa</option><option value="Emhouse">Emhouse</option><option value="Emory">Emory</option><option value="Enchanted Oaks">Enchanted Oaks</option><option value="Encinal">Encinal</option><option value="Ennis">Ennis</option><option value="Escobares">Escobares</option><option value="Estelline">Estelline</option><option value="Euless">Euless</option><option value="Eureka">Eureka</option><option value="Eustace">Eustace</option><option value="Evant">Evant</option><option value="Everman">Everman</option><option value="Fair Oaks Ranch">Fair Oaks Ranch</option><option value="Fairchilds">Fairchilds</option><option value="Fairfield">Fairfield</option><option value="Fairview">Fairview</option><option value="Falfurrias">Falfurrias</option><option value="Falls City">Falls City</option><option value="Farmers Branch">Farmers Branch</option><option value="Farmersville">Farmersville</option><option value="Farwell">Farwell</option><option value="Fate">Fate</option><option value="Fayetteville">Fayetteville</option><option value="Ferris">Ferris</option><option value="Flatonia">Flatonia</option><option value="Florence">Florence</option><option value="Floresville">Floresville</option><option value="Flower Mound">Flower Mound</option><option value="Floydada">Floydada</option><option value="Follett">Follett</option><option value="Forest Hill">Forest Hill</option><option value="Forney">Forney</option><option value="Forsan">Forsan</option><option value="Fort Stockton">Fort Stockton</option><option value="Fort Worth">Fort Worth</option><option value="Franklin">Franklin</option><option value="Frankston">Frankston</option><option value="Fredericksburg">Fredericksburg</option><option value="Freeport">Freeport</option><option value="Freer">Freer</option><option value="Friendswood">Friendswood</option><option value="Friona">Friona</option><option value="Frisco">Frisco</option><option value="Fritch">Fritch</option><option value="Frost">Frost</option><option value="Fruitvale">Fruitvale</option><option value="Fulshear">Fulshear</option><option value="Fulton">Fulton</option><option value="Gainesville">Gainesville</option><option value="Galena Park">Galena Park</option><option value="Gallatin">Gallatin</option><option value="Galveston">Galveston</option><option value="Ganado">Ganado</option><option value="Garden Ridge">Garden Ridge</option><option value="Garland">Garland</option><option value="Garrett">Garrett</option><option value="Garrison">Garrison</option><option value="Gary">Gary</option><option value="Gatesville">Gatesville</option><option value="George West">George West</option><option value="Georgetown">Georgetown</option><option value="Gholson">Gholson</option><option value="Giddings">Giddings</option><option value="Gilmer">Gilmer</option><option value="Gladewater">Gladewater</option><option value="Glen Rose">Glen Rose</option><option value="Glenn Heights">Glenn Heights</option><option value="Godley">Godley</option><option value="Goldsmith">Goldsmith</option><option value="Goldthwaite">Goldthwaite</option><option value="Goliad">Goliad</option><option value="Golinda">Golinda</option><option value="Gonzales">Gonzales</option><option value="Goodlow">Goodlow</option><option value="Goodrich">Goodrich</option><option value="Gordon">Gordon</option><option value="Goree">Goree</option><option value="Gorman">Gorman</option><option value="Graford">Graford</option><option value="Graham">Graham</option><option value="Granbury">Granbury</option><option value="Grand Prairie">Grand Prairie</option><option value="Grand Saline">Grand Saline</option><option value="Grandfalls">Grandfalls</option><option value="Grandview">Grandview</option><option value="Granger">Granger</option><option value="Granite Shoals">Granite Shoals</option><option value="Granjeno">Granjeno</option><option value="Grapeland">Grapeland</option><option value="Grapevine">Grapevine</option><option value="Grays Prairie">Grays Prairie</option><option value="Greenville">Greenville</option><option value="Gregory">Gregory</option><option value="Grey Forest">Grey Forest</option><option value="Groesbeck">Groesbeck</option><option value="Groom">Groom</option><option value="Groves">Groves</option><option value="Groveton">Groveton</option><option value="Gruver">Gruver</option><option value="Gun Barrel City">Gun Barrel City</option><option value="Gunter">Gunter</option><option value="Gustine">Gustine</option><option value="Hackberry">Hackberry</option><option value="Hale Center">Hale Center</option><option value="Hallettsville">Hallettsville</option><option value="Hallsburg">Hallsburg</option><option value="Hallsville">Hallsville</option><option value="Haltom City">Haltom City</option><option value="Hamilton">Hamilton</option><option value="Hamlin">Hamlin</option><option value="Happy">Happy</option><option value="Hardin">Hardin</option><option value="Harker Heights">Harker Heights</option><option value="Harlingen">Harlingen</option><option value="Hart">Hart</option><option value="Haskell">Haskell</option><option value="Haslet">Haslet</option><option value="Hawk Cove">Hawk Cove</option><option value="Hawkins">Hawkins</option><option value="Hawley">Hawley</option><option value="Hays">Hays</option><option value="Hearne">Hearne</option><option value="Heath">Heath</option><option value="Hebron">Hebron</option><option value="Hedley">Hedley</option><option value="Hedwig Village">Hedwig Village</option><option value="Helotes">Helotes</option><option value="Hemphill">Hemphill</option><option value="Hempstead">Hempstead</option><option value="Henderson">Henderson</option><option value="Henrietta">Henrietta</option><option value="Hereford">Hereford</option><option value="Hewitt">Hewitt</option><option value="Hickory Creek">Hickory Creek</option><option value="Hico">Hico</option><option value="Hidalgo">Hidalgo</option><option value="Hideaway">Hideaway</option><option value="Higgins">Higgins</option><option value="Highland Haven">Highland Haven</option><option value="Highland Park">Highland Park</option><option value="Highland Village">Highland Village</option><option value="Hill Country Village">Hill Country Village</option><option value="Hillcrest Village">Hillcrest Village</option><option value="Hillsboro">Hillsboro</option><option value="Hilshire Village">Hilshire Village</option><option value="Hitchcock">Hitchcock</option><option value="Holiday Lakes">Holiday Lakes</option><option value="Holland">Holland</option><option value="Holliday">Holliday</option><option value="Hollywood Park">Hollywood Park</option><option value="Hondo">Hondo</option><option value="Honey Grove">Honey Grove</option><option value="Hooks">Hooks</option><option value="Horizon City">Horizon City</option><option value="Horseshoe Bay">Horseshoe Bay</option><option value="Houston">Houston</option><option value="Howardwick">Howardwick</option><option value="Howe">Howe</option><option value="Hubbard">Hubbard</option><option value="Hudson">Hudson</option><option value="Hudson Oaks">Hudson Oaks</option><option value="Hughes Springs">Hughes Springs</option><option value="Humble">Humble</option><option value="Hunters Creek Village">Hunters Creek Village</option><option value="Huntington">Huntington</option><option value="Huntsville">Huntsville</option><option value="Hurst">Hurst</option><option value="Hutchins">Hutchins</option><option value="Hutto">Hutto</option><option value="Huxley">Huxley</option><option value="Idalou">Idalou</option><option value="Impact">Impact</option><option value="Indian Lake">Indian Lake</option><option value="Industry">Industry</option><option value="Ingleside">Ingleside</option><option value="Ingleside On The Bay">Ingleside On The Bay</option><option value="Ingram">Ingram</option><option value="Iola">Iola</option><option value="Iowa Colony">Iowa Colony</option><option value="Iowa Park">Iowa Park</option><option value="Iraan">Iraan</option><option value="Iredell">Iredell</option><option value="Irving">Irving</option><option value="Italy">Italy</option><option value="Itasca">Itasca</option><option value="Ivanhoe">Ivanhoe</option><option value="Jacinto City">Jacinto City</option><option value="Jacksboro">Jacksboro</option><option value="Jacksonville">Jacksonville</option><option value="Jamaica Beach">Jamaica Beach</option><option value="Jarrell">Jarrell</option><option value="Jasper">Jasper</option><option value="Jayton">Jayton</option><option value="Jefferson">Jefferson</option><option value="Jersey Village">Jersey Village</option><option value="Jewett">Jewett</option><option value="Joaquin">Joaquin</option><option value="Johnson City">Johnson City</option><option value="Jolly">Jolly</option><option value="Jones Creek">Jones Creek</option><option value="Jonestown">Jonestown</option><option value="Josephine">Josephine</option><option value="Joshua">Joshua</option><option value="Jourdanton">Jourdanton</option><option value="Junction">Junction</option><option value="Justin">Justin</option><option value="Karnes City">Karnes City</option><option value="Katy">Katy</option><option value="Kaufman">Kaufman</option><option value="Keene">Keene</option><option value="Keller">Keller</option><option value="Kemah">Kemah</option><option value="Kemp">Kemp</option><option value="Kempner">Kempner</option><option value="Kendleton">Kendleton</option><option value="Kenedy">Kenedy</option><option value="Kenefick">Kenefick</option><option value="Kennard">Kennard</option><option value="Kennedale">Kennedale</option><option value="Kerens">Kerens</option><option value="Kermit">Kermit</option><option value="Kerrville">Kerrville</option><option value="Kilgore">Kilgore</option><option value="Killeen">Killeen</option><option value="Kingsville">Kingsville</option><option value="Kirby">Kirby</option><option value="Kirbyville">Kirbyville</option><option value="Kirvin">Kirvin</option><option value="Knollwood">Knollwood</option><option value="Knox City">Knox City</option><option value="Kosse">Kosse</option><option value="Kountze">Kountze</option><option value="Kress">Kress</option><option value="Krugerville">Krugerville</option><option value="Krum">Krum</option><option value="Kurten">Kurten</option><option value="Kyle">Kyle</option><option value="La Feria">La Feria</option><option value="La Grange">La Grange</option><option value="La Grulla">La Grulla</option><option value="La Joya">La Joya</option><option value="La Marque">La Marque</option><option value="La Porte">La Porte</option><option value="La Vernia">La Vernia</option><option value="La Villa">La Villa</option><option value="La Ward">La Ward</option><option value="LaCoste">LaCoste</option><option value="Lacy-Lakeview">Lacy-Lakeview</option><option value="Ladonia">Ladonia</option><option value="Lago Vista">Lago Vista</option><option value="Laguna Vista">Laguna Vista</option><option value="Lake Bridgeport">Lake Bridgeport</option><option value="Lake City">Lake City</option><option value="Lake Dallas">Lake Dallas</option><option value="Lake Jackson">Lake Jackson</option><option value="Lake Tanglewood">Lake Tanglewood</option><option value="Lake Worth">Lake Worth</option><option value="Lakeport">Lakeport</option><option value="Lakeside (San Patricio)">Lakeside (San Patricio)</option><option value="Lakeside (Tarrant)">Lakeside (Tarrant)</option><option value="Lakeside City">Lakeside City</option><option value="Lakeview">Lakeview</option><option value="Lakeway">Lakeway</option><option value="Lakewood Village">Lakewood Village</option><option value="Lamesa">Lamesa</option><option value="Lampasas">Lampasas</option><option value="Lancaster">Lancaster</option><option value="Laredo">Laredo</option><option value="Latexo">Latexo</option><option value="Lavon">Lavon</option><option value="Lawn">Lawn</option><option value="League City">League City</option><option value="Leakey">Leakey</option><option value="Leander">Leander</option><option value="Leary">Leary</option><option value="Lefors">Lefors</option><option value="Leon Valley">Leon Valley</option><option value="Leona">Leona</option><option value="Leonard">Leonard</option><option value="Leroy">Leroy</option><option value="Levelland">Levelland</option><option value="Lewisville">Lewisville</option><option value="Lexington">Lexington</option><option value="Liberty">Liberty</option><option value="Liberty Hill">Liberty Hill</option><option value="Lincoln Park">Lincoln Park</option><option value="Lindale">Lindale</option><option value="Linden">Linden</option><option value="Lindsay">Lindsay</option><option value="Lipan">Lipan</option><option value="Little Elm">Little Elm</option><option value="Little River Academy">Little River Academy</option><option value="Littlefield">Littlefield</option><option value="Live Oak">Live Oak</option><option value="Liverpool">Liverpool</option><option value="Livingston">Livingston</option><option value="Llano">Llano</option><option value="Lockhart">Lockhart</option><option value="Lockney">Lockney</option><option value="Log Cabin">Log Cabin</option><option value="Lometa">Lometa</option><option value="Lone Oak">Lone Oak</option><option value="Lone Star">Lone Star</option><option value="Longview">Longview</option><option value="Loraine">Loraine</option><option value="Lorena">Lorena</option><option value="Lorenzo">Lorenzo</option><option value="Los Fresnos">Los Fresnos</option><option value="Los Indios">Los Indios</option><option value="Los Ybanez">Los Ybanez</option><option value="Lott">Lott</option><option value="Lovelady">Lovelady</option><option value="Lowry Crossing">Lowry Crossing</option><option value="Lubbock">Lubbock</option><option value="Lucas">Lucas</option><option value="Lueders">Lueders</option><option value="Lufkin">Lufkin</option><option value="Luling">Luling</option><option value="Lumberton">Lumberton</option><option value="Lyford">Lyford</option><option value="Lytle">Lytle</option><option value="Mabank">Mabank</option><option value="Madisonville">Madisonville</option><option value="Magnolia">Magnolia</option><option value="Malakoff">Malakoff</option><option value="Malone">Malone</option><option value="Manor">Manor</option><option value="Mansfield">Mansfield</option><option value="Manvel">Manvel</option><option value="Marble Falls">Marble Falls</option><option value="Marfa">Marfa</option><option value="Marietta">Marietta</option><option value="Marion">Marion</option><option value="Marlin">Marlin</option><option value="Marquez">Marquez</option><option value="Marshall">Marshall</option><option value="Mart">Mart</option><option value="Martindale">Martindale</option><option value="Mason">Mason</option><option value="Matador">Matador</option><option value="Mathis">Mathis</option><option value="Maud">Maud</option><option value="Maypearl">Maypearl</option><option value="McAllen">McAllen</option><option value="McCamey">McCamey</option><option value="McGregor">McGregor</option><option value="McKinney">McKinney</option><option value="McLean">McLean</option><option value="McLendon-Chisholm">McLendon-Chisholm</option><option value="Meadow">Meadow</option><option value="Meadowlakes">Meadowlakes</option><option value="Meadows Place">Meadows Place</option><option value="Megargel">Megargel</option><option value="Melissa">Melissa</option><option value="Melvin">Melvin</option><option value="Memphis">Memphis</option><option value="Menard">Menard</option><option value="Mercedes">Mercedes</option><option value="Meridian">Meridian</option><option value="Merkel">Merkel</option><option value="Mertens">Mertens</option><option value="Mertzon">Mertzon</option><option value="Mesquite">Mesquite</option><option value="Mexia">Mexia</option><option value="Miami">Miami</option><option value="Midland">Midland</option><option value="Midlothian">Midlothian</option><option value="Midway">Midway</option><option value="Milano">Milano</option><option value="Mildred">Mildred</option><option value="Miles">Miles</option><option value="Milford">Milford</option><option value="Miller's Cove">Miller's Cove</option><option value="Millsap">Millsap</option><option value="Mineola">Mineola</option><option value="Mineral Wells">Mineral Wells</option><option value="Mingus">Mingus</option><option value="Mission">Mission</option><option value="Missouri City">Missouri City</option><option value="Mobeetie">Mobeetie</option><option value="Mobile City">Mobile City</option><option value="Monahans">Monahans</option><option value="Mont Belvieu">Mont Belvieu</option><option value="Montgomery">Montgomery</option><option value="Moody">Moody</option><option value="Moore Station">Moore Station</option><option value="Moran">Moran</option><option value="Morgan">Morgan</option><option value="Morgan's Point">Morgan's Point</option><option value="Morgan's Point Resort">Morgan's Point Resort</option><option value="Morton">Morton</option><option value="Moulton">Moulton</option><option value="Mount Calm">Mount Calm</option><option value="Mount Enterprise">Mount Enterprise</option><option value="Mount Pleasant">Mount Pleasant</option><option value="Mount Vernon">Mount Vernon</option><option value="Mountain City">Mountain City</option><option value="Muenster">Muenster</option><option value="Muleshoe">Muleshoe</option><option value="Mullin">Mullin</option><option value="Munday">Munday</option><option value="Murchison">Murchison</option><option value="Murphy">Murphy</option><option value="Mustang">Mustang</option><option value="Mustang Ridge">Mustang Ridge</option><option value="Nacogdoches">Nacogdoches</option><option value="Naples">Naples</option><option value="Nash">Nash</option><option value="Nassau Bay">Nassau Bay</option><option value="Natalia">Natalia</option><option value="Navarro">Navarro</option><option value="Navasota">Navasota</option><option value="Nazareth">Nazareth</option><option value="Nederland">Nederland</option><option value="Needville">Needville</option><option value="Nesbitt">Nesbitt</option><option value="Nevada">Nevada</option><option value="New Berlin">New Berlin</option><option value="New Boston">New Boston</option><option value="New Braunfels">New Braunfels</option><option value="New Chapel Hill">New Chapel Hill</option><option value="New Deal">New Deal</option><option value="New Fairview">New Fairview</option><option value="New Home">New Home</option><option value="New Hope">New Hope</option><option value="New London">New London</option><option value="New Summerfield">New Summerfield</option><option value="New Waverly">New Waverly</option><option value="Newark">Newark</option><option value="Newcastle">Newcastle</option><option value="Newton">Newton</option><option value="Neylandville">Neylandville</option><option value="Niederwald">Niederwald</option><option value="Nixon">Nixon</option><option value="Nocona">Nocona</option><option value="Nolanville">Nolanville</option><option value="Nome">Nome</option><option value="Noonday">Noonday</option><option value="Nordheim">Nordheim</option><option value="Normangee">Normangee</option><option value="North Cleveland">North Cleveland</option><option value="North Richland Hills">North Richland Hills</option><option value="Northlake">Northlake</option><option value="Novice">Novice</option><option value="Oak Grove">Oak Grove</option><option value="Oak Leaf">Oak Leaf</option><option value="Oak Point">Oak Point</option><option value="Oak Ridge (Cooke)">Oak Ridge (Cooke)</option><option value="Oak Ridge (Kaufman)">Oak Ridge (Kaufman)</option><option value="Oak Ridge North">Oak Ridge North</option><option value="Oak Valley">Oak Valley</option><option value="Oakwood">Oakwood</option><option value="O'Brien">O'Brien</option><option value="Odem">Odem</option><option value="Odessa">Odessa</option><option value="O'Donnell">O'Donnell</option><option value="Oglesby">Oglesby</option><option value="Old River-Winfree">Old River-Winfree</option><option value="Olmos Park">Olmos Park</option><option value="Olney">Olney</option><option value="Olton">Olton</option><option value="Omaha">Omaha</option><option value="Onalaska">Onalaska</option><option value="Opdyke West">Opdyke West</option><option value="Orange">Orange</option><option value="Orange Grove">Orange Grove</option><option value="Orchard">Orchard</option><option value="Ore City">Ore City</option><option value="Overton">Overton</option><option value="Ovilla">Ovilla</option><option value="Oyster Creek">Oyster Creek</option><option value="Paducah">Paducah</option><option value="Paint Rock">Paint Rock</option><option value="Palacios">Palacios</option><option value="Palestine">Palestine</option><option value="Palisades">Palisades</option><option value="Palm Valley">Palm Valley</option><option value="Palmer">Palmer</option><option value="Palmhurst">Palmhurst</option><option value="Palmview">Palmview</option><option value="Pampa">Pampa</option><option value="Panhandle">Panhandle</option><option value="Panorama Village">Panorama Village</option><option value="Pantego">Pantego</option><option value="Paradise">Paradise</option><option value="Paris">Paris</option><option value="Parker">Parker</option><option value="Pasadena">Pasadena</option><option value="Pattison">Pattison</option><option value="Patton Village">Patton Village</option><option value="Payne Springs">Payne Springs</option><option value="Pearland">Pearland</option><option value="Pearsall">Pearsall</option><option value="Pecan Gap">Pecan Gap</option><option value="Pecan Hill">Pecan Hill</option><option value="Pecos">Pecos</option><option value="Pelican Bay">Pelican Bay</option><option value="Penelope">Penelope</option><option value="Penitas">Penitas</option><option value="Perryton">Perryton</option><option value="Petersburg">Petersburg</option><option value="Petrolia">Petrolia</option><option value="Petronila">Petronila</option><option value="Pflugerville">Pflugerville</option><option value="Pharr">Pharr</option><option value="Pilot Point">Pilot Point</option><option value="Pine Forest">Pine Forest</option><option value="Pine Island">Pine Island</option><option value="Pinehurst">Pinehurst</option><option value="Pineland">Pineland</option><option value="Piney Point Village">Piney Point Village</option><option value="Pittsburg">Pittsburg</option><option value="Plains">Plains</option><option value="Plainview">Plainview</option><option value="Plano">Plano</option><option value="Pleak">Pleak</option><option value="Pleasant Valley">Pleasant Valley</option><option value="Pleasanton">Pleasanton</option><option value="Plum Grove">Plum Grove</option><option value="Point">Point</option><option value="Point Blank">Point Blank</option><option value="Point Comfort">Point Comfort</option><option value="Point Venture">Point Venture</option><option value="Ponder">Ponder</option><option value="Port Aransas">Port Aransas</option><option value="Port Arthur">Port Arthur</option><option value="Port Isabel">Port Isabel</option><option value="Port Lavaca">Port Lavaca</option><option value="Port Neches">Port Neches</option><option value="Portland">Portland</option><option value="Post">Post</option><option value="Post Oak Bend">Post Oak Bend</option><option value="Poteet">Poteet</option><option value="Poth">Poth</option><option value="Pottsboro">Pottsboro</option><option value="Powell">Powell</option><option value="Poynor">Poynor</option><option value="Prairie View">Prairie View</option><option value="Premont">Premont</option><option value="Presidio">Presidio</option><option value="Primera">Primera</option><option value="Princeton">Princeton</option><option value="Progreso">Progreso</option><option value="Progreso Lakes">Progreso Lakes</option><option value="Prosper">Prosper</option><option value="Providence Village">Providence Village</option><option value="Putnam">Putnam</option><option value="Pyote">Pyote</option><option value="Quanah">Quanah</option><option value="Queen City">Queen City</option><option value="Quinlan">Quinlan</option><option value="Quintana">Quintana</option><option value="Quitaque">Quitaque</option><option value="Quitman">Quitman</option><option value="Ralls">Ralls</option><option value="Rancho Viejo">Rancho Viejo</option><option value="Ranger">Ranger</option><option value="Rangerville">Rangerville</option><option value="Rankin">Rankin</option><option value="Ransom Canyon">Ransom Canyon</option><option value="Ravenna">Ravenna</option><option value="Raymondville">Raymondville</option><option value="Red Lick">Red Lick</option><option value="Red Oak">Red Oak</option><option value="Redwater">Redwater</option><option value="Refugio">Refugio</option><option value="Reklaw">Reklaw</option><option value="Reno (Lamar)">Reno (Lamar)</option><option value="Reno (Parker)">Reno (Parker)</option><option value="Retreat">Retreat</option><option value="Rhome">Rhome</option><option value="Rice">Rice</option><option value="Richardson">Richardson</option><option value="Richland">Richland</option><option value="Richland Hills">Richland Hills</option><option value="Richland Springs">Richland Springs</option><option value="Richmond">Richmond</option><option value="Richwood">Richwood</option><option value="Riesel">Riesel</option><option value="Rio Bravo">Rio Bravo</option><option value="Rio Grande City">Rio Grande City</option><option value="Rio Hondo">Rio Hondo</option><option value="Rio Vista">Rio Vista</option><option value="Rising Star">Rising Star</option><option value="River Oaks">River Oaks</option><option value="Riverside">Riverside</option><option value="Roanoke">Roanoke</option><option value="Roaring Springs">Roaring Springs</option><option value="Robert Lee">Robert Lee</option><option value="Robinson">Robinson</option><option value="Robstown">Robstown</option><option value="Roby">Roby</option><option value="Rochester">Rochester</option><option value="Rockdale">Rockdale</option><option value="Rockport">Rockport</option><option value="Rocksprings">Rocksprings</option><option value="Rockwall">Rockwall</option><option value="Rocky Mound">Rocky Mound</option><option value="Rogers">Rogers</option><option value="Rollingwood">Rollingwood</option><option value="Roma">Roma</option><option value="Roman Forest">Roman Forest</option><option value="Ropesville">Ropesville</option><option value="Roscoe">Roscoe</option><option value="Rose City">Rose City</option><option value="Rose Hill Acres">Rose Hill Acres</option><option value="Rosebud">Rosebud</option><option value="Rosenberg">Rosenberg</option><option value="Ross">Ross</option><option value="Rosser">Rosser</option><option value="Rotan">Rotan</option><option value="Round Mountain">Round Mountain</option><option value="Round Rock">Round Rock</option><option value="Round Top">Round Top</option><option value="Rowlett">Rowlett</option><option value="Roxton">Roxton</option><option value="Royse City">Royse City</option><option value="Rule">Rule</option><option value="Runaway Bay">Runaway Bay</option><option value="Runge">Runge</option><option value="Rusk">Rusk</option><option value="Sabinal">Sabinal</option><option value="Sachse">Sachse</option><option value="Sadler">Sadler</option><option value="Saginaw">Saginaw</option><option value="Saint Hedwig">Saint Hedwig</option><option value="Saint Jo">Saint Jo</option><option value="Saint Paul">Saint Paul</option><option value="Salado">Salado</option><option value="San Angelo">San Angelo</option><option value="San Antonio">San Antonio</option><option value="San Augustine">San Augustine</option><option value="San Benito">San Benito</option><option value="San Diego">San Diego</option><option value="San Felipe">San Felipe</option><option value="San Juan">San Juan</option><option value="San Leanna">San Leanna</option><option value="San Marcos">San Marcos</option><option value="San Patricio">San Patricio</option><option value="San Perlita">San Perlita</option><option value="San Saba">San Saba</option><option value="Sanctuary">Sanctuary</option><option value="Sandy Point">Sandy Point</option><option value="Sanford">Sanford</option><option value="Sanger">Sanger</option><option value="Sansom Park">Sansom Park</option><option value="Santa Anna">Santa Anna</option><option value="Santa Clara">Santa Clara</option><option value="Santa Fe">Santa Fe</option><option value="Santa Rosa">Santa Rosa</option><option value="Savoy">Savoy</option><option value="Schertz">Schertz</option><option value="Schulenburg">Schulenburg</option><option value="Scotland">Scotland</option><option value="Scottsville">Scottsville</option><option value="Scurry">Scurry</option><option value="Seabrook">Seabrook</option><option value="Seadrift">Seadrift</option><option value="Seagoville">Seagoville</option><option value="Seagraves">Seagraves</option><option value="Sealy">Sealy</option><option value="Seguin">Seguin</option><option value="Selma">Selma</option><option value="Seminole">Seminole</option><option value="Seven Oaks">Seven Oaks</option><option value="Seven Points">Seven Points</option><option value="Seymour">Seymour</option><option value="Shady Shores">Shady Shores</option><option value="Shallowater">Shallowater</option><option value="Shamrock">Shamrock</option><option value="Shavano Park">Shavano Park</option><option value="Shenandoah">Shenandoah</option><option value="Shepherd">Shepherd</option><option value="Sherman">Sherman</option><option value="Shiner">Shiner</option><option value="Shoreacres">Shoreacres</option><option value="Silsbee">Silsbee</option><option value="Silverton">Silverton</option><option value="Simonton">Simonton</option><option value="Sinton">Sinton</option><option value="Skellytown">Skellytown</option><option value="Slaton">Slaton</option><option value="Smiley">Smiley</option><option value="Smithville">Smithville</option><option value="Smyer">Smyer</option><option value="Snook">Snook</option><option value="Snyder">Snyder</option><option value="Socorro">Socorro</option><option value="Somerset">Somerset</option><option value="Somerville">Somerville</option><option value="Sonora">Sonora</option><option value="Sour Lake">Sour Lake</option><option value="South Houston">South Houston</option><option value="South Mountain">South Mountain</option><option value="South Padre Island">South Padre Island</option><option value="Southlake">Southlake</option><option value="Southmayd">Southmayd</option><option value="Southside Place">Southside Place</option><option value="Spearman">Spearman</option><option value="Splendora">Splendora</option><option value="Spofford">Spofford</option><option value="Spring Valley">Spring Valley</option><option value="Springlake">Springlake</option><option value="Springtown">Springtown</option><option value="Spur">Spur</option><option value="Stafford">Stafford</option><option value="Stagecoach">Stagecoach</option><option value="Stamford">Stamford</option><option value="Stanton">Stanton</option><option value="Staples">Staples</option><option value="Star Harbor">Star Harbor</option><option value="Stephenville">Stephenville</option><option value="Sterling City">Sterling City</option><option value="Stinnett">Stinnett</option><option value="Stockdale">Stockdale</option><option value="Stratford">Stratford</option><option value="Strawn">Strawn</option><option value="Streetman">Streetman</option><option value="Sudan">Sudan</option><option value="Sugar Land">Sugar Land</option><option value="Sullivan City">Sullivan City</option><option value="Sulphur Springs">Sulphur Springs</option><option value="Sun Valley">Sun Valley</option><option value="Sundown">Sundown</option><option value="Sunnyvale">Sunnyvale</option><option value="Sunray">Sunray</option><option value="Sunrise Beach Village">Sunrise Beach Village</option><option value="Sunset Valley">Sunset Valley</option><option value="Surfside Beach">Surfside Beach</option><option value="Sweeny">Sweeny</option><option value="Sweetwater">Sweetwater</option><option value="Taft">Taft</option><option value="Tahoka">Tahoka</option><option value="Talco">Talco</option><option value="Talty">Talty</option><option value="Tatum">Tatum</option><option value="Taylor">Taylor</option><option value="Taylor Lake Village">Taylor Lake Village</option><option value="Taylor Landing">Taylor Landing</option><option value="Teague">Teague</option><option value="Tehuacana">Tehuacana</option><option value="Temple">Temple</option><option value="Tenaha">Tenaha</option><option value="Terrell">Terrell</option><option value="Terrell Hills">Terrell Hills</option><option value="Texarkana">Texarkana</option><option value="Texas City">Texas City</option><option value="Texhoma">Texhoma</option><option value="Texline">Texline</option><option value="The Colony">The Colony</option><option value="Thompsons">Thompsons</option><option value="Thorndale">Thorndale</option><option value="Thornton">Thornton</option><option value="Thorntonville">Thorntonville</option><option value="Thrall">Thrall</option><option value="Three Rivers">Three Rivers</option><option value="Throckmorton">Throckmorton</option><option value="Tiki Island">Tiki Island</option><option value="Timbercreek Canyon">Timbercreek Canyon</option><option value="Timpson">Timpson</option><option value="Tioga">Tioga</option><option value="Tira">Tira</option><option value="Toco">Toco</option><option value="Todd Mission">Todd Mission</option><option value="Tolar">Tolar</option><option value="Tom Bean">Tom Bean</option><option value="Tomball">Tomball</option><option value="Tool">Tool</option><option value="Toyah">Toyah</option><option value="Trent">Trent</option><option value="Trenton">Trenton</option><option value="Trinidad">Trinidad</option><option value="Trinity">Trinity</option><option value="Trophy Club">Trophy Club</option><option value="Troup">Troup</option><option value="Troy">Troy</option><option value="Tulia">Tulia</option><option value="Turkey">Turkey</option><option value="Tuscola">Tuscola</option><option value="Tye">Tye</option><option value="Tyler">Tyler</option><option value="Uhland">Uhland</option><option value="Uncertain">Uncertain</option><option value="Union Grove">Union Grove</option><option value="Union Valley">Union Valley</option><option value="Universal City">Universal City</option><option value="University Park">University Park</option><option value="Uvalde">Uvalde</option><option value="Valentine">Valentine</option><option value="Valley Mills">Valley Mills</option><option value="Valley View">Valley View</option><option value="Van">Van</option><option value="Van Alstyne">Van Alstyne</option><option value="Van Horn">Van Horn</option><option value="Vega">Vega</option><option value="Venus">Venus</option><option value="Vernon">Vernon</option><option value="Victoria">Victoria</option><option value="Vidor">Vidor</option><option value="Village of The Hills">Village of The Hills</option><option value="Villiage of Volente">Villiage of Volente</option><option value="Vinton">Vinton</option><option value="Von Ormy">Von Ormy</option><option value="Waco">Waco</option><option value="Waelder">Waelder</option><option value="Wake Village">Wake Village</option><option value="Waller">Waller</option><option value="Wallis">Wallis</option><option value="Walnut Springs">Walnut Springs</option><option value="Warren City">Warren City</option><option value="Waskom">Waskom</option><option value="Watauga">Watauga</option><option value="Waxahachie">Waxahachie</option><option value="Weatherford">Weatherford</option><option value="Webberville">Webberville</option><option value="Webster">Webster</option><option value="Weimar">Weimar</option><option value="Weinert">Weinert</option><option value="Weir">Weir</option><option value="Wellington">Wellington</option><option value="Wellman">Wellman</option><option value="Wells">Wells</option><option value="Weslaco">Weslaco</option><option value="West">West</option><option value="West Columbia">West Columbia</option><option value="West Lake Hills">West Lake Hills</option><option value="West Orange">West Orange</option><option value="West Tawakoni">West Tawakoni</option><option value="West University Place">West University Place</option><option value="Westbrook">Westbrook</option><option value="Westlake">Westlake</option><option value="Weston">Weston</option><option value="Weston Lakes">Weston Lakes</option><option value="Westover Hills">Westover Hills</option><option value="Westworth Village">Westworth Village</option><option value="Wharton">Wharton</option><option value="Wheeler">Wheeler</option><option value="White Deer">White Deer</option><option value="White Oak">White Oak</option><option value="White Settlement">White Settlement</option><option value="Whiteface">Whiteface</option><option value="Whitehouse">Whitehouse</option><option value="Whitesboro">Whitesboro</option><option value="Whitewright">Whitewright</option><option value="Whitney">Whitney</option><option value="Wichita Falls">Wichita Falls</option><option value="Wickett">Wickett</option><option value="Willis">Willis</option><option value="Willow Park">Willow Park</option><option value="Wills Point">Wills Point</option><option value="Wilmer">Wilmer</option><option value="Wilson">Wilson</option><option value="Wimberley">Wimberley</option><option value="Windcrest">Windcrest</option><option value="Windom">Windom</option><option value="Windthorst">Windthorst</option><option value="Winfield">Winfield</option><option value="Wink">Wink</option><option value="Winnsboro">Winnsboro</option><option value="Winona">Winona</option><option value="Winters">Winters</option><option value="Wixon Valley">Wixon Valley</option><option value="Wolfe City">Wolfe City</option><option value="Wolfforth">Wolfforth</option><option value="Woodbranch Village">Woodbranch Village</option><option value="Woodcreek">Woodcreek</option><option value="Woodloch">Woodloch</option><option value="Woodsboro">Woodsboro</option><option value="Woodson">Woodson</option><option value="Woodville">Woodville</option><option value="Woodway">Woodway</option><option value="Wortham">Wortham</option><option value="Wylie">Wylie</option><option value="Yantis">Yantis</option><option value="Yoakum">Yoakum</option><option value="Yorktown">Yorktown</option><option value="Zavalla">Zavalla</option></select><!--<input type="text" name="city" style="form-control input-sm" />--></div><div class="form-group form-inline" style="display:none"><textarea id="cityTmp" name="cityTmp" /></div><div class="form-group form-inline"><label class="control-label" for="population">Population:</label><space /><input name="population" id="population" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="type">Type:</label><space /><input name="type" id="type" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="nfip">If this is a flood event, does the City/County participate in the National Flood Insurance Program (NFIP)?:</label>
        Yes 
                     
                     
                     
                     
                     
                     <input id="nfip1" type="radio" style="form-control input-sm" name="nfip" value="Yes" />
        No 
                     
                     
                     
                     
                     
                     <input id="nfip2" type="radio" style="form-control input-sm" name="nfip" value="No" /></div><div class="form-group form-inline"><label class="control-label" for="dateOfDisaster">Inclusive dates of the disaster:</label><space /><input name="dateOfDisaster1" id="dateOfDisaster1" type="text" placeholder="Start Date" data-provide="datepicker" style="form-control input-sm datepicker" /> - 
                     
                     
                     
                     
                     
                     <input data-provide="datepicker" name="dateOfDisaster2" placeholder="End Date" style="form-control input-sm datepicker" /><span><space /><label class="control-label" for="Continuing">Continuing?</label><space /><input type="checkbox" name="continuing" id="continuing" value="Continuing" /></span></div><div class="form-group form-inline"><label class="control-label" for="declarationIssued">Was a local disaster declaration issued?:</label>
       Yes 
                     
                     
                     
                     
                     
                     <input id="declarationIssued1" type="radio" style="form-control input-sm" name="declarationIssued" value="Yes" />
       No 
                     
                     
                     
                     
                     
                     <input id="declarationIssued2" type="radio" style="form-control input-sm" name="declarationIssued" value="No" /></div><div class="form-group required form-inline"><label class="control-label" for="contactPerson">Contact Person:</label><space /><input name="contactPerson" id="contactPerson" type="text" class="form-control input-sm cPersonCLASS" /></div><div class="form-group required form-inline"><label class="control-label" for="contactPersonTitle">Contact Person Title:</label><space /><input name="contactPersonTitle" id="contactPersonTitle" type="text" class="form-control input-sm cPersonCLASS" runat="server" /></div><div class="form-group form-inline"><label class="control-label" for="address">Address:</label><space /><input name="address" id="address" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="phone">Phone:</label><space /><input name="phone" id="phone" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="mobilePhone">Mobile Phone:</label><space /><input name="mobilePhone" id="mobilePhone" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="fax">Fax:</label><space /><input name="fax" id="fax" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="pager">Pager:</label><space /><input name="pager" id="pager" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="dutyPhone">24-Hr Duty Officer/Sheriff's Office:</label><space /><input name="dutyPhone" id="dutyPhone" type="text" style="form-control input-sm" /></div><br /><h1><span class="label label-default">Individual Assistance</span></h1><h3><span class="label label-default">Residential Losses - Primary Residence Only</span></h3><br /><table class="table table-bordered"><tr><td>Type of Homes</td><td># Affected 
                           
                           
                           
                           
                           
                           <span id="affectedSpan" class="label label-info">i</span></td><td># Minor Damage 
                           
                           
                           
                           
                           
                           <span id="minorDamageSpan" class="label label-info">i</span></td><td># Major Damage 
                           
                           
                           
                           
                           
                           <span id="majorDamageSpan" class="label label-info">i</span></td><td># Destroyed 
                           
                           
                           
                           
                           
                           <span id="destroyedSpan" class="label label-info">i</span></td><td>% Covered by Insurance 
                           
                           
                           
                           
                           
                           <span id="insuranceSpan" class="label label-info">i</span></td></tr><tr><td>Single Family Homes</td><td><input name="sfhAffected" id="sfhAffected" type="text" placeholder="0" class="totalsAffected lockTheseIA" style="form-control input-sm totalsAffected" /></td><td><input name="sfhMinorDamage" id="sfhMinorDamage" type="text" placeholder="0" class="totalsMinorDamage lockTheseIA" style="form-control input-sm totalsMinorDamage" /></td><td><input name="sfhMajorDamage" id="sfhMajorDamage" type="text" placeholder="0" class="totalsMajorDamage lockTheseIA" style="form-control input-sm totalsMajorDamage" /></td><td><input name="sfhDestroyed" id="sfhDestroyed" type="text" placeholder="0" class="totalsDestroyed lockTheseIA" style="form-control input-sm totalsDestroyed" /></td><td><input name="sfhCovByInsurance" id="sfhCovByInsurance" type="text" placeholder="0" class="totalsCovByInsurance lockTheseIA" style="form-control input-sm totalsCovByInsurance" onBlur="iaAverage()" /></td><td>%</td></tr><tr><td>Mobile Homes</td><td><input name="mhAffected" id="mhAffected" type="text" placeholder="0" class="totalsAffected lockTheseIA" style="form-control input-sm totalsAffected" /></td><td><input name="mhMinorDamage" id="mhMinorDamage" type="text" placeholder="0" class="totalsMinorDamage lockTheseIA" style="form-control input-sm totalsMinorDamage" /></td><td><input name="mhMajorDamage" id="mhMajorDamage" type="text" placeholder="0" class="totalsMajorDamage lockTheseIA" style="form-control input-sm totalsMajorDamage" /></td><td><input name="mhDestroyed" id="mhDestroyed" type="text" placeholder="0" class="totalsDestroyed lockTheseIA" style="form-control input-sm totalsDestroyed" /></td><td><input name="mhCovByInsurance" id="mhCovByInsurance" type="text" placeholder="0" class="totalsCovByInsurance lockTheseIA" style="form-control input-sm totalsCovByInsurance" onBlur="iaAverage()" /></td><td>%</td></tr><tr><td>Multi-Family Units</td><td><input name="mfuAffected" id="mfuAffected" type="text" placeholder="0" class="totalsAffected lockTheseIA" style="form-control input-sm totalsAffected" /></td><td><input name="mfuMinorDamage" id="mfuMinorDamage" type="text" placeholder="0" class="totalsMinorDamage lockTheseIA" style="form-control input-sm totalsMinorDamage" /></td><td><input name="mfuMajorDamage" id="mfuMajorDamage" type="text" placeholder="0" class="totalsMajorDamage lockTheseIA" style="form-control input-sm totalsMajorDamage" /></td><td><input name="mfuDestroyed" id="mfuDestroyed" type="text" placeholder="0" class="totalsDestroyed lockTheseIA" style="form-control input-sm totalsDestroyed" /></td><td><input name="mfuCovByInsurance" id="mfuCovByInsurance" type="text" placeholder="0" class="totalsCovByInsurance lockTheseIA" style="form-control input-sm totalsCovByInsurance" onBlur="iaAverage()" /></td><td>%</td></tr><tr><td>Totals</td><td><input name="totalsAffected" id="totalsAffected" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsMinorDamage" id="totalsMinorDamage" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsMajorDamage" id="totalsMajorDamage" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsDestroyed" id="totalsDestroyed" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsCovByInsurance" id="totalsCovByInsurance" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td><td>%</td><!--<td>
                           <input name="totalsCovByInsurance2" id="totalsCovByInsurance2" type="text" placeholder="Average" style="form-control input-sm"/>
                        </td>
                        <td><button onclick="clearZeros()">GO</button></td>--></tr></table><div class="form-group form-inline"><label class="control-label" for="homesIsolated">Number of homes isolated due to road closure (high water, etc.): </label><space /><input name="homesIsolated" id="homesIsolated" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></div><br /><h1><span class="label label-default">Business Losses/Impacts:</span></h1><br /><table class="table table-bordered"><tr><td /><td># of Businesses</td><td># Covered by Adequate Insurance</td><td>$ Total estimated repair cost</td></tr><tr><td>Minor Damage (less than 40%)</td><td><input name="numberMinorDamage" id="numberMinorDamage" type="text" placeholder="0" class="numberTotal lockTheseIA" style="form-control input-sm numberTotal" /></td><td><input name="coveredMinorDamage" id="coveredMinorDamage" type="text" placeholder="0" class="coveredTotal lockTheseIA" style="form-control input-sm coveredTotal" /></td><td>
                           $ <input name="totalMinorDamage" id="totalMinorDamage" type="text" placeholder="0" class="totalTotal lockTheseIA" style="form-control input-sm totalTotal" /></td></tr><tr><td>Major Damage (greater than 40%)</td><td><input name="numberMajorDamage" id="numberMajorDamage" type="text" placeholder="0" class="numberTotal lockTheseIA" style="form-control input-sm numberTotal" /></td><td><input name="coveredMajorDamage" id="coveredMajorDamage" type="text" placeholder="0" class="coveredTotal lockTheseIA" style="form-control input-sm coveredTotal" /></td><td>
                           $ <input name="totalMajorDamage" id="totalMajorDamage" type="text" placeholder="0" class="totalTotal lockTheseIA" style="form-control input-sm totalTotal" /></td></tr><tr><td>Totals</td><td><input name="numberTotal" id="numberTotal" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="coveredTotal" id="coveredTotal" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td><td>
                 $ <input name="totalTotal" id="totalTotal" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td></tr></table><div class="form-group form-inline"><label class="control-label" for="businessesCeased">How many businesses have ceased operations?: </label><space /><input name="businessesCeased" id="businessesCeased" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></div><div class="form-group form-inline"><label class="control-label" for="businessesEconomicInjury">How many businesses have experienced economic injury?: 
                        
                        
                        
                        
                        
                        <span id="businessesEconomicInjuryInfo" class="label label-info">i</span></label><space /><input name="businessesEconomicInjury" id="businessesEconomicInjury" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></div><div class="form-group form-inline"><label class="control-label" for="numberUnemployed">Estimated number of persons unemployed because of this disaster: </label><space /><input name="numberUnemployed" id="numberUnemployed" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /><space /><i>(Contact affected businesses and the local Texas Workforce Commission Office)</i></div><br /><h1><span class="label label-default">PUBLIC ASSISTANCE</span></h1><br /><table class="table table-bordered"><tr><td>Category</td><td># of Sites</td><td>$ Estimated Repair Costs</td><td>$ Anticipated Insurance*</td></tr><tr><td><span class="label label-default" id="catAInfo">A</span> Debris Clearance
                        
                        
                        
                        
                        
                        </td><td><input name="sitesDebrisClearance" id="sitesDebrisClearance" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostDebrisClearance" id="repairCostDebrisClearance" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceDebrisClearance" id="insuranceDebrisClearance" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catBInfo">B</span> Emergency Protective Measures 
                           
                           
                           
                           
                           
                           <span id="emergencyProtectiveMeasuresInfo" class="label label-info">i</span></td><td><input name="sitesEmergency" id="sitesEmergency" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostEmergency" id="repairCostEmergency" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceEmergency" id="insuranceEmergency" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catCInfo">C</span> Roads &amp; Bridges
                        
                        
                        
                        
                        
                        </td><td><input name="sitesRoadPaved" id="sitesRoadPaved" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostRoadPaved" id="repairCostRoadPaved" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceRoadPaved" id="insuranceRoadPaved" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catDInfo">D</span> Water Control Facilities 
                           
                           
                           
                           
                           
                           <br />(Dams, levees, dikes)

                        
                        
                        
                        
                        
                        </td><td><input name="sitesWaterControlFacilities" id="sitesWaterControlFacilities" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostWaterControlFacilities" id="repairCostWaterControlFacilities" type="text" class="repairCostTotals lockThesePA" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceWaterControlFacilities" id="insuranceWaterControlFacilities" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catEInfo">E</span> Buildings &amp; Equipment 
                           
                           
                           
                           
                           
                           <span id="buildingEquipmentInfo" class="label label-info">i</span></td><td><input name="sitesBuildingsEquipment" id="sitesBuildingsEquipment" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostBuildingsEquipment" id="repairCostBuildingsEquipment" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceBuildingsEquipment" id="insuranceBuildingsEquipment" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catFInfo">F</span> Public Utility Systems
                           
                           
                           
                           
                           
                           <br />
(Gas, Electric, Sewer, Water)

                        
                        
                        
                        
                        
                        </td><td><input name="sitesUtilitySystems" id="sitesUtilitySystems" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostUtilitySystems" id="repairCostUtilitySystems" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceUtilitySystems" id="insuranceUtilitySystems" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catGInfo">G</span>
            Other Types of Facilities
                           
                           
                           
                           
                           
                           <br />
(Recreational Facilities, Airports, etc.)

                        
                        
                        
                        
                        
                        </td><td><input name="sitesOther" id="sitesOther" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostOther" id="repairCostOther" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceOther" id="insuranceOther" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td>Totals
</td><td><input name="sitesTotals" id="sitesTotals" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="repairCostTotals" id="repairCostTotals" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="insuranceTotals" id="insuranceTotals" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td></tr></table><i>* Anticipated insurance is normally calculated by subtracting any deductible, depreciation or 
     uncoverable loss from the estimated repair cost.
</i><div class="form-group form-inline" /><div class="form-group form-inline"><label class="control-label" for="annualMaintenanceBudget">Total annual maintenance budget (i.e. Public Works, Road &amp; Bridge):</label><space />
                     $ <input name="annualMaintenanceBudget" id="annualMaintenanceBudget" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></div><div class="form-group form-inline"><label class="control-label" for="startOfFiscalYear">Start of Fiscal Year(Month):</label><space /><input name="startOfFiscalYear" id="startOfFiscalYear" type="text" style="form-control input-sm" class="lockThesePA" /></div><br /><h1><span class="label label-default">Other Eligible Entities</span></h1><br /><i>(Contact non-profit or governmental, medical, emergency, utility, educational, custodial care facilities, etc.)</i><div class="form-group form-inline" /><table class="table table-bordered"><tr><td>Organization / Facility</td><td>Cat A-G</td><td># of Sites</td><td>$ Estimated Repair Cost</td><td>$ Anticipated Insurance *</td></tr><tr><td><input name="orgFacility01" id="orgFacility01" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat01" id="cat01" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites01" id="sites01" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost01" id="repairCost01" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance01" id="insurance01" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility02" id="orgFacility02" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat02" id="cat02" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites02" id="sites02" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost02" id="repairCost02" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance02" id="insurance02" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility03" id="orgFacility03" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat03" id="cat03" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites03" id="sites03" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost03" id="repairCost03" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance03" id="insurance03" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility04" id="orgFacility04" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat04" id="cat04" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites04" id="sites04" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost04" id="repairCost04" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance04" id="insurance04" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility05" id="orgFacility05" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat05" id="cat05" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites05" id="sites05" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost05" id="repairCost05" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance05" id="insurance05" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility06" id="orgFacility06" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat06" id="cat06" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites06" id="sites06" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost06" id="repairCost06" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance06" id="insurance06" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility07" id="orgFacility07" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat07" id="cat07" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites07" id="sites07" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost07" id="repairCost07" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance07" id="insurance07" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility08" id="orgFacility08" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat08" id="cat08" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites08" id="sites08" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost08" id="repairCost08" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance08" id="insurance08" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility09" id="orgFacility09" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat09" id="cat09" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites09" id="sites09" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost09" id="repairCost09" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance09" id="insurance09" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility10" id="orgFacility10" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat10" id="cat10" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites10" id="sites10" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost10" id="repairCost10" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance10" id="insurance10" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility11" id="orgFacility11" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat11" id="cat11" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites11" id="sites11" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost11" id="repairCost11" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance11" id="insurance11" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility12" id="orgFacility12" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat12" id="cat12" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites12" id="sites12" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost12" id="repairCost12" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance12" id="insurance12" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility13" id="orgFacility13" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat13" id="cat13" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites13" id="sites13" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost13" id="repairCost13" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance13" id="insurance13" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility14" id="orgFacility14" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat14" id="cat14" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites14" id="sites14" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost14" id="repairCost14" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance14" id="insurance14" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility15" id="orgFacility15" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat15" id="cat15" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites15" id="sites15" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost15" id="repairCost15" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance15" id="insurance15" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td>Totals</td><td /><td><input name="sitesOtherTotal" id="sitesOtherTotal" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="repairCostTotal" id="repairCostTotal" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="insuranceCostTotal" id="insuranceCostTotal" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td></tr></table><div>
This form is for damage assessment reporting purposes only.  In accordance with the State Emergency Management Plan, if a Mayor/County Judge determines that a situation is of such severity and magnitude that an effective response is beyond the affected jurisdiction’s capability to recover, a letter outlining the disaster impact and the need for supplemental State and/or Federal assistance must accompany this DSO.
</div><br /><h1><span class="label label-default">General Notes</span></h1><br /><div class="form-group form-inline"><label class="control-label" for="notes">Notes:</label><space /><textarea name="notes" id="notes" style="form-control" /><!--<input name="notes" id="notes" type="text" style="form-control" Rows="5" TextMode="MultiLine"/>--></div><br /><h1><span class="label label-default">Submitter Information</span></h1><br /><div class="form-group form-inline"><label class="control-label" for="submitterName">Name:</label><space /><input name="submitterName" id="submitterName" type="text" style="width:300px" /></div><div /><i> If you include your email, a confirmation email will be sent to you.</i><div class="form-group form-inline" /><div class="form-group form-inline"><label class="control-label" for="submitterEmail">Email:</label><space /><input name="submitterEmail" id="submitterEmail" type="text" style="width:300px" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="submitterEmailHidden">Copies Email:</label>
                     <space/>
                     <input name="submitterEmailHidden" id="submitterEmailHidden" type="text" style="width:300px"/>
                  </div>--><div style="display:none" id="countyEmailHide" class="form-group form-inline"><label class="control-label" for="countyEmail">County Email:</label><space /><input name="countyEmail" id="countyEmail" type="text" style="width:300px" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="countyEmailHidden">Copies County Email:</label>
                     <space/>
                     <input name="countyEmailHidden" id="countyEmailHidden" type="text" style="width:300px"/>
                  </div>--><div id="ddcEmailshow" class="form-group form-inline"><label class="control-label" for="ddcEmail">DDC Email:</label><space /><input name="ddcEmail" id="ddcEmail" type="text" style="width:300px" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="ddcEmailHidden">Copies DDC Email:</label>
                     <space/>
                     <input name="ddcEmailHidden" id="ddcEmailHidden" type="text" style="width:300px"/>
                  </div>--><div class="form-group form-inline"><label class="control-label" for="additionalEmails">Additional Emails:</label><space /><input name="additionalEmails" id="additionalEmails" type="text" style="width:300px" placeholder="Separate multiple emails with a comma (,)" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="additionalEmailsHidden">Copies Additional Emails:</label>
                     <space/>
                     <input name="additionalEmailsHidden" id="additionalEmailsHidden" type="text" style="width:300px"/>
                  </div>--><!--added--><!--*email --></div><!--added--><div name="emailSection" class="form-group form-inline" style="display:none"><span id="emailCheckbox"><datalink name="Email links" /></span><!--<input type="checkbox" name="fakeDataLink" value="Yes"/>-->
                    To
                  
                  <input type="text" name="emailTo" size="200" value="" recipient="true" subject="false" message="false" receiver="false" notification="false" /><br />
                    Subject
                  
                  <input type="text" name="emailSubject" size="40" value="" recipient="false" subject="true" message="false" receiver="false" notification="false" /><br />
                    Body
                  
                  <textarea name="emailBody" rows="4" cols="40" recipient="false" subject="false" message="true" receiver="false" notification="false" /></div><div style="display:none"><h1><span class="label label-default">WebEOC DSO Admin Features</span></h1><div class="form-group form-inline"><label for="socProcessed">Soc Processing Options:</label><space /><select name="socProcessed" class="form-control" id="socProcessed"><option>Not Processed</option><option>Processed</option></select></div><div class="form-group form-inline"><label class="control-label" for="hidden">Disable Online Editing:</label><space /><input name="dsoDisable" id="dsoDisable" type="checkbox" style="form-control input-sm" value="Yes" /></div><div class="form-group form-inline"><label class="control-label" for="hidden">Cancel:</label><space /><input name="hidden" id="hidden" type="checkbox" style="form-control input-sm" value="Yes" /></div></div></div><fieldset><div class="form-group form-inline"><input type="button" class="btn btn-info" id="notRealSave" value="Save" /><space /><cancelbutton id="cancelbtn" class="btn btn-danger" /><space /><pdflink type="button" class="btn btn-warning">PDF</pdflink><space /><div style="display:none" id="saveButton"><savebutton /></div><div style="border-style:none;background-color:white"><embedview style="display:nonea;border-style:none" width="0.1px" height="0.1px" id="auditEmbed" view="DSO Audit Input (DO NOT ASSIGN)" /></div></div></fieldset></form></div></body></html></view><view tablename="Supplemental" name="Bubble Input 2 (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="28c2cfbb-f0a7-4363-8f1e-3e5837550c19" assignable="0"><html lang="en"><head><meta name="viewport" content="width=device-width, initial-scale=1.0"></meta><meta http-equiv="X-UA-Compatible" content="IE=edge"></meta><link href="suit/5.3.2/css/boards.css" rel="stylesheet" media="screen"></link></head><body><form><header><h2>
          Edit
        </h2></header><table class="webeoc-section" cellpadding="0" cellspacing="0"><tr><td class="webeoc-section-header" colSpan="2" selected="false">Details</td></tr><tr><td width="15%" selected="false" rowSpan="1" colSpan="1">Label</td><td selected="true" rowSpan="1" colSpan="1">Field</td></tr><tr><span id="fk" name="fk" onchange="touchTheDSOisSelectedTextBox()"><foreignkey table="Core" type="select"><!--<if test="@DSOisSelected = '' ">--><eocfield type="fk" table="Core" name="county" /> / <eocfield type="fk" table="Core" name="city" /> / <eocfield type="fk" table="Core" name="otherValue" /><if test="@DSOisSelected = 'SELECTED' "> / <eocfield type="fk" table="Core" name="DSOisSelected" /></if><!--COUNTS - take out if needed, from here<externalexpression name="extExpr" table="Core">count(*)</externalexpression> this externalexpression here needs to be below outside of the foreignkey or it will not work / <externalexpression name="totalcountDSO" table="Core">sum(case when dsoSelected!='' then 1 else 0 end)</externalexpression>COUNTS - take out if needed, to here--><!--</if>--></foreignkey><!--<eocfield type="fk" table="Core" name="dsoSelected"/> must be in foreign keys to work with if statement--></span><space /><button id="disableDrop" name="disableDrop">DIS</button><space /><button id="ableDrop" name="ableDrop">ABLE</button><br /><br />

                     DSO<space /><input type="text" table="Core" name="DSOisSelected" id="DSOisSelected" value="" /><br />
                     DSO2<space /><input type="text" name="DSOisSelected2" id="DSOisSelected2" value="" /></tr></table><footer><div class="webeoc-footer"><returnlink class="webeoc-link">Cancel</returnlink><space></space><savebutton class="webeoc-save">Save</savebutton></div></footer></form></body></html></view><view tablename="Core" name="Master Input (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="input" lockpositionview="0" lockpositioninput="0" globalid="3db9317d-e23b-48ad-bc48-4813354cca41" assignable="0"><html version="6" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><head><title>Master DSO Form</title><!--this works--><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/jquery.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.js" /><script src="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-datepicker.min.js" /><style type="text/css"> 
        #container {  margin: 50px;
        }
        .form-group.required .control-label:after {
  content:"*";
  color:red;
}

.master{
  background-color:#800080; /*dark purple*/
  color:white;
}

    </style><script type="text/javascript">
                var cityArrayCopy = [];
      var cats = true;
            var scribe = { 
            status: 0,
            autoRun: function () { },
            baseArray: [],
            changesMade: false,
            Evaluation: function() {
    var a=[];
    for(var i=0; i &lt; scribe.fields4History.length; i++) {
      var b=document.getElementsByName(scribe.fields4History[i][0]);
      for(var k=0; k &lt; b.length; k++) {
        var result=[];
        if(b[k].tagName==="SELECT") {
            var ms = b[k].selectedOptions;
            var msr =[];
            for(var msi=0; msi &lt; ms.length; ms++){
               msr.push(ms[msi].text);
            }
             result.push(scribe.fields4History[i][1]);
             result.push(msr.join(','));   
        } else if (b[k].type==="radio" || b[k].type==="checkbox") {
          result.push(scribe.fields4History[i][1]);
          if(b[k].checked===true) {
            result.push('Selected');
          } else {
            result.push('Not Selected');
          }
        } else {
          result.push(scribe.fields4History[i][1]);
          result.push(b[k].value);
        }
        a.push(result);
        
      }
    }
    return a;
            },
            inicialReview: function () {
                scribe.baseArray = scribe.Evaluation();
            },
            postReview: function () {
                var p = [];
                var f = scribe.Evaluation();
                for (var i = 0; i &lt; f.length; i++) {
                    if (f[i][1] !== scribe.baseArray[i][1]) {
                        p.push(f[i][0] + ': ' + f[i][1]);
                    }
                }
                p = p.join('\r\n');
                if (p.length &gt; 0) { scribe.changesMade = true; } else {
                document.getElementById('cancelbtn').click();
                //cancels unedited save
                }
                return p;
            }
        };
        function removeOptions(obj) {
            if (obj == null) return;
            if (obj.options == null) return;
            obj.options.length = 0;
        }

        function iaAverage() {
   var a1 = document.getElementById("sfhCovByInsurance").value;
   var a2 = document.getElementById("mhCovByInsurance").value;
   var a3 = document.getElementById("mfuCovByInsurance").value;
   var num = 0;
   if (a1 != ("" || 0)) {
       num += 1
   } else {
       a1 = 0;
   };
   if (a2 != ("" || 0)) {
       num += 1
   } else {
       a2 = 0;
   };
   if (a3 != ("" || 0)) {
       num += 1
   } else {
       a3 = 0;
   };
   var avg = (parseFloat(a1) + parseFloat(a2) + parseFloat(a3)) / num;
   if (num === 0) {
    document.getElementById("totalsCovByInsurance").value = '';
       return false;

   } else {
       document.getElementById("totalsCovByInsurance").value = avg;
   }
}


       function autoSum() {
            var fields = ["totalsAffected", "totalsMinorDamage", "totalsMajorDamage", "totalsDestroyed", "numberTotal", "coveredTotal", "totalTotal", "sitesTotals", "repairCostTotals", "insuranceTotals", "sitesOtherTotal", "repairCostTotal", "insuranceCostTotal"];
            for (var i = 0; i &lt; fields.length; i++) {
                var objs = document.getElementsByClassName(fields[i]);
                for (var h = 0; h &lt; objs.length; h++) {
                    objs[h].idByClass = fields[i];
                    objs[h].onblur = function () {
                        var t = 0;
                        var a = document.getElementsByClassName(this.idByClass);
                        for (var b = 0; b &lt; a.length; b++) {
                            if (a[b].value != '') {
                                var u = removeNonNumber(a[b].value);
                                t+= parseFloat(u);
                                a[b].value = comma(u);
                                /*if (isNaN(a[b].value) === false) {
                                    t += parseFloat(a[b].value)
                                }
                                else {
                                    numError(a[b].value);
                                    a[b].value = 0;

                                }*/
                            }
                        }
                        document.getElementById(this.idByClass).value = comma(t);
                        console.log('sums run');
                    };
                }
            }
        }
        
        function removeNonNumber(a) {
            a = a.replace(/[^0-9.-]+/g, '');
            var t = 0;
            if (a != '') {
                if (isNaN(a) === false) {
                    t += parseFloat(a)
                } else {
                    return 0;

                }
            }
            return t.toFixed(2);
        }
        function comma(x) {
            if (isNaN(x) === true || x == "") {
                x == undefined ? x = '' : x = x;
                return x;
            }
            x = parseFloat(x).toFixed(2);
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            //return x;
        }
        function commandInfoWindow(clickedId, title, message) {
            $('#' + clickedId).click(function () {
                BootstrapDialog.show({
                    title: title,
                    message: function (dialog) {
                        var $content = $(message);
                        return $content;
                    },

                });
            })

        }

        function addOption(select, optionTxt, selected) {
            var option = document.createElement("option");
            option.text = optionTxt;
            option.id = optionTxt;
            option.selected = selected;
            try {
                select.add(option, null);
            }
            catch (ex) {
                select.add(option);
            }
        }

//the code below works, it is just too long to be the correct color
        var cityMatrix = [["Hill", "Abbott"], ["Hale", "Abernathy"], ["Lubbock", "Abernathy"], ["Jones", "Abilene"], ["Taylor", "Abilene"], ["Dawson", "Ackerly"], ["Martin", "Ackerly"], ["Collin", "Addison"], ["Dallas", "Addison"], ["Oldham", "Adrian"], ["Nueces", "Agua Dulce"], ["Hidalgo", "Alamo"], ["Bexar", "Alamo Heights"], ["Wood", "Alba"], ["Rains", "Alba"], ["Shackelford", "Albany"], ["Parker", "Aledo"], ["Jim Wells", "Alice"], ["Collin", "Allen"], ["Ellis", "Alma"], ["Brewster", "Alpine"], ["Cherokee", "Alto"], ["Hidalgo", "Alton"], ["Johnson", "Alvarado"], ["Brazoria", "Alvin"], ["Galveston", "Alvin"], ["Wise", "Alvord"], ["Potter", "Amarillo"], ["Randall", "Amarillo"], ["Liberty", "Ames"], ["Lamb", "Amherst"], ["Chambers", "Anahuac"], ["Grimes", "Anderson"], ["Andrews", "Andrews"], ["Brazoria", "Angleton"], ["Navarro", "Angus"], ["Collin", "Anna"], ["Parker", "Annetta"], ["Parker", "Annetta North"], ["Parker", "Annetta South"], ["Red River", "Annona"], ["Jones", "Anson"], ["El Paso", "Anthony"], ["Hockley", "Anton"], ["Nacogdoches", "Appleby"], ["Hill", "Aquilla"], ["Aransas", "Aransas Pass"], ["San Patricio", "Aransas Pass"], ["Nueces", "Aransas Pass"], ["Archer", "Archer City"], ["Fort Bend", "Arcola"], ["Denton", "Argyle"], ["Tarrant", "Arlington"], ["Smith", "Arp"], ["Dimmit", "Asherton"], ["Stonewall", "Aspermont"], ["Henderson", "Athens"], ["Cass", "Atlanta"], ["Denton", "Aubrey"], ["Wise", "Aurora"], ["Williamson", "Austin"], ["Travis", "Austin"], ["Hays", "Austin"], ["Refugio", "Austwell"], ["Red River", "Avery"], ["Cass", "Avinger"], ["Parker", "Azle"], ["Tarrant", "Azle"], ["Fannin", "Bailey"], ["Brazoria", "Bailey's Prairie"], ["Callahan", "Baird"], ["Dallas", "Balch Springs"], ["Bexar", "Balcones Heights"], ["Runnels", "Ballinger"], ["Reeves", "Balmorhea"], ["Bandera", "Bandera"], ["Brown", "Bangs"], ["Ellis", "Bardwell"], ["Navarro", "Barry"], ["Ward", "Barstow"], ["Williamson", "Bartlett"], ["Bell", "Bartlett"], ["Denton", "Bartonville"], ["Bastrop", "Bastrop"], ["Matagorda", "Bay City"], ["Galveston", "Bayou Vista"], ["Refugio", "Bayside"], ["Harris", "Baytown"], ["Chambers", "Baytown"], ["Cameron", "Bayview"], ["Chambers", "Beach City"], ["Hays", "Bear Creek"], ["Fort Bend", "Beasley"], ["Jefferson", "Beaumont"], ["Hardin", "Beaumont"], ["Orange", "Beaumont"], ["Panola", "Beckville"], ["Tarrant", "Bedford"], ["Grimes", "Bedias"], ["Travis", "Bee Cave"], ["Bee", "Beeville"], ["Harris", "Bellaire"], ["Clay", "Bellevue"], ["McLennan", "Bellmead"], ["Grayson", "Bells"], ["Austin", "Bellville"], ["Bell", "Belton"], ["Duval", "Benavides"], ["Tarrant", "Benbrook"], ["Knox", "Benjamin"], ["Henderson", "Berryville"], ["Burnet", "Bertram"], ["McLennan", "Beverly Hills"], ["Jefferson", "Bevil Oaks"], ["Hardin", "Bevil Oaks"], ["Reagan", "Big Lake"], ["Upshur", "Big Sandy"], ["Howard", "Big Spring"], ["Dimmit", "Big Wells"], ["Nueces", "Bishop"], ["Potter", "Bishop Hills"], ["Coke", "Blackwell"], ["Nolan", "Blackwell"], ["Blanco", "Blanco"], ["Brown", "Blanket"], ["Cass", "Bloomburg"], ["Navarro", "Blooming Grove"], ["Lamar", "Blossom"], ["Tarrant", "Blue Mound"], ["Collin", "Blue Ridge"], ["Hill", "Blum"], ["Kendall", "Boerne"], ["Red River", "Bogata"], ["Fannin", "Bonham"], ["Brazoria", "Bonney"], ["Ochiltree", "Booker"], ["Lipscomb", "Booker"], ["Hutchinson", "Borger"], ["Parmer", "Bovina"], ["Montague", "Bowie"], ["Wise", "Boyd"], ["Kinney", "Brackettville"], ["McCulloch", "Brady"], ["Brazoria", "Brazoria"], ["Hood", "Brazos Bend"], ["Austin", "Brazos Country"], ["Stephens", "Breckenridge"], ["Robertson", "Bremond"], ["Washington", "Brenham"], ["Travis", "Briarcliff"], ["Johnson", "Briaroaks"], ["Orange", "Bridge City"], ["Wise", "Bridgeport"], ["San Augustine", "Broaddus"], ["Coke", "Bronte"], ["Waller", "Brookshire"], ["Harris", "Brookside Village"], ["Brazoria", "Brookside Village"], ["Jasper", "Browndell"], ["Terry", "Brownfield"], ["Henderson", "Brownsboro"], ["Cameron", "Brownsville"], ["Brown", "Brownwood"], ["McLennan", "Bruceville-Eddy"], ["Falls", "Bruceville-Eddy"], ["Brazos", "Bryan"], ["Jack", "Bryson"], ["Milam", "Buckholts"], ["Hays", "Buda"], ["Leon", "Buffalo"], ["Taylor", "Buffalo Gap"], ["Lubbock", "Buffalo Springs"], ["Smith", "Bullard"], ["Cherokee", "Bullard"], ["Comal", "Bulverde"], ["Harris", "Bunker Hill Village"], ["Wichita", "Burkburnett"], ["Angelina", "Burke"], ["Tarrant", "Burleson"], ["Johnson", "Burleson"], ["Burnet", "Burnet"], ["Washington", "Burton"], ["Clay", "Byers"], ["Hill", "Bynum"], ["Sherman", "Cactus"], ["Moore", "Cactus"], ["Hunt", "Caddo Mills"], ["Burleson", "Caldwell"], ["Cooke", "Callisburg"], ["Robertson", "Calvert"], ["Milam", "Cameron"], ["Real", "Camp Wood"], ["Hunt", "Campbell"], ["Hemphill", "Canadian"], ["Henderson", "Caney City"], ["Van Zandt", "Canton"], ["Randall", "Canyon"], ["Eastland", "Carbon"], ["Hill", "Carl's Corner"], ["Washington", "Carmine"], ["Fayette", "Carmine"], ["Dimmit", "Carrizo Springs"], ["Denton", "Carrollton"], ["Collin", "Carrollton"], ["Dallas", "Carrollton"], ["Panola", "Carthage"], ["Wichita", "Cashion"], ["Bexar", "Castle Hills"], ["Medina", "Castroville"], ["Dallas", "Cedar Hill"], ["Ellis", "Cedar Hill"], ["Williamson", "Cedar Park"], ["Travis", "Cedar Park"], ["Hunt", "Celeste"], ["Denton", "Celina"], ["Collin", "Celina"], ["Grayson", "Celina"], ["Shelby", "Center"], ["Leon", "Centerville"], ["Henderson", "Chandler"], ["Hartley", "Channing"], ["Atascosa", "Charlotte"], ["Tyler", "Chester"], ["Wise", "Chico"], ["Childress", "Childress"], ["Hardeman", "Chillicothe"], ["Jefferson", "China"], ["Bexar", "China Grove"], ["Nacogdoches", "Chireno"], ["Atascosa", "Christine"], ["Guadalupe", "Cibolo"], ["Bexar", "Cibolo"], ["Eastland", "Cisco"], ["Donley", "Clarendon"], ["Red River", "Clarksville"], ["Upshur", "Clarksville City"], ["Gregg", "Clarksville City"], ["Armstrong", "Claude"], ["Galveston", "Clear Lake Shores"], ["Johnson", "Cleburne"], ["Liberty", "Cleveland"], ["Bosque", "Clifton"], ["El Paso", "Clint"], ["Brazoria", "Clute"], ["Callahan", "Clyde"], ["Howard", "Coahoma"], ["Dallas", "Cockrell Hill"], ["Henderson", "Coffee City"], ["San Jacinto", "Coldspring"], ["Coleman", "Coleman"], ["Brazos", "College Station"], ["Tarrant", "Colleyville"], ["Grayson", "Collinsville"], ["Tyler", "Colmesneil"], ["Mitchell", "Colorado City"], ["Colorado", "Columbus"], ["Comanche", "Comanche"], ["Cameron", "Combes"], ["Dallas", "Combine"], ["Kaufman", "Combine"], ["Hunt", "Commerce"], ["Hopkins", "Como"], ["Montgomery", "Conroe"], ["Bexar", "Converse"], ["Parker", "Cool"], ["Limestone", "Coolidge"], ["Delta", "Cooper"], ["Denton", "Coppell"], ["Dallas", "Coppell"], ["Tarrant", "Coppell"], ["Denton", "Copper Canyon"], ["Coryell", "Copperas Cove"], ["Lampasas", "Copperas Cove"], ["Bell", "Copperas Cove"], ["Denton", "Corinth"], ["Aransas", "Corpus Christi"], ["San Patricio", "Corpus Christi"], ["Nueces", "Corpus Christi"], ["Kleberg", "Corpus Christi"], ["Denton", "Corral City"], ["Polk", "Corrigan"], ["Navarro", "Corsicana"], ["Kaufman", "Cottonwood"], ["Burnet", "Cottonwood Shores"], ["La Salle", "Cotulla"], ["Chambers", "Cove"], ["Hill", "Covington"], ["Kaufman", "Crandall"], ["Crane", "Crane"], ["Bosque", "Cranfills Gap"], ["McLennan", "Crawford"], ["Travis", "Creedmoor"], ["Hays", "Creedmoor"], ["Parker", "Cresson"], ["Hood", "Cresson"], ["Johnson", "Cresson"], ["Houston", "Crockett"], ["Crosby", "Crosbyton"], ["Callahan", "Cross Plains"], ["Denton", "Cross Roads"], ["Johnson", "Cross Timber"], ["Foard", "Crowell"], ["Tarrant", "Crowley"], ["Johnson", "Crowley"], ["Zavala", "Crystal City"], ["DeWitt", "Cuero"], ["Hopkins", "Cumby"], ["Cherokee", "Cuney"], ["Nacogdoches", "Cushing"], ["Montgomery", "Cut and Shoot"], ["Morris", "Daingerfield"], ["Liberty", "Daisetta"], ["Dallam", "Dalhart"], ["Hartley", "Dalhart"], ["Denton", "Dallas"], ["Collin", "Dallas"], ["Rockwall", "Dallas"], ["Dallas", "Dallas"], ["Kaufman", "Dallas"], ["Tarrant", "Dalworthington Gardens"], ["Brazoria", "Danbury"], ["Lipscomb", "Darrouzett"], ["Navarro", "Dawson"], ["Liberty", "Dayton"], ["Liberty", "Dayton Lakes"], ["Comanche", "De Leon"], ["Clay", "Dean"], ["Wise", "Decatur"], ["Hood", "DeCordova"], ["Harris", "Deer Park"], ["Bowie", "DeKalb"], ["Val Verde", "Del Rio"], ["Hudspeth", "Dell City"], ["Grayson", "Denison"], ["Denton", "Denton"], ["Gaines", "Denver City"], ["Yoakum", "Denver City"], ["Red River", "Deport"], ["Lamar", "Deport"], ["Dallas", "DeSoto"], ["Red River", "Detroit"], ["Liberty", "Devers"], ["Medina", "Devine"], ["Angelina", "Diboll"], ["Dickens", "Dickens"], ["Galveston", "Dickinson"], ["Frio", "Dilley"], ["Castro", "Dimmitt"], ["Denton", "Dish"], ["Fannin", "Dodd City"], ["Collingsworth", "Dodson"], ["Cass", "Domino"], ["Hidalgo", "Donna"], ["Grayson", "Dorchester"], ["Denton", "Double Oak"], ["Cass", "Douglassville"], ["Hays", "Dripping Springs"], ["Nueces", "Driscoll"], ["Erath", "Dublin"], ["Moore", "Dumas"], ["Dallas", "Duncanville"], ["Colorado", "Eagle Lake"], ["Maverick", "Eagle Pass"], ["Brown", "Early"], ["Lamb", "Earth"], ["Fort Bend", "East Bernard"], ["Wharton", "East Bernard"], ["Upshur", "East Mountain"], ["Gregg", "East Mountain"], ["Rains", "East Tawakoni"], ["Eastland", "Eastland"], ["Gregg", "Easton"], ["Rusk", "Easton"], ["Fannin", "Ector"], ["Hidalgo", "Edcouch"], ["Concho", "Eden"], ["Tarrant", "Edgecliff"], ["Van Zandt", "Edgewood"], ["Hidalgo", "Edinburg"], ["Hale", "Edmonson"], ["Jackson", "Edna"], ["Van Zandt", "Edom"], ["Wharton", "El Campo"], ["Webb", "El Cenizo"], ["Harris", "El Lago"], ["El Paso", "El Paso"], ["Schleicher", "Eldorado"], ["Wichita", "Electra"], ["Travis", "Elgin"], ["Bastrop", "Elgin"], ["Anderson", "Elkhart"], ["Bexar", "Elmendorf"], ["Wilson", "Elmendorf"], ["Hidalgo", "Elsa"], ["Navarro", "Emhouse"], ["Rains", "Emory"], ["Henderson", "Enchanted Oaks"], ["La Salle", "Encinal"], ["Kaufman", "Ennis"], ["Ellis", "Ennis"], ["Starr", "Escobares"], ["Hall", "Estelline"], ["Dallas", "Euless"], ["Tarrant", "Euless"], ["Navarro", "Eureka"], ["Henderson", "Eustace"], ["Hamilton", "Evant"], ["Coryell", "Evant"], ["Tarrant", "Everman"], ["Kendall", "Fair Oaks Ranch"], ["Comal", "Fair Oaks Ranch"], ["Bexar", "Fair Oaks Ranch"], ["Fort Bend", "Fairchilds"], ["Freestone", "Fairfield"], ["Collin", "Fairview"], ["Brooks", "Falfurrias"], ["Karnes", "Falls City"], ["Dallas", "Farmers Branch"], ["Collin", "Farmersville"], ["Parmer", "Farwell"], ["Rockwall", "Fate"], ["Fayette", "Fayetteville"], ["Dallas", "Ferris"], ["Ellis", "Ferris"], ["Fayette", "Flatonia"], ["Williamson", "Florence"], ["Wilson", "Floresville"], ["Denton", "Flower Mound"], ["Tarrant", "Flower Mound"], ["Floyd", "Floydada"], ["Lipscomb", "Follett"], ["Tarrant", "Forest Hill"], ["Kaufman", "Forney"], ["Howard", "Forsan"], ["Pecos", "Fort Stockton"], ["Wise", "Fort Worth"], ["Denton", "Fort Worth"], ["Parker", "Fort Worth"], ["Dallas", "Fort Worth"], ["Tarrant", "Fort Worth"], ["Johnson", "Fort Worth"], ["Robertson", "Franklin"], ["Henderson", "Frankston"], ["Anderson", "Frankston"], ["Gillespie", "Fredericksburg"], ["Brazoria", "Freeport"], ["Duval", "Freer"], ["Harris", "Friendswood"], ["Brazoria", "Friendswood"], ["Galveston", "Friendswood"], ["Parmer", "Friona"], ["Denton", "Frisco"], ["Collin", "Frisco"], ["Moore", "Fritch"], ["Hutchinson", "Fritch"], ["Navarro", "Frost"], ["Van Zandt", "Fruitvale"], ["Fort Bend", "Fulshear"], ["Aransas", "Fulton"], ["Cooke", "Gainesville"], ["Harris", "Galena Park"], ["Cherokee", "Gallatin"], ["Galveston", "Galveston"], ["Jackson", "Ganado"], ["Comal", "Garden Ridge"], ["Collin", "Garland"], ["Dallas", "Garland"], ["Ellis", "Garrett"], ["Nacogdoches", "Garrison"], ["Panola", "Gary"], ["Coryell", "Gatesville"], ["Live Oak", "George West"], ["Williamson", "Georgetown"], ["McLennan", "Gholson"], ["Lee", "Giddings"], ["Upshur", "Gilmer"], ["Upshur", "Gladewater"], ["Gregg", "Gladewater"], ["Somervell", "Glen Rose"], ["Dallas", "Glenn Heights"], ["Ellis", "Glenn Heights"], ["Johnson", "Godley"], ["Ector", "Goldsmith"], ["Mills", "Goldthwaite"], ["Goliad", "Goliad"], ["McLennan", "Golinda"], ["Falls", "Golinda"], ["Gonzales", "Gonzales"], ["Navarro", "Goodlow"], ["Polk", "Goodrich"], ["Palo Pinto", "Gordon"], ["Knox", "Goree"], ["Eastland", "Gorman"], ["Comanche", "Gorman"], ["Palo Pinto", "Graford"], ["Young", "Graham"], ["Hood", "Granbury"], ["Dallas", "Grand Prairie"], ["Tarrant", "Grand Prairie"], ["Ellis", "Grand Prairie"], ["Van Zandt", "Grand Saline"], ["Ward", "Grandfalls"], ["Johnson", "Grandview"], ["Williamson", "Granger"], ["Burnet", "Granite Shoals"], ["Hidalgo", "Granjeno"], ["Houston", "Grapeland"], ["Denton", "Grapevine"], ["Dallas", "Grapevine"], ["Tarrant", "Grapevine"], ["Kaufman", "Grays Prairie"], ["Hunt", "Greenville"], ["San Patricio", "Gregory"], ["Bexar", "Grey Forest"], ["Limestone", "Groesbeck"], ["Carson", "Groom"], ["Jefferson", "Groves"], ["Trinity", "Groveton"], ["Hansford", "Gruver"], ["Henderson", "Gun Barrel City"], ["Grayson", "Gunter"], ["Comanche", "Gustine"], ["Denton", "Hackberry"], ["Hale", "Hale Center"], ["Lavaca", "Hallettsville"], ["McLennan", "Hallsburg"], ["Harrison", "Hallsville"], ["Tarrant", "Haltom City"], ["Hamilton", "Hamilton"], ["Fisher", "Hamlin"], ["Jones", "Hamlin"], ["Randall", "Happy"], ["Swisher", "Happy"], ["Liberty", "Hardin"], ["Bell", "Harker Heights"], ["Cameron", "Harlingen"], ["Castro", "Hart"], ["Haskell", "Haskell"], ["Denton", "Haslet"], ["Tarrant", "Haslet"], ["Hunt", "Hawk Cove"], ["Wood", "Hawkins"], ["Jones", "Hawley"], ["Hays", "Hays"], ["Robertson", "Hearne"], ["Rockwall", "Heath"], ["Kaufman", "Heath"], ["Denton", "Hebron"], ["Collin", "Hebron"], ["Donley", "Hedley"], ["Harris", "Hedwig Village"], ["Bexar", "Helotes"], ["Sabine", "Hemphill"], ["Waller", "Hempstead"], ["Rusk", "Henderson"], ["Clay", "Henrietta"], ["Deaf Smith", "Hereford"], ["McLennan", "Hewitt"], ["Denton", "Hickory Creek"], ["Hamilton", "Hico"], ["Hidalgo", "Hidalgo"], ["Smith", "Hideaway"], ["Lipscomb", "Higgins"], ["Burnet", "Highland Haven"], ["Dallas", "Highland Park"], ["Denton", "Highland Village"], ["Bexar", "Hill Country Village"], ["Brazoria", "Hillcrest Village"], ["Hill", "Hillsboro"], ["Harris", "Hilshire Village"], ["Brazoria", "Hitchcock"], ["Galveston", "Hitchcock"], ["Brazoria", "Holiday Lakes"], ["Bell", "Holland"], ["Archer", "Holliday"], ["Bexar", "Hollywood Park"], ["Medina", "Hondo"], ["Fannin", "Honey Grove"], ["Bowie", "Hooks"], ["El Paso", "Horizon City"], ["Burnet", "Horseshoe Bay"], ["Llano", "Horseshoe Bay"], ["Montgomery", "Houston"], ["Harris", "Houston"], ["Fort Bend", "Houston"], ["Brazoria", "Houston"], ["Donley", "Howardwick"], ["Grayson", "Howe"], ["Hill", "Hubbard"], ["Angelina", "Hudson"], ["Parker", "Hudson Oaks"], ["Morris", "Hughes Springs"], ["Cass", "Hughes Springs"], ["Harris", "Humble"], ["Harris", "Hunters Creek Village"], ["Angelina", "Huntington"], ["Walker", "Huntsville"], ["Tarrant", "Hurst"], ["Dallas", "Hutchins"], ["Williamson", "Hutto"], ["Shelby", "Huxley"], ["Lubbock", "Idalou"], ["Taylor", "Impact"], ["Cameron", "Indian Lake"], ["Austin", "Industry"], ["San Patricio", "Ingleside"], ["San Patricio", "Ingleside On The Bay"], ["Kerr", "Ingram"], ["Grimes", "Iola"], ["Brazoria", "Iowa Colony"], ["Wichita", "Iowa Park"], ["Pecos", "Iraan"], ["Bosque", "Iredell"], ["Dallas", "Irving"], ["Tarrant", "Irving"], ["Ellis", "Italy"], ["Hill", "Itasca"], ["Tyler", "Ivanhoe"], ["Harris", "Jacinto City"], ["Jack", "Jacksboro"], ["Cherokee", "Jacksonville"], ["Galveston", "Jamaica Beach"], ["Williamson", "Jarrell"], ["Jasper", "Jasper"], ["Kent", "Jayton"], ["Marion", "Jefferson"], ["Harris", "Jersey Village"], ["Leon", "Jewett"], ["Shelby", "Joaquin"], ["Blanco", "Johnson City"], ["Clay", "Jolly"], ["Brazoria", "Jones Creek"], ["Travis", "Jonestown"], ["Hunt", "Josephine"], ["Collin", "Josephine"], ["Johnson", "Joshua"], ["Atascosa", "Jourdanton"], ["Kimble", "Junction"], ["Denton", "Justin"], ["Karnes", "Karnes City"], ["Waller", "Katy"], ["Harris", "Katy"], ["Fort Bend", "Katy"], ["Kaufman", "Kaufman"], ["Johnson", "Keene"], ["Tarrant", "Keller"], ["Galveston", "Kemah"], ["Kaufman", "Kemp"], ["Lampasas", "Kempner"], ["Fort Bend", "Kendleton"], ["Karnes", "Kenedy"], ["Liberty", "Kenefick"], ["Houston", "Kennard"], ["Tarrant", "Kennedale"], ["Henderson", "Kerens"], ["Navarro", "Kerens"], ["Winkler", "Kermit"], ["Kerr", "Kerrville"], ["Gregg", "Kilgore"], ["Rusk", "Kilgore"], ["Coryell", "Killeen"], ["Bell", "Killeen"], ["Kleberg", "Kingsville"], ["Bexar", "Kirby"], ["Jasper", "Kirbyville"], ["Freestone", "Kirvin"], ["Grayson", "Knollwood"], ["Knox", "Knox City"], ["Limestone", "Kosse"], ["Hardin", "Kountze"], ["Swisher", "Kress"], ["Denton", "Krugerville"], ["Denton", "Krum"], ["Brazos", "Kurten"], ["Hays", "Kyle"], ["Cameron", "La Feria"], ["Fayette", "La Grange"], ["Starr", "La Grulla"], ["Hidalgo", "La Joya"], ["Galveston", "La Marque"], ["Harris", "La Porte"], ["Wilson", "La Vernia"], ["Hidalgo", "La Villa"], ["Jackson", "La Ward"], ["Medina", "LaCoste"], ["McLennan", "Lacy-Lakeview"], ["Fannin", "Ladonia"], ["Travis", "Lago Vista"], ["Cameron", "Laguna Vista"], ["Wise", "Lake Bridgeport"], ["San Patricio", "Lake City"], ["Denton", "Lake Dallas"], ["Brazoria", "Lake Jackson"], ["Randall", "Lake Tanglewood"], ["Tarrant", "Lake Worth"], ["Gregg", "Lakeport"], ["San Patricio", "Lakeside (San Patricio)"], ["Tarrant", "Lakeside (Tarrant)"], ["Wichita", "Lakeside City"], ["Archer", "Lakeside City"], ["Hall", "Lakeview"], ["Travis", "Lakeway"], ["Denton", "Lakewood Village"], ["Dawson", "Lamesa"], ["Lampasas", "Lampasas"], ["Dallas", "Lancaster"], ["Ellis", "Lancaster"], ["Webb", "Laredo"], ["Houston", "Latexo"], ["Collin", "Lavon"], ["Taylor", "Lawn"], ["Harris", "League City"], ["Brazoria", "League City"], ["Galveston", "League City"], ["Real", "Leakey"], ["Williamson", "Leander"], ["Travis", "Leander"], ["Bowie", "Leary"], ["Gray", "Lefors"], ["Bexar", "Leon Valley"], ["Leon", "Leona"], ["Fannin", "Leonard"], ["McLennan", "Leroy"], ["Hockley", "Levelland"], ["Denton", "Lewisville"], ["Lee", "Lexington"], ["Liberty", "Liberty"], ["Williamson", "Liberty Hill"], ["Denton", "Lincoln Park"], ["Smith", "Lindale"], ["Cass", "Linden"], ["Cooke", "Lindsay"], ["Hood", "Lipan"], ["Denton", "Little Elm"], ["Bell", "Little River Academy"], ["Lamb", "Littlefield"], ["Bexar", "Live Oak"], ["Brazoria", "Liverpool"], ["Polk", "Livingston"], ["Llano", "Llano"], ["Caldwell", "Lockhart"], ["Floyd", "Lockney"], ["Henderson", "Log Cabin"], ["Lampasas", "Lometa"], ["Hunt", "Lone Oak"], ["Morris", "Lone Star"], ["Harrison", "Longview"], ["Gregg", "Longview"], ["Mitchell", "Loraine"], ["McLennan", "Lorena"], ["Crosby", "Lorenzo"], ["Cameron", "Los Fresnos"], ["Cameron", "Los Indios"], ["Dawson", "Los Ybanez"], ["Falls", "Lott"], ["Houston", "Lovelady"], ["Collin", "Lowry Crossing"], ["Lubbock", "Lubbock"], ["Collin", "Lucas"], ["Jones", "Lueders"], ["Shackelford", "Lueders"], ["Angelina", "Lufkin"], ["Guadalupe", "Luling"], ["Caldwell", "Luling"], ["Hardin", "Lumberton"], ["Willacy", "Lyford"], ["Bexar", "Lytle"], ["Medina", "Lytle"], ["Atascosa", "Lytle"], ["Van Zandt", "Mabank"], ["Henderson", "Mabank"], ["Kaufman", "Mabank"], ["Madison", "Madisonville"], ["Montgomery", "Magnolia"], ["Henderson", "Malakoff"], ["Hill", "Malone"], ["Travis", "Manor"], ["Tarrant", "Mansfield"], ["Ellis", "Mansfield"], ["Johnson", "Mansfield"], ["Brazoria", "Manvel"], ["Burnet", "Marble Falls"], ["Presidio", "Marfa"], ["Cass", "Marietta"], ["Guadalupe", "Marion"], ["Falls", "Marlin"], ["Leon", "Marquez"], ["Harrison", "Marshall"], ["McLennan", "Mart"], ["Limestone", "Mart"], ["Guadalupe", "Martindale"], ["Caldwell", "Martindale"], ["Mason", "Mason"], ["Motley", "Matador"], ["San Patricio", "Mathis"], ["Bowie", "Maud"], ["Ellis", "Maypearl"], ["Hidalgo", "McAllen"], ["Upton", "McCamey"], ["Coryell", "McGregor"], ["McLennan", "McGregor"], ["Collin", "McKinney"], ["Gray", "McLean"], ["Rockwall", "McLendon-Chisholm"], ["Kaufman", "McLendon-Chisholm"], ["Terry", "Meadow"], ["Burnet", "Meadowlakes"], ["Harris", "Meadows Place"], ["Fort Bend", "Meadows Place"], ["Archer", "Megargel"], ["Collin", "Melissa"], ["McCulloch", "Melvin"], ["Hall", "Memphis"], ["Menard", "Menard"], ["Hidalgo", "Mercedes"], ["Bosque", "Meridian"], ["Taylor", "Merkel"], ["Hill", "Mertens"], ["Irion", "Mertzon"], ["Dallas", "Mesquite"], ["Kaufman", "Mesquite"], ["Limestone", "Mexia"], ["Roberts", "Miami"], ["Martin", "Midland"], ["Midland", "Midland"], ["Ellis", "Midlothian"], ["Madison", "Midway"], ["Milam", "Milano"], ["Navarro", "Mildred"], ["Runnels", "Miles"], ["Ellis", "Milford"], ["Titus", "Miller's Cove"], ["Parker", "Millsap"], ["Wood", "Mineola"], ["Palo Pinto", "Mineral Wells"], ["Parker", "Mineral Wells"], ["Palo Pinto", "Mingus"], ["Hidalgo", "Mission"], ["Harris", "Missouri City"], ["Fort Bend", "Missouri City"], ["Wheeler", "Mobeetie"], ["Rockwall", "Mobile City"], ["Winkler", "Monahans"], ["Ward", "Monahans"], ["Liberty", "Mont Belvieu"], ["Harris", "Mont Belvieu"], ["Chambers", "Mont Belvieu"], ["Montgomery", "Montgomery"], ["McLennan", "Moody"], ["Henderson", "Moore Station"], ["Shackelford", "Moran"], ["Bosque", "Morgan"], ["Harris", "Morgan's Point"], ["Bell", "Morgan's Point Resort"], ["Cochran", "Morton"], ["Lavaca", "Moulton"], ["Hill", "Mount Calm"], ["Rusk", "Mount Enterprise"], ["Titus", "Mount Pleasant"], ["Franklin", "Mount Vernon"], ["Hays", "Mountain City"], ["Cooke", "Muenster"], ["Bailey", "Muleshoe"], ["Mills", "Mullin"], ["Knox", "Munday"], ["Henderson", "Murchison"], ["Collin", "Murphy"], ["Navarro", "Mustang"], ["Travis", "Mustang Ridge"], ["Caldwell", "Mustang Ridge"], ["Nacogdoches", "Nacogdoches"], ["Morris", "Naples"], ["Bowie", "Nash"], ["Harris", "Nassau Bay"], ["Medina", "Natalia"], ["Navarro", "Navarro"], ["Brazos", "Navasota"], ["Grimes", "Navasota"], ["Castro", "Nazareth"], ["Jefferson", "Nederland"], ["Fort Bend", "Needville"], ["Harrison", "Nesbitt"], ["Collin", "Nevada"], ["Guadalupe", "New Berlin"], ["Bexar", "New Berlin"], ["Bowie", "New Boston"], ["Comal", "New Braunfels"], ["Guadalupe", "New Braunfels"], ["Smith", "New Chapel Hill"], ["Lubbock", "New Deal"], ["Wise", "New Fairview"], ["Lynn", "New Home"], ["Collin", "New Hope"], ["Rusk", "New London"], ["Cherokee", "New Summerfield"], ["Walker", "New Waverly"], ["Wise", "Newark"], ["Young", "Newcastle"], ["Newton", "Newton"], ["Hunt", "Neylandville"], ["Hays", "Niederwald"], ["Caldwell", "Niederwald"], ["Wilson", "Nixon"], ["Gonzales", "Nixon"], ["Montague", "Nocona"], ["Bell", "Nolanville"], ["Jefferson", "Nome"], ["Smith", "Noonday"], ["DeWitt", "Nordheim"], ["Leon", "Normangee"], ["Madison", "Normangee"], ["Liberty", "North Cleveland"], ["Tarrant", "North Richland Hills"], ["Denton", "Northlake"], ["Coleman", "Novice"], ["Kaufman", "Oak Grove"], ["Ellis", "Oak Leaf"], ["Denton", "Oak Point"], ["Cooke", "Oak Ridge (Cooke)"], ["Kaufman", "Oak Ridge (Kaufman)"], ["Montgomery", "Oak Ridge North"], ["Navarro", "Oak Valley"], ["Leon", "Oakwood"], ["Haskell", "O'Brien"], ["San Patricio", "Odem"], ["Ector", "Odessa"], ["Midland", "Odessa"], ["Dawson", "O'Donnell"], ["Lynn", "O'Donnell"], ["Coryell", "Oglesby"], ["Liberty", "Old River-Winfree"], ["Chambers", "Old River-Winfree"], ["Bexar", "Olmos Park"], ["Young", "Olney"], ["Lamb", "Olton"], ["Morris", "Omaha"], ["Polk", "Onalaska"], ["Hockley", "Opdyke West"], ["Orange", "Orange"], ["Jim Wells", "Orange Grove"], ["Fort Bend", "Orchard"], ["Upshur", "Ore City"], ["Marion", "Ore City"], ["Smith", "Overton"], ["Rusk", "Overton"], ["Dallas", "Ovilla"], ["Ellis", "Ovilla"], ["Brazoria", "Oyster Creek"], ["Cottle", "Paducah"], ["Concho", "Paint Rock"], ["Matagorda", "Palacios"], ["Anderson", "Palestine"], ["Randall", "Palisades"], ["Cameron", "Palm Valley"], ["Ellis", "Palmer"], ["Hidalgo", "Palmhurst"], ["Hidalgo", "Palmview"], ["Gray", "Pampa"], ["Carson", "Panhandle"], ["Montgomery", "Panorama Village"], ["Tarrant", "Pantego"], ["Wise", "Paradise"], ["Lamar", "Paris"], ["Collin", "Parker"], ["Harris", "Pasadena"], ["Waller", "Pattison"], ["Montgomery", "Patton Village"], ["Henderson", "Payne Springs"], ["Harris", "Pearland"], ["Fort Bend", "Pearland"], ["Brazoria", "Pearland"], ["Galveston", "Pearland"], ["Frio", "Pearsall"], ["Delta", "Pecan Gap"], ["Fannin", "Pecan Gap"], ["Ellis", "Pecan Hill"], ["Reeves", "Pecos"], ["Tarrant", "Pelican Bay"], ["Hill", "Penelope"], ["Hidalgo", "Penitas"], ["Ochiltree", "Perryton"], ["Hale", "Petersburg"], ["Clay", "Petrolia"], ["Nueces", "Petronila"], ["Williamson", "Pflugerville"], ["Travis", "Pflugerville"], ["Hidalgo", "Pharr"], ["Denton", "Pilot Point"], ["Collin", "Pilot Point"], ["Orange", "Pine Forest"], ["Waller", "Pine Island"], ["Orange", "Pinehurst"], ["Sabine", "Pineland"], ["Harris", "Piney Point Village"], ["Camp", "Pittsburg"], ["Yoakum", "Plains"], ["Hale", "Plainview"], ["Denton", "Plano"], ["Collin", "Plano"], ["Fort Bend", "Pleak"], ["Wichita", "Pleasant Valley"], ["Atascosa", "Pleasanton"], ["Montgomery", "Plum Grove"], ["Liberty", "Plum Grove"], ["Rains", "Point"], ["San Jacinto", "Point Blank"], ["Calhoun", "Point Comfort"], ["Travis", "Point Venture"], ["Denton", "Ponder"], ["Aransas", "Port Aransas"], ["Nueces", "Port Aransas"], ["Jefferson", "Port Arthur"], ["Orange", "Port Arthur"], ["Cameron", "Port Isabel"], ["Calhoun", "Port Lavaca"], ["Jefferson", "Port Neches"], ["San Patricio", "Portland"], ["Garza", "Post"], ["Kaufman", "Post Oak Bend"], ["Atascosa", "Poteet"], ["Wilson", "Poth"], ["Grayson", "Pottsboro"], ["Navarro", "Powell"], ["Henderson", "Poynor"], ["Waller", "Prairie View"], ["Jim Wells", "Premont"], ["Presidio", "Presidio"], ["Cameron", "Primera"], ["Collin", "Princeton"], ["Hidalgo", "Progreso"], ["Hidalgo", "Progreso Lakes"], ["Denton", "Prosper"], ["Collin", "Prosper"], ["Denton", "Providence Village"], ["Callahan", "Putnam"], ["Ward", "Pyote"], ["Hardeman", "Quanah"], ["Cass", "Queen City"], ["Hunt", "Quinlan"], ["Brazoria", "Quintana"], ["Briscoe", "Quitaque"], ["Wood", "Quitman"], ["Crosby", "Ralls"], ["Cameron", "Rancho Viejo"], ["Eastland", "Ranger"], ["Cameron", "Rangerville"], ["Upton", "Rankin"], ["Lubbock", "Ransom Canyon"], ["Fannin", "Ravenna"], ["Willacy", "Raymondville"], ["Bowie", "Red Lick"], ["Dallas", "Red Oak"], ["Ellis", "Red Oak"], ["Bowie", "Redwater"], ["Refugio", "Refugio"], ["Rusk", "Reklaw"], ["Cherokee", "Reklaw"], ["Lamar", "Reno (Lamar)"], ["Parker", "Reno (Parker)"], ["Tarrant", "Reno (Parker)"], ["Navarro", "Retreat"], ["Wise", "Rhome"], ["Ellis", "Rice"], ["Navarro", "Rice"], ["Collin", "Richardson"], ["Dallas", "Richardson"], ["Navarro", "Richland"], ["Tarrant", "Richland Hills"], ["San Saba", "Richland Springs"], ["Fort Bend", "Richmond"], ["Brazoria", "Richwood"], ["McLennan", "Riesel"], ["Webb", "Rio Bravo"], ["Starr", "Rio Grande City"], ["Cameron", "Rio Hondo"], ["Johnson", "Rio Vista"], ["Eastland", "Rising Star"], ["Tarrant", "River Oaks"], ["Walker", "Riverside"], ["Denton", "Roanoke"], ["Motley", "Roaring Springs"], ["Coke", "Robert Lee"], ["McLennan", "Robinson"], ["Nueces", "Robstown"], ["Fisher", "Roby"], ["Haskell", "Rochester"], ["Milam", "Rockdale"], ["Aransas", "Rockport"], ["Edwards", "Rocksprings"], ["Collin", "Rockwall"], ["Rockwall", "Rockwall"], ["Camp", "Rocky Mound"], ["Bell", "Rogers"], ["Travis", "Rollingwood"], ["Starr", "Roma"], ["Montgomery", "Roman Forest"], ["Hockley", "Ropesville"], ["Nolan", "Roscoe"], ["Orange", "Rose City"], ["Jefferson", "Rose Hill Acres"], ["Hardin", "Rose Hill Acres"], ["Falls", "Rosebud"], ["Fort Bend", "Rosenberg"], ["McLennan", "Ross"], ["Kaufman", "Rosser"], ["Fisher", "Rotan"], ["Blanco", "Round Mountain"], ["Williamson", "Round Rock"], ["Travis", "Round Rock"], ["Fayette", "Round Top"], ["Rockwall", "Rowlett"], ["Dallas", "Rowlett"], ["Lamar", "Roxton"], ["Hunt", "Royse City"], ["Collin", "Royse City"], ["Rockwall", "Royse City"], ["Haskell", "Rule"], ["Wise", "Runaway Bay"], ["Karnes", "Runge"], ["Cherokee", "Rusk"], ["Uvalde", "Sabinal"], ["Collin", "Sachse"], ["Dallas", "Sachse"], ["Grayson", "Sadler"], ["Tarrant", "Saginaw"], ["Bexar", "Saint Hedwig"], ["Montague", "Saint Jo"], ["Collin", "Saint Paul"], ["Bell", "Salado"], ["Tom Green", "San Angelo"], ["Comal", "San Antonio"], ["Bexar", "San Antonio"], ["Medina", "San Antonio"], ["San Augustine", "San Augustine"], ["Cameron", "San Benito"], ["Jim Wells", "San Diego"], ["Duval", "San Diego"], ["Austin", "San Felipe"], ["Hidalgo", "San Juan"], ["Travis", "San Leanna"], ["Guadalupe", "San Marcos"], ["Hays", "San Marcos"], ["Caldwell", "San Marcos"], ["San Patricio", "San Patricio"], ["Nueces", "San Patricio"], ["Willacy", "San Perlita"], ["San Saba", "San Saba"], ["Parker", "Sanctuary"], ["Brazoria", "Sandy Point"], ["Hutchinson", "Sanford"], ["Denton", "Sanger"], ["Cooke", "Sanger"], ["Tarrant", "Sansom Park"], ["Coleman", "Santa Anna"], ["Guadalupe", "Santa Clara"], ["Galveston", "Santa Fe"], ["Cameron", "Santa Rosa"], ["Fannin", "Savoy"], ["Comal", "Schertz"], ["Guadalupe", "Schertz"], ["Bexar", "Schertz"], ["Fayette", "Schulenburg"], ["Clay", "Scotland"], ["Archer", "Scotland"], ["Harrison", "Scottsville"], ["Kaufman", "Scurry"], ["Harris", "Seabrook"], ["Calhoun", "Seadrift"], ["Dallas", "Seagoville"], ["Kaufman", "Seagoville"], ["Gaines", "Seagraves"], ["Austin", "Sealy"], ["Guadalupe", "Seguin"], ["Comal", "Selma"], ["Guadalupe", "Selma"], ["Bexar", "Selma"], ["Gaines", "Seminole"], ["Polk", "Seven Oaks"], ["Henderson", "Seven Points"], ["Baylor", "Seymour"], ["Denton", "Shady Shores"], ["Lubbock", "Shallowater"], ["Wheeler", "Shamrock"], ["Bexar", "Shavano Park"], ["Montgomery", "Shenandoah"], ["San Jacinto", "Shepherd"], ["Grayson", "Sherman"], ["Lavaca", "Shiner"], ["Harris", "Shoreacres"], ["Hardin", "Silsbee"], ["Briscoe", "Silverton"], ["Fort Bend", "Simonton"], ["San Patricio", "Sinton"], ["Carson", "Skellytown"], ["Lubbock", "Slaton"], ["Gonzales", "Smiley"], ["Bastrop", "Smithville"], ["Hockley", "Smyer"], ["Burleson", "Snook"], ["Scurry", "Snyder"], ["El Paso", "Socorro"], ["Bexar", "Somerset"], ["Burleson", "Somerville"], ["Sutton", "Sonora"], ["Hardin", "Sour Lake"], ["Harris", "South Houston"], ["Coryell", "South Mountain"], ["Cameron", "South Padre Island"], ["Denton", "Southlake"], ["Tarrant", "Southlake"], ["Grayson", "Southmayd"], ["Harris", "Southside Place"], ["Hansford", "Spearman"], ["Montgomery", "Splendora"], ["Kinney", "Spofford"], ["Harris", "Spring Valley"], ["Lamb", "Springlake"], ["Parker", "Springtown"], ["Dickens", "Spur"], ["Harris", "Stafford"], ["Fort Bend", "Stafford"], ["Montgomery", "Stagecoach"], ["Haskell", "Stamford"], ["Jones", "Stamford"], ["Martin", "Stanton"], ["Guadalupe", "Staples"], ["Caldwell", "Staples"], ["Henderson", "Star Harbor"], ["Erath", "Stephenville"], ["Sterling", "Sterling City"], ["Hutchinson", "Stinnett"], ["Wilson", "Stockdale"], ["Sherman", "Stratford"], ["Palo Pinto", "Strawn"], ["Freestone", "Streetman"], ["Navarro", "Streetman"], ["Lamb", "Sudan"], ["Fort Bend", "Sugar Land"], ["Hidalgo", "Sullivan City"], ["Hopkins", "Sulphur Springs"], ["Lamar", "Sun Valley"], ["Hockley", "Sundown"], ["Dallas", "Sunnyvale"], ["Kaufman", "Sunnyvale"], ["Moore", "Sunray"], ["Burnet", "Sunrise Beach Village"], ["Llano", "Sunrise Beach Village"], ["Travis", "Sunset Valley"], ["Brazoria", "Surfside Beach"], ["Brazoria", "Sweeny"], ["Nolan", "Sweetwater"], ["San Patricio", "Taft"], ["Lynn", "Tahoka"], ["Titus", "Talco"], ["Kaufman", "Talty"], ["Rusk", "Tatum"], ["Panola", "Tatum"], ["Williamson", "Taylor"], ["Harris", "Taylor Lake Village"], ["Jefferson", "Taylor Landing"], ["Freestone", "Teague"], ["Limestone", "Tehuacana"], ["Bell", "Temple"], ["Shelby", "Tenaha"], ["Kaufman", "Terrell"], ["Bexar", "Terrell Hills"], ["Bowie", "Texarkana"], ["Chambers", "Texas City"], ["Galveston", "Texas City"], ["Sherman", "Texhoma"], ["Dallam", "Texline"], ["Denton", "The Colony"], ["Fort Bend", "Thompsons"], ["Williamson", "Thorndale"], ["Milam", "Thorndale"], ["Limestone", "Thornton"], ["Ward", "Thorntonville"], ["Williamson", "Thrall"], ["Live Oak", "Three Rivers"], ["Throckmorton", "Throckmorton"], ["Galveston", "Tiki Island"], ["Randall", "Timbercreek Canyon"], ["Shelby", "Timpson"], ["Grayson", "Tioga"], ["Hopkins", "Tira"], ["Lamar", "Toco"], ["Grimes", "Todd Mission"], ["Hood", "Tolar"], ["Grayson", "Tom Bean"], ["Montgomery", "Tomball"], ["Harris", "Tomball"], ["Henderson", "Tool"], ["Reeves", "Toyah"], ["Taylor", "Trent"], ["Grayson", "Trenton"], ["Fannin", "Trenton"], ["Henderson", "Trinidad"], ["Navarro", "Trinidad"], ["Trinity", "Trinity"], ["Denton", "Trophy Club"], ["Tarrant", "Trophy Club"], ["Smith", "Troup"], ["Cherokee", "Troup"], ["Bell", "Troy"], ["Swisher", "Tulia"], ["Hall", "Turkey"], ["Taylor", "Tuscola"], ["Taylor", "Tye"], ["Smith", "Tyler"], ["Hays", "Uhland"], ["Caldwell", "Uhland"], ["Harrison", "Uncertain"], ["Upshur", "Union Grove"], ["Hunt", "Union Valley"], ["Guadalupe", "Universal City"], ["Bexar", "Universal City"], ["Dallas", "University Park"], ["Uvalde", "Uvalde"], ["Jeff Davis", "Valentine"], ["Bosque", "Valley Mills"], ["McLennan", "Valley Mills"], ["Cooke", "Valley View"], ["Van Zandt", "Van"], ["Collin", "Van Alstyne"], ["Grayson", "Van Alstyne"], ["Culberson", "Van Horn"], ["Oldham", "Vega"], ["Ellis", "Venus"], ["Johnson", "Venus"], ["Wilbarger", "Vernon"], ["Victoria", "Victoria"], ["Orange", "Vidor"], ["Travis", "Village of The Hills"], ["Travis", "Villiage of Volente"], ["El Paso", "Vinton"], ["Bexar", "Von Ormy"], ["McLennan", "Waco"], ["Gonzales", "Waelder"], ["Bowie", "Wake Village"], ["Waller", "Waller"], ["Harris", "Waller"], ["Austin", "Wallis"], ["Bosque", "Walnut Springs"], ["Upshur", "Warren City"], ["Gregg", "Warren City"], ["Harrison", "Waskom"], ["Tarrant", "Watauga"], ["Ellis", "Waxahachie"], ["Parker", "Weatherford"], ["Travis", "Webberville"], ["Bastrop", "Webberville"], ["Harris", "Webster"], ["Galveston", "Webster"], ["Colorado", "Weimar"], ["Haskell", "Weinert"], ["Williamson", "Weir"], ["Collingsworth", "Wellington"], ["Terry", "Wellman"], ["Cherokee", "Wells"], ["Hidalgo", "Weslaco"], ["McLennan", "West"], ["Brazoria", "West Columbia"], ["Travis", "West Lake Hills"], ["Orange", "West Orange"], ["Hunt", "West Tawakoni"], ["Harris", "West University Place"], ["Mitchell", "Westbrook"], ["Denton", "Westlake"], ["Tarrant", "Westlake"], ["Collin", "Weston"], ["Fort Bend", "Weston Lakes"], ["Tarrant", "Westover Hills"], ["Tarrant", "Westworth Village"], ["Wharton", "Wharton"], ["Wheeler", "Wheeler"], ["Carson", "White Deer"], ["Gregg", "White Oak"], ["Tarrant", "White Settlement"], ["Cochran", "Whiteface"], ["Hockley", "Whiteface"], ["Smith", "Whitehouse"], ["Grayson", "Whitesboro"], ["Grayson", "Whitewright"], ["Fannin", "Whitewright"], ["Hill", "Whitney"], ["Wichita", "Wichita Falls"], ["Ward", "Wickett"], ["Montgomery", "Willis"], ["Parker", "Willow Park"], ["Van Zandt", "Wills Point"], ["Dallas", "Wilmer"], ["Lynn", "Wilson"], ["Hays", "Wimberley"], ["Bexar", "Windcrest"], ["Fannin", "Windom"], ["Clay", "Windthorst"], ["Archer", "Windthorst"], ["Titus", "Winfield"], ["Winkler", "Wink"], ["Franklin", "Winnsboro"], ["Wood", "Winnsboro"], ["Smith", "Winona"], ["Runnels", "Winters"], ["Brazos", "Wixon Valley"], ["Hunt", "Wolfe City"], ["Lubbock", "Wolfforth"], ["Montgomery", "Woodbranch Village"], ["Hays", "Woodcreek"], ["Montgomery", "Woodloch"], ["Refugio", "Woodsboro"], ["Throckmorton", "Woodson"], ["Tyler", "Woodville"], ["McLennan", "Woodway"], ["Freestone", "Wortham"], ["Limestone", "Wortham"], ["Collin", "Wylie"], ["Rockwall", "Wylie"], ["Dallas", "Wylie"], ["Wood", "Yantis"], ["Lavaca", "Yoakum"], ["DeWitt", "Yoakum"], ["DeWitt", "Yorktown"], ["Angelina", "Zavalla"]];


        var countyList = ["Anderson", "Andrews", "Angelina", "Aransas", "Archer", "Armstrong", "Atascosa", "Austin", "Bailey", "Bandera", "Bastrop", "Baylor", "Bee", "Bell", "Bexar", "Blanco", "Borden", "Bosque", "Bowie", "Brazoria", "Brazos", "Brewster", "Briscoe", "Brooks", "Brown", "Burleson", "Burnet", "Caldwell", "Calhoun", "Callahan", "Cameron", "Camp", "Carson", "Cass", "Castro", "Chambers", "Cherokee", "Childress", "Clay", "Cochran", "Coke", "Coleman", "Collin", "Collingsworth", "Colorado", "Comal", "Comanche", "Concho", "Cooke", "Coryell", "Cottle", "Crane", "Crockett", "Crosby", "Culberson", "Dallam", "Dallas", "Dawson", "Deaf Smith", "Delta", "Denton", "DeWitt", "Dickens", "Dimmit", "Donley", "Duval", "Eastland", "Ector", "Edwards", "El Paso", "Ellis", "Erath", "Falls", "Fannin", "Fayette", "Fisher", "Floyd", "Foard", "Fort Bend", "Franklin", "Freestone", "Frio", "Gaines", "Galveston", "Garza", "Gillespie", "Glasscock", "Goliad", "Gonzales", "Gray", "Grayson", "Gregg", "Grimes", "Guadalupe", "Hale", "Hall", "Hamilton", "Hansford", "Hardeman", "Hardin", "Harris", "Harrison", "Hartley", "Haskell", "Hays", "Hemphill", "Henderson", "Hidalgo", "Hill", "Hockley", "Hood", "Hopkins", "Houston", "Howard", "Hudspeth", "Hunt", "Hutchinson", "Irion", "Jack", "Jackson", "Jasper", "Jeff Davis", "Jefferson", "Jim Hogg", "Jim Wells", "Johnson", "Jones", "Karnes", "Kaufman", "Kendall", "Kenedy", "Kent", "Kerr", "Kimble", "King", "Kinney", "Kleberg", "Knox", "La Salle", "Lamar", "Lamb", "Lampasas", "Lavaca", "Lee", "Leon", "Liberty", "Limestone", "Lipscomb", "Live Oak", "Llano", "Loving", "Lubbock", "Lynn", "Madison", "Marion", "Martin", "Mason", "Matagorda", "Maverick", "McCulloch", "McLennan", "McMullen", "Medina", "Menard", "Midland", "Milam", "Mills", "Mitchell", "Montague", "Montgomery", "Moore", "Morris", "Motley", "Nacogdoches", "Navarro", "Newton", "Nolan", "Nueces", "Ochiltree", "Oldham", "Orange", "Palo Pinto", "Panola", "Parker", "Parmer", "Pecos", "Polk", "Potter", "Presidio", "Rains", "Randall", "Reagan", "Real", "Red River", "Reeves", "Refugio", "Roberts", "Robertson", "Rockwall", "Runnels", "Rusk", "Sabine", "San Augustine", "San Jacinto", "San Patricio", "San Saba", "Schleicher", "Scurry", "Shackelford", "Shelby", "Sherman", "Smith", "Somervell", "Starr", "Stephens", "Sterling", "Stonewall", "Sutton", "Swisher", "Tarrant", "Taylor", "Terrell", "Terry", "Throckmorton", "Titus", "Tom Green", "Travis", "Trinity", "Tyler", "Upshur", "Upton", "Uvalde", "Val Verde", "Van Zandt", "Victoria", "Walker", "Waller", "Ward", "Washington", "Webb", "Wharton", "Wheeler", "Wichita", "Wilbarger", "Willacy", "Williamson", "Wilson", "Winkler", "Wise", "Wood", "Yoakum", "Young", "Zapata", "Zavala"];
  
        function sortOrderCounty(co) {
            for (var i = 0; i &lt; countyList.length; i++) {
                if (co == countyList[i]) {
                    document.getElementById('sortCountyOrder').value = i;
                    /*if (document.getElementById('jurisdictionType1').checked == false) {
                        //document.getElementById('sortCityOrder').value = '';  //commented out 11/07/16 to stop city field from being blanked out on update
                    }*/
                    return;
                    
                }
            }
        }

        /*function sortOrderCity(ci) {
          var co="";
          var a  = document.getElementById('county');
          if(a.selectedIndex!=0){
            co=a.options[a.selectedIndex].text;
          }
            for (var i = 0; i &lt; cityMatrix.length; i++) {
                if (ci == cityMatrix[i][1] &amp;&amp; document.getElementById('jurisdictionType1').checked==true &amp;&amp; (co=="" || co == cityMatrix[i][0])){
                    document.getElementById('sortCityOrder').value = i;
                    return;
                }
                if (ci == cityMatrix[i][1] &amp;&amp; document.getElementById('jurisdictionType2').checked==true) {
                    document.getElementById('sortCityOrder').value = i;
                    return;
                }
            }
        }*/

       function consolidateEmails() {
          var a = [document.getElementsByName('submitterEmail')[0], document.getElementsByName('additionalEmails')[0], document.getElementsByName('countyEmail')[0], document.getElementsByName('ddcEmail')[0]];
          var b = [];
            for (var e =0; e&lt;a.length;e++) {
              if (a[e].value != "") {
          var f = a[e].value.split(',');
             for (var i = 0; i &lt; f.length; i++) {
        b.push(f[i]);
      }
    }
  }
        return b.join(',');
}

        function sendEmails(){
          var c = document.getElementsByName('city')[0];
          var cr=[];
          for(var i = 0; i&lt;c.options.length;i++){
            if(c.options[i].selected===true){
              cr.push(c.options[i].text)
            }
          }
          document.getElementsByName('emailSubject')[0].value='DSO for ' + document.getElementById('county').value + " / " + cr.join(', ') + " (" + document.getElementById('webeocIncident').value + ")";
          

          var body = "An Updated DSO # " + document.getElementById('editKey').value + " for " + document.getElementById('county').value + " / " + cr.join(', ') + " (" + document.getElementById('webeocIncident').value + ")" + " has been submitted to the SOC. \n\n" + "To update this request, go to https://olympus.soc.texas.gov/services/dso/default.aspx?key=" + document.getElementById('editKey').value + "\n\n" + 
                     "Please email soc@dps.texas.gov if you have any questions. \n\n" + " DO NOT REPLY";
        
        document.getElementsByName('emailBody')[0].value=body;
        document.getElementsByName('emailTo')[0].value=consolidateEmails();
        };


//Email val from DSOwebform

function validateEmail(email) {
            var str = email.replace(/\s/g, '');
var re = /\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}\b/g;
            return re.test(str);
        }

function finalEmailCheck() {
            var checkEmail = function (a) {
                for (var i = 0; i &lt; a.length; i++) {
                    if (a[i] != '' &amp;&amp; validateEmail(a[i]) == false) {alert('Please check your email format. Incomplete or extra characters may exist.');
                        return false;
                        
                    }
                }
            };
            var e = document.getElementById('submitterEmail').value.split(/[ ,;]+/);
            if(checkEmail(e) != false){
                document.getElementById('submitterEmail').value=e.join(',');
            };
            var b = document.getElementById('additionalEmails').value.split(/[ ,;]+/);
            if(checkEmail(b) != false){
                document.getElementById('additionalEmails').value=b.join(',');
            };
            var c = document.getElementById('countyEmail').value.split(/[ ,;]+/);
            if(checkEmail(c) != false){
                document.getElementById('countyEmail').value=c.join(',');
            };
            var d = document.getElementById('ddcEmail').value.split(/[ ,;]+/);
            if(checkEmail(d) != false){
                document.getElementById('ddcEmail').value=d.join(',');
            };

        }
 
        var updateDateTime=function() {
          var a=new Date();
          var b=(a.getMonth()+1)+"/"+pad(a.getDate())+"/"+a.getFullYear();

           b+=" "+pad(a.getHours())+":"+pad(a.getMinutes())+":"+pad(a.getSeconds());
           document.getElementById("updated").value=b;
}

        var pad=function(num) {
          if(num &lt; 10) {
            return "0" + num; 
  } else {
            return num; 
  }
}

      var submitDateTime=function() {
        var a=new Date();
        var b=(a.getMonth()+1)+"/"+pad(a.getDate())+"/"+a.getFullYear();

        b+=" "+pad(a.getHours())+":"+pad(a.getMinutes())+":"+pad(a.getSeconds());
        document.getElementById("submitedDateTime").value=b;
  
}

      function rebuildingCityCountyOptionsOnJTypeCheck(a) {
            $(a).on("click", function () {
                var coList = document.getElementById("county");
                removeOptions(coList);
                addOption(coList, 'Select One', true);
                for (var k = 0; k &lt; countyList.length; k++) {
                    addOption(coList, countyList[k], false);
                }
                var cityList = document.getElementById("city");
                removeOptions(cityList);
                addOption(cityList, "Select One", true);
                addOption(cityList, "Unincorporated Areas", false);
                for (var k = 0; k &lt; cityMatrix.length; k++) {
                    addOption(cityList, cityMatrix[k][1], false);
                }
                $("#sortCountyOrder").val(0);
                //$("#sortCityOrder").val(0);
                $("#county").prop("disabled", false);
                $("#city").prop("disabled", false);
                addOption(cityList, "Other", false);
            });
        }

      function updateOrFirstTime(){
  if ('<xsl:value-of select="/data/@dataid" />'!=0){
               updateDateTime();
              

            } else {
                submitDateTime();
            }
}

       /*function selectOptionsIfExistsInArray() {
                    var textAreaValue = $("#cityTmp").val();
                    var textAreaValueSplit = textAreaValue.split(",");
                    cityArrayCopy = textAreaValueSplit;
                    $("#city").val("");
                    for(var i = 0; i &lt; cityArrayCopy.length; i++) {

                        $("[name = city] option").filter(function() {
                            return($(this).text() === cityArrayCopy[i]);
                        }).prop("selected", true);

                        $("#cityTmp").val("");
                        $("#city").focus();
                    }
                }*/

        /*function copySelectedOptionsToTextAreaAgain() {
                    var ccc =  document.getElementById("cityTmp").value;
                    document.getElementById("city2").value += ccc.replace(/[,]+/g,', ').trim();
              
                }*/

        function start() {
          document.getElementById('sortCityOrder').value='100000';


         
          if (document.getElementsByName('datalinkid')[0]){
            document.getElementsByName('datalinkid')[0].checked=true;
      } else { alert('The data links are not configured correctly. Please contact your local WebEOC Admin.');
}
//startOf: event actions


          $("input:text").focus(function() {
              $(this).select();
          }).blur(function() {
              $(this).val($(this).val().replace(/\$/g, ''));
             
          });
          
          //countyEmailHideReveal();
          $("#notRealSave").click(function() {

          if($("#repairCost01").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost01", "#cat01", "#cat01");
          }
          if($("#cat01").val() !== "" &amp;&amp; $("#repairCost01").val() == "" ){
            $("#cat01").val("");            
          }
          if($("#repairCost02").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost02", "#cat02", "#cat02");
          }
          if($("#cat02").val() !== "" &amp;&amp; $("#repairCost02").val() == "" ){
            $("#cat02").val(""); 
          }
          if($("#repairCost03").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost03", "#cat03", "#cat03");
          }
          if($("#cat03").val() !== "" &amp;&amp; $("#repairCost03").val() == "" ){
            $("#cat03").val(""); 
          }
          if($("#repairCost04").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost04", "#cat04", "#cat04");
          }
          if($("#cat04").val() !== "" &amp;&amp; $("#repairCost04").val() == "" ){
            $("#cat04").val(""); 
          }
          if($("#repairCost05").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost05", "#cat05", "#cat05");
          }
          if($("#cat05").val() !== "" &amp;&amp; $("#repairCost05").val() == "" ){
            $("#cat05").val(""); 
          }
          if($("#repairCost06").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost06", "#cat06", "#cat06");
          }
          if($("#cat06").val() !== "" &amp;&amp; $("#repairCost06").val() == "" ){
            $("#cat06").val(""); 
          }
          if($("#repairCost07").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost07", "#cat07", "#cat07");
          }
          if($("#cat07").val() !== "" &amp;&amp; $("#repairCost07").val() == "" ){
            $("#cat07").val(""); 
          }
          if($("#repairCost08").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost08", "#cat08", "#cat08");
          }
          if($("#cat08").val() !== "" &amp;&amp; $("#repairCost08").val() == "" ){
            $("#cat08").val(""); 
          }
          if($("#repairCost09").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost09", "#cat09", "#cat09");
          }
          if($("#cat09").val() !== "" &amp;&amp; $("#repairCost09").val() == "" ){
            $("#cat09").val(""); 
          }
          if($("#repairCost10").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost10", "#cat10", "#cat10");
          }
          if($("#cat10").val() !== "" &amp;&amp; $("#repairCost10").val() == "" ){
            $("#cat10").val(""); 
          }
          if($("#repairCost11").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost11", "#cat11", "#cat11");
          }
          if($("#cat11").val() !== "" &amp;&amp; $("#repairCost11").val() == "" ){
            $("#cat11").val("");
          }
          if($("#repairCost12").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost12", "#cat12", "#cat12");
          }
          if($("#cat12").val() !== "" &amp;&amp; $("#repairCost12").val() == "" ){
            $("#cat12").val("");
          }
          if($("#repairCost13").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost13", "#cat13", "#cat13");
          }
          if($("#cat13").val() !== "" &amp;&amp; $("#repairCost13").val() == "" ){
            $("#cat13").val("");
          }
          if($("#repairCost14").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost14", "#cat14", "#cat14");
          }
          if($("#cat14").val() !== "" &amp;&amp; $("#repairCost14").val() == "" ){
            $("#cat14").val("");
          }
          if($("#repairCost15").val() !== ""){
            validatingCatSelectOptionIfEstimatedIsNotEmpty("#repairCost15", "#cat15", "#cat15");
          }
          if($("#cat15").val() !== "" &amp;&amp; $("#repairCost15").val() == "" ){
            $("#cat15").val("");
          }


             if(!$(".jTypeCLASS").is(":checked")) {
                  alert("Please fill in the missing required field, Jurisdiction Type. Pick one City or County.");
                  $("#jurisdictionType1").focus().select();
      
                  return false;

              } else if($("#county").val() === "Please Select:"){
                alert("Please make a choice in the missing required field, County.");
                  $("#county").focus().select();
      
                  return false;

              } else if($("#city").val() === "Select One"){
                alert("Please make a choice in the missing required field, City.");
                  $("#city").focus().select();
      
                  return false;

              } else if($("#contactPerson").val() === "") {
                alert("Please fill in the missing required field, Contact Person.");
                  $("#contactPerson").focus().select();
      
                  return false;

              } else if($("#contactPersonTitle").val() === "") {
                alert("Please fill in the missing required field, Contact Person Title.");
                  $("#contactPersonTitle").focus().select();
      
                  return false;

              } else {
                if (cats === true){
                  //copySelectedOptionsToTextAreaThenCopyTextAreaValueToArray();
                  //copySelectedOptionsToTextAreaAgain();
                  updateOrFirstTime();
                  sendEmails();
                  fakeSubmit();
                } else {
                  return false;
                  
              } 
          }
             
          });
          //end of notRealSave click

          //rebuildingCityCountyOptionsOnJTypeCheck("#jurisdictionType1");
         // rebuildingCityCountyOptionsOnJTypeCheck("#jurisdictionType2");
           document.getElementById('editKey').value = document.getElementById('dataidSpan').getElementsByTagName('u')[0].innerHTML;
           popIncidentName();
           //document.getElementById('jurisdictionType1').onchange=TypeJurisdiciton;
       // document.getElementById('jurisdictionType2').onchange=TypeJurisdiciton;
            
            autoSum();
    /*if ('<xsl:value-of select="/data/@dataid" />'!=0){
            //disableInputsIA();
            //disableInputsPA();
            //selectDSO();
            //$("#city2").val("");
    }*/
           
            var counties = window.parent.window.parent.counties;
        var countieslist= document.getElementById('county');
        
        
       /*document.getElementById('city').onchange = function () {

                sortOrderCity(this.options[this.selectedIndex].text);
                var coList = document.getElementById("county");
                var coSelected = coList.options[coList.selectedIndex].text;
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(coList);
                    addOption(coList, 'Select One', true);
                    //document.getElementById("otherValueDiv").style.display = "none";
                    for (var k = 0; k &lt; countyList.length; k++) {
                        addOption(coList, countyList[k], false);

                    }
                } else if (this.options[this.selectedIndex].text == 'Unincorporated Areas') {document.getElementById('sortCityOrder').value='0';
                        //document.getElementById("otherValueDiv").style.display = "none";
                 } else if (this.options[this.selectedIndex].text == 'Master') {document.getElementById('sortCityOrder').value='100000';

                        document.getElementById("otherValueDiv").style.display = "";
                        $('#otherValue').focus();
 
                } else {
                    removeOptions(coList);
                    addOption(coList, 'Select One', false);
                   // document.getElementById("otherValueDiv").style.display = "none";
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        if (cityMatrix[k][1] === this.options[this.selectedIndex].text) {
                            var selected = false;
                            if (cityMatrix[k][0] == coSelected) { selected = true; }
                            addOption(coList, cityMatrix[k][0], selected);

                        }
                    }
                }


            }*/
       
       document.getElementById('county').onchange = function () {
                sortOrderCounty(this.options[this.selectedIndex].text);}
                /*var cityList = document.getElementById("city");
                if (this.options[this.selectedIndex].text == 'Select One') {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        addOption(cityList, cityMatrix[k][1], false);
                    }
                    addOption(cityList, "Other", false);
                } else {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    if(document.getElementById('jurisdictionType2').checked ==true){
                      addOption(cityList, "Unincorporated Areas", true);
                    } else {
                     //do nothing
                    }
                    for (var k = 0; k &lt; cityMatrix.length; k++) {

                        if (cityMatrix[k][0] === this.options[this.selectedIndex].text) {
                            addOption(cityList, cityMatrix[k][1], false);
                        }
                    }
                    addOption(cityList, "Other", false);
                }
            }*/
          
           
            $('.datepicker').datepicker();


            commandInfoWindow('affectedSpan', 'Affected', '<div><b>Structure is habitable.  Some minor damage may be eligible for assistance.  Look for the following:</b><ul><li>A few missing shingles;</li><li>Some broken windows;</li><li>Damage to cars;</li><li>Damage to Air Conditioner Compressor only;</li><li>Single Family/Multi Family Residences - 0” - 6” of water</li><li>Mobile Homes- Ground level to within 12” of bottom board.</li></ul></div>');
            commandInfoWindow('minorDamageSpan', 'Minor Damage', '<div><b>Structure is habitable with minor repairs.  Look for the following:</b><ul><li>Many missing shingles, broken windows and doors;</li><li>Siding loose, missing or damaged;</li><li>Minor shifting or settling of foundation;</li><li>Damaged septic systems (flood);</li><li>Single Family/Multi-Family Residences – 6” to 18” of water,</li><li>Mobile Homes- Within 12” of bottom board to 3” above floor level.</li></ul></div>');
            commandInfoWindow('majorDamageSpan', 'Major Damage', '<div><b>Structure is currently uninhabitable and extensive repair is required to make it habitable. Look for  the following:</b><ul><li>Portions of the roof, including decking, missing;</li><li>Twisted, bowed or cracked walls;</li><li>Penetration of structure by trees or cars, etc.;</li><li>Single Family/Multi Family Residences - 18” – 48” of water,</li><li>Mobile Homes – 3” – 12” above floor level.</li></ul></div>');
            commandInfoWindow('destroyedSpan', 'Destroyed', '<div><b>Structure is permanently uninhabitable and can not be repaired.  Look for the following:</b><ul><li>Structure gone, only foundation remains;</li><li>Major sections of walls missing or collapsed;</li><li>Entire roof gone with noticeable distortion of the walls;</li><li>Structure has shifted off of its foundation;</li><li>*Single Family/Multi-Family Residences - More than 48” of water;</li><li>*Mobile Homes - over 12" for mobile homes.</li><li>*requires further investigation</li></ul></div>');
            commandInfoWindow('insuranceSpan', 'Estimating Insurance', '<div><b>The following are general guidelines to estimating insurance coverage.</b><ul><li>Renters are less likely to have insurance.</li><li>Low income residents are less likely to have insurance.</li><li>Homeowners who are still paying off their mortgage will normally have the appropriate type of insurance.</li><li>Residents who are flooded and reside in an area that does not participate in the NFIP or in an area that has been sanctioned for NFIP code enforcement violations will not have flood insurance.</li><li>Residents who are flooded but whose property is not located in the Special Flood Hazard Area (SFHA) will probably not have flood insurance.</li></ul></div>');
            commandInfoWindow('businessesEconomicInjuryInfo', 'Business Economic Injury', '<div>SBA makes an economic injury declaration in reliance on a state certification that at least five small business concerns in a disaster area have suffered substantial economic injury as a result of the disaster and are in need of financial assistance not otherwise available on reasonable terms.<ul><li>Does not cover lost income</li><li>Businesses claiming the loss would have to provide financials and accounting records to prove the loss</li><li>Businesses compensated with insurance would have to prove their injury is substantial after insurance claims are paid</li></ul></div>')
            commandInfoWindow('emergencyProtectiveMeasuresInfo', 'Emergency Protective Measures', '<div>Includes response costs, protection of life &amp; property, and then um temporary repairs as examples</div>');
            commandInfoWindow('buildingEquipmentInfo', 'Building &amp; Equipment', '<div>Also includes vehicles and contents of buildings</div>');
            commandInfoWindow('cityInfo', 'City Options', '<div><ul><li>Multiple cities can be selected when reporting for the County by holding down the Ctrl while clicking on the city names.</li><li>If Other and multiple cities are needed, please choose Other first to reveal the Other text box. Fill in the State Park, Agency, Etc in the text field provided. Multiple cites can then be added on as needed.</li><li>Only a single city is allowed to be selected when filling the DSO out for a City.</li></ul></div>');
            commandInfoWindow('catAInfo','Category A: Debris Removal','<div>Clearance of trees and woody debris; certain building wreckage; damaged/ destroyed building contents; sand, mud, silt, and gravel; vehicles; and other disaster-related material deposited on public and, in very limited cases, private property.</div>');
            commandInfoWindow('catBInfo','Category B: Emergency Protective Measures','<div>Measures taken before, during, and after a disaster to eliminate/reduce an immediate threat to life, public health, or safety, or to eliminate/reduce an immediate threat of significant damage to improved public and private property through cost-effective measures.</div>');
            commandInfoWindow('catCInfo','Category C: Roads and Bridges','<div>Repair of roads, bridges, and associated features, such as shoulders, ditches, culverts, lighting, and signs.</div>');
            commandInfoWindow('catDInfo','Category D: Water Control Facilities','<div>Repair of drainage channels, pumping facilities, and some irrigation facilities. Repair of levees, dams, and flood control channels fall under Category D, but the eligibility of these facilities is restricted.</div>');
            commandInfoWindow('catEInfo','Category E: Buildings and Equipment','<div>Repair or replacement of buildings, including their contents and systems; heavy equipment; and vehicles.</div>');
            commandInfoWindow('catFInfo','Category F: Utilities','<div>Repair of water treatment and delivery systems; power generation facilities and distribution facilities; sewage collection and treatment facilities; and communications.</div>');
            commandInfoWindow('catGInfo','Category G: Parks, Recreational Facilities, and Other Facilities','<div>Repair and restoration of parks, playgrounds, pools, cemeteries, mass transit facilities, and beaches. This category also is used for any work or facility that cannot be characterized adequately by Categories A-F.</div>');
        
            scribe.fields4History = [
            ["webeocIncident", "WebEOC Incident"],
            ["county", "County"],
            ["city", "City"],
            ["type", "Incident Type"],
            ["cat01", "Other Category Type 01"],
            ["cat02", "Other Category Type 02"],
            ["cat03", "Other Category Type 03"],
            ["cat04", "Other Category Type 04"],
            ["cat05", "Other Category Type 05"],
            ["cat06", "Other Category Type 06"],
            ["cat07", "Other Category Type 07"],
            ["cat08", "Other Category Type 08"],
            ["cat09", "Other Category Type 09"],
            ["cat10", "Other Category Type 10"],
            ["cat11", "Other Category Type 11"],
            ["cat12", "Other Category Type 12"],
            ["cat13", "Other Category Type 13"],
            ["cat14", "Other Category Type 14"],
            ["cat15", "Other Category Type 15"],
            ["jurisdictionType", "Jurisdiction Type"],
            ["population", "Population"],
            ["nfip", "NFIP"],
            ["dateOfDisaster1", "State Date of Disaster"],
            ["dateOfDisaster2", "End Date of Disaster"],
            ["continuing", "Disaster Continuing"],
            ["declarationIssued", "Declaration Declared"],
            ["contactPerson", "Contact Person"],
            ["contactPersonTitle", "Contact Person Title"],
            ["address", "Address"],
            ["phone", "Phone"],
            ["mobilePhone", "Mobile Phone"],
            ["fax", "Fax"],
            ["pager", "Pager"],
            ["dutyPhone", "Duty Phone"],
            ["sfhAffected", "Single Faimly Homes Affected"],
            ["sfhMinorDamage", "Single Faimly Homes Minor"],
            ["sfhMajorDamage", "Single Faimly Homes Major"],
            ["sfhDestroyed", "Single Faimly Homes Destroyed"],
            ["sfhCovByInsurance", "Single Faimly Home Insured"],
            ["mhAffected", "Mobile Homes Affected"],
            ["mhMinorDamage", "Mobile Homes Minor "],
            ["mhMajorDamage", "Mobile Homes Major"],
            ["mhDestroyed", "Mobile Homes Destroyed"],
            ["mhCovByInsurance", "Mobile Home Insured"],
            ["mfuAffected", "Multi-Family Units Affected"],
            ["mfuMinorDamage", "Multi-Family Units Minor"],
            ["mfuMajorDamage", "Multi-Family Units  Major"],
            ["mfuDestroyed", "Multi-Family Units Insurance"],
            ["mfuCovByInsurance", "Multi-Family Units Affected"],
            ["totalsAffected", "Total Residental Affected"],
            ["totalsMinorDamage", "Total Residental Minor"],
            ["totalsMajorDamage", "Total Residental Major"],
            ["totalsDestroyed", "Total Residental Destroyed"],
            ["totalsCovByInsurance", "Total Residental Insured"],
            ["homesIsolated", "Homes Isolated"],
            ["numberMinorDamage", "Business Minor Damage"],
            ["coveredMinorDamage", "Business Minor Insured"],
            ["totalMinorDamage", "Business Minor Repair $"],
            ["numberMajorDamage", "Business Major Damage"],
            ["coveredMajorDamage", "Business Major Insured"],
            ["totalMajorDamage", "Business Major Repair $"],
            ["numberTotal", "Business Damaged"],
            ["coveredTotal", "Business Insured"],
            ["totalTotal", "Business Repair $"],
            ["businessesCeased", "Businesses Ceased Operations"],
            ["businessesEconomicInjury", "Nusinessess Economic Injury"],
            ["numberUnemployed", "Number Unemployed"],
            ["sitesDebrisClearance", "CAT A Sites"],
            ["repairCostDebrisClearance", "CAT A Estimated Cost"],
            ["insuranceDebrisClearance", "CAT A Insured"],
            ["sitesEmergency", "CAT B Sites"],
            ["repairCostEmergency", "CAT B Estimated Cost"],
            ["insuranceEmergency", "CAT B Insured"],
            ["sitesRoadPaved", "CAT C Sites"],
            ["repairCostRoadPaved", "CAT C Estimated Cost"],
            ["insuranceRoadPaved", "CAT C Insured"],
            ["sitesWaterControlFacilities", "CAT D Sites"],
            ["repairCostWaterControlFacilities", "CAT D Estimated Cost"],
            ["insuranceWaterControlFacilities", "CAT D Insured"],
            ["sitesBuildingsEquipment", "CAT E Sites"],
            ["repairCostBuildingsEquipment", "CAT E Estimated Cost"],
            ["insuranceBuildingsEquipment", "CAT E Insured"],
            ["sitesUtilitySystems", "CAT F Sites"],
            ["repairCostUtilitySystems", "CAT F Estimated Cost"],
            ["insuranceUtilitySystems", "CAT F Insured"],
            ["sitesOther", "CAT G Sites"],
            ["repairCostOther", "CAT G Estimated Cost"],
            ["insuranceOther", "CAT G Insured"],
            ["sitesTotals", "CAT Site Total"],
            ["repairCostTotals", "CAT Cost Total"],
            ["insuranceTotals", "CAT Insured Total"],
            ["annualMaintenanceBudget", "Annual Maintenace Budget"],
            ["startOfFiscalYear", "Start of Fiscal Year"],
            ["orgFacility01", "Other Facility 01"],
            ["sites01", "Other Sites 01"],
            ["repairCost01", "Other Repair Cost 01"],
            ["insurance01", "Other Insured 01"],
            ["orgFacility02", "Other Facility 02"],
            ["sites02", "Other Sites 02"],
            ["repairCost02", "Other Repair Cost 02"],
            ["insurance02", "Other Insured 02"],
            ["orgFacility03", "Other Facility 03"],
            ["sites03", "Other Sites 03"],
            ["repairCost03", "Other Repair Cost 03"],
            ["insurance03", "Other Insured 03"],
            ["orgFacility04", "Other Facility 04"],
            ["sites04", "Other Sites 04"],
            ["repairCost04", "Other Repair Cost 04"],
            ["insurance04", "Other Insured 04"],
            ["orgFacility05", "Other Facility 05"],
            ["sites05", "Other Sites 05"],
            ["repairCost05", "Other Repair Cost 05"],
            ["insurance05", "Other Insured 05"],
            ["orgFacility06", "Other Facility 06"],
            ["sites06", "Other Sites 06"],
            ["repairCost06", "Other Repair Cost 06"],
            ["insurance06", "Other Insured 06"],
            ["orgFacility07", "Other Facility 07"],
            ["sites07", "Other Sites 07"],
            ["repairCost07", "Other Repair Cost 07"],
            ["insurance07", "Other Insured 07"],
            ["orgFacility08", "Other Facility 08"],
            ["sites08", "Other Sites 08"],
            ["repairCost08", "Other Repair Cost 08"],
            ["insurance08", "Other Insured 08"],
            ["orgFacility09", "Other Facility 09"],
            ["sites09", "Other Sites 09"],
            ["repairCost09", "Other Repair Cost 09"],
            ["insurance09", "Other Insured 09"],
            ["orgFacility10", "Other Facility 10"],
            ["sites10", "Other Sites 10"],
            ["repairCost10", "Other Repair Cost 10"],
            ["insurance10", "Other Insured 10"],
            ["orgFacility11", "Other Facility 11"],
            ["sites11", "Other Sites 11"],
            ["repairCost11", "Other Repair Cost 11"],
            ["insurance11", "Other Insured 11"],
            ["orgFacility12", "Other Facility 12"],
            ["sites12", "Other Sites 12"],
            ["repairCost12", "Other Repair Cost 12"],
            ["insurance12", "Other Insured 12"],
            ["orgFacility13", "Other Facility 13"],
            ["sites13", "Other Sites 13"],
            ["repairCost13", "Other Repair Cost 13"],
            ["insurance13", "Other Insured 13"],
            ["orgFacility14", "Other Facility 14"],
            ["sites14", "Other Sites 14"],
            ["repairCost14", "Other Repair Cost 14"],
            ["insurance14", "Other Insured 14"],
            ["orgFacility15", "Other Facility 15"],
            ["sites15", "Other Sites 15"],
            ["repairCost15", "Other Repair Cost 15"],
            ["insurance15", "Other Insured 15"],
            ["sitesOtherTotal", "Other Sites Total"],
            ["repairCostTotal", "Other Repair Cost Total"],
            ["insuranceCostTotal", "Other Insured Total"],
            ["submitterName", "Submitter Name"],
            ["submitterEmail", "Submitter Email"],
            ["additionalEmails", "Additional Emails"],
            ["countyEmail", "County Email"],
            ["ddcEmail", "DDC Email"],
            ["notes", "Notes"],
              ["hidden","Hidden"],
              ["socProcessed","SOC Processed"]
            ];
            scribe.inicialReview();
            //$("#county").prop("disabled", true);
            //$("#city").prop("disabled", true);
            if ('<xsl:value-of select="/data/@dataid" />'!=0){

               $("#county").prop("disabled", false);
                $("#city").prop("disabled", false);
                copyCountyValueDSO();
                //startOf: doing stuff on update/edit
                //var countySelectListOnUpdate = document.getElementById("county");
                //sortOrderCounty(countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text);
                //var cityList = document.getElementById("city");
              /*  if (countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text == 'Select One') {
                    removeOptions(cityList);
                    addOption(cityList, "Select One", false);
                    addOption(cityList, "Unincorporated Areas", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {
                        addOption(cityList, cityMatrix[k][1], false);
                    } addOption(cityList, "Other", false);
                } else {
                    //removeOptions(cityList);
                    //addOption(cityList, "Select One", false);
                    //addOption(cityList, "Unincorporated Areas", true);
                    for (var k = 0; k &lt; cityMatrix.length; k++) {

                        if (cityMatrix[k][0] === countySelectListOnUpdate.options[countySelectListOnUpdate.selectedIndex].text) {
                            addOption(cityList, cityMatrix[k][1], false);
                        }
                    }//addOption(cityList, "Other", false);
                }*/


                setTimeout(function() {
                  
                    //selectOptionsIfExistsInArray();
                }, 1000);
            } 
            
            if($('#otherValue').val()!=''){
        document.getElementById("otherValueDiv").style.display = "";
    }
            
        }

        /*function copySelectedOptionsToTextAreaThenCopyTextAreaValueToArray() {
                    document.getElementById("cityTmp").value += $("#city").val();
                }*/



        function fakeSubmit() {
      
          var tf= document.getElementById('auditEmbed');
           if(tf.contentWindow){
              tf.contentWindow.document.getElementById('frameBody').contentWindow.frames.injectHistory(document.getElementsByName('dataid')[0].value,'<value-of select="/data/@username" />','<value-of select="/data/@currentdate" />'+' '+'<value-of select="/data/@currenttime" />',scribe.postReview());

          } else {
            tf.contentDocument.document.getElementById('frameBody').contentDocument.frames.injectHistory(document.getElementsByName('dataid')[0].value,'<value-of select="/data/@username" />','<value-of select="/data/@currentdate" />'+' '+'<value-of select="/data/@currenttime" />',scribe.postReview());
          }
        
        }

//this will work but something else is putting it there
        /*function removeUniAreas(){
          
          $("#city option:contains(Unincorporated Areas)").remove();
        }*/

        /*function TypeJurisdiciton(){
          var a = document.getElementById('jurisdictionType1');
        

          if(a.checked==true){
            
            
          document.getElementById('city').multiple=false;
          document.getElementById('city').size=1;
        } else {
          document.getElementById('city').multiple=true;
          document.getElementById('city').size=6;
          document.getElementById('sortCityOrder').value='0';
        }

      }*/

      function popIncidentName(){
        var first = document.getElementById('webeocIncident'),
          second = document.getElementById('incidentName');

          second.value = first.value;
}


      /*function countyEmailHideReveal() {
      if (document.getElementById('jurisdictionType1').checked ==true) {
      document.getElementById('countyEmailHide').style.display="";
      } else {
      document.getElementById('countyEmailHide').style.display="none";
    
 }
}*/


function validatingCatSelectOptionIfEstimatedIsNotEmpty(a, b, c) {
    if($(a).val() != "" &amp;&amp; $(b).val() === "") {
        alert("Please select a value for Cat A-G");
        $(c).focus().select();
        event.preventDefault();
        //maybe not in IE / safari ------NEEDS TEST
        //event.stopPropagation(); //this does not work in firefox, maybe not in IE / safari ------NEEDS TEST
        cats = false;
        console.log(cats);
        console.log("cats false above");
        console.log("validatingCatSelectOptionIfEstimatedIsNotEmpty runs and stops form");

    } else {
        cats = true;
         console.log(cats);
        console.log("cats true above");

        console.log("validatingCatSelectOptionIfEstimatedIsNotEmpty else finishes");
    }
}

Object.defineProperty(HTMLSelectElement.prototype, "selectedOptions", {
    get: (function() {
        try {
            document.querySelector(":checked");
            return function() {
                return this.querySelectorAll(":checked");
            };
        } catch (e) {
            return function() {
                if (!this.multiple) {
                    return this.selectedIndex &gt;= 0
                            ? [this.options[this.selectedIndex]] : [];
                }
                for (var i = 0, a = []; i &lt; this.options.length; i++)
                    if (this.options[i].selected) a.push(this.options[i]);
                return a;
                console.log(a);
                console.log("Object.defineProperty(HTMLSelectElement.prototype a ABOVE");
            };
        }
    })()
});


function saveButtonRuns(){
  console.log("real save button is clicked");
}


//add to webform? only on update
/*function disableInputsIA(){
  var a = document.getElementById('femaTestIA').textContent;
if (a[0]=='1'){
  $('input.lockTheseIA').attr('disabled', 'disabled');
} else {
  $('input.lockTheseIA').removeAttr('disabled');
}
}

function disableInputsPA(){
  var a = document.getElementById('femaTestPA').textContent;
if (a[0]=='1'){
  $('input.lockThesePA').attr('disabled', 'disabled');
} else {
  $('input.lockThesePA').removeAttr('disabled');
}
}

function selectDSO(){
    var aaa = document.getElementById('dsoSelectedTest').textContent;
    if (aaa[0]=='1'){
     $("#dsoSelected").prop("checked", true);
     //$('#testTestTextField').val('Wootee');
     //alert('User must update something else by hand and save to save dsoSelected');     
    } else {
      $("#dsoSelected").prop("checked", false);
      //alert('User may or may not have to update something else by hand and save to save the unselecting of dsoSelected');
    }
}*/

function copyCountyValueDSO(){
   var firstCounty = document.getElementById('county'),//get from
   secondC = document.getElementById('countyCopyDSO');//put here

secondC.value = firstCounty.options[firstCounty.selectedIndex].text;

}
//this works like 9 times out of ten and then 1 time you need to edit the record manually and save and then it saves the checked and wootee value
//add to webform? only on update


        window.onload = start;
    </script></head><body><div class="container agencytemplate_boardbackground"><form role="form"><div class="content"><span style="display:none"><div id="femaTestIA"><relatedexpression name="femaIACheckTest" table="Supplemental">sum(case when femaCheckboxV1='Yes' then 1 else 0 end)
        </relatedexpression></div><div id="femaTestPA"><relatedexpression name="femaPACheckTest" table="Supplemental">sum(case when femaCheckboxV2='Yes' then 1 else 0 end)
        </relatedexpression></div></span><div id="hidden" style="display:nonea"><div class="form-group form-inline"><label class="control-label" for="masterDSOThisIs">masterDSOThisIs:</label><input name="masterDSOThisIs" id="masterDSOThisIs" type="text" style="form-control input-sm" value="masterDSO" /></div><div class="form-group form-inline"><label class="control-label" for="sortCountyOrder">Sort County Order:</label><input name="sortCountyOrder" id="sortCountyOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="sortCityOrder">Sort City Order:</label><input name="sortCityOrder" id="sortCityOrder" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="submitedDateTime">Submited DateTime:</label><input name="submitedDateTime" id="submitedDateTime" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="updated">Updated:</label><input name="updated" id="updated" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="incidentName">Incident Name:</label><input name="incidentName" id="incidentName" type="text" style="form-control input-sm" /></div><!--<div class="form-group form-inline">
                     <label class="control-label" for="additionalEmails"> Additional Emails:</label>
                     <input name="additionalEmails" id="additionalEmails" type="text" style="form-control input-sm"/>
                  </div>--><div class="form-group form-inline"><label class="control-label" for="editKey">editKey:</label><input name="editKey" id="editKey" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="dsoSelected">dsoSelected:</label><input name="dsoSelected" id="dsoSelected" type="checkbox" value="dsoSelected" style="form-control input-sm" /></div><!--DSO Yes/No's
            <div id="dsoSelectedTest">
              <relatedexpression name="dsoSelectedTestExp" table="Supplemental">case when dsoYesNo='Yes' then 1 else 0 end</relatedexpression>
            </div>
            <div id="testTestText">
              <input name="testTestTextField" id="testTestTextField" type="text" />
            </div>--><div class="form-group form-inline"><label class="control-label" for="DSOisSelected">DSOisSelected:</label><input type="text" name="DSOisSelected" value="" /></div><!--<div id="dsoSelectedTestBubble">
            <relatedexpression name="dsoSelectedTestBubbleExp" table="Supplemental">sum(case when fkID='Yes' then 1 else 0 end)</relatedexpression></div>--><span id="dataidSpan"><dataid table="Core" /></span></div><!--bb<foreignkey><dataid table="Supplemental"/></foreignkey>--><div id="container"><h1><span class="label label-default">Master County Totals - Incident</span></h1><br /><!--<input type="text" name="incidentName3" id="incidentName3" class="form-control hide">
              <attribute name="value">
                <incidentname />
              </attribute>
            </input>--><div class="form-group form-inline"><label class="control-label" for="webeocIncident">Incident:</label><space /><input type="text" name="webeocIncident" id="webeocIncident" style="form-control input-sm" /></div><br /><h1><span class="label label-default">Master County Totals - General</span></h1><br /><div class="form-group required form-inline" id="jurisdictionTypeDIV"><label id="jurisdictionTypeLabel" class="control-label" for="jurisdictionType">Jurisdiction Type:</label><!--City 
                     
                     
                     
                     
                     
                     <input id="jurisdictionType1" type="radio" class="form-control input-sm jTypeCLASS" name="jurisdictionType" value="City" onclick="countyEmailHideReveal();removeUniAreas()" />-->
        County 
                     
                     
                     
                     
                     
                     <input id="jurisdictionType2" type="radio" class="form-control input-sm jTypeCLASS" name="jurisdictionType" value="County" checked="checked" /></div><div class="form-group form-inline"><label class="control-label" for="county">County:</label><space /><select id="county" name="county" onblur="copyCountyValueDSO()"><option value="">Please Select:</option><option value="Anderson">Anderson</option><option value="Andrews">Andrews</option><option value="Angelina">Angelina</option><option value="Aransas">Aransas</option><option value="Archer">Archer</option><option value="Armstrong">Armstrong</option><option value="Atascosa">Atascosa</option><option value="Austin">Austin</option><option value="Bailey">Bailey</option><option value="Bandera">Bandera</option><option value="Bastrop">Bastrop</option><option value="Baylor">Baylor</option><option value="Bee">Bee</option><option value="Bell">Bell</option><option value="Bexar">Bexar</option><option value="Blanco">Blanco</option><option value="Borden">Borden</option><option value="Bosque">Bosque</option><option value="Bowie">Bowie</option><option value="Brazoria">Brazoria</option><option value="Brazos">Brazos</option><option value="Brewster">Brewster</option><option value="Briscoe">Briscoe</option><option value="Brooks">Brooks</option><option value="Brown">Brown</option><option value="Burleson">Burleson</option><option value="Burnet">Burnet</option><option value="Caldwell">Caldwell</option><option value="Calhoun">Calhoun</option><option value="Callahan">Callahan</option><option value="Cameron">Cameron</option><option value="Camp">Camp</option><option value="Carson">Carson</option><option value="Cass">Cass</option><option value="Castro">Castro</option><option value="Chambers">Chambers</option><option value="Cherokee">Cherokee</option><option value="Childress">Childress</option><option value="Clay">Clay</option><option value="Cochran">Cochran</option><option value="Coke">Coke</option><option value="Coleman">Coleman</option><option value="Collin">Collin</option><option value="Collingsworth">Collingsworth</option><option value="Colorado">Colorado</option><option value="Comal">Comal</option><option value="Comanche">Comanche</option><option value="Concho">Concho</option><option value="Cooke">Cooke</option><option value="Coryell">Coryell</option><option value="Cottle">Cottle</option><option value="Crane">Crane</option><option value="Crockett">Crockett</option><option value="Crosby">Crosby</option><option value="Culberson">Culberson</option><option value="Dallam">Dallam</option><option value="Dallas">Dallas</option><option value="Dawson">Dawson</option><option value="Deaf Smith">Deaf Smith</option><option value="Delta">Delta</option><option value="Denton">Denton</option><option value="DeWitt">DeWitt</option><option value="Dickens">Dickens</option><option value="Dimmit">Dimmit</option><option value="Donley">Donley</option><option value="Duval">Duval</option><option value="Eastland">Eastland</option><option value="Ector">Ector</option><option value="Edwards">Edwards</option><option value="El Paso">El Paso</option><option value="Ellis">Ellis</option><option value="Erath">Erath</option><option value="Falls">Falls</option><option value="Fannin">Fannin</option><option value="Fayette">Fayette</option><option value="Fisher">Fisher</option><option value="Floyd">Floyd</option><option value="Foard">Foard</option><option value="Fort Bend">Fort Bend</option><option value="Franklin">Franklin</option><option value="Freestone">Freestone</option><option value="Frio">Frio</option><option value="Gaines">Gaines</option><option value="Galveston">Galveston</option><option value="Garza">Garza</option><option value="Gillespie">Gillespie</option><option value="Glasscock">Glasscock</option><option value="Goliad">Goliad</option><option value="Gonzales">Gonzales</option><option value="Gray">Gray</option><option value="Grayson">Grayson</option><option value="Gregg">Gregg</option><option value="Grimes">Grimes</option><option value="Guadalupe">Guadalupe</option><option value="Hale">Hale</option><option value="Hall">Hall</option><option value="Hamilton">Hamilton</option><option value="Hansford">Hansford</option><option value="Hardeman">Hardeman</option><option value="Hardin">Hardin</option><option value="Harris">Harris</option><option value="Harrison">Harrison</option><option value="Hartley">Hartley</option><option value="Haskell">Haskell</option><option value="Hays">Hays</option><option value="Hemphill">Hemphill</option><option value="Henderson">Henderson</option><option value="Hidalgo">Hidalgo</option><option value="Hill">Hill</option><option value="Hockley">Hockley</option><option value="Hood">Hood</option><option value="Hopkins">Hopkins</option><option value="Houston">Houston</option><option value="Howard">Howard</option><option value="Hudspeth">Hudspeth</option><option value="Hunt">Hunt</option><option value="Hutchinson">Hutchinson</option><option value="Irion">Irion</option><option value="Jack">Jack</option><option value="Jackson">Jackson</option><option value="Jasper">Jasper</option><option value="Jeff Davis">Jeff Davis</option><option value="Jefferson">Jefferson</option><option value="Jim Hogg">Jim Hogg</option><option value="Jim Wells">Jim Wells</option><option value="Johnson">Johnson</option><option value="Jones">Jones</option><option value="Karnes">Karnes</option><option value="Kaufman">Kaufman</option><option value="Kendall">Kendall</option><option value="Kenedy">Kenedy</option><option value="Kent">Kent</option><option value="Kerr">Kerr</option><option value="Kimble">Kimble</option><option value="King">King</option><option value="Kinney">Kinney</option><option value="Kleberg">Kleberg</option><option value="Knox">Knox</option><option value="La Salle">La Salle</option><option value="Lamar">Lamar</option><option value="Lamb">Lamb</option><option value="Lampasas">Lampasas</option><option value="Lavaca">Lavaca</option><option value="Lee">Lee</option><option value="Leon">Leon</option><option value="Liberty">Liberty</option><option value="Limestone">Limestone</option><option value="Lipscomb">Lipscomb</option><option value="Live Oak">Live Oak</option><option value="Llano">Llano</option><option value="Loving">Loving</option><option value="Lubbock">Lubbock</option><option value="Lynn">Lynn</option><option value="Madison">Madison</option><option value="Marion">Marion</option><option value="Martin">Martin</option><option value="Mason">Mason</option><option value="Matagorda">Matagorda</option><option value="Maverick">Maverick</option><option value="McCulloch">McCulloch</option><option value="McLennan">McLennan</option><option value="McMullen">McMullen</option><option value="Medina">Medina</option><option value="Menard">Menard</option><option value="Midland">Midland</option><option value="Milam">Milam</option><option value="Mills">Mills</option><option value="Mitchell">Mitchell</option><option value="Montague">Montague</option><option value="Montgomery">Montgomery</option><option value="Moore">Moore</option><option value="Morris">Morris</option><option value="Motley">Motley</option><option value="Nacogdoches">Nacogdoches</option><option value="Navarro">Navarro</option><option value="Newton">Newton</option><option value="Nolan">Nolan</option><option value="Nueces">Nueces</option><option value="Ochiltree">Ochiltree</option><option value="Oldham">Oldham</option><option value="Orange">Orange</option><option value="Palo Pinto">Palo Pinto</option><option value="Panola">Panola</option><option value="Parker">Parker</option><option value="Parmer">Parmer</option><option value="Pecos">Pecos</option><option value="Polk">Polk</option><option value="Potter">Potter</option><option value="Presidio">Presidio</option><option value="Rains">Rains</option><option value="Randall">Randall</option><option value="Reagan">Reagan</option><option value="Real">Real</option><option value="Red River">Red River</option><option value="Reeves">Reeves</option><option value="Refugio">Refugio</option><option value="Roberts">Roberts</option><option value="Robertson">Robertson</option><option value="Rockwall">Rockwall</option><option value="Runnels">Runnels</option><option value="Rusk">Rusk</option><option value="Sabine">Sabine</option><option value="San Augustine">San Augustine</option><option value="San Jacinto">San Jacinto</option><option value="San Patricio">San Patricio</option><option value="San Saba">San Saba</option><option value="Schleicher">Schleicher</option><option value="Scurry">Scurry</option><option value="Shackelford">Shackelford</option><option value="Shelby">Shelby</option><option value="Sherman">Sherman</option><option value="Smith">Smith</option><option value="Somervell">Somervell</option><option value="Starr">Starr</option><option value="Stephens">Stephens</option><option value="Sterling">Sterling</option><option value="Stonewall">Stonewall</option><option value="Sutton">Sutton</option><option value="Swisher">Swisher</option><option value="Tarrant">Tarrant</option><option value="Taylor">Taylor</option><option value="Terrell">Terrell</option><option value="Terry">Terry</option><option value="Throckmorton">Throckmorton</option><option value="Titus">Titus</option><option value="Tom Green">Tom Green</option><option value="Travis">Travis</option><option value="Trinity">Trinity</option><option value="Tyler">Tyler</option><option value="Upshur">Upshur</option><option value="Upton">Upton</option><option value="Uvalde">Uvalde</option><option value="Val Verde">Val Verde</option><option value="Van Zandt">Van Zandt</option><option value="Victoria">Victoria</option><option value="Walker">Walker</option><option value="Waller">Waller</option><option value="Ward">Ward</option><option value="Washington">Washington</option><option value="Webb">Webb</option><option value="Wharton">Wharton</option><option value="Wheeler">Wheeler</option><option value="Wichita">Wichita</option><option value="Wilbarger">Wilbarger</option><option value="Willacy">Willacy</option><option value="Williamson">Williamson</option><option value="Wilson">Wilson</option><option value="Winkler">Winkler</option><option value="Wise">Wise</option><option value="Wood">Wood</option><option value="Yoakum">Yoakum</option><option value="Young">Young</option><option value="Zapata">Zapata</option><option value="Zavala">Zavala</option></select><!-- </select>--></div><div class="form-group form-inline"><input id="countyCopyDSO" name="countyCopyDSO" /></div><div class="form-group form-inline"><label class="control-label" for="city">City:</label><space /><span id="cityInfo" class="label label-info">i</span><space /><select size="1" name="city" id="city" class="form-control" value="Master"><option value="Master">Master</option></select><br /><div id="otherValueDiv" class="form-group form-inline" style="display:none"><br /><label class="editOption control-label" for="otherValue">Please Write in State Park, Agency, Etc: </label><space /><br /><input type="text" name="otherValue" id="otherValue" style="form-control input-sm" /></div><!--<input type="text" name="city" style="form-control input-sm" />--></div><div class="form-group form-inline" style="display:nonea"><textarea id="cityTmp" name="cityTmp" value="Master" /><br /><textarea id="city2" name="city2" value="Master"></textarea></div><div class="form-group form-inline"><label class="control-label" for="population">Population:</label><space /><input name="population" id="population" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="type">Type:</label><space /><input name="type" id="type" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="nfip">If this is a flood event, does the City/County participate in the National Flood Insurance Program (NFIP)?:</label>
        Yes 
                     
                     
                     
                     
                     
                     <input id="nfip1" type="radio" style="form-control input-sm" name="nfip" value="Yes" />
        No 
                     
                     
                     
                     
                     
                     <input id="nfip2" type="radio" style="form-control input-sm" name="nfip" value="No" /></div><div class="form-group form-inline"><label class="control-label" for="dateOfDisaster">Inclusive dates of the disaster:</label><space /><input name="dateOfDisaster1" id="dateOfDisaster1" type="text" placeholder="Start Date" data-provide="datepicker" style="form-control input-sm datepicker" /> - 
                     
                     
                     
                     
                     
                     <input data-provide="datepicker" name="dateOfDisaster2" placeholder="End Date" style="form-control input-sm datepicker" /><span><space /><label class="control-label" for="Continuing">Continuing?</label><space /><input type="checkbox" name="continuing" id="continuing" value="Continuing" /></span></div><div class="form-group form-inline"><label class="control-label" for="declarationIssued">Was a local disaster declaration issued?:</label>
       Yes 
                     
                     
                     
                     
                     
                     <input id="declarationIssued1" type="radio" style="form-control input-sm" name="declarationIssued" value="Yes" />
       No 
                     
                     
                     
                     
                     
                     <input id="declarationIssued2" type="radio" style="form-control input-sm" name="declarationIssued" value="No" /></div><div class="form-group required form-inline"><label class="control-label" for="contactPerson">Contact Person:</label><space /><input name="contactPerson" id="contactPerson" type="text" class="form-control input-sm cPersonCLASS" /></div><div class="form-group required form-inline"><label class="control-label" for="contactPersonTitle">Contact Person Title:</label><space /><input name="contactPersonTitle" id="contactPersonTitle" type="text" class="form-control input-sm cPersonCLASS" runat="server" /></div><div class="form-group form-inline"><label class="control-label" for="address">Address:</label><space /><input name="address" id="address" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="phone">Phone:</label><space /><input name="phone" id="phone" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="mobilePhone">Mobile Phone:</label><space /><input name="mobilePhone" id="mobilePhone" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="fax">Fax:</label><space /><input name="fax" id="fax" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="pager">Pager:</label><space /><input name="pager" id="pager" type="text" style="form-control input-sm" /></div><div class="form-group form-inline"><label class="control-label" for="dutyPhone">24-Hr Duty Officer/Sheriff's Office:</label><space /><input name="dutyPhone" id="dutyPhone" type="text" style="form-control input-sm" /></div><br /><h1><span class="label label-default">Master County Totals - Individual Assistance</span></h1><h3><span class="label label-default">Residential Losses - Primary Residence Only</span></h3><br /><table class="table table-bordered"><tr><td>Type of Homes</td><td># Affected 
                           
                           
                           
                           
                           
                           <span id="affectedSpan" class="label label-info">i</span></td><td># Minor Damage 
                           
                           
                           
                           
                           
                           <span id="minorDamageSpan" class="label label-info">i</span></td><td># Major Damage 
                           
                           
                           
                           
                           
                           <span id="majorDamageSpan" class="label label-info">i</span></td><td># Destroyed 
                           
                           
                           
                           
                           
                           <span id="destroyedSpan" class="label label-info">i</span></td><td>% Covered by Insurance 
                           
                           
                           
                           
                           
                           <span id="insuranceSpan" class="label label-info">i</span></td></tr><tr><td>Single Family Homes</td><td><input name="sfhAffected" id="sfhAffected" type="text" placeholder="0" class="totalsAffected lockTheseIA" style="form-control input-sm totalsAffected" /></td><td><input name="sfhMinorDamage" id="sfhMinorDamage" type="text" placeholder="0" class="totalsMinorDamage lockTheseIA" style="form-control input-sm totalsMinorDamage" /></td><td><input name="sfhMajorDamage" id="sfhMajorDamage" type="text" placeholder="0" class="totalsMajorDamage lockTheseIA" style="form-control input-sm totalsMajorDamage" /></td><td><input name="sfhDestroyed" id="sfhDestroyed" type="text" placeholder="0" class="totalsDestroyed lockTheseIA" style="form-control input-sm totalsDestroyed" /></td><td><input name="sfhCovByInsurance" id="sfhCovByInsurance" type="text" placeholder="0" class="totalsCovByInsurance lockTheseIA" style="form-control input-sm totalsCovByInsurance" onBlur="iaAverage()" /></td><td>%</td></tr><tr><td>Mobile Homes</td><td><input name="mhAffected" id="mhAffected" type="text" placeholder="0" class="totalsAffected lockTheseIA" style="form-control input-sm totalsAffected" /></td><td><input name="mhMinorDamage" id="mhMinorDamage" type="text" placeholder="0" class="totalsMinorDamage lockTheseIA" style="form-control input-sm totalsMinorDamage" /></td><td><input name="mhMajorDamage" id="mhMajorDamage" type="text" placeholder="0" class="totalsMajorDamage lockTheseIA" style="form-control input-sm totalsMajorDamage" /></td><td><input name="mhDestroyed" id="mhDestroyed" type="text" placeholder="0" class="totalsDestroyed lockTheseIA" style="form-control input-sm totalsDestroyed" /></td><td><input name="mhCovByInsurance" id="mhCovByInsurance" type="text" placeholder="0" class="totalsCovByInsurance lockTheseIA" style="form-control input-sm totalsCovByInsurance" onBlur="iaAverage()" /></td><td>%</td></tr><tr><td>Multi-Family Units</td><td><input name="mfuAffected" id="mfuAffected" type="text" placeholder="0" class="totalsAffected lockTheseIA" style="form-control input-sm totalsAffected" /></td><td><input name="mfuMinorDamage" id="mfuMinorDamage" type="text" placeholder="0" class="totalsMinorDamage lockTheseIA" style="form-control input-sm totalsMinorDamage" /></td><td><input name="mfuMajorDamage" id="mfuMajorDamage" type="text" placeholder="0" class="totalsMajorDamage lockTheseIA" style="form-control input-sm totalsMajorDamage" /></td><td><input name="mfuDestroyed" id="mfuDestroyed" type="text" placeholder="0" class="totalsDestroyed lockTheseIA" style="form-control input-sm totalsDestroyed" /></td><td><input name="mfuCovByInsurance" id="mfuCovByInsurance" type="text" placeholder="0" class="totalsCovByInsurance lockTheseIA" style="form-control input-sm totalsCovByInsurance" onBlur="iaAverage()" /></td><td>%</td></tr><tr><td>Totals</td><td><input name="totalsAffected" id="totalsAffected" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsMinorDamage" id="totalsMinorDamage" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsMajorDamage" id="totalsMajorDamage" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsDestroyed" id="totalsDestroyed" type="text" value="0.00" placeholder="0.00" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="totalsCovByInsurance" id="totalsCovByInsurance" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td><td>%</td><!--<td>
                           <input name="totalsCovByInsurance2" id="totalsCovByInsurance2" type="text" placeholder="Average" style="form-control input-sm"/>
                        </td>
                        <td><button onclick="clearZeros()">GO</button></td>--></tr></table><div class="form-group form-inline"><label class="control-label" for="homesIsolated">Number of homes isolated due to road closure (high water, etc.): </label><space /><input name="homesIsolated" id="homesIsolated" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></div><br /><h1><span class="label label-default">Master County Totals - Business Losses/Impacts:</span></h1><br /><table class="table table-bordered"><tr><td /><td># of Businesses</td><td># Covered by Adequate Insurance</td><td>$ Total Estimated Repair Cost</td></tr><tr><td>Minor Damage (less than 40%)</td><td><input name="numberMinorDamage" id="numberMinorDamage" type="text" placeholder="0" class="numberTotal lockTheseIA" style="form-control input-sm numberTotal" /></td><td><input name="coveredMinorDamage" id="coveredMinorDamage" type="text" placeholder="0" class="coveredTotal lockTheseIA" style="form-control input-sm coveredTotal" /></td><td>
                           $ <input name="totalMinorDamage" id="totalMinorDamage" type="text" placeholder="0" class="totalTotal lockTheseIA" style="form-control input-sm totalTotal" /></td></tr><tr><td>Major Damage (greater than 40%)</td><td><input name="numberMajorDamage" id="numberMajorDamage" type="text" placeholder="0" class="numberTotal lockTheseIA" style="form-control input-sm numberTotal" /></td><td><input name="coveredMajorDamage" id="coveredMajorDamage" type="text" placeholder="0" class="coveredTotal lockTheseIA" style="form-control input-sm coveredTotal" /></td><td>
                           $ <input name="totalMajorDamage" id="totalMajorDamage" type="text" placeholder="0" class="totalTotal lockTheseIA" style="form-control input-sm totalTotal" /></td></tr><tr><td>Totals</td><td><input name="numberTotal" id="numberTotal" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td><td><input name="coveredTotal" id="coveredTotal" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td><td>
                 $ <input name="totalTotal" id="totalTotal" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></td></tr></table><div class="form-group form-inline"><label class="control-label" for="businessesCeased">How many businesses have ceased operations?: </label><space /><input name="businessesCeased" id="businessesCeased" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></div><div class="form-group form-inline"><label class="control-label" for="businessesEconomicInjury">How many businesses have experienced economic injury?: 
                        
                        
                        
                        
                        
                        <span id="businessesEconomicInjuryInfo" class="label label-info">i</span></label><space /><input name="businessesEconomicInjury" id="businessesEconomicInjury" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /></div><div class="form-group form-inline"><label class="control-label" for="numberUnemployed">Estimated number of persons unemployed because of this disaster: </label><space /><input name="numberUnemployed" id="numberUnemployed" type="text" placeholder="0" style="form-control input-sm" class="lockTheseIA" /><space /><i>(Contact affected businesses and the local Texas Workforce Commission Office)</i></div><br /><h1><span class="label label-default">Master County Totals - Public Assistance</span></h1><br /><table class="table table-bordered"><tr><td>Category</td><td># of Sites</td><td>$ Estimated Repair Costs</td><td>$ Anticipated Insurance*</td></tr><tr><td><span class="label label-default" id="catAInfo">A</span> Debris Clearance
                        
                        
                        
                        
                        
                        </td><td><input name="sitesDebrisClearance" id="sitesDebrisClearance" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostDebrisClearance" id="repairCostDebrisClearance" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceDebrisClearance" id="insuranceDebrisClearance" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catBInfo">B</span> Emergency Protective Measures 
                           
                           
                           
                           
                           
                           <span id="emergencyProtectiveMeasuresInfo" class="label label-info">i</span></td><td><input name="sitesEmergency" id="sitesEmergency" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostEmergency" id="repairCostEmergency" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceEmergency" id="insuranceEmergency" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catCInfo">C</span> Roads &amp; Bridges
                        
                        
                        
                        
                        
                        </td><td><input name="sitesRoadPaved" id="sitesRoadPaved" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostRoadPaved" id="repairCostRoadPaved" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceRoadPaved" id="insuranceRoadPaved" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catDInfo">D</span> Water Control Facilities 
                           
                           
                           
                           
                           
                           <br />(Dams, levees, dikes)

                        
                        
                        
                        
                        
                        </td><td><input name="sitesWaterControlFacilities" id="sitesWaterControlFacilities" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostWaterControlFacilities" id="repairCostWaterControlFacilities" type="text" class="repairCostTotals lockThesePA" placeholder="0" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceWaterControlFacilities" id="insuranceWaterControlFacilities" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catEInfo">E</span> Buildings &amp; Equipment 
                           
                           
                           
                           
                           
                           <span id="buildingEquipmentInfo" class="label label-info">i</span></td><td><input name="sitesBuildingsEquipment" id="sitesBuildingsEquipment" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostBuildingsEquipment" id="repairCostBuildingsEquipment" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceBuildingsEquipment" id="insuranceBuildingsEquipment" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catFInfo">F</span> Public Utility Systems
                           
                           
                           
                           
                           
                           <br />
(Gas, Electric, Sewer, Water)

                        
                        
                        
                        
                        
                        </td><td><input name="sitesUtilitySystems" id="sitesUtilitySystems" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostUtilitySystems" id="repairCostUtilitySystems" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceUtilitySystems" id="insuranceUtilitySystems" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td><span class="label label-default" id="catGInfo">G</span>
            Other Types of Facilities
                           
                           
                           
                           
                           
                           <br />
(Recreational Facilities, Airports, etc.)

                        
                        
                        
                        
                        
                        </td><td><input name="sitesOther" id="sitesOther" type="text" placeholder="0" class="sitesTotals lockThesePA" style="form-control input-sm sitesTotals" /></td><td>
                           $ <input name="repairCostOther" id="repairCostOther" type="text" placeholder="0" class="repairCostTotals lockThesePA" style="form-control input-sm repairCostTotals" /></td><td>
                           $ <input name="insuranceOther" id="insuranceOther" type="text" placeholder="0" class="insuranceTotals lockThesePA" style="form-control input-sm insuranceTotals" /></td></tr><tr><td>Totals
</td><td><input name="sitesTotals" id="sitesTotals" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="repairCostTotals" id="repairCostTotals" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="insuranceTotals" id="insuranceTotals" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td></tr></table><i>* Anticipated insurance is normally calculated by subtracting any deductible, depreciation or 
     uncoverable loss from the estimated repair cost.
</i><div class="form-group form-inline" /><div class="form-group form-inline"><label class="control-label" for="annualMaintenanceBudget">Total annual maintenance budget (i.e. Public Works, Road &amp; Bridge):</label><space />
                     $ <input name="annualMaintenanceBudget" id="annualMaintenanceBudget" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></div><div class="form-group form-inline"><label class="control-label" for="startOfFiscalYear">Start of Fiscal Year(Month):</label><space /><input name="startOfFiscalYear" id="startOfFiscalYear" type="text" style="form-control input-sm" class="lockThesePA" /></div><br /><h1><span class="label label-default">Master County Totals - Other Eligible Entities</span></h1><br /><i>(Contact non-profit or governmental, medical, emergency, utility, educational, custodial care facilities, etc.)</i><div class="form-group form-inline" /><table class="table table-bordered"><tr><td>Organization / Facility</td><td>Cat A-G</td><td># of Sites</td><td>$ Estimated Repair Cost</td><td>$ Anticipated Insurance *</td></tr><tr><td><input name="orgFacility01" id="orgFacility01" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat01" id="cat01" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites01" id="sites01" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost01" id="repairCost01" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance01" id="insurance01" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility02" id="orgFacility02" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat02" id="cat02" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites02" id="sites02" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost02" id="repairCost02" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance02" id="insurance02" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility03" id="orgFacility03" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat03" id="cat03" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites03" id="sites03" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost03" id="repairCost03" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance03" id="insurance03" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility04" id="orgFacility04" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat04" id="cat04" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites04" id="sites04" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost04" id="repairCost04" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance04" id="insurance04" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility05" id="orgFacility05" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat05" id="cat05" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites05" id="sites05" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost05" id="repairCost05" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance05" id="insurance05" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility06" id="orgFacility06" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat06" id="cat06" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites06" id="sites06" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost06" id="repairCost06" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance06" id="insurance06" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility07" id="orgFacility07" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat07" id="cat07" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites07" id="sites07" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost07" id="repairCost07" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance07" id="insurance07" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility08" id="orgFacility08" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat08" id="cat08" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites08" id="sites08" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost08" id="repairCost08" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance08" id="insurance08" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility09" id="orgFacility09" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat09" id="cat09" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites09" id="sites09" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost09" id="repairCost09" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance09" id="insurance09" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility10" id="orgFacility10" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat10" id="cat10" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites10" id="sites10" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost10" id="repairCost10" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance10" id="insurance10" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility11" id="orgFacility11" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat11" id="cat11" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites11" id="sites11" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost11" id="repairCost11" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance11" id="insurance11" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility12" id="orgFacility12" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat12" id="cat12" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites12" id="sites12" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost12" id="repairCost12" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance12" id="insurance12" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility13" id="orgFacility13" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat13" id="cat13" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites13" id="sites13" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost13" id="repairCost13" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance13" id="insurance13" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility14" id="orgFacility14" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat14" id="cat14" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites14" id="sites14" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost14" id="repairCost14" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance14" id="insurance14" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td><input name="orgFacility15" id="orgFacility15" type="text" style="form-control input-sm" class="lockThesePA" /></td><td><select name="cat15" id="cat15" style="form-control input-sm" class="lockThesePA"><option /><option>A</option><option>B</option><option>C</option><option>D</option><option>E</option><option>F</option><option>G</option></select></td><td><input name="sites15" id="sites15" type="text" placeholder="0" class="sitesOtherTotal lockThesePA" style="form-control input-sm sitesOtherTotal" /></td><td>
                           $ <input name="repairCost15" id="repairCost15" type="text" placeholder="0" class="repairCostTotal lockThesePA" style="form-control input-sm repairCostTotal" /></td><td>
                           $ <input name="insurance15" id="insurance15" type="text" placeholder="0" class="insuranceCostTotal lockThesePA" style="form-control input-sm insuranceCostTotal" /></td></tr><tr><td>Totals</td><td /><td><input name="sitesOtherTotal" id="sitesOtherTotal" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="repairCostTotal" id="repairCostTotal" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td><td>
                           $ <input name="insuranceCostTotal" id="insuranceCostTotal" type="text" placeholder="0" style="form-control input-sm" class="lockThesePA" /></td></tr></table><div>
This form is for damage assessment reporting purposes only.  In accordance with the State Emergency Management Plan, if a Mayor/County Judge determines that a situation is of such severity and magnitude that an effective response is beyond the affected jurisdiction’s capability to recover, a letter outlining the disaster impact and the need for supplemental State and/or Federal assistance must accompany this DSO.
</div><br /><h1><span class="label label-default">Master County Totals - General Notes</span></h1><br /><div class="form-group form-inline"><label class="control-label" for="notes">Notes:</label><space /><textarea name="notes" id="notes" style="form-control" /><!--<input name="notes" id="notes" type="text" style="form-control" Rows="5" TextMode="MultiLine"/>--></div><br /><h1><span class="label label-default">Master County Totals - Submitter Information</span></h1><br /><div class="form-group form-inline"><label class="control-label" for="submitterName">Name:</label><space /><input name="submitterName" id="submitterName" type="text" style="width:300px" /></div><div /><i> If you include your email, a confirmation email will be sent to you.</i><div class="form-group form-inline" /><div class="form-group form-inline"><label class="control-label" for="submitterEmail">Email:</label><space /><input name="submitterEmail" id="submitterEmail" type="text" style="width:300px" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="submitterEmailHidden">Copies Email:</label>
                     <space/>
                     <input name="submitterEmailHidden" id="submitterEmailHidden" type="text" style="width:300px"/>
                  </div>--><div style="display:nonea" id="countyEmailHide" class="form-group form-inline"><label class="control-label" for="countyEmail">County Email:</label><space /><input name="countyEmail" id="countyEmail" type="text" style="width:300px" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="countyEmailHidden">Copies County Email:</label>
                     <space/>
                     <input name="countyEmailHidden" id="countyEmailHidden" type="text" style="width:300px"/>
                  </div>--><div id="ddcEmailshow" class="form-group form-inline"><label class="control-label" for="ddcEmail">DDC Email:</label><space /><input name="ddcEmail" id="ddcEmail" type="text" style="width:300px" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="ddcEmailHidden">Copies DDC Email:</label>
                     <space/>
                     <input name="ddcEmailHidden" id="ddcEmailHidden" type="text" style="width:300px"/>
                  </div>--><div class="form-group form-inline"><label class="control-label" for="additionalEmails">Additional Emails:</label><space /><input name="additionalEmails" id="additionalEmails" type="text" style="width:300px" placeholder="Separate multiple emails with a comma (,)" onBlur="finalEmailCheck()" /></div><!--<div class="form-group form-inline" style="display:none">
                     <label class="control-label" for="additionalEmailsHidden">Copies Additional Emails:</label>
                     <space/>
                     <input name="additionalEmailsHidden" id="additionalEmailsHidden" type="text" style="width:300px"/>
                  </div>--><!--added--><!--*email --></div><!--added--><div name="emailSection" class="form-group form-inline" style="display:none"><span id="emailCheckbox"><datalink name="Email links" /></span><!--<input type="checkbox" name="fakeDataLink" value="Yes"/>-->
                    To
                  
                  <input type="text" name="emailTo" size="200" value="" recipient="true" subject="false" message="false" receiver="false" notification="false" /><br />
                    Subject
                  
                  <input type="text" name="emailSubject" size="40" value="" recipient="false" subject="true" message="false" receiver="false" notification="false" /><br />
                    Body
                  
                  <textarea name="emailBody" rows="4" cols="40" recipient="false" subject="false" message="true" receiver="false" notification="false" /></div><div style="display:none"><h1><span class="label label-default">WebEOC DSO Admin Features</span></h1><div class="form-group form-inline"><label for="socProcessed">Soc Processing Options:</label><space /><select name="socProcessed" class="form-control" id="socProcessed"><option>Not Processed</option><option>Processed</option></select></div><div class="form-group form-inline"><label class="control-label" for="hidden">Disable Online Editing:</label><space /><input name="dsoDisable" id="dsoDisable" type="checkbox" style="form-control input-sm" value="Yes" /></div><div class="form-group form-inline"><label class="control-label" for="hidden">Cancel:</label><space /><input name="hidden" id="hidden" type="checkbox" style="form-control input-sm" value="Yes" /></div></div></div><fieldset><div class="form-group form-inline"><input type="button" class="btn btn-info" id="notRealSave" value="Save" /><space /><cancelbutton id="cancelbtn" class="btn btn-danger" /><space /><pdflink type="button" class="btn btn-warning">PDF</pdflink><space /><span><a href="javascript:window.print()"><button type="button" class="btn btn-info btn">Print</button></a></span><div style="display:none" id="saveButton"><savebutton /></div><div style="border-style:none;background-color:white"><embedview style="display:nonea;border-style:none" width="0.1px" height="0.1px" id="auditEmbed" view="DSO Audit Input (DO NOT ASSIGN)" /></div></div></fieldset></form></div></body></html></view><view tablename="Core" name="Map (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="801abed9-9c75-45cd-a40e-364c3511d7ce" assignable="1"><html><head><title /><style type="text/css">
.hidden {
  display: none;
}
.page {}
.records {}
#nav {
  bottom: 0;
  left: 0;
  padding: 25px;
  z-index: 999;
  position: absolute;
}
body, html: {
  height: 100%;
  width: 100%;
}
div#content {
  width: 100%; height: 100%;
}
 @media print {
        .headerBar, .actionBar {
            visibility: hidden;
            display: none;
        } 
        .symbol {
            -webkit-print-color-adjust: exact; 
        }
        #mapContainer {
            width: 1600px;
            height: 1000px;
            top: 100pxpx;
            left: -300px;
        }
        #legend {
          position: absolute;
          bottom: 0px;
          left: 0px;
          z-index: 99999;
          background: black;
        }
    }
}
}
#countyNameInfoWindow {
            min-width: 100px;
        }
    #mapContainer{
        position: absolute;
       right:0px;
       left:0px;
        top:0px;
        bottom: 0px;
        z-index: 1;
    }
    .key path {
      display: none;
    }

    .key line {
      stroke: #000;
      shape-rendering: crispEdges;
    }
    #map{
        height: 100%;
        width: 100%;
    }
    .page{
      display:none;
    }
    #legend {
        background: white;
        padding: 10px;
        position: absolute;
        z-index: 99999;
        bottom: 0;
        right: 0;
        margin: 25px;
        border: 1px solid black;
        box-shadow: 5px 5px 5px #ccc;
        text-align: center;
      }

      #legend ul {
        list-style: none;
        padding-left: 0px;
        margin: 10px;
        width: 100%;
        text-align: left;

      }
      .symbol {
        width: 15px;
        height: 15px;
        display: block;
        margin-right: 10px;
        float: left;
        margin-top: 2px;
      }
    .legend {
        background: white;
        padding: 10px;
    }
    .legend img{
      height: 15px;
    }

    /* Filter Button Colors */
    #filterButtonNumber0 {
        background: #8B231E;
        color: white;
    }
    #filterButtonNumber1 {
        background: #fecc5c;
        color: white;
    }
    #filterButtonNumber2 {
        background: #31a354;
        color: white;
    }
    #filterButtonNumber3 {
        background: #e6550d;
        color: white;
    }

    #filterButtonNumber4 {
        background: #c51b8a;
        color: white;
    
}
.citiesFilledDSO{background-image: url("https://olympus.soc.texas.gov/images/bstar.png");
background-repeat: no-repeat;}
.countyLetters{background-image: url("https://olympus.soc.texas.gov/images/bmail.png");
background-repeat: no-repeat;}
</style><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /></head><div class="hidden"><incidentname /><boardname /><!--<embedview board="TDEM(F) - DSO API" view="Bubble Embed (DO NOT ASSIGN)" enablefooter="false" scrolling="false" width="1px" height="1px" id="bubble"></embedview>--></div><body><div class="page"><eocrepeatallrecords rowcount="0"><if test="1=0"><eocfield name="county" /><eocfield name="city" /><eocfield name="jurisdictionType" /></if><a name="records"><value-of select="@county" />|<value-of select="@city" />|<value-of select="@jurisdictionType" /></a></eocrepeatallrecords></div><div id="nav"><returnbutton class="btn btn-danger">Back</returnbutton><space /><input type="button" class="btn btn-primary" value="Print" onclick="window.print();" /></div><div id="mapContainer"><div id="map"></div></div><!--var colorCountyWithDSO = '#00FFFF';
var colorCouuntyWithoutDSO = '#e6eea5';
var lineColorWithNoDec ='#0c0d0c';
var lineColorLocalDec ='#ea2711';
var lineColorStateDec = '#1120ea';
var lineColorFedDec = '#18ea11';
var iconBothLetterAndCities ='https://olympus.soc.texas.gov/images/4-4.png';
var iconLetterOnly = 'https://olympus.soc.texas.gov/images/2-4.png';
var iconCitiesOnly ='https://olympus.soc.texas.gov/images/3-4.png';--><div id="legend"><strong>Legend</strong><ul><li><span class="symbol" id="symbolOne" style="background-color: #e6eea5;"></span><span id="legendOne"> County Without DSO</span></li><li><span class="symbol" id="symbolTwo" style="background-color: #00FFFF;"></span><span id="legendTwo"> County With DSO</span></li><li><span class="symbol" id="symbolThree" style="border-color: #ea2711; border-style: solid;"></span><span id="legendThree"> Local Dec</span></li><li><span class="symbol" id="symbolThree" style="border-color: #1120ea; border-style: solid;"></span><span id="legendThree"> State Dec</span></li><li><span class="symbol" id="symbolThree" style="border-color: #18ea11;  border-style: solid;"></span><span id="legendThree"> Federal Dec</span></li><li><span class="symbol countyLetters" id="symbolFour" style=""></span><span id="legendFour">Gov Letter</span></li><li><span id="symbolFive" class="symbol citiesFilledDSO"></span><span id="legendFive">Cities Filed DSO</span></li></ul></div></body><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js"></script><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js"></script><script type="text/javascript">
  var highestCountyCount, twentyPercent, fourtyPercent, sixtyPercent, eightyPercent;
      var script = {
        add: function(url) {
            var X = document.createElement('script')
            X.setAttribute("type", "text/javascript");
            X.setAttribute("src", url);
            document.getElementsByTagName("head")[0].appendChild(X);
        }
    };
    function defaultColor () {
        if (!window.parent.window.parent.colorOneHex) {
            window.parent.window.parent.colorOneHex = "#F5CDCC";
            window.parent.window.parent.colorTwoHex = "#D18785";
            window.parent.window.parent.colorThreeHex = "#AE4E4A";
            window.parent.window.parent.colorFourHex = "#8B231E";
            window.parent.window.parent.colorFiveHex = "#690400";
        }
    }
  function init() {
     defaultColor();

  }
 
    var map, layer;
    var countyRecords = [];
    //Contains County Names and  their KML Coordinates, Pathing functions

    var cityData = {
      countyCityList: [

],
countyCount: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    }
    var TXCountyData = {
        Names: ["Lipscomb", "Sherman", "Dallam", "Hansford", "Ochiltree", "Roberts", "Hemphill", "Hutchinson", "Hartley", "Moore", "Potter", "Carson", "Gray", "Wheeler", "Oldham", "Randall", "Armstrong", "Collingsworth", "Donley", "Deaf Smith", "Parmer", "Castro", "Swisher", "Briscoe", "Childress", "Hall", "Hardeman", "Wilbarger", "Motley", "Cottle", "Floyd", "Hale", "Lamb", "Bailey", "Foard", "Wichita", "Clay", "Montague", "Red River", "Grayson", "Cooke", "Lamar", "Fannin", "King", "Dickens", "Crosby", "Lubbock", "Archer", "Hockley", "Knox", "Baylor", "Cochran", "Bowie", "Delta", "Jack", "Wise", "Denton", "Hunt", "Collin", "Titus", "Haskell", "Throckmorton", "Young", "Kent", "Stonewall", "Franklin", "Garza", "Lynn", "Terry", "Yoakum", "Hopkins", "Morris", "Cass", "Camp", "Wood", "Palo Pinto", "Parker", "Tarrant", "Dallas", "Rockwall", "Rains", "Shackelford", "Jones", "Fisher", "Scurry", "Borden", "Dawson", "Stephens", "Gaines", "Upshur", "Marion", "Kaufman", "Van Zandt", "Harrison", "Smith", "Gregg", "Johnson", "Hood", "Ellis", "Taylor", "Howard", "Mitchell", "Eastland", "Callahan", "Martin", "Andrews", "Nolan", "Erath", "Rusk", "Panola", "Henderson", "Navarro", "Somervell", "Hill", "Comanche", "Bosque", "Cherokee", "Sterling", "Glasscock", "Midland", "Coke", "Winkler", "Ector", "Runnels", "Coleman", "Brown", "Anderson", "Hamilton", "Freestone", "Culberson", "Reeves", "Loving", "Hudspeth", "El Paso", "Shelby", "McLennan", "Nacogdoches", "Limestone", "Mills", "Coryell", "Tom Green", "Ward", "San Augustine", "Crane", "Upton", "Reagan", "Leon", "Sabine", "Houston", "Concho", "Irion", "Angelina", "Falls", "McCulloch", "San Saba", "Lampasas", "Trinity", "Pecos", "Robertson", "Bell", "Newton", "Jasper", "Polk", "Milam", "Jeff Davis", "Madison", "Schleicher", "Menard", "Crockett", "Tyler", "Walker", "Burnet", "Brazos", "Mason", "Llano", "Williamson", "San Jacinto", "Grimes", "Burleson", "Kimble", "Sutton", "Brewster", "Terrell", "Presidio", "Travis", "Montgomery", "Lee", "Hardin", "Gillespie", "Blanco", "Liberty", "Bastrop", "Washington", "Hays", "Edwards", "Val Verde", "Kerr", "Waller", "Orange", "Jefferson", "Fayette", "Harris", "Kendall", "Austin", "Real", "Caldwell", "Comal", "Colorado", "Bandera", "Chambers", "Guadalupe", "Fort Bend", "Gonzales", "Bexar", "Medina", "Lavaca", "Wharton", "Uvalde", "Kinney", "Brazoria", "Galveston", "Wilson", "De Witt", "Jackson", "Atascosa", "Matagorda", "Karnes", "Victoria", "Zavala", "Frio", "Maverick", "Goliad", "Live Oak", "Bee", "La Salle", "McMullen", "Dimmit", "Refugio", "Calhoun", "Webb", "San Patricio", "Aransas", "Duval", "Jim Wells", "Nueces", "Kleberg", "Jim Hogg", "Zapata", "Brooks", "Kenedy", "Starr", "Hidalgo", "Willacy", "Cameron"],
        Coordinates : ["-100.007273,36.493913,0 -100.001551,36.492555,0 -99.99755399999999,36.057591,0 -100.541014,36.058176,0 -100.549839,36.489479,0 -100.007273,36.493913,0", "-102.168032,36.054661,0 -102.165674,36.490234,0 -102.034658,36.492981,0 -101.620756,36.492031,0 -101.619944,36.054746,0 -102.168032,36.054661,0", "-102.168032,36.054661,0 -103.024048,36.056062,0 -103.027287,36.491592,0 -102.997401,36.49237,0 -102.165674,36.490234,0 -102.168032,36.054661,0", "-101.619944,36.054746,0 -101.620756,36.492031,0 -101.090102,36.48805,0 -101.082746,36.056299,0 -101.619944,36.054746,0", "-101.082746,36.056299,0 -101.090102,36.48805,0 -100.957341,36.489638,0 -100.549839,36.489479,0 -100.541014,36.058176,0 -101.082746,36.056299,0", "-101.094159,35.624696,0 -101.082746,36.056299,0 -100.541014,36.058176,0 -100.543594,35.625323,0 -101.086239,35.624769,0 -101.094159,35.624696,0", "-100.000392,35.618856,0 -100.543594,35.625323,0 -100.541014,36.058176,0 -99.99755399999999,36.057591,0 -99.99812300000002,35.883838,0 -100.000392,35.618856,0", "-101.094159,35.624696,0 -101.622712,35.625448,0 -101.619944,36.054746,0 -101.082746,36.056299,0 -101.094159,35.624696,0", "-103.022294,35.623648,0 -103.022612,35.742327,0 -103.024048,36.056062,0 -102.168032,36.054661,0 -102.160907,35.625026,0 -103.022294,35.623648,0", "-102.160907,35.625026,0 -102.168032,36.054661,0 -101.619944,36.054746,0 -101.622712,35.625448,0 -102.160907,35.625026,0", "-102.151789,35.181198,0 -102.160907,35.625026,0 -101.622712,35.625448,0 -101.62628,35.18236,0 -102.151789,35.181198,0", "-101.086239,35.624769,0 -101.087842,35.181747,0 -101.62628,35.18236,0 -101.622712,35.625448,0 -101.094159,35.624696,0 -101.086239,35.624769,0", "-101.087842,35.181747,0 -101.086239,35.624769,0 -100.543594,35.625323,0 -100.536511,35.181919,0 -101.087842,35.181747,0", "-100.536511,35.181919,0 -100.543594,35.625323,0 -100.000392,35.618856,0 -99.99474299999999,35.424622,0 -99.99757000000001,35.182235,0 -100.536511,35.181919,0", "-103.026151,35.177266,0 -103.022294,35.623648,0 -102.160907,35.625026,0 -102.151789,35.181198,0 -102.163035,35.180992,0 -103.026151,35.177266,0", "-101.994342,34.752519,0 -102.169936,34.748945,0 -102.163035,35.180992,0 -102.151789,35.181198,0 -101.62628,35.18236,0 -101.628425,34.753181,0 -101.994342,34.752519,0", "-101.088442,34.748545,0 -101.470581,34.74982,0 -101.628425,34.753181,0 -101.62628,35.18236,0 -101.087842,35.181747,0 -101.088442,34.748545,0", "-100.545227,34.746879,0 -100.536511,35.181919,0 -99.99757000000001,35.182235,0 -99.996455,35.031051,0 -99.99926000000001,34.747243,0 -100.418803,34.746037,0 -100.545227,34.746879,0", "-100.545227,34.746879,0 -100.944087,34.747068,0 -101.088442,34.748545,0 -101.087842,35.181747,0 -100.536511,35.181919,0 -100.545227,34.746879,0", "-102.518141,34.753329,0 -103.022657,34.745333,0 -103.025251,34.96478,0 -103.026151,35.177266,0 -102.163035,35.180992,0 -102.169936,34.748945,0 -102.518141,34.753329,0", "-103.029646,34.30782,0 -103.022657,34.745333,0 -102.518141,34.753329,0 -102.522072,34.30882,0 -102.609968,34.308243,0 -103.029646,34.30782,0", "-102.522072,34.30882,0 -102.518141,34.753329,0 -102.169936,34.748945,0 -101.994342,34.752519,0 -101.992991,34.310442,0 -102.086399,34.308355,0 -102.522072,34.30882,0", "-101.468912,34.3096,0 -101.561797,34.308845,0 -101.992991,34.310442,0 -101.994342,34.752519,0 -101.628425,34.753181,0 -101.470581,34.74982,0 -101.468912,34.3096,0", "-101.048392,34.312331,0 -101.468912,34.3096,0 -101.470581,34.74982,0 -101.088442,34.748545,0 -100.944087,34.747068,0 -100.947191,34.315923,0 -101.048392,34.312331,0", "-99.998154,34.312509,0 -100.420928,34.315385,0 -100.418803,34.746037,0 -99.99926000000001,34.747243,0 -99.99647500000002,34.562384,0 -99.998154,34.312509,0", "-100.420928,34.315385,0 -100.519381,34.314077,0 -100.947191,34.315923,0 -100.944087,34.747068,0 -100.545227,34.746879,0 -100.418803,34.746037,0 -100.420928,34.315385,0", "-99.99982499999999,34.229355,0 -99.998154,34.312509,0 -99.99647500000002,34.562384,0 -99.97248,34.561927,0 -99.94512,34.579635,0 -99.932287,34.579173,0 -99.880977,34.548242,0 -99.86094900000001,34.518695,0 -99.83030799999999,34.501846,0 -99.77806,34.444064,0 -99.685277,34.377521,0 -99.601817,34.368634,0 -99.585589,34.384934,0 -99.57821900000002,34.408989,0 -99.55423199999999,34.415256,0 -99.50250399999999,34.404145,0 -99.479806,34.3836,0 -99.47521000000002,34.075022,0 -99.490797,34.066454,0 -99.511245,34.076993,0 -99.52899100000001,34.07707,0 -99.54682899999999,34.062139,0 -99.560692,34.061738,0 -99.64870000000001,34.095672,0 -99.67259600000001,34.084834,0 -99.72025100000002,34.095865,0 -99.773521,34.090528,0 -99.99982499999999,34.229355,0", "-98.95327900000001,33.833267,0 -99.47134699999999,33.827703,0 -99.47521000000002,34.075022,0 -99.479806,34.3836,0 -99.438743,34.364783,0 -99.41032300000001,34.369186,0 -99.394522,34.396822,0 -99.393157,34.429071,0 -99.36456900000002,34.450272,0 -99.32365900000002,34.412787,0 -99.26753600000001,34.398365,0 -99.25446600000001,34.368294,0 -99.205849,34.332075,0 -99.196663,34.305206,0 -99.20495599999998,34.255731,0 -99.19083999999999,34.223822,0 -99.176512,34.212817,0 -99.1283,34.201556,0 -99.078784,34.208446,0 -99.03556999999999,34.199009,0 -98.996545,34.209584,0 -98.952857,34.194654,0 -98.95327900000001,33.833267,0", "-101.046427,33.836446,0 -101.048392,34.312331,0 -100.947191,34.315923,0 -100.519381,34.314077,0 -100.526735,33.840436,0 -101.046427,33.836446,0", "-99.99982499999999,34.229355,0 -100.013162,34.227535,0 -100.03206,34.238895,0 -100.055392,34.227977,0 -100.060088,33.841167,0 -100.526735,33.840436,0 -100.519381,34.314077,0 -100.420928,34.315385,0 -99.998154,34.312509,0 -99.99982499999999,34.229355,0", "-101.562827,33.835168,0 -101.561797,34.308845,0 -101.468912,34.3096,0 -101.048392,34.312331,0 -101.046427,33.836446,0 -101.562827,33.835168,0", "-102.081446,33.833361,0 -102.086399,34.308355,0 -101.992991,34.310442,0 -101.561797,34.308845,0 -101.562827,33.835168,0 -102.081446,33.833361,0", "-102.606165,33.830458,0 -102.609968,34.308243,0 -102.522072,34.30882,0 -102.086399,34.308355,0 -102.081446,33.833361,0 -102.606165,33.830458,0", "-103.033258,33.826182,0 -103.029646,34.30782,0 -102.609968,34.308243,0 -102.606165,33.830458,0 -103.033258,33.826182,0", "-99.47134699999999,33.827703,0 -99.46923200000002,33.73175,0 -99.484621,33.742736,0 -99.494395,33.767787,0 -99.52088500000001,33.77199,0 -99.52412,33.784735,0 -99.544575,33.783457,0 -99.54781800000001,33.796201,0 -99.568288,33.791277,0 -99.57984,33.80132,0 -99.59262699999999,33.785909,0 -99.603064,33.798223,0 -99.65049800000001,33.817925,0 -99.66544399999999,33.812058,0 -99.693583,33.824867,0 -99.703081,33.798519,0 -99.710268,33.798538,0 -99.717387,33.815834,0 -99.72629000000001,33.799488,0 -99.735652,33.808601,0 -99.75226199999999,33.798637,0 -99.753849,33.821372,0 -99.769345,33.814586,0 -99.808019,33.820567,0 -99.823508,33.814681,0 -99.83894999999998,33.833341,0 -99.99982900000001,33.832546,0 -100.002034,33.842548,0 -100.060088,33.841167,0 -100.055392,34.227977,0 -100.03206,34.238895,0 -100.013162,34.227535,0 -99.99982499999999,34.229355,0 -99.773521,34.090528,0 -99.72025100000002,34.095865,0 -99.67259600000001,34.084834,0 -99.64870000000001,34.095672,0 -99.560692,34.061738,0 -99.54682899999999,34.062139,0 -99.52899100000001,34.07707,0 -99.511245,34.076993,0 -99.490797,34.066454,0 -99.47521000000002,34.075022,0 -99.47134699999999,33.827703,0", "-98.95327900000001,33.833267,0 -98.952857,34.194654,0 -98.89168900000001,34.16091,0 -98.81141,34.146026,0 -98.77887699999999,34.132053,0 -98.70563199999999,34.130806,0 -98.682553,34.150089,0 -98.66206,34.147129,0 -98.62633,34.158528,0 -98.60758400000002,34.15149,0 -98.576668,34.142022,0 -98.55791399999998,34.105428,0 -98.49985199999999,34.066508,0 -98.44852,34.054469,0 -98.42167099999999,34.065925,0 -98.41861100000001,33.834011,0 -98.95327900000001,33.833267,0", "-98.41602399999999,33.470567,0 -98.41861100000001,33.834011,0 -98.42167099999999,34.065925,0 -98.407464,34.082549,0 -98.391282,34.087325,0 -98.38458300000001,34.115873,0 -98.35073,34.142213,0 -98.320814,34.139512,0 -98.27732500000001,34.122965,0 -98.173164,34.115462,0 -98.13718299999998,34.138525,0 -98.11518599999999,34.14908,0 -98.094441,34.134649,0 -98.11100500000002,34.069915,0 -98.086522,34.00541,0 -98.055874,33.989896,0 -98.02380599999998,33.987081,0 -97.982995,34.001382,0 -97.95053899999999,33.971258,0 -97.948067,33.959849,0 -97.963311,33.948748,0 -97.950997,33.932616,0 -97.97644200000002,33.912151,0 -97.97669400000001,33.902603,0 -97.979595,33.46964,0 -98.41602399999999,33.470567,0", "-97.979595,33.46964,0 -97.97669400000001,33.902603,0 -97.95504899999999,33.883579,0 -97.90937799999999,33.874123,0 -97.87006200000002,33.855214,0 -97.852857,33.857171,0 -97.790516,33.890557,0 -97.75666999999999,33.932197,0 -97.72932600000002,33.939392,0 -97.70456799999998,33.971645,0 -97.67137099999999,33.988711,0 -97.60048399999999,33.969536,0 -97.59265599999999,33.917985,0 -97.575971,33.902631,0 -97.55489,33.904005,0 -97.51850399999998,33.916872,0 -97.477831,33.907808,0 -97.47817000000001,33.434705,0 -97.91937499999999,33.436716,0 -97.97817600000001,33.439131,0 -97.979595,33.46964,0", "-95.30202900000001,33.383118,0 -95.30218800000002,33.88673,0 -95.28666200000002,33.887009,0 -95.27758300000002,33.918045,0 -95.26385000000002,33.897907,0 -95.251223,33.905129,0 -95.251521,33.93655,0 -95.23427099999999,33.964969,0 -95.148544,33.943653,0 -95.12819600000002,33.940976,0 -95.12690600000001,33.917252,0 -95.119452,33.912388,0 -95.095587,33.921845,0 -95.08249400000001,33.918561,0 -95.08994099999998,33.897023,0 -95.08382899999999,33.88857,0 -95.063703,33.917756,0 -95.063367,33.896802,0 -95.04308700000001,33.884553,0 -95.03758600000001,33.866559,0 -95.012996,33.870053,0 -94.98950400000001,33.85629,0 -94.96892699999999,33.866323,0 -94.96013000000001,33.848184,0 -94.94010900000002,33.840932,0 -94.94062,33.815916,0 -94.91845600000001,33.816305,0 -94.90876600000001,33.803587,0 -94.91409899999999,33.789705,0 -94.881856,33.775072,0 -94.858096,33.74943,0 -94.81937600000001,33.749514,0 -94.803437,33.739691,0 -94.78372200000001,33.75337,0 -94.764388,33.752951,0 -94.782242,33.742377,0 -94.783371,33.733775,0 -94.749983,33.736815,0 -94.762931,33.716906,0 -94.742323,33.719157,0 -94.75469099999999,33.707881,0 -94.74186500000002,33.701377,0 -94.74531899999998,33.337096,0 -94.75848000000001,33.329497,0 -94.77588299999998,33.332571,0 -94.81942600000001,33.381474,0 -94.85595600000002,33.386761,0 -94.88320900000001,33.399372,0 -94.91134,33.390144,0 -95.000072,33.39723,0 -95.035,33.384627,0 -95.059766,33.393438,0 -95.117057,33.392706,0 -95.14877300000001,33.387216,0 -95.169442,33.391279,0 -95.184991,33.380086,0 -95.201013,33.388047,0 -95.244525,33.378468,0 -95.30202900000001,33.383118,0", "-96.376077,33.40612,0 -96.830889,33.397272,0 -96.83103300000001,33.420946,0 -96.938163,33.425219,0 -96.93648800000001,33.94795,0 -96.92985,33.961873,0 -96.89873599999999,33.950128,0 -96.883133,33.924692,0 -96.87921899999999,33.884105,0 -96.86129699999999,33.861781,0 -96.84429,33.858135,0 -96.81439699999999,33.871871,0 -96.79787100000002,33.870051,0 -96.74910199999999,33.83184,0 -96.71195299999999,33.833973,0 -96.693657,33.848007,0 -96.67797899999998,33.904425,0 -96.666512,33.913644,0 -96.58476,33.896246,0 -96.61443899999999,33.863001,0 -96.60146899999999,33.843059,0 -96.562405,33.825523,0 -96.51084400000001,33.815787,0 -96.50101600000001,33.788193,0 -96.487641,33.778233,0 -96.41973,33.788428,0 -96.371083,33.740498,0 -96.376077,33.40612,0", "-96.938163,33.425219,0 -97.380235,33.434331,0 -97.47817000000001,33.434705,0 -97.477831,33.907808,0 -97.46306,33.902483,0 -97.45736100000001,33.890532,0 -97.453035,33.836315,0 -97.410416,33.820812,0 -97.36361599999998,33.831127,0 -97.3421,33.862018,0 -97.315252,33.870494,0 -97.31438199999998,33.895941,0 -97.272572,33.872676,0 -97.264202,33.858833,0 -97.25098,33.873073,0 -97.246357,33.894339,0 -97.21162699999999,33.90579,0 -97.188059,33.899306,0 -97.16446000000001,33.86325,0 -97.168886,33.847896,0 -97.195307,33.836262,0 -97.208613,33.819752,0 -97.189455,33.752874,0 -97.15276399999999,33.728774,0 -97.115852,33.726039,0 -97.090789,33.731776,0 -97.083754,33.742518,0 -97.087958,33.807675,0 -97.050314,33.823552,0 -97.07853599999999,33.837914,0 -97.082465,33.851204,0 -97.07118800000001,33.85683,0 -97.02588400000001,33.840664,0 -97.00613800000001,33.850616,0 -96.987995,33.876525,0 -96.988148,33.944303,0 -96.96847099999999,33.937421,0 -96.93648800000001,33.94795,0 -96.938163,33.425219,0", "-95.30202900000001,33.383118,0 -95.348242,33.392742,0 -95.40084800000001,33.424922,0 -95.614936,33.485669,0 -95.68233599999999,33.4823,0 -95.72140699999999,33.493324,0 -95.767116,33.493648,0 -95.851744,33.466683,0 -95.84680599999999,33.841138,0 -95.826221,33.843126,0 -95.795725,33.864774,0 -95.768762,33.851503,0 -95.76449700000001,33.879106,0 -95.76094200000001,33.893541,0 -95.74710899999998,33.903498,0 -95.69994999999999,33.894927,0 -95.63373300000001,33.920208,0 -95.61322400000002,33.920342,0 -95.615071,33.936794,0 -95.60631200000002,33.944656,0 -95.56301299999998,33.936177,0 -95.54655600000001,33.904138,0 -95.519814,33.906747,0 -95.52697000000002,33.89792,0 -95.547731,33.893262,0 -95.544274,33.885846,0 -95.51312199999998,33.89784,0 -95.49909100000001,33.881823,0 -95.46835899999999,33.886538,0 -95.451841,33.865859,0 -95.33027199999999,33.871025,0 -95.33646,33.89722,0 -95.30218800000002,33.88673,0 -95.30202900000001,33.383118,0", "-96.376077,33.40612,0 -96.371083,33.740498,0 -96.34785100000001,33.705632,0 -96.31653900000001,33.701905,0 -96.301051,33.714153,0 -96.28994299999999,33.762034,0 -96.27833800000001,33.773489,0 -96.212807,33.756793,0 -96.187286,33.758684,0 -96.169074,33.769457,0 -96.16157500000001,33.79833,0 -96.141677,33.82042,0 -96.154777,33.824044,0 -96.18098500000001,33.808534,0 -96.18338799999999,33.815892,0 -96.16946500000002,33.829083,0 -96.14922300000001,33.83569,0 -96.109702,33.829358,0 -96.09178,33.844677,0 -96.04823,33.841377,0 -96.027005,33.856121,0 -96.014324,33.844307,0 -96.002048,33.857078,0 -96.002872,33.873489,0 -95.99446500000001,33.875476,0 -95.977648,33.858051,0 -95.959017,33.865139,0 -95.94332300000001,33.890072,0 -95.933328,33.890629,0 -95.84680599999999,33.841138,0 -95.851744,33.466683,0 -95.85304800000002,33.410726,0 -96.28668,33.353184,0 -96.37524500000001,33.340536,0 -96.376077,33.40612,0", "-100.519322,33.390217,0 -100.526735,33.840436,0 -100.060088,33.841167,0 -100.002034,33.842548,0 -99.99982900000001,33.832546,0 -99.988282,33.395491,0 -100.519322,33.390217,0", "-100.519322,33.390217,0 -100.765661,33.396123,0 -101.045457,33.392096,0 -101.046427,33.836446,0 -100.526735,33.840436,0 -100.519322,33.390217,0", "-101.562771,33.390319,0 -101.562827,33.835168,0 -101.046427,33.836446,0 -101.045457,33.392096,0 -101.562771,33.390319,0", "-102.073545,33.389512,0 -102.081446,33.833361,0 -101.562827,33.835168,0 -101.562771,33.390319,0 -102.073545,33.389512,0", "-98.416933,33.398242,0 -98.95302,33.39846,0 -98.95327900000001,33.833267,0 -98.41861100000001,33.834011,0 -98.41602399999999,33.470567,0 -98.416933,33.398242,0", "-102.073545,33.389512,0 -102.588038,33.383173,0 -102.606165,33.830458,0 -102.081446,33.833361,0 -102.073545,33.389512,0", "-99.988282,33.395491,0 -99.99982900000001,33.832546,0 -99.83894999999998,33.833341,0 -99.823508,33.814681,0 -99.808019,33.820567,0 -99.769345,33.814586,0 -99.753849,33.821372,0 -99.75226199999999,33.798637,0 -99.735652,33.808601,0 -99.72629000000001,33.799488,0 -99.717387,33.815834,0 -99.710268,33.798538,0 -99.703081,33.798519,0 -99.693583,33.824867,0 -99.66544399999999,33.812058,0 -99.65049800000001,33.817925,0 -99.603064,33.798223,0 -99.59262699999999,33.785909,0 -99.57984,33.80132,0 -99.568288,33.791277,0 -99.54781800000001,33.796201,0 -99.544575,33.783457,0 -99.52412,33.784735,0 -99.52088500000001,33.77199,0 -99.494395,33.767787,0 -99.484621,33.742736,0 -99.46923200000002,33.73175,0 -99.46817899999999,33.399268,0 -99.988282,33.395491,0", "-98.95302,33.39846,0 -99.46817899999999,33.399268,0 -99.46923200000002,33.73175,0 -99.47134699999999,33.827703,0 -98.95327900000001,33.833267,0 -98.95302,33.39846,0", "-102.592448,33.383128,0 -103.043101,33.377831,0 -103.038736,33.565843,0 -103.033258,33.826182,0 -102.606165,33.830458,0 -102.588038,33.383173,0 -102.592448,33.383128,0", "-94.74531899999998,33.337096,0 -94.74186500000002,33.701377,0 -94.691197,33.6904,0 -94.668667,33.696649,0 -94.655689,33.692403,0 -94.64453500000001,33.677763,0 -94.668164,33.671571,0 -94.669636,33.666173,0 -94.658749,33.66385,0 -94.63897299999999,33.670218,0 -94.631946,33.684011,0 -94.601153,33.665721,0 -94.585314,33.679095,0 -94.578715,33.670585,0 -94.56093000000001,33.672027,0 -94.565416,33.663128,0 -94.58536700000001,33.662246,0 -94.588595,33.655563,0 -94.57667000000001,33.652271,0 -94.54562499999999,33.661736,0 -94.54213799999998,33.648362,0 -94.56240199999999,33.642944,0 -94.56235599999999,33.635651,0 -94.55040099999999,33.632809,0 -94.51819600000002,33.643125,0 -94.525261,33.621137,0 -94.51076499999999,33.630925,0 -94.500816,33.623163,0 -94.476691,33.632082,0 -94.436117,33.636561,0 -94.436536,33.616961,0 -94.451757,33.604464,0 -94.44353200000001,33.596621,0 -94.42867,33.597259,0 -94.406773,33.573604,0 -94.393619,33.575077,0 -94.37931399999999,33.593445,0 -94.37083,33.59016,0 -94.372508,33.572781,0 -94.395465,33.560421,0 -94.370959,33.547802,0 -94.328951,33.573255,0 -94.302582,33.557054,0 -94.29902,33.579973,0 -94.279183,33.589453,0 -94.27227800000001,33.584726,0 -94.274742,33.561857,0 -94.237433,33.592543,0 -94.223235,33.585841,0 -94.23556399999998,33.561656,0 -94.21108,33.558108,0 -94.20554099999998,33.5852,0 -94.15971,33.593894,0 -94.155361,33.567207,0 -94.098894,33.57312,0 -94.08684600000001,33.584076,0 -94.061623,33.577335,0 -94.03611600000001,33.556035,0 -94.036692,33.270453,0 -94.06863,33.298151,0 -94.08143999999999,33.296075,0 -94.09568500000002,33.304105,0 -94.12586,33.297906,0 -94.161292,33.309746,0 -94.215249,33.294251,0 -94.22918799999999,33.276719,0 -94.230103,33.256707,0 -94.25712699999998,33.24804,0 -94.301349,33.259819,0 -94.374799,33.255248,0 -94.41143700000001,33.265699,0 -94.42710900000002,33.285154,0 -94.453057,33.283677,0 -94.47779300000001,33.291706,0 -94.56878299999998,33.264156,0 -94.584576,33.250316,0 -94.61760499999998,33.249595,0 -94.64103600000001,33.260722,0 -94.66098700000001,33.282617,0 -94.695718,33.322052,0 -94.72408500000002,33.31744,0 -94.74531899999998,33.337096,0", "-95.855589,33.226831,0 -95.85304800000002,33.410726,0 -95.851744,33.466683,0 -95.767116,33.493648,0 -95.72140699999999,33.493324,0 -95.68233599999999,33.4823,0 -95.614936,33.485669,0 -95.40084800000001,33.424922,0 -95.348242,33.392742,0 -95.30202900000001,33.383118,0 -95.30203700000001,33.38266,0 -95.31382399999998,33.369935,0 -95.34683,33.360802,0 -95.41166699999999,33.371613,0 -95.46107599999999,33.354447,0 -95.50992100000001,33.346806,0 -95.59411399999999,33.355991,0 -95.65368499999998,33.313175,0 -95.67558200000001,33.304894,0 -95.710641,33.307125,0 -95.75206900000001,33.293183,0 -95.7924,33.248212,0 -95.855589,33.226831,0", "-98.41983999999999,33.007333,0 -98.416933,33.398242,0 -98.41602399999999,33.470567,0 -97.979595,33.46964,0 -97.97817600000001,33.439131,0 -97.91937499999999,33.436716,0 -97.91712300000002,33.002459,0 -98.05226,33.003023,0 -98.41983999999999,33.007333,0", "-97.91712300000002,33.002459,0 -97.91937499999999,33.436716,0 -97.47817000000001,33.434705,0 -97.380235,33.434331,0 -97.38982300000002,32.996634,0 -97.54023300000002,32.998606,0 -97.91712300000002,33.002459,0", "-96.83881100000001,32.994999,0 -97.02978899999999,32.995572,0 -97.02833200000001,32.990525,0 -97.38982300000002,32.996634,0 -97.380235,33.434331,0 -96.938163,33.425219,0 -96.83103300000001,33.420946,0 -96.830889,33.397272,0 -96.83881100000001,32.994999,0", "-95.864897,32.986778,0 -95.93718800000002,32.986187,0 -95.97246699999998,32.895401,0 -95.96759900000001,32.872899,0 -95.940842,32.850988,0 -96.079313,32.846724,0 -96.293814,32.85163,0 -96.290266,32.985769,0 -96.28668,33.353184,0 -95.85304800000002,33.410726,0 -95.855589,33.226831,0 -95.864897,32.986778,0", "-96.83881100000001,32.994999,0 -96.830889,33.397272,0 -96.376077,33.40612,0 -96.37524500000001,33.340536,0 -96.28668,33.353184,0 -96.290266,32.985769,0 -96.51779199999999,32.989295,0 -96.83881100000001,32.994999,0", "-94.81398299999999,32.988377,0 -94.87969699999998,33.022341,0 -94.924178,33.063531,0 -94.95118600000001,33.0784,0 -95.03878899999998,33.080417,0 -95.12810899999998,33.036861,0 -95.117057,33.392706,0 -95.059766,33.393438,0 -95.035,33.384627,0 -95.000072,33.39723,0 -94.91134,33.390144,0 -94.88320900000001,33.399372,0 -94.85595600000002,33.386761,0 -94.81942600000001,33.381474,0 -94.81398299999999,32.988377,0", "-99.98889399999999,32.959079,0 -99.988282,33.395491,0 -99.46817899999999,33.399268,0 -99.465662,32.961017,0 -99.60563499999999,32.959766,0 -99.98889399999999,32.959079,0", "-99.09612300000001,32.955049,0 -99.465662,32.961017,0 -99.46817899999999,33.399268,0 -98.95302,33.39846,0 -98.952862,32.9561,0 -99.09612300000001,32.955049,0", "-98.56693199999999,32.951913,0 -98.952862,32.9561,0 -98.95302,33.39846,0 -98.416933,33.398242,0 -98.41983999999999,33.007333,0 -98.419833,32.953158,0 -98.56693199999999,32.951913,0", "-101.041861,32.955233,0 -101.045457,33.392096,0 -100.765661,33.396123,0 -100.519322,33.390217,0 -100.523041,32.957423,0 -100.659168,32.957175,0 -101.041861,32.955233,0", "-100.523041,32.957423,0 -100.519322,33.390217,0 -99.988282,33.395491,0 -99.98889399999999,32.959079,0 -100.149085,32.958524,0 -100.523041,32.957423,0", "-95.14867799999999,33.014179,0 -95.168538,32.967164,0 -95.309732,32.968044,0 -95.30203700000001,33.38266,0 -95.30202900000001,33.383118,0 -95.244525,33.378468,0 -95.201013,33.388047,0 -95.184991,33.380086,0 -95.169442,33.391279,0 -95.14877300000001,33.387216,0 -95.117057,33.392706,0 -95.12810899999998,33.036861,0 -95.14867799999999,33.014179,0", "-101.173586,32.952589,0 -101.56076,32.956601,0 -101.562771,33.390319,0 -101.045457,33.392096,0 -101.041861,32.955233,0 -101.173586,32.952589,0", "-101.68649,32.955269,0 -102.071484,32.95621,0 -102.073545,33.389512,0 -101.562771,33.390319,0 -101.56076,32.956601,0 -101.68649,32.955269,0", "-102.195567,32.954348,0 -102.588698,32.95203,0 -102.592448,33.383128,0 -102.588038,33.383173,0 -102.073545,33.389512,0 -102.071484,32.95621,0 -102.195567,32.954348,0", "-102.588698,32.95203,0 -103.049331,32.953639,0 -103.043101,33.377831,0 -102.592448,33.383128,0 -102.588698,32.95203,0", "-95.309732,32.968044,0 -95.66110999999998,32.969185,0 -95.66353599999999,32.984772,0 -95.864897,32.986778,0 -95.855589,33.226831,0 -95.7924,33.248212,0 -95.75206900000001,33.293183,0 -95.710641,33.307125,0 -95.67558200000001,33.304894,0 -95.65368499999998,33.313175,0 -95.59411399999999,33.355991,0 -95.50992100000001,33.346806,0 -95.46107599999999,33.354447,0 -95.41166699999999,33.371613,0 -95.34683,33.360802,0 -95.31382399999998,33.369935,0 -95.30203700000001,33.38266,0 -95.309732,32.968044,0", "-94.655028,32.884521,0 -94.70317899999999,32.88449,0 -94.73141599999998,32.912244,0 -94.78659300000001,32.955218,0 -94.81398299999999,32.988377,0 -94.81942600000001,33.381474,0 -94.77588299999998,33.332571,0 -94.75848000000001,33.329497,0 -94.74531899999998,33.337096,0 -94.72408500000002,33.31744,0 -94.695718,33.322052,0 -94.66098700000001,33.282617,0 -94.655028,32.884521,0", "-94.03893200000002,33.023422,0 -94.041785,32.882485,0 -94.655028,32.884521,0 -94.66098700000001,33.282617,0 -94.64103600000001,33.260722,0 -94.61760499999998,33.249595,0 -94.584576,33.250316,0 -94.56878299999998,33.264156,0 -94.47779300000001,33.291706,0 -94.453057,33.283677,0 -94.42710900000002,33.285154,0 -94.41143700000001,33.265699,0 -94.374799,33.255248,0 -94.301349,33.259819,0 -94.25712699999998,33.24804,0 -94.230103,33.256707,0 -94.22918799999999,33.276719,0 -94.215249,33.294251,0 -94.161292,33.309746,0 -94.12586,33.297906,0 -94.09568500000002,33.304105,0 -94.08143999999999,33.296075,0 -94.06863,33.298151,0 -94.036692,33.270453,0 -94.03893200000002,33.023422,0", "-94.73141599999998,32.912244,0 -95.149328,32.914383,0 -95.14867799999999,33.014179,0 -95.12810899999998,33.036861,0 -95.03878899999998,33.080417,0 -94.95118600000001,33.0784,0 -94.924178,33.063531,0 -94.87969699999998,33.022341,0 -94.81398299999999,32.988377,0 -94.78659300000001,32.955218,0 -94.73141599999998,32.912244,0", "-95.591217,32.691205,0 -95.607552,32.711441,0 -95.62776299999999,32.720881,0 -95.66110999999998,32.969185,0 -95.309732,32.968044,0 -95.168538,32.967164,0 -95.14867799999999,33.014179,0 -95.149328,32.914383,0 -95.15450500000002,32.570812,0 -95.19207400000001,32.544133,0 -95.215344,32.564728,0 -95.28244600000001,32.572101,0 -95.295089,32.588587,0 -95.32431,32.601193,0 -95.390902,32.599358,0 -95.506446,32.618124,0 -95.524901,32.648491,0 -95.591217,32.691205,0", "-98.575239,32.520862,0 -98.56693199999999,32.951913,0 -98.419833,32.953158,0 -98.41983999999999,33.007333,0 -98.05226,33.003023,0 -98.06043099999999,32.558339,0 -98.06301600000001,32.519197,0 -98.46972899999999,32.521767,0 -98.575239,32.520862,0", "-98.06043099999999,32.558339,0 -98.05226,33.003023,0 -97.91712300000002,33.002459,0 -97.54023300000002,32.998606,0 -97.54619099999999,32.559775,0 -97.617605,32.555373,0 -98.06043099999999,32.558339,0", "-97.03147300000001,32.557044,0 -97.08971800000002,32.556728,0 -97.54619099999999,32.559775,0 -97.54023300000002,32.998606,0 -97.38982300000002,32.996634,0 -97.02833200000001,32.990525,0 -97.03147300000001,32.557044,0", "-97.03147300000001,32.557044,0 -97.02833200000001,32.990525,0 -97.02978899999999,32.995572,0 -96.83881100000001,32.994999,0 -96.51779199999999,32.989295,0 -96.519645,32.822758,0 -96.518371,32.553393,0 -96.535828,32.552558,0 -97.03147300000001,32.557044,0", "-96.293814,32.85163,0 -96.294501,32.825222,0 -96.519645,32.822758,0 -96.51779199999999,32.989295,0 -96.290266,32.985769,0 -96.293814,32.85163,0", "-95.62776299999999,32.720881,0 -95.66481999999999,32.721842,0 -95.713962,32.751515,0 -95.760274,32.763275,0 -95.78119400000001,32.780464,0 -95.857711,32.779174,0 -95.91297900000001,32.80852,0 -95.940842,32.850988,0 -95.96759900000001,32.872899,0 -95.97246699999998,32.895401,0 -95.93718800000002,32.986187,0 -95.864897,32.986778,0 -95.66353599999999,32.984772,0 -95.66110999999998,32.969185,0 -95.62776299999999,32.720881,0", "-99.09885300000001,32.523041,0 -99.114081,32.522705,0 -99.61652100000001,32.518682,0 -99.60563499999999,32.959766,0 -99.465662,32.961017,0 -99.09612300000001,32.955049,0 -99.09885300000001,32.523041,0", "-99.626852,32.518717,0 -99.629003,32.524191,0 -100.151524,32.520592,0 -100.149085,32.958524,0 -99.98889399999999,32.959079,0 -99.60563499999999,32.959766,0 -99.61652100000001,32.518682,0 -99.626852,32.518717,0", "-100.151524,32.520592,0 -100.663719,32.521939,0 -100.659168,32.957175,0 -100.523041,32.957423,0 -100.149085,32.958524,0 -100.151524,32.520592,0", "-100.663719,32.521939,0 -101.178669,32.523222,0 -101.173586,32.952589,0 -101.041861,32.955233,0 -100.659168,32.957175,0 -100.663719,32.521939,0", "-101.178669,32.523222,0 -101.69037,32.522675,0 -101.68649,32.955269,0 -101.56076,32.956601,0 -101.173586,32.952589,0 -101.178669,32.523222,0", "-101.69037,32.522675,0 -102.205934,32.522468,0 -102.195567,32.954348,0 -102.071484,32.95621,0 -101.68649,32.955269,0 -101.69037,32.522675,0", "-98.575239,32.520862,0 -99.09885300000001,32.523041,0 -99.09612300000001,32.955049,0 -98.952862,32.9561,0 -98.56693199999999,32.951913,0 -98.575239,32.520862,0", "-103.060018,32.515546,0 -103.049331,32.953639,0 -102.588698,32.95203,0 -102.195567,32.954348,0 -102.205934,32.522468,0 -103.060018,32.515546,0", "-95.15450500000002,32.570812,0 -95.149328,32.914383,0 -94.73141599999998,32.912244,0 -94.70317899999999,32.88449,0 -94.69492400000002,32.828019,0 -94.70607099999999,32.816682,0 -94.70474400000001,32.795641,0 -94.70245599999998,32.658253,0 -94.72004200000001,32.656334,0 -94.742336,32.665581,0 -94.76792599999999,32.658096,0 -94.828598,32.589262,0 -94.991094,32.535888,0 -95.005842,32.526504,0 -95.022909,32.549604,0 -95.03053900000001,32.540816,0 -95.072929,32.542212,0 -95.08734900000002,32.555608,0 -95.134653,32.548067,0 -95.15450500000002,32.570812,0", "-94.041785,32.882485,0 -94.04038300000001,32.694958,0 -94.082376,32.691048,0 -94.12807700000001,32.715319,0 -94.14363400000001,32.733915,0 -94.17187900000002,32.721224,0 -94.179051,32.697871,0 -94.19159399999998,32.698054,0 -94.227789,32.710848,0 -94.244192,32.748177,0 -94.274405,32.753353,0 -94.29669199999999,32.732121,0 -94.388425,32.693807,0 -94.505861,32.692704,0 -94.70474400000001,32.795641,0 -94.70607099999999,32.816682,0 -94.69492400000002,32.828019,0 -94.70317899999999,32.88449,0 -94.655028,32.884521,0 -94.041785,32.882485,0", "-96.44897,32.364321,0 -96.44033400000001,32.411927,0 -96.45465499999999,32.43198,0 -96.493574,32.461459,0 -96.503615,32.480463,0 -96.506652,32.535255,0 -96.52548899999999,32.539936,0 -96.535828,32.552558,0 -96.518371,32.553393,0 -96.519645,32.822758,0 -96.294501,32.825222,0 -96.293814,32.85163,0 -96.079313,32.846724,0 -96.07280400000001,32.360552,0 -96.44897,32.364321,0", "-96.07280400000001,32.360552,0 -96.079313,32.846724,0 -95.940842,32.850988,0 -95.91297900000001,32.80852,0 -95.857711,32.779174,0 -95.78119400000001,32.780464,0 -95.760274,32.763275,0 -95.713962,32.751515,0 -95.66481999999999,32.721842,0 -95.62776299999999,32.720881,0 -95.607552,32.711441,0 -95.591217,32.691205,0 -95.58860199999998,32.483181,0 -95.55632900000001,32.44726,0 -95.51017,32.41716,0 -95.48744100000002,32.386605,0 -95.44884999999998,32.358149,0 -96.07280400000001,32.360552,0", "-94.04038300000001,32.694958,0 -94.03541800000001,32.389381,0 -94.349509,32.328167,0 -94.382057,32.344398,0 -94.393547,32.36642,0 -94.427171,32.367625,0 -94.43688300000001,32.360804,0 -94.484065,32.385934,0 -94.500843,32.394967,0 -94.518208,32.387594,0 -94.554571,32.404412,0 -94.57289,32.398903,0 -94.604401,32.391285,0 -94.651132,32.399891,0 -94.700329,32.428671,0 -94.70245599999998,32.658253,0 -94.70474400000001,32.795641,0 -94.505861,32.692704,0 -94.388425,32.693807,0 -94.29669199999999,32.732121,0 -94.274405,32.753353,0 -94.244192,32.748177,0 -94.227789,32.710848,0 -94.19159399999998,32.698054,0 -94.179051,32.697871,0 -94.17187900000002,32.721224,0 -94.14363400000001,32.733915,0 -94.12807700000001,32.715319,0 -94.082376,32.691048,0 -94.04038300000001,32.694958,0", "-94.98915599999999,32.142925,0 -95.46344499999999,32.139729,0 -95.47687999999999,32.151222,0 -95.46428400000001,32.201368,0 -95.480925,32.233062,0 -95.450917,32.283868,0 -95.44884999999998,32.358149,0 -95.48744100000002,32.386605,0 -95.51017,32.41716,0 -95.55632900000001,32.44726,0 -95.58860199999998,32.483181,0 -95.591217,32.691205,0 -95.524901,32.648491,0 -95.506446,32.618124,0 -95.390902,32.599358,0 -95.32431,32.601193,0 -95.295089,32.588587,0 -95.28244600000001,32.572101,0 -95.215344,32.564728,0 -95.19207400000001,32.544133,0 -95.15450500000002,32.570812,0 -95.134653,32.548067,0 -95.08734900000002,32.555608,0 -95.072929,32.542212,0 -95.03053900000001,32.540816,0 -95.022909,32.549604,0 -95.005842,32.526504,0 -94.991094,32.535888,0 -94.99065899999998,32.369806,0 -94.98915599999999,32.142925,0", "-94.99065899999998,32.369806,0 -94.991094,32.535888,0 -94.828598,32.589262,0 -94.76792599999999,32.658096,0 -94.742336,32.665581,0 -94.72004200000001,32.656334,0 -94.70245599999998,32.658253,0 -94.700329,32.428671,0 -94.651132,32.399891,0 -94.604401,32.391285,0 -94.57289,32.398903,0 -94.58286200000001,32.36424,0 -94.59891500000002,32.359987,0 -94.672107,32.370762,0 -94.99065899999998,32.369806,0", "-97.61380400000002,32.210263,0 -97.61422399999999,32.323328,0 -97.617605,32.555373,0 -97.54619099999999,32.559775,0 -97.08971800000002,32.556728,0 -97.08530500000001,32.275827,0 -97.463843,32.18967,0 -97.46517,32.181949,0 -97.501846,32.169544,0 -97.50250200000002,32.148583,0 -97.522659,32.144467,0 -97.56132700000001,32.15443,0 -97.56959000000001,32.18561,0 -97.59565299999998,32.183435,0 -97.58211,32.201383,0 -97.58680200000001,32.20741,0 -97.61380400000002,32.210263,0", "-97.94296900000001,32.239987,0 -98.06301600000001,32.519197,0 -98.06043099999999,32.558339,0 -97.617605,32.555373,0 -97.61422399999999,32.323328,0 -97.78348699999999,32.323581,0 -97.94296900000001,32.239987,0", "-97.08530500000001,32.275827,0 -97.08971800000002,32.556728,0 -97.03147300000001,32.557044,0 -96.535828,32.552558,0 -96.52548899999999,32.539936,0 -96.506652,32.535255,0 -96.503615,32.480463,0 -96.493574,32.461459,0 -96.45465499999999,32.43198,0 -96.44033400000001,32.411927,0 -96.44897,32.364321,0 -96.430995,32.341414,0 -96.41202,32.340816,0 -96.39730900000001,32.329856,0 -96.89852199999999,32.086155,0 -96.939295,32.066746,0 -97.08530500000001,32.275827,0", "-99.628323,32.084436,0 -99.71051900000001,32.084677,0 -100.157187,32.084484,0 -100.151524,32.520592,0 -99.629003,32.524191,0 -99.626852,32.518717,0 -99.628323,32.084436,0", "-101.266952,32.091142,0 -101.694764,32.090537,0 -101.69037,32.522675,0 -101.178669,32.523222,0 -101.172864,32.092619,0 -101.266952,32.091142,0", "-100.669855,32.088069,0 -100.815298,32.085286,0 -101.172864,32.092619,0 -101.178669,32.523222,0 -100.663719,32.521939,0 -100.669855,32.088069,0", "-99.12164,32.08345,0 -99.114081,32.522705,0 -99.09885300000001,32.523041,0 -98.575239,32.520862,0 -98.46972899999999,32.521767,0 -98.469032,32.30303,0 -98.55224,32.260375,0 -98.731382,32.1741,0 -98.75743,32.170285,0 -98.76679899999999,32.159448,0 -98.92427100000001,32.082196,0 -99.12164,32.08345,0", "-99.194098,32.08399,0 -99.628323,32.084436,0 -99.626852,32.518717,0 -99.61652100000001,32.518682,0 -99.114081,32.522705,0 -99.12164,32.08345,0 -99.194098,32.08399,0", "-101.774768,32.088392,0 -102.211778,32.087044,0 -102.205934,32.522468,0 -101.69037,32.522675,0 -101.694764,32.090537,0 -101.774768,32.088392,0", "-103.060018,32.515546,0 -102.205934,32.522468,0 -102.211778,32.087044,0 -102.291232,32.085003,0 -102.79491,32.086402,0 -103.055641,32.085117,0 -103.060018,32.515546,0", "-100.157187,32.084484,0 -100.235053,32.084345,0 -100.669855,32.088069,0 -100.663719,32.521939,0 -100.151524,32.520592,0 -100.157187,32.084484,0", "-98.00531700000002,32.021799,0 -98.20435700000002,31.917976,0 -98.25205,31.983488,0 -98.326308,31.945397,0 -98.55224,32.260375,0 -98.469032,32.30303,0 -98.46972899999999,32.521767,0 -98.06301600000001,32.519197,0 -97.94296900000001,32.239987,0 -97.944289,32.230893,0 -97.86500100000001,32.09538,0 -98.00531700000002,32.021799,0", "-94.98737,31.851551,0 -94.98919299999999,31.934743,0 -94.979176,31.956671,0 -94.98603500000002,31.976612,0 -94.98915599999999,32.142925,0 -94.99065899999998,32.369806,0 -94.672107,32.370762,0 -94.59891500000002,32.359987,0 -94.58286200000001,32.36424,0 -94.57289,32.398903,0 -94.554571,32.404412,0 -94.518208,32.387594,0 -94.500843,32.394967,0 -94.484065,32.385934,0 -94.507442,32.314957,0 -94.52236599999999,32.303356,0 -94.52580699999999,32.28481,0 -94.57521700000001,32.205028,0 -94.58659400000002,32.10924,0 -94.60043399999999,32.064697,0 -94.595338,31.971752,0 -94.50826100000001,31.971643,0 -94.50788800000001,31.921839,0 -94.473547,31.88681,0 -94.457213,31.849459,0 -94.98737,31.851551,0", "-94.50826100000001,31.971643,0 -94.595338,31.971752,0 -94.60043399999999,32.064697,0 -94.58659400000002,32.10924,0 -94.57521700000001,32.205028,0 -94.52580699999999,32.28481,0 -94.52236599999999,32.303356,0 -94.507442,32.314957,0 -94.484065,32.385934,0 -94.43688300000001,32.360804,0 -94.427171,32.367625,0 -94.393547,32.36642,0 -94.382057,32.344398,0 -94.349509,32.328167,0 -94.03541800000001,32.389381,0 -94.03495499999998,32.199609,0 -94.03525600000002,31.994679,0 -94.01007799999999,31.989301,0 -94.00458500000002,31.978109,0 -94.50826100000001,31.971643,0", "-95.43089599999999,32.083653,0 -96.049691,32.015788,0 -96.06341000000001,32.033609,0 -96.05720700000002,32.060769,0 -96.062434,32.086501,0 -96.10078,32.08829,0 -96.112545,32.102385,0 -96.10540500000001,32.160076,0 -96.11474399999999,32.168612,0 -96.13411499999999,32.160152,0 -96.145903,32.162837,0 -96.169517,32.178694,0 -96.146422,32.219418,0 -96.187539,32.209866,0 -96.19000300000002,32.226372,0 -96.20379699999998,32.221363,0 -96.24499,32.256037,0 -96.261539,32.250201,0 -96.285809,32.264685,0 -96.284558,32.291551,0 -96.29643,32.304711,0 -96.32731500000001,32.305718,0 -96.385239,32.332664,0 -96.39730900000001,32.329856,0 -96.41202,32.340816,0 -96.430995,32.341414,0 -96.44897,32.364321,0 -96.07280400000001,32.360552,0 -95.44884999999998,32.358149,0 -95.450917,32.283868,0 -95.480925,32.233062,0 -95.46428400000001,32.201368,0 -95.47687999999999,32.151222,0 -95.46344499999999,32.139729,0 -95.461034,32.115446,0 -95.43089599999999,32.083653,0", "-96.502214,31.80624900000001,0 -96.72200100000002,31.824748,0 -96.89852199999999,32.086155,0 -96.39730900000001,32.329856,0 -96.385239,32.332664,0 -96.32731500000001,32.305718,0 -96.29643,32.304711,0 -96.284558,32.291551,0 -96.285809,32.264685,0 -96.261539,32.250201,0 -96.24499,32.256037,0 -96.20379699999998,32.221363,0 -96.19000300000002,32.226372,0 -96.187539,32.209866,0 -96.146422,32.219418,0 -96.169517,32.178694,0 -96.145903,32.162837,0 -96.13411499999999,32.160152,0 -96.11474399999999,32.168612,0 -96.10540500000001,32.160076,0 -96.112545,32.102385,0 -96.10078,32.08829,0 -96.062434,32.086501,0 -96.05720700000002,32.060769,0 -96.06341000000001,32.033609,0 -96.049691,32.015788,0 -96.502214,31.80624900000001,0", "-97.86500100000001,32.09538,0 -97.944289,32.230893,0 -97.94296900000001,32.239987,0 -97.78348699999999,32.323581,0 -97.61422399999999,32.323328,0 -97.61380400000002,32.210263,0 -97.62720899999999,32.215104,0 -97.86500100000001,32.09538,0", "-97.27661600000002,31.754241,0 -97.312254,31.767878,0 -97.32020500000002,31.788145,0 -97.28290300000001,31.82329500000001,0 -97.28176700000002,31.841062,0 -97.332374,31.843644,0 -97.34536799999999,31.858553,0 -97.377321,31.871164,0 -97.37271299999999,31.896603,0 -97.42602900000001,31.933875,0 -97.41684300000001,31.950999,0 -97.384631,31.978079,0 -97.415851,31.998415,0 -97.43666500000001,32.023518,0 -97.47304299999999,32.01841,0 -97.48661599999998,32.033768,0 -97.494658,32.0531,0 -97.47811,32.097879,0 -97.49162200000001,32.132836,0 -97.457174,32.160794,0 -97.46517,32.181949,0 -97.463843,32.18967,0 -97.08530500000001,32.275827,0 -96.939295,32.066746,0 -96.89852199999999,32.086155,0 -96.72200100000002,31.824748,0 -96.93414199999999,31.720758,0 -97.038121,31.866383,0 -97.27661600000002,31.754241,0", "-98.461287,31.691423,0 -98.495605,31.727018,0 -98.67148900000001,31.704606,0 -98.92427100000001,32.082196,0 -98.76679899999999,32.159448,0 -98.75743,32.170285,0 -98.731382,32.1741,0 -98.55224,32.260375,0 -98.326308,31.945397,0 -98.25205,31.983488,0 -98.20435700000002,31.917976,0 -98.15854,31.844711,0 -98.461287,31.691423,0", "-97.75978499999999,31.679142,0 -98.00531700000002,32.021799,0 -97.86500100000001,32.09538,0 -97.62720899999999,32.215104,0 -97.61380400000002,32.210263,0 -97.58680200000001,32.20741,0 -97.58211,32.201383,0 -97.59565299999998,32.183435,0 -97.56959000000001,32.18561,0 -97.56132700000001,32.15443,0 -97.522659,32.144467,0 -97.50250200000002,32.148583,0 -97.501846,32.169544,0 -97.46517,32.181949,0 -97.457174,32.160794,0 -97.49162200000001,32.132836,0 -97.47811,32.097879,0 -97.494658,32.0531,0 -97.48661599999998,32.033768,0 -97.47304299999999,32.01841,0 -97.43666500000001,32.023518,0 -97.415851,31.998415,0 -97.384631,31.978079,0 -97.41684300000001,31.950999,0 -97.42602900000001,31.933875,0 -97.37271299999999,31.896603,0 -97.377321,31.871164,0 -97.34536799999999,31.858553,0 -97.332374,31.843644,0 -97.28176700000002,31.841062,0 -97.28290300000001,31.82329500000001,0 -97.32020500000002,31.788145,0 -97.312254,31.767878,0 -97.27661600000002,31.754241,0 -97.60250800000001,31.592824,0 -97.69216400000002,31.71017,0 -97.75978499999999,31.679142,0", "-94.87386900000001,31.531641,0 -94.999534,31.43908,0 -95.04251100000002,31.447852,0 -95.05797699999999,31.467276,0 -95.10294500000001,31.478855,0 -95.10718799999999,31.488638,0 -95.09875700000001,31.512487,0 -95.14087299999999,31.554082,0 -95.143613,31.57110700000001,0 -95.177198,31.585352,0 -95.217589,31.575665,0 -95.244827,31.57911,0 -95.26460299999998,31.59045800000001,0 -95.26726600000001,31.600164,0 -95.26538899999999,31.622926,0 -95.28545500000001,31.638848,0 -95.287325,31.680494,0 -95.326611,31.718224,0 -95.34021400000002,31.71605,0 -95.33761999999999,31.732842,0 -95.35988399999999,31.73011,0 -95.36198200000001,31.749836,0 -95.38681600000001,31.758624,0 -95.39581999999999,31.799181,0 -95.412476,31.828629,0 -95.44069800000001,31.844849,0 -95.434938,31.870183,0 -95.44062200000002,31.893698,0 -95.425669,31.928701,0 -95.449763,31.951592,0 -95.45009199999998,31.984014,0 -95.42623399999999,32.01363,0 -95.434139,32.026733,0 -95.42500600000001,32.044619,0 -95.43089599999999,32.083653,0 -95.461034,32.115446,0 -95.46344499999999,32.139729,0 -94.98915599999999,32.142925,0 -94.98603500000002,31.976612,0 -94.979176,31.956671,0 -94.98919299999999,31.934743,0 -94.98737,31.851551,0 -94.97948,31.787713,0 -94.93558,31.765184,0 -94.938273,31.756626,0 -94.95907899999999,31.751625,0 -94.964213,31.73861,0 -94.94528299999999,31.653698,0 -94.91604599999999,31.579267,0 -94.91046100000001,31.573985,0 -94.894164,31.576442,0 -94.891661,31.547994,0 -94.87386900000001,31.531641,0", "-101.269755,31.653725,0 -101.266952,32.091142,0 -101.172864,32.092619,0 -100.815298,32.085286,0 -100.825953,31.702592,0 -100.861469,31.701866,0 -100.865434,31.569978,0 -101.271609,31.56655,0 -101.269755,31.653725,0", "-101.269755,31.653725,0 -101.77214,31.651921,0 -101.774768,32.088392,0 -101.694764,32.090537,0 -101.266952,32.091142,0 -101.269755,31.653725,0", "-101.77214,31.651921,0 -102.290259,31.653476,0 -102.291232,32.085003,0 -102.211778,32.087044,0 -101.774768,32.088392,0 -101.77214,31.651921,0", "-100.232308,31.697643,0 -100.825953,31.702592,0 -100.815298,32.085286,0 -100.669855,32.088069,0 -100.235053,32.084345,0 -100.232308,31.697643,0", "-102.800325,31.653295,0 -103.344565,31.657538,0 -103.332549,32.004281,0 -103.058414,32.002023,0 -103.055641,32.085117,0 -102.79491,32.086402,0 -102.800325,31.653295,0", "-102.800325,31.653295,0 -102.79491,32.086402,0 -102.291232,32.085003,0 -102.290259,31.653476,0 -102.303779,31.65593700000001,0 -102.76693,31.652299,0 -102.800325,31.653295,0", "-100.113751,31.585589,0 -100.231986,31.587235,0 -100.232308,31.697643,0 -100.235053,32.084345,0 -100.157187,32.084484,0 -99.71051900000001,32.084677,0 -99.716095,31.577984,0 -99.723084,31.577543,0 -100.113751,31.585589,0", "-99.205018,31.472383,0 -99.212563,31.469242,0 -99.23011099999999,31.485795,0 -99.247331,31.481347,0 -99.27872700000002,31.451889,0 -99.28998799999999,31.452417,0 -99.28853900000001,31.434151,0 -99.30569,31.435629,0 -99.30689500000001,31.420117,0 -99.31552499999998,31.414237,0 -99.34815700000002,31.424929,0 -99.34638700000001,31.445003,0 -99.367361,31.438276,0 -99.38284899999999,31.447492,0 -99.40216,31.447141,0 -99.41067400000001,31.457227,0 -99.407905,31.469079,0 -99.44379500000001,31.47793400000001,0 -99.45407199999998,31.466577,0 -99.44452,31.451467,0 -99.46279300000001,31.446079,0 -99.47149000000002,31.428778,0 -99.49873599999999,31.446703,0 -99.50796800000001,31.428488,0 -99.518123,31.434921,0 -99.53824299999999,31.481104,0 -99.57360699999998,31.492197,0 -99.600449,31.491838,0 -99.626169,31.501512,0 -99.62996800000001,31.492855,0 -99.61393800000001,31.476828,0 -99.62899100000001,31.471857,0 -99.65464300000001,31.49658300000001,0 -99.67288600000001,31.499833,0 -99.66958999999999,31.518534,0 -99.65828999999999,31.522606,0 -99.654484,31.534916,0 -99.66251800000001,31.539503,0 -99.688856,31.534105,0 -99.68558999999999,31.546417,0 -99.67105599999998,31.553676,0 -99.69038999999998,31.555556,0 -99.69944700000001,31.575201,0 -99.71347,31.561549,0 -99.723084,31.577543,0 -99.716095,31.577984,0 -99.71051900000001,32.084677,0 -99.628323,32.084436,0 -99.194098,32.08399,0 -99.205018,31.472383,0", "-99.205018,31.472383,0 -99.194098,32.08399,0 -99.12164,32.08345,0 -98.92427100000001,32.082196,0 -98.67148900000001,31.704606,0 -98.761578,31.691494,0 -98.78377999999999,31.611435,0 -98.98640299999998,31.487503,0 -99.01773699999998,31.470895,0 -99.03471199999999,31.487473,0 -99.050246,31.490344,0 -99.06069100000001,31.468982,0 -99.07084499999999,31.472718,0 -99.07793300000002,31.463193,0 -99.09407,31.459674,0 -99.09576300000001,31.451926,0 -99.111137,31.468939,0 -99.12305400000001,31.458991,0 -99.16746500000001,31.471197,0 -99.18097000000002,31.462168,0 -99.190484,31.47684200000001,0 -99.205018,31.472383,0", "-95.73445599999999,31.516635,0 -95.758985,31.540865,0 -95.75224099999998,31.556595,0 -95.719487,31.565851,0 -95.728132,31.585366,0 -95.71164400000001,31.602092,0 -95.712728,31.632277,0 -95.727362,31.650648,0 -95.74177400000001,31.653024,0 -95.75656799999999,31.64810500000001,0 -95.758048,31.609797,0 -95.77056800000001,31.607075,0 -95.789535,31.625145,0 -95.79148100000001,31.659926,0 -95.782265,31.692003,0 -95.79336600000001,31.696073,0 -95.80223899999999,31.680882,0 -95.82555499999999,31.698648,0 -95.866015,31.697408,0 -95.869685,31.730875,0 -95.87943599999998,31.74036600000001,0 -95.86858700000001,31.752294,0 -95.89300900000001,31.759584,0 -95.89298599999999,31.770541,0 -95.922139,31.769778,0 -95.975943,31.793634,0 -95.97440899999999,31.824164,0 -95.98882200000001,31.848875,0 -95.96471200000001,31.877681,0 -95.979613,31.881867,0 -95.99293400000001,31.874583,0 -96.022278,31.88156,0 -96.02558099999999,31.891262,0 -96.000235,31.912271,0 -95.999152,31.92318600000001,0 -96.01651,31.95438,0 -96.052133,31.95517900000002,0 -96.053819,31.964824,0 -96.04338900000002,31.968108,0 -96.053842,31.986273,0 -96.049691,32.015788,0 -95.43089599999999,32.083653,0 -95.42500600000001,32.044619,0 -95.434139,32.026733,0 -95.42623399999999,32.01363,0 -95.45009199999998,31.984014,0 -95.449763,31.951592,0 -95.425669,31.928701,0 -95.44062200000002,31.893698,0 -95.434938,31.870183,0 -95.44069800000001,31.844849,0 -95.412476,31.828629,0 -95.39581999999999,31.799181,0 -95.38681600000001,31.758624,0 -95.36198200000001,31.749836,0 -95.35988399999999,31.73011,0 -95.33761999999999,31.732842,0 -95.34021400000002,31.71605,0 -95.326611,31.718224,0 -95.287325,31.680494,0 -95.28545500000001,31.638848,0 -95.26538899999999,31.622926,0 -95.26726600000001,31.600164,0 -95.656085,31.544678,0 -95.65687099999998,31.530091,0 -95.73445599999999,31.516635,0", "-98.179541,31.464944,0 -98.25985,31.424227,0 -98.461287,31.691423,0 -98.15854,31.844711,0 -98.20435700000002,31.917976,0 -98.00531700000002,32.021799,0 -97.75978499999999,31.679142,0 -98.179541,31.464944,0", "-96.234453,31.42041,0 -96.502214,31.80624900000001,0 -96.049691,32.015788,0 -96.053842,31.986273,0 -96.04338900000002,31.968108,0 -96.053819,31.964824,0 -96.052133,31.95517900000002,0 -96.01651,31.95438,0 -95.999152,31.92318600000001,0 -96.000235,31.912271,0 -96.02558099999999,31.891262,0 -96.022278,31.88156,0 -95.99293400000001,31.874583,0 -95.979613,31.881867,0 -95.96471200000001,31.877681,0 -95.98882200000001,31.848875,0 -95.97440899999999,31.824164,0 -95.975943,31.793634,0 -95.922139,31.769778,0 -95.89298599999999,31.770541,0 -95.89300900000001,31.759584,0 -95.86858700000001,31.752294,0 -95.87943599999998,31.74036600000001,0 -95.869685,31.730875,0 -95.866015,31.697408,0 -95.82555499999999,31.698648,0 -95.80223899999999,31.680882,0 -95.79336600000001,31.696073,0 -95.782265,31.692003,0 -95.79148100000001,31.659926,0 -95.789535,31.625145,0 -96.234453,31.42041,0", "-104.915386,30.681778,0 -104.917066,30.815795,0 -104.902104,30.815088,0 -104.90196,30.98117,0 -104.916006,30.983751,0 -104.922305,32.004382,0 -104.851068,32.003265,0 -104.019297,32.007403,0 -104.103681,31.109588,0 -104.915386,30.681778,0", "-104.103681,31.109588,0 -104.019297,32.007403,0 -103.981377,32.006015,0 -103.970489,31.982669,0 -103.94528,31.986749,0 -103.939443,31.955921,0 -103.918819,31.942951,0 -103.912249,31.908037,0 -103.906435,31.899567,0 -103.880097,31.890894,0 -103.883934,31.869765,0 -103.825789,31.895495,0 -103.823972,31.86862800000001,0 -103.794466,31.781076,0 -103.780877,31.778797,0 -103.777024,31.765688,0 -103.749038,31.743346,0 -103.688626,31.754021,0 -103.668034,31.727763,0 -103.619783,31.709245,0 -103.615923,31.695217,0 -103.631022,31.695642,0 -103.631647,31.685579,0 -103.617196,31.663675,0 -103.602898,31.65683,0 -103.564544,31.641621,0 -103.551489,31.650711,0 -103.537359,31.647507,0 -103.528302,31.637292,0 -103.506527,31.631583,0 -103.510723,31.616841,0 -103.499965,31.604394,0 -103.513653,31.585245,0 -103.490481,31.534373,0 -103.503954,31.52299,0 -103.485429,31.492059,0 -103.483987,31.458765,0 -103.463463,31.443419,0 -103.44709,31.43707600000001,0 -103.432311,31.443011,0 -103.418578,31.435668,0 -103.394705,31.442334,0 -103.377973,31.427312,0 -103.332226,31.424122,0 -103.278071,31.425268,0 -103.263948,31.434358,0 -103.249666,31.399611,0 -103.18975,31.376676,0 -103.076259,31.36799,0 -103.047083,31.390713,0 -103.017655,31.378268,0 -103.58611,30.770901,0 -104.103681,31.109588,0", "-103.344565,31.657538,0 -103.602898,31.65683,0 -103.617196,31.663675,0 -103.631647,31.685579,0 -103.631022,31.695642,0 -103.615923,31.695217,0 -103.619783,31.709245,0 -103.668034,31.727763,0 -103.688626,31.754021,0 -103.749038,31.743346,0 -103.777024,31.765688,0 -103.780877,31.778797,0 -103.794466,31.781076,0 -103.823972,31.86862800000001,0 -103.825789,31.895495,0 -103.883934,31.869765,0 -103.880097,31.890894,0 -103.906435,31.899567,0 -103.912249,31.908037,0 -103.918819,31.942951,0 -103.939443,31.955921,0 -103.94528,31.986749,0 -103.970489,31.982669,0 -103.981377,32.006015,0 -103.729444,32.006229,0 -103.332549,32.004281,0 -103.344565,31.657538,0", "-104.987426,30.641467,0 -104.998039,30.684475,0 -105.06106,30.688011,0 -105.214844,30.812224,0 -105.258692,30.797791,0 -105.288104,30.832086,0 -105.314289,30.81664500000001,0 -105.390821,30.853217,0 -105.409575,30.902645,0 -105.554897,30.998419,0 -105.603734,31.086559,0 -105.77025,31.170909,0 -105.998887,31.39394,0 -105.963981,31.408619,0 -105.962463,31.475468,0 -106.000871,31.478439,0 -106.00324,32.001658,0 -104.922305,32.004382,0 -104.916006,30.983751,0 -104.90196,30.98117,0 -104.902104,30.815088,0 -104.917066,30.815795,0 -104.915386,30.681778,0 -104.987426,30.641467,0", "-105.998887,31.39394,0 -106.213286,31.478246,0 -106.383581,31.733873,0 -106.539515,31.786305,0 -106.614987,31.817834,0 -106.616124,31.844741,0 -106.644079,31.895205,0 -106.633749,31.914101,0 -106.632605,31.97222,0 -106.650062,31.98033,0 -106.623626,32.001089,0 -106.378387,32.000747,0 -106.00324,32.001658,0 -106.000871,31.478439,0 -105.962463,31.475468,0 -105.963981,31.408619,0 -105.998887,31.39394,0", "-93.83280499999998,31.59036,0 -93.91564000000001,31.61112,0 -93.98771000000001,31.569299,0 -94.096524,31.627215,0 -94.39555900000001,31.657222,0 -94.40916300000001,31.686238,0 -94.41286300000002,31.733947,0 -94.44004700000001,31.824396,0 -94.457213,31.849459,0 -94.473547,31.88681,0 -94.50788800000001,31.921839,0 -94.50826100000001,31.971643,0 -94.00458500000002,31.978109,0 -93.977401,31.946327,0 -93.97017600000001,31.923333,0 -93.935919,31.909625,0 -93.918111,31.90987,0 -93.92365100000001,31.892762,0 -93.89945,31.894623,0 -93.892713,31.87023500000002,0 -93.881452,31.871589,0 -93.877591,31.850282,0 -93.86500999999998,31.817442,0 -93.834515,31.802188,0 -93.82225399999999,31.774808,0 -93.831349,31.753452,0 -93.810176,31.730525,0 -93.815135,31.712524,0 -93.80895500000001,31.707738,0 -93.792453,31.711568,0 -93.81202999999999,31.67474,0 -93.806613,31.653941,0 -93.81491400000002,31.648141,0 -93.819774,31.618268,0 -93.83576600000001,31.615365,0 -93.83280499999998,31.59036,0", "-97.421127,31.329921,0 -97.60250800000001,31.592824,0 -97.27661600000002,31.754241,0 -97.038121,31.866383,0 -96.93414199999999,31.720758,0 -96.80233,31.527164,0 -97.27475800000001,31.283966,0 -97.340625,31.251757,0 -97.421127,31.329921,0", "-94.32965999999999,31.223191,0 -94.345674,31.231784,0 -94.397594,31.294784,0 -94.440083,31.31657600000001,0 -94.485434,31.383305,0 -94.529213,31.402838,0 -94.54572400000001,31.42879200000001,0 -94.610742,31.44475,0 -94.62910700000001,31.44335,0 -94.67943900000002,31.46221900000001,0 -94.72572700000001,31.461215,0 -94.75852600000002,31.469159,0 -94.799924,31.493948,0 -94.82103499999998,31.491729,0 -94.87386900000001,31.531641,0 -94.891661,31.547994,0 -94.894164,31.576442,0 -94.91046100000001,31.573985,0 -94.91604599999999,31.579267,0 -94.94528299999999,31.653698,0 -94.964213,31.73861,0 -94.95907899999999,31.751625,0 -94.938273,31.756626,0 -94.93558,31.765184,0 -94.97948,31.787713,0 -94.98737,31.851551,0 -94.457213,31.849459,0 -94.44004700000001,31.824396,0 -94.41286300000002,31.733947,0 -94.40916300000001,31.686238,0 -94.39555900000001,31.657222,0 -94.344685,31.606671,0 -94.315692,31.590118,0 -94.302607,31.562025,0 -94.303088,31.509477,0 -94.32179500000001,31.45008,0 -94.31310499999999,31.420832,0 -94.321589,31.40709,0 -94.31809399999999,31.326886,0 -94.336839,31.26609600000001,0 -94.32965999999999,31.223191,0", "-96.31898099999999,31.367501,0 -96.596681,31.230137,0 -96.80233,31.527164,0 -96.93414199999999,31.720758,0 -96.72200100000002,31.824748,0 -96.502214,31.80624900000001,0 -96.234453,31.42041,0 -96.32118600000001,31.378081,0 -96.31898099999999,31.367501,0", "-98.56626599999999,31.235458,0 -98.58182299999999,31.263968,0 -98.601721,31.25874,0 -98.630263,31.2801,0 -98.601225,31.287501,0 -98.593558,31.328041,0 -98.62541899999998,31.313372,0 -98.634399,31.320787,0 -98.625213,31.325239,0 -98.632065,31.332172,0 -98.64943700000001,31.318232,0 -98.654106,31.327417,0 -98.644936,31.331417,0 -98.65010099999999,31.342893,0 -98.64127400000001,31.357852,0 -98.654084,31.361204,0 -98.65660200000001,31.37082,0 -98.706377,31.342192,0 -98.71319,31.351858,0 -98.69856499999999,31.394599,0 -98.705844,31.408838,0 -98.72729,31.40954,0 -98.724964,31.420925,0 -98.733913,31.431526,0 -98.755703,31.40986,0 -98.75710599999999,31.38842,0 -98.77972,31.382278,0 -98.77985000000001,31.409214,0 -98.81365600000001,31.407752,0 -98.81940899999999,31.417399,0 -98.848919,31.416794,0 -98.877523,31.442646,0 -98.927488,31.437204,0 -98.930532,31.450013,0 -98.945989,31.457919,0 -98.96926600000001,31.44216,0 -98.96909100000001,31.455853,0 -98.990942,31.46746200000001,0 -98.98640299999998,31.487503,0 -98.78377999999999,31.611435,0 -98.761578,31.691494,0 -98.67148900000001,31.704606,0 -98.495605,31.727018,0 -98.461287,31.691423,0 -98.25985,31.424227,0 -98.260536,31.417389,0 -98.56626599999999,31.235458,0", "-97.908412,31.07385,0 -98.179541,31.464944,0 -97.75978499999999,31.679142,0 -97.69216400000002,31.71017,0 -97.60250800000001,31.592824,0 -97.421127,31.329921,0 -97.908412,31.07385,0", "-100.11412,31.08845300000001,0 -100.686154,31.08594,0 -100.69264,31.53330800000001,0 -101.272082,31.528666,0 -101.271609,31.56655,0 -100.865434,31.569978,0 -100.861469,31.701866,0 -100.825953,31.702592,0 -100.232308,31.697643,0 -100.231986,31.587235,0 -100.113751,31.585589,0 -100.11412,31.08845300000001,0", "-103.017655,31.378268,0 -103.047083,31.390713,0 -103.076259,31.36799,0 -103.18975,31.376676,0 -103.249666,31.399611,0 -103.263948,31.434358,0 -103.278071,31.425268,0 -103.332226,31.424122,0 -103.377973,31.427312,0 -103.394705,31.442334,0 -103.418578,31.435668,0 -103.432311,31.443011,0 -103.44709,31.43707600000001,0 -103.463463,31.443419,0 -103.483987,31.458765,0 -103.485429,31.492059,0 -103.503954,31.52299,0 -103.490481,31.534373,0 -103.513653,31.585245,0 -103.499965,31.604394,0 -103.510723,31.616841,0 -103.506527,31.631583,0 -103.528302,31.637292,0 -103.537359,31.647507,0 -103.551489,31.650711,0 -103.564544,31.641621,0 -103.602898,31.65683,0 -103.344565,31.657538,0 -102.800325,31.653295,0 -102.76693,31.652299,0 -102.769274,31.297483,0 -102.827145,31.26725400000001,0 -102.842877,31.28832,0 -102.867887,31.298642,0 -102.878881,31.321651,0 -102.929602,31.345906,0 -102.992279,31.359314,0 -103.017655,31.378268,0", "-94.04000799999999,31.138498,0 -94.04918600000001,31.115653,0 -94.13985700000001,31.098054,0 -94.183544,31.123229,0 -94.22456900000002,31.171123,0 -94.26084099999999,31.180779,0 -94.30049200000002,31.211181,0 -94.32965999999999,31.223191,0 -94.336839,31.26609600000001,0 -94.31809399999999,31.326886,0 -94.321589,31.40709,0 -94.31310499999999,31.420832,0 -94.32179500000001,31.45008,0 -94.303088,31.509477,0 -94.302607,31.562025,0 -94.315692,31.590118,0 -94.344685,31.606671,0 -94.39555900000001,31.657222,0 -94.096524,31.627215,0 -93.98771000000001,31.569299,0 -93.989182,31.470152,0 -94.04844799999999,31.402903,0 -94.031136,31.37545,0 -94.04916500000002,31.327476,0 -94.03686600000002,31.246763,0 -94.041862,31.178862,0 -94.056076,31.145765,0 -94.04000799999999,31.138498,0", "-102.303135,31.087015,0 -102.388053,31.086138,0 -102.425438,31.121419,0 -102.426034,31.177138,0 -102.436029,31.207068,0 -102.506541,31.255288,0 -102.551869,31.26659,0 -102.589834,31.264801,0 -102.600187,31.286939,0 -102.628744,31.292207,0 -102.631804,31.30401,0 -102.655166,31.31396,0 -102.658813,31.327118,0 -102.679115,31.32526100000001,0 -102.720116,31.301433,0 -102.726541,31.285289,0 -102.736566,31.280933,0 -102.745638,31.27979600000001,0 -102.755243,31.294631,0 -102.769274,31.297483,0 -102.76693,31.652299,0 -102.303779,31.65593700000001,0 -102.303135,31.087015,0", "-101.773192,31.088061,0 -102.303135,31.087015,0 -102.303779,31.65593700000001,0 -102.290259,31.653476,0 -101.77214,31.651921,0 -101.773192,31.088061,0", "-101.773192,31.088061,0 -101.77214,31.651921,0 -101.269755,31.653725,0 -101.271609,31.56655,0 -101.272082,31.528666,0 -101.276912,31.086653,0 -101.773192,31.088061,0", "-95.76686699999999,31.103382,0 -95.97737600000001,31.096119,0 -96.012495,31.077729,0 -96.061561,31.068967,0 -96.17648400000002,31.000296,0 -96.242518,30.981066,0 -96.24237299999999,30.995689,0 -96.25947100000001,31.018668,0 -96.251346,31.05588,0 -96.276112,31.086879,0 -96.27944700000001,31.118987,0 -96.28864100000001,31.128435,0 -96.325761,31.265389,0 -96.311273,31.277702,0 -96.320841,31.291269,0 -96.32173400000001,31.318711,0 -96.312259,31.338499,0 -96.31898099999999,31.367501,0 -96.32118600000001,31.378081,0 -96.234453,31.42041,0 -95.789535,31.625145,0 -95.77056800000001,31.607075,0 -95.758048,31.609797,0 -95.75656799999999,31.64810500000001,0 -95.74177400000001,31.653024,0 -95.727362,31.650648,0 -95.712728,31.632277,0 -95.71164400000001,31.602092,0 -95.728132,31.585366,0 -95.719487,31.565851,0 -95.75224099999998,31.556595,0 -95.758985,31.540865,0 -95.73445599999999,31.516635,0 -95.74297799999999,31.497771,0 -95.72544499999998,31.483856,0 -95.72739100000001,31.477535,0 -95.74033,31.476658,0 -95.74465600000001,31.465858,0 -95.736881,31.460537,0 -95.729015,31.467089,0 -95.718418,31.464399,0 -95.69617700000001,31.387699,0 -95.687754,31.374578,0 -95.66359099999998,31.36496,0 -95.677804,31.349974,0 -95.657662,31.345536,0 -95.655305,31.329449,0 -95.67452299999999,31.321057,0 -95.67537700000001,31.295041,0 -95.70030300000001,31.300119,0 -95.722612,31.273556,0 -95.723755,31.241608,0 -95.74087599999999,31.221698,0 -95.74681099999999,31.200443,0 -95.73226099999999,31.161488,0 -95.753959,31.155919,0 -95.78022,31.134519,0 -95.76686699999999,31.103382,0", "-93.917957,31.159337,0 -94.04000799999999,31.138498,0 -94.056076,31.145765,0 -94.041862,31.178862,0 -94.03686600000002,31.246763,0 -94.04916500000002,31.327476,0 -94.031136,31.37545,0 -94.04844799999999,31.402903,0 -93.989182,31.470152,0 -93.98771000000001,31.569299,0 -93.91564000000001,31.61112,0 -93.83280499999998,31.59036,0 -93.816508,31.577287,0 -93.81070200000001,31.559241,0 -93.78031300000001,31.533914,0 -93.76349,31.530902,0 -93.74772700000001,31.537896,0 -93.731842,31.522056,0 -93.70597700000002,31.520747,0 -93.719177,31.495582,0 -93.750618,31.490736,0 -93.75142700000001,31.48568,0 -93.726966,31.459655,0 -93.698599,31.461638,0 -93.70210899999999,31.446431,0 -93.687185,31.438312,0 -93.69631,31.427917,0 -93.69462400000001,31.416103,0 -93.687673,31.406311,0 -93.66419600000002,31.39851,0 -93.66125099999999,31.372577,0 -93.635036,31.374009,0 -93.67722000000001,31.32857,0 -93.68176699999999,31.312864,0 -93.65630600000002,31.286856,0 -93.64577,31.290447,0 -93.631006,31.274088,0 -93.616632,31.27599,0 -93.612054,31.270218,0 -93.611177,31.242374,0 -93.590721,31.229873,0 -93.60309599999999,31.199254,0 -93.59411600000001,31.180387,0 -93.917957,31.159337,0", "-95.44042100000002,31.059821,0 -95.62788499999999,30.933377,0 -95.64315999999998,30.937181,0 -95.675524,30.991039,0 -95.661417,31.015182,0 -95.663714,31.032191,0 -95.64560900000001,31.041083,0 -95.62641399999998,31.040327,0 -95.631976,31.056093,0 -95.64722,31.060808,0 -95.65567400000001,31.08263,0 -95.67834900000001,31.078486,0 -95.726148,31.08445,0 -95.757834,31.092066,0 -95.76686699999999,31.103382,0 -95.78022,31.134519,0 -95.753959,31.155919,0 -95.73226099999999,31.161488,0 -95.74681099999999,31.200443,0 -95.74087599999999,31.221698,0 -95.723755,31.241608,0 -95.722612,31.273556,0 -95.70030300000001,31.300119,0 -95.67537700000001,31.295041,0 -95.67452299999999,31.321057,0 -95.655305,31.329449,0 -95.657662,31.345536,0 -95.677804,31.349974,0 -95.66359099999998,31.36496,0 -95.687754,31.374578,0 -95.69617700000001,31.387699,0 -95.718418,31.464399,0 -95.729015,31.467089,0 -95.736881,31.460537,0 -95.74465600000001,31.465858,0 -95.74033,31.476658,0 -95.72739100000001,31.477535,0 -95.72544499999998,31.483856,0 -95.74297799999999,31.497771,0 -95.73445599999999,31.516635,0 -95.65687099999998,31.530091,0 -95.656085,31.544678,0 -95.26726600000001,31.600164,0 -95.26460299999998,31.59045800000001,0 -95.244827,31.57911,0 -95.217589,31.575665,0 -95.177198,31.585352,0 -95.143613,31.57110700000001,0 -95.14087299999999,31.554082,0 -95.09875700000001,31.512487,0 -95.10718799999999,31.488638,0 -95.10294500000001,31.478855,0 -95.05797699999999,31.467276,0 -95.04251100000002,31.447852,0 -94.999534,31.43908,0 -94.995475,31.426557,0 -94.960486,31.393442,0 -94.96266,31.3844,0 -95.44042100000002,31.059821,0", "-99.60083699999998,31.087795,0 -100.11412,31.08845300000001,0 -100.113751,31.585589,0 -99.723084,31.577543,0 -99.71347,31.561549,0 -99.69944700000001,31.575201,0 -99.69038999999998,31.555556,0 -99.67105599999998,31.553676,0 -99.68558999999999,31.546417,0 -99.688856,31.534105,0 -99.66251800000001,31.539503,0 -99.654484,31.534916,0 -99.65828999999999,31.522606,0 -99.66958999999999,31.518534,0 -99.67288600000001,31.499833,0 -99.65464300000001,31.49658300000001,0 -99.62899100000001,31.471857,0 -99.61393800000001,31.476828,0 -99.62996800000001,31.492855,0 -99.626169,31.501512,0 -99.600449,31.491838,0 -99.60083699999998,31.087795,0", "-100.686154,31.08594,0 -100.961758,31.085266,0 -101.276912,31.086653,0 -101.272082,31.528666,0 -100.69264,31.53330800000001,0 -100.686154,31.08594,0", "-94.577718,31.064029,0 -94.64252399999998,31.095081,0 -94.67607099999999,31.089374,0 -94.704567,31.103545,0 -94.771867,31.113594,0 -94.81871999999999,31.134086,0 -94.83222499999999,31.148892,0 -94.826266,31.175142,0 -94.837794,31.187567,0 -94.845935,31.219499,0 -94.86622199999999,31.246043,0 -94.89269699999998,31.259607,0 -94.879368,31.292371,0 -94.89495599999999,31.300403,0 -94.90923799999999,31.337631,0 -94.956007,31.344787,0 -94.96266,31.3844,0 -94.960486,31.393442,0 -94.995475,31.426557,0 -94.999534,31.43908,0 -94.87386900000001,31.531641,0 -94.82103499999998,31.491729,0 -94.799924,31.493948,0 -94.75852600000002,31.469159,0 -94.72572700000001,31.461215,0 -94.67943900000002,31.46221900000001,0 -94.62910700000001,31.44335,0 -94.610742,31.44475,0 -94.54572400000001,31.42879200000001,0 -94.529213,31.402838,0 -94.485434,31.383305,0 -94.440083,31.31657600000001,0 -94.397594,31.294784,0 -94.345674,31.231784,0 -94.32965999999999,31.223191,0 -94.30049200000002,31.211181,0 -94.26084099999999,31.180779,0 -94.22456900000002,31.171123,0 -94.183544,31.123229,0 -94.13985700000001,31.098054,0 -94.44417,31.038207,0 -94.483127,31.031457,0 -94.49561700000001,31.044432,0 -94.528424,31.057491,0 -94.577718,31.064029,0", "-97.078829,30.998012,0 -97.27475800000001,31.283966,0 -96.80233,31.527164,0 -96.596681,31.230137,0 -96.829324,31.113185,0 -96.836015,31.119773,0 -97.078829,30.998012,0", "-99.47838999999999,30.942024,0 -99.60101299999998,30.943447,0 -99.60083699999998,31.087795,0 -99.600449,31.491838,0 -99.57360699999998,31.492197,0 -99.53824299999999,31.481104,0 -99.518123,31.434921,0 -99.50796800000001,31.428488,0 -99.49873599999999,31.446703,0 -99.47149000000002,31.428778,0 -99.46279300000001,31.446079,0 -99.44452,31.451467,0 -99.45407199999998,31.466577,0 -99.44379500000001,31.47793400000001,0 -99.407905,31.469079,0 -99.41067400000001,31.457227,0 -99.40216,31.447141,0 -99.38284899999999,31.447492,0 -99.367361,31.438276,0 -99.34638700000001,31.445003,0 -99.34815700000002,31.424929,0 -99.31552499999998,31.414237,0 -99.30689500000001,31.420117,0 -99.30569,31.435629,0 -99.28853900000001,31.434151,0 -99.28998799999999,31.452417,0 -99.27872700000002,31.451889,0 -99.247331,31.481347,0 -99.23011099999999,31.485795,0 -99.212563,31.469242,0 -99.205018,31.472383,0 -99.190484,31.47684200000001,0 -99.18097000000002,31.462168,0 -99.16746500000001,31.471197,0 -99.12305400000001,31.458991,0 -99.111137,31.468939,0 -99.09576300000001,31.451926,0 -99.089722,30.940426,0 -99.47838999999999,30.942024,0", "-98.958775,30.923738,0 -99.09042400000001,30.924896,0 -99.089722,30.940426,0 -99.09576300000001,31.451926,0 -99.09407,31.459674,0 -99.07793300000002,31.463193,0 -99.07084499999999,31.472718,0 -99.06069100000001,31.468982,0 -99.050246,31.490344,0 -99.03471199999999,31.487473,0 -99.01773699999998,31.470895,0 -98.98640299999998,31.487503,0 -98.990942,31.46746200000001,0 -98.96909100000001,31.455853,0 -98.96926600000001,31.44216,0 -98.945989,31.457919,0 -98.930532,31.450013,0 -98.927488,31.437204,0 -98.877523,31.442646,0 -98.848919,31.416794,0 -98.81940899999999,31.417399,0 -98.81365600000001,31.407752,0 -98.77985000000001,31.409214,0 -98.77972,31.382278,0 -98.75710599999999,31.38842,0 -98.755703,31.40986,0 -98.733913,31.431526,0 -98.724964,31.420925,0 -98.72729,31.40954,0 -98.705844,31.408838,0 -98.69856499999999,31.394599,0 -98.71319,31.351858,0 -98.706377,31.342192,0 -98.65660200000001,31.37082,0 -98.654084,31.361204,0 -98.64127400000001,31.357852,0 -98.65010099999999,31.342893,0 -98.644936,31.331417,0 -98.654106,31.327417,0 -98.64943700000001,31.318232,0 -98.632065,31.332172,0 -98.625213,31.325239,0 -98.634399,31.320787,0 -98.62541899999998,31.313372,0 -98.593558,31.328041,0 -98.601225,31.287501,0 -98.630263,31.2801,0 -98.601721,31.25874,0 -98.58182299999999,31.263968,0 -98.56626599999999,31.235458,0 -98.568516,31.198953,0 -98.539211,31.192635,0 -98.536312,31.175242,0 -98.51024099999999,31.168045,0 -98.509303,31.161183,0 -98.529788,31.151864,0 -98.530635,31.134519,0 -98.547832,31.129264,0 -98.54685499999999,31.124229,0 -98.526926,31.10295500000001,0 -98.516794,31.101906,0 -98.492471,31.117109,0 -98.47429,31.117775,0 -98.47227599999999,31.111351,0 -98.458421,31.109333,0 -98.470376,31.098536,0 -98.45680999999999,31.081448,0 -98.47614399999999,31.076233,0 -98.47962199999999,31.061206,0 -98.43693500000002,31.031834,0 -98.457488,31.017502,0 -98.44210699999999,30.984849,0 -98.44908,30.954792,0 -98.41255700000002,30.940568,0 -98.414327,30.931911,0 -98.44225900000002,30.920885,0 -98.958775,30.923738,0", "-97.91295100000001,31.042868,0 -98.43693500000002,31.031834,0 -98.47962199999999,31.061206,0 -98.47614399999999,31.076233,0 -98.45680999999999,31.081448,0 -98.470376,31.098536,0 -98.458421,31.109333,0 -98.47227599999999,31.111351,0 -98.47429,31.117775,0 -98.492471,31.117109,0 -98.516794,31.101906,0 -98.526926,31.10295500000001,0 -98.54685499999999,31.124229,0 -98.547832,31.129264,0 -98.530635,31.134519,0 -98.529788,31.151864,0 -98.509303,31.161183,0 -98.51024099999999,31.168045,0 -98.536312,31.175242,0 -98.539211,31.192635,0 -98.568516,31.198953,0 -98.56626599999999,31.235458,0 -98.260536,31.417389,0 -98.25985,31.424227,0 -98.179541,31.464944,0 -97.908412,31.07385,0 -97.91295100000001,31.042868,0", "-95.19690199999999,30.829516,0 -95.238483,30.847786,0 -95.242389,30.890502,0 -95.25867,30.904009,0 -95.311222,30.899384,0 -95.318417,30.876357,0 -95.328839,30.871309,0 -95.347127,30.878026,0 -95.355222,30.866929,0 -95.37367700000002,30.861297,0 -95.40675899999999,30.870452,0 -95.401388,30.889899,0 -95.39211,30.893632,0 -95.41904200000001,30.908013,0 -95.421995,30.931463,0 -95.43940499999999,30.944532,0 -95.44042100000002,31.059821,0 -94.96266,31.3844,0 -94.956007,31.344787,0 -94.90923799999999,31.337631,0 -94.89495599999999,31.300403,0 -94.879368,31.292371,0 -94.89269699999998,31.259607,0 -94.86622199999999,31.246043,0 -94.845935,31.219499,0 -94.837794,31.187567,0 -94.826266,31.175142,0 -94.83222499999999,31.148892,0 -95.19690199999999,30.829516,0", "-101.758695,30.664653,0 -102.144996,30.66194,0 -102.14666,30.603835,0 -102.373985,30.604209,0 -102.370584,30.284968,0 -102.573531,30.278111,0 -102.577278,30.060124,0 -103.443339,30.667956,0 -103.58611,30.770901,0 -103.017655,31.378268,0 -102.992279,31.359314,0 -102.929602,31.345906,0 -102.878881,31.321651,0 -102.867887,31.298642,0 -102.842877,31.28832,0 -102.827145,31.26725400000001,0 -102.769274,31.297483,0 -102.755243,31.294631,0 -102.745638,31.27979600000001,0 -102.736566,31.280933,0 -102.726541,31.285289,0 -102.720116,31.301433,0 -102.679115,31.32526100000001,0 -102.658813,31.327118,0 -102.655166,31.31396,0 -102.631804,31.30401,0 -102.628744,31.292207,0 -102.600187,31.286939,0 -102.589834,31.264801,0 -102.551869,31.26659,0 -102.506541,31.255288,0 -102.436029,31.207068,0 -102.426034,31.177138,0 -102.425438,31.121419,0 -102.388053,31.086138,0 -102.322286,31.0656,0 -102.316586,31.052928,0 -102.301579,31.050956,0 -102.295383,31.039659,0 -102.249018,31.042894,0 -102.201669,31.029679,0 -102.189232,31.003881,0 -102.178299,31.014148,0 -102.167397,31.00568,0 -102.1203,31.000651,0 -102.110992,30.991689,0 -102.078391,30.989565,0 -102.058401,31.000903,0 -101.972554,30.981902,0 -101.943157,30.957289,0 -101.927096,30.954829,0 -101.898149,30.925625,0 -101.87079,30.918323,0 -101.874703,30.87987,0 -101.850373,30.864284,0 -101.837555,30.839361,0 -101.824126,30.762795,0 -101.806525,30.737028,0 -101.80313,30.703712,0 -101.758695,30.664653,0", "-96.62737799999999,30.736477,0 -96.62888100000001,30.75161500000001,0 -96.61443800000001,30.766267,0 -96.618253,30.776902,0 -96.62737000000001,30.788153,0 -96.64756599999998,30.789225,0 -96.64307199999999,30.82064,0 -96.690483,30.860019,0 -96.693619,30.914061,0 -96.71999500000001,30.907988,0 -96.751544,30.932687,0 -96.76868800000001,30.971129,0 -96.753604,31.001316,0 -96.768849,31.007243,0 -96.77435799999999,31.043511,0 -96.79184599999999,31.06047,0 -96.81306399999998,31.06428100000001,0 -96.829324,31.113185,0 -96.596681,31.230137,0 -96.31898099999999,31.367501,0 -96.312259,31.338499,0 -96.32173400000001,31.318711,0 -96.320841,31.291269,0 -96.311273,31.277702,0 -96.325761,31.265389,0 -96.28864100000001,31.128435,0 -96.27944700000001,31.118987,0 -96.276112,31.086879,0 -96.251346,31.05588,0 -96.25947100000001,31.018668,0 -96.24237299999999,30.995689,0 -96.242518,30.981066,0 -96.359792,30.913199,0 -96.41171099999998,30.848592,0 -96.45590900000002,30.751238,0 -96.572307,30.704599,0 -96.59421899999998,30.727687,0 -96.62737799999999,30.736477,0", "-97.833006,30.917051,0 -97.91295100000001,31.042868,0 -97.908412,31.07385,0 -97.421127,31.329921,0 -97.340625,31.251757,0 -97.27475800000001,31.283966,0 -97.078829,30.998012,0 -97.264054,30.902641,0 -97.31669000000001,30.7613,0 -97.640579,30.878845,0 -97.833006,30.917051,0", "-93.89788499999999,30.243534,0 -93.86091499999999,30.943363,0 -93.917957,31.159337,0 -93.59411600000001,31.180387,0 -93.577117,31.172328,0 -93.550765,31.191117,0 -93.52909599999998,31.185961,0 -93.52710500000001,31.178263,0 -93.53719100000001,31.176528,0 -93.52850099999999,31.163131,0 -93.54436299999999,31.15935500000001,0 -93.537679,31.13263,0 -93.52826399999999,31.126114,0 -93.53526100000001,31.116261,0 -93.55685200000001,31.109533,0 -93.56015599999999,31.100727,0 -93.54329399999999,31.094942,0 -93.54427799999999,31.082564,0 -93.51716999999999,31.074862,0 -93.525914,31.057172,0 -93.507389,31.0391,0 -93.547292,31.01433400000001,0 -93.56511399999999,31.018256,0 -93.568067,31.013118,0 -93.57102,30.997465,0 -93.56112400000002,30.991884,0 -93.57263,30.976372,0 -93.54884800000001,30.970385,0 -93.53751100000001,30.957079,0 -93.532361,30.960926,0 -93.525792,30.936015,0 -93.53015600000001,30.927167,0 -93.54979399999999,30.925081,0 -93.546689,30.905531,0 -93.564649,30.902128,0 -93.56867,30.886431,0 -93.561018,30.872077,0 -93.552976,30.86048,0 -93.56661800000002,30.845346,0 -93.555814,30.84254,0 -93.550855,30.828543,0 -93.58204499999999,30.80224,0 -93.58534899999998,30.772385,0 -93.61862900000001,30.74599,0 -93.60782500000001,30.732211,0 -93.617965,30.732749,0 -93.61258599999999,30.71053,0 -93.61778099999998,30.687003,0 -93.660163,30.673061,0 -93.678145,30.639894,0 -93.69305300000001,30.640243,0 -93.68476000000001,30.623626,0 -93.69287000000001,30.615997,0 -93.671758,30.598033,0 -93.693594,30.599037,0 -93.717986,30.587582,0 -93.718054,30.568356,0 -93.735479,30.54572,0 -93.70563199999998,30.52306,0 -93.71481,30.505316,0 -93.707447,30.496443,0 -93.715023,30.488831,0 -93.69814599999999,30.47025,0 -93.703593,30.462716,0 -93.69674100000002,30.442836,0 -93.721705,30.433183,0 -93.742732,30.409027,0 -93.75511400000001,30.38199300000001,0 -93.748002,30.367616,0 -93.759508,30.35435,0 -93.75934700000001,30.341077,0 -93.729941,30.305122,0 -93.69937699999998,30.297594,0 -93.70752400000002,30.239579,0 -93.89788499999999,30.243534,0", "-93.89788499999999,30.243534,0 -94.101872,30.242779,0 -94.09676099999999,30.254881,0 -94.11083000000002,30.280389,0 -94.109877,30.293632,0 -94.083326,30.345831,0 -94.11427400000001,30.424484,0 -94.06360700000001,30.523024,0 -94.06761299999998,30.541107,0 -94.083834,30.559389,0 -94.08314,30.576301,0 -94.07384,30.609243,0 -94.050516,30.629973,0 -94.051638,30.643775,0 -94.064365,30.659119,0 -94.078884,30.657149,0 -94.09035900000001,30.682497,0 -94.11491899999999,30.681521,0 -94.12975900000001,30.704752,0 -94.123846,30.742446,0 -94.12937800000002,30.769299,0 -94.17089900000001,30.799887,0 -94.19227000000001,30.836722,0 -94.201159,30.891664,0 -94.21208499999999,30.903222,0 -94.197756,30.924445,0 -94.203891,30.935751,0 -94.22282800000001,30.939943,0 -94.241688,30.960149,0 -94.23712600000002,30.971812,0 -94.24323699999998,30.983571,0 -94.230374,30.991597,0 -94.238027,31.004351,0 -94.26465399999999,31.020835,0 -94.27230699999998,31.018484,0 -94.29280700000001,31.03876,0 -94.31586399999999,31.022555,0 -94.338982,31.036093,0 -94.39596699999999,31.023886,0 -94.40963100000001,31.027321,0 -94.422479,31.011494,0 -94.438898,31.005913,0 -94.445826,31.014038,0 -94.44417,31.038207,0 -94.13985700000001,31.098054,0 -94.04918600000001,31.115653,0 -94.04000799999999,31.138498,0 -93.917957,31.159337,0 -93.86091499999999,30.943363,0 -93.89788499999999,30.243534,0", "-94.84828400000001,30.491082,0 -94.863421,30.503695,0 -94.86429099999998,30.515185,0 -94.84131100000002,30.53426,0 -94.84051000000001,30.547044,0 -94.90153100000001,30.565452,0 -94.927167,30.563428,0 -94.965681,30.576641,0 -95.03478200000001,30.585269,0 -95.01522800000001,30.609566,0 -95.01255000000001,30.6273,0 -95.023865,30.651156,0 -95.011245,30.657452,0 -95.03914699999999,30.671069,0 -95.041611,30.68308100000001,0 -95.053032,30.679015,0 -95.057976,30.685187,0 -95.11371799999999,30.669818,0 -95.11599099999999,30.702873,0 -95.132395,30.704513,0 -95.147952,30.729452,0 -95.13554600000001,30.785652,0 -95.19690199999999,30.829516,0 -94.83222499999999,31.148892,0 -94.81871999999999,31.134086,0 -94.771867,31.113594,0 -94.704567,31.103545,0 -94.67607099999999,31.089374,0 -94.64252399999998,31.095081,0 -94.577718,31.064029,0 -94.657462,31.014369,0 -94.548058,30.525631,0 -94.540718,30.492289,0 -94.73366399999999,30.489781,0 -94.84828400000001,30.491082,0", "-96.96839400000002,30.566617,0 -97.156441,30.472358,0 -97.274101,30.745628,0 -97.31669000000001,30.7613,0 -97.264054,30.902641,0 -97.078829,30.998012,0 -96.836015,31.119773,0 -96.829324,31.113185,0 -96.81306399999998,31.06428100000001,0 -96.79184599999999,31.06047,0 -96.77435799999999,31.043511,0 -96.768849,31.007243,0 -96.753604,31.001316,0 -96.76868800000001,30.971129,0 -96.751544,30.932687,0 -96.71999500000001,30.907988,0 -96.693619,30.914061,0 -96.690483,30.860019,0 -96.64307199999999,30.82064,0 -96.64756599999998,30.789225,0 -96.62737000000001,30.788153,0 -96.618253,30.776902,0 -96.61443800000001,30.766267,0 -96.62888100000001,30.75161500000001,0 -96.62737799999999,30.736477,0 -96.96839400000002,30.566617,0", "-104.987426,30.641467,0 -104.915386,30.681778,0 -104.103681,31.109588,0 -103.58611,30.770901,0 -103.443339,30.667956,0 -103.792744,30.405275,0 -103.89669,30.406219,0 -104.987426,30.641467,0", "-95.861755,30.867813,0 -95.908608,30.869099,0 -96.034413,30.847607,0 -96.17311100000001,30.833739,0 -96.205056,30.902976,0 -96.20574300000001,30.945522,0 -96.23641399999998,30.963029,0 -96.242518,30.981066,0 -96.17648400000002,31.000296,0 -96.061561,31.068967,0 -96.012495,31.077729,0 -95.97737600000001,31.096119,0 -95.76686699999999,31.103382,0 -95.757834,31.092066,0 -95.726148,31.08445,0 -95.67834900000001,31.078486,0 -95.65567400000001,31.08263,0 -95.64722,31.060808,0 -95.631976,31.056093,0 -95.62641399999998,31.040327,0 -95.64560900000001,31.041083,0 -95.663714,31.032191,0 -95.661417,31.015182,0 -95.675524,30.991039,0 -95.64315999999998,30.937181,0 -95.62788499999999,30.933377,0 -95.620248,30.91661,0 -95.63906299999999,30.904089,0 -95.73349399999999,30.91417,0 -95.80586799999999,30.87623,0 -95.861755,30.867813,0", "-100.95774,30.69965,0 -100.961758,31.085266,0 -100.686154,31.08594,0 -100.11412,31.08845300000001,0 -100.117851,30.71150700000001,0 -100.117294,30.695967,0 -100.95774,30.69965,0", "-99.483546,30.717675,0 -100.117851,30.71150700000001,0 -100.11412,31.08845300000001,0 -99.60083699999998,31.087795,0 -99.60101299999998,30.943447,0 -99.47838999999999,30.942024,0 -99.483546,30.717675,0", "-100.954001,30.287645,0 -101.750592,30.286075,0 -101.73753,30.318768,0 -101.705768,30.343971,0 -101.651346,30.34892,0 -101.653627,30.35712,0 -101.691714,30.381244,0 -101.692149,30.40228,0 -101.734929,30.421283,0 -101.714252,30.445851,0 -101.726811,30.463493,0 -101.718426,30.468198,0 -101.693858,30.459431,0 -101.685985,30.488822,0 -101.669306,30.503256,0 -101.673907,30.52056500000001,0 -101.649393,30.541513,0 -101.642412,30.564024,0 -101.654589,30.588535,0 -101.649515,30.626562,0 -101.68822,30.648839,0 -101.746213,30.652508,0 -101.758695,30.664653,0 -101.80313,30.703712,0 -101.806525,30.737028,0 -101.824126,30.762795,0 -101.837555,30.839361,0 -101.850373,30.864284,0 -101.874703,30.87987,0 -101.87079,30.918323,0 -101.898149,30.925625,0 -101.927096,30.954829,0 -101.943157,30.957289,0 -101.972554,30.981902,0 -102.058401,31.000903,0 -102.078391,30.989565,0 -102.110992,30.991689,0 -102.1203,31.000651,0 -102.167397,31.00568,0 -102.178299,31.014148,0 -102.189232,31.003881,0 -102.201669,31.029679,0 -102.249018,31.042894,0 -102.295383,31.039659,0 -102.301579,31.050956,0 -102.316586,31.052928,0 -102.322286,31.0656,0 -102.388053,31.086138,0 -102.303135,31.087015,0 -101.773192,31.088061,0 -101.276912,31.086653,0 -100.961758,31.085266,0 -100.95774,30.69965,0 -100.954001,30.287645,0", "-94.06360700000001,30.523024,0 -94.548058,30.525631,0 -94.657462,31.014369,0 -94.577718,31.064029,0 -94.528424,31.057491,0 -94.49561700000001,31.044432,0 -94.483127,31.031457,0 -94.44417,31.038207,0 -94.445826,31.014038,0 -94.438898,31.005913,0 -94.422479,31.011494,0 -94.40963100000001,31.027321,0 -94.39596699999999,31.023886,0 -94.338982,31.036093,0 -94.31586399999999,31.022555,0 -94.29280700000001,31.03876,0 -94.27230699999998,31.018484,0 -94.26465399999999,31.020835,0 -94.238027,31.004351,0 -94.230374,30.991597,0 -94.24323699999998,30.983571,0 -94.23712600000002,30.971812,0 -94.241688,30.960149,0 -94.22282800000001,30.939943,0 -94.203891,30.935751,0 -94.197756,30.924445,0 -94.21208499999999,30.903222,0 -94.201159,30.891664,0 -94.19227000000001,30.836722,0 -94.17089900000001,30.799887,0 -94.12937800000002,30.769299,0 -94.123846,30.742446,0 -94.12975900000001,30.704752,0 -94.11491899999999,30.681521,0 -94.09035900000001,30.682497,0 -94.078884,30.657149,0 -94.064365,30.659119,0 -94.051638,30.643775,0 -94.050516,30.629973,0 -94.07384,30.609243,0 -94.08314,30.576301,0 -94.083834,30.559389,0 -94.06761299999998,30.541107,0 -94.06360700000001,30.523024,0", "-95.82733000000002,30.634122,0 -95.861755,30.867813,0 -95.80586799999999,30.87623,0 -95.73349399999999,30.91417,0 -95.63906299999999,30.904089,0 -95.620248,30.91661,0 -95.62788499999999,30.933377,0 -95.44042100000002,31.059821,0 -95.43940499999999,30.944532,0 -95.421995,30.931463,0 -95.41904200000001,30.908013,0 -95.39211,30.893632,0 -95.401388,30.889899,0 -95.40675899999999,30.870452,0 -95.37367700000002,30.861297,0 -95.355222,30.866929,0 -95.347127,30.878026,0 -95.328839,30.871309,0 -95.359556,30.519307,0 -95.597848,30.52176400000001,0 -95.82733000000002,30.634122,0", "-98.34847600000001,30.498041,0 -98.34924100000002,30.565276,0 -98.35912899999998,30.575027,0 -98.38102600000001,30.568491,0 -98.40211400000001,30.575657,0 -98.41460500000001,30.643508,0 -98.435457,30.664379,0 -98.42726299999998,30.676149,0 -98.402169,30.681731,0 -98.40735000000001,30.716093,0 -98.385415,30.722633,0 -98.371667,30.745285,0 -98.42086299999998,30.759712,0 -98.43024,30.769902,0 -98.42325200000002,30.80134,0 -98.379535,30.831331,0 -98.38101500000001,30.837293,0 -98.417118,30.843299,0 -98.422032,30.864391,0 -98.459577,30.879086,0 -98.44225900000002,30.920885,0 -98.414327,30.931911,0 -98.41255700000002,30.940568,0 -98.44908,30.954792,0 -98.44210699999999,30.984849,0 -98.457488,31.017502,0 -98.43693500000002,31.031834,0 -97.91295100000001,31.042868,0 -97.833006,30.917051,0 -97.96909300000002,30.78297,0 -98.046065,30.635775,0 -98.12461599999999,30.499948,0 -98.11034200000002,30.497875,0 -98.099462,30.48671,0 -98.12653799999998,30.439148,0 -98.34847600000001,30.498041,0", "-96.14277600000001,30.337134,0 -96.149727,30.380868,0 -96.18212200000002,30.40214,0 -96.19107899999999,30.403365,0 -96.198556,30.390807,0 -96.22293200000001,30.379288,0 -96.259349,30.37092,0 -96.29773300000001,30.389156,0 -96.29037,30.411338,0 -96.274203,30.417199,0 -96.282344,30.448139,0 -96.31991899999999,30.461759,0 -96.333561,30.476859,0 -96.335194,30.487896,0 -96.31642500000001,30.480406,0 -96.36040199999999,30.517562,0 -96.353619,30.538844,0 -96.36375099999998,30.549704,0 -96.37274600000001,30.550457,0 -96.37312800000001,30.541775,0 -96.384595,30.546728,0 -96.394353,30.542016,0 -96.41439600000001,30.55731,0 -96.42500900000002,30.5938,0 -96.43515600000001,30.580403,0 -96.46214999999999,30.60735,0 -96.483154,30.61305400000001,0 -96.48256700000002,30.62676,0 -96.49825300000002,30.620396,0 -96.51677000000001,30.634706,0 -96.595051,30.644009,0 -96.572307,30.704599,0 -96.45590900000002,30.751238,0 -96.41171099999998,30.848592,0 -96.359792,30.913199,0 -96.242518,30.981066,0 -96.23641399999998,30.963029,0 -96.20574300000001,30.945522,0 -96.205056,30.902976,0 -96.17311100000001,30.833739,0 -96.17626900000001,30.800463,0 -96.163146,30.739632,0 -96.17583399999998,30.616553,0 -96.118628,30.455759,0 -96.078909,30.443366,0 -96.07638300000001,30.429545,0 -96.100447,30.425365,0 -96.11299800000002,30.395598,0 -96.138717,30.389638,0 -96.13498699999998,30.345101,0 -96.14277600000001,30.337134,0", "-98.96085799999999,30.509633,0 -99.30773500000001,30.506867,0 -99.485389,30.508297,0 -99.483546,30.717675,0 -99.47838999999999,30.942024,0 -99.089722,30.940426,0 -99.09042400000001,30.924896,0 -98.958775,30.923738,0 -98.96085799999999,30.509633,0", "-98.34847600000001,30.498041,0 -98.390745,30.505984,0 -98.58592000000002,30.506374,0 -98.96085799999999,30.509633,0 -98.958775,30.923738,0 -98.44225900000002,30.920885,0 -98.459577,30.879086,0 -98.422032,30.864391,0 -98.417118,30.843299,0 -98.38101500000001,30.837293,0 -98.379535,30.831331,0 -98.42325200000002,30.80134,0 -98.43024,30.769902,0 -98.42086299999998,30.759712,0 -98.371667,30.745285,0 -98.385415,30.722633,0 -98.40735000000001,30.716093,0 -98.402169,30.681731,0 -98.42726299999998,30.676149,0 -98.435457,30.664379,0 -98.41460500000001,30.643508,0 -98.40211400000001,30.575657,0 -98.38102600000001,30.568491,0 -98.35912899999998,30.575027,0 -98.34924100000002,30.565276,0 -98.34847600000001,30.498041,0", "-97.374313,30.425611,0 -97.39864400000002,30.444031,0 -97.421907,30.445952,0 -97.50184299999998,30.48439,0 -97.537115,30.475578,0 -97.56610000000001,30.499551,0 -97.58768400000001,30.505059,0 -97.680071,30.483256,0 -97.70500499999999,30.464108,0 -97.749363,30.451299,0 -97.765644,30.43745,0 -97.781514,30.438685,0 -97.84681600000002,30.474745,0 -97.86879,30.547439,0 -97.902064,30.57460100000001,0 -97.92213700000001,30.578639,0 -97.92818800000001,30.612136,0 -97.965459,30.629747,0 -97.991803,30.616968,0 -98.009016,30.630084,0 -98.024725,30.617563,0 -98.046065,30.635775,0 -97.96909300000002,30.78297,0 -97.833006,30.917051,0 -97.640579,30.878845,0 -97.31669000000001,30.7613,0 -97.274101,30.745628,0 -97.156441,30.472358,0 -97.15523599999999,30.461346,0 -97.334028,30.409544,0 -97.374313,30.425611,0", "-95.16278,30.353313,0 -95.22218299999999,30.325225,0 -95.208191,30.356219,0 -95.246835,30.38446,0 -95.31447900000001,30.416212,0 -95.359556,30.519307,0 -95.328839,30.871309,0 -95.318417,30.876357,0 -95.311222,30.899384,0 -95.25867,30.904009,0 -95.242389,30.890502,0 -95.238483,30.847786,0 -95.19690199999999,30.829516,0 -95.13554600000001,30.785652,0 -95.147952,30.729452,0 -95.132395,30.704513,0 -95.11599099999999,30.702873,0 -95.11371799999999,30.669818,0 -95.057976,30.685187,0 -95.053032,30.679015,0 -95.041611,30.68308100000001,0 -95.03914699999999,30.671069,0 -95.011245,30.657452,0 -95.023865,30.651156,0 -95.01255000000001,30.6273,0 -95.01522800000001,30.609566,0 -95.03478200000001,30.585269,0 -94.965681,30.576641,0 -94.927167,30.563428,0 -94.90153100000001,30.565452,0 -94.84051000000001,30.547044,0 -94.84131100000002,30.53426,0 -94.86429099999998,30.515185,0 -94.863421,30.503695,0 -94.84828400000001,30.491082,0 -95.16278,30.353313,0", "-95.80625000000001,30.246955,0 -96.10153899999999,30.22395600000001,0 -96.11147299999999,30.237589,0 -96.08685199999999,30.243582,0 -96.084502,30.292952,0 -96.094787,30.299269,0 -96.09622899999999,30.313514,0 -96.1259,30.31319,0 -96.14277600000001,30.337134,0 -96.13498699999998,30.345101,0 -96.138717,30.389638,0 -96.11299800000002,30.395598,0 -96.100447,30.425365,0 -96.07638300000001,30.429545,0 -96.078909,30.443366,0 -96.118628,30.455759,0 -96.17583399999998,30.616553,0 -96.163146,30.739632,0 -96.17626900000001,30.800463,0 -96.17311100000001,30.833739,0 -96.034413,30.847607,0 -95.908608,30.869099,0 -95.861755,30.867813,0 -95.82733000000002,30.634122,0 -95.801939,30.352111,0 -95.80625000000001,30.246955,0", "-96.29773300000001,30.389156,0 -96.336468,30.376265,0 -96.34739399999999,30.380747,0 -96.396674,30.35674,0 -96.41075799999999,30.361777,0 -96.42353800000001,30.348005,0 -96.45104199999999,30.348898,0 -96.648933,30.302012,0 -96.70881799999999,30.326709,0 -96.74940799999999,30.33112300000001,0 -96.77137400000001,30.378452,0 -96.797932,30.403943,0 -96.85458199999999,30.433033,0 -96.88265199999999,30.461744,0 -96.90158099999999,30.46594,0 -96.89740000000001,30.492359,0 -96.917046,30.534086,0 -96.96839400000002,30.566617,0 -96.62737799999999,30.736477,0 -96.59421899999998,30.727687,0 -96.572307,30.704599,0 -96.595051,30.644009,0 -96.51677000000001,30.634706,0 -96.49825300000002,30.620396,0 -96.48256700000002,30.62676,0 -96.483154,30.61305400000001,0 -96.46214999999999,30.60735,0 -96.43515600000001,30.580403,0 -96.42500900000002,30.5938,0 -96.41439600000001,30.55731,0 -96.394353,30.542016,0 -96.384595,30.546728,0 -96.37312800000001,30.541775,0 -96.37274600000001,30.550457,0 -96.36375099999998,30.549704,0 -96.353619,30.538844,0 -96.36040199999999,30.517562,0 -96.31642500000001,30.480406,0 -96.335194,30.487896,0 -96.333561,30.476859,0 -96.31991899999999,30.461759,0 -96.282344,30.448139,0 -96.274203,30.417199,0 -96.29037,30.411338,0 -96.29773300000001,30.389156,0", "-99.759169,30.286493,0 -100.12042,30.288981,0 -100.117294,30.695967,0 -100.117851,30.71150700000001,0 -99.483546,30.717675,0 -99.485389,30.508297,0 -99.30773500000001,30.506867,0 -99.31066800000002,30.284596,0 -99.759169,30.286493,0", "-100.691123,30.287785,0 -100.954001,30.287645,0 -100.95774,30.69965,0 -100.117294,30.695967,0 -100.12042,30.288981,0 -100.691123,30.287785,0", "-103.787463,29.267458,0 -103.792744,30.405275,0 -103.443339,30.667956,0 -102.577278,30.060124,0 -102.39016,29.921035,0 -102.324751,29.880309,0 -102.36798,29.845483,0 -102.385215,29.768142,0 -102.503521,29.78565,0 -102.552374,29.749695,0 -102.576926,29.778442,0 -102.638039,29.732533,0 -102.67679,29.744419,0 -102.80516,29.530344,0 -102.82264,29.412045,0 -102.883449,29.353572,0 -102.908764,29.269407,0 -102.866609,29.229241,0 -102.98854,29.191068,0 -103.153911,28.978892,0 -103.267037,29.007662,0 -103.2808,28.986583,0 -103.335971,29.050545,0 -103.375903,29.032315,0 -103.474532,29.072338,0 -103.526697,29.146849,0 -103.720779,29.190832,0 -103.74032,29.230548,0 -103.782625,29.229995,0 -103.768229,29.28143800000001,0 -103.787463,29.267458,0", "-101.759491,29.787368,0 -101.805605,29.7802,0 -101.819499,29.814325,0 -101.924627,29.788701,0 -101.973724,29.818971,0 -102.064403,29.784769,0 -102.324751,29.880309,0 -102.39016,29.921035,0 -102.577278,30.060124,0 -102.573531,30.278111,0 -102.370584,30.284968,0 -102.373985,30.604209,0 -102.14666,30.603835,0 -102.144996,30.66194,0 -101.758695,30.664653,0 -101.746213,30.652508,0 -101.68822,30.648839,0 -101.649515,30.626562,0 -101.654589,30.588535,0 -101.642412,30.564024,0 -101.649393,30.541513,0 -101.673907,30.52056500000001,0 -101.669306,30.503256,0 -101.685985,30.488822,0 -101.693858,30.459431,0 -101.718426,30.468198,0 -101.726811,30.463493,0 -101.714252,30.445851,0 -101.734929,30.421283,0 -101.692149,30.40228,0 -101.691714,30.381244,0 -101.653627,30.35712,0 -101.651346,30.34892,0 -101.705768,30.343971,0 -101.73753,30.318768,0 -101.750592,30.286075,0 -101.759015,30.284111,0 -101.759491,29.787368,0", "-104.987426,30.641467,0 -103.89669,30.406219,0 -103.792744,30.405275,0 -103.787463,29.267458,0 -104.046105,29.328313,0 -104.164859,29.400905,0 -104.205212,29.484229,0 -104.378074,29.550795,0 -104.53573,29.679643,0 -104.578041,29.808107,0 -104.674852,29.909449,0 -104.696977,30.057463,0 -104.675241,30.14912,0 -104.703097,30.238642,0 -104.814445,30.350619,0 -104.80696,30.376596,0 -104.853486,30.392411,0 -104.891169,30.5707,0 -104.987426,30.641467,0", "-97.659924,30.07416200000001,0 -97.72784200000001,30.022479,0 -98.17146700000001,30.349324,0 -98.12653799999998,30.439148,0 -98.099462,30.48671,0 -98.11034200000002,30.497875,0 -98.12461599999999,30.499948,0 -98.046065,30.635775,0 -98.024725,30.617563,0 -98.009016,30.630084,0 -97.991803,30.616968,0 -97.965459,30.629747,0 -97.92818800000001,30.612136,0 -97.92213700000001,30.578639,0 -97.902064,30.57460100000001,0 -97.86879,30.547439,0 -97.84681600000002,30.474745,0 -97.781514,30.438685,0 -97.765644,30.43745,0 -97.749363,30.451299,0 -97.70500499999999,30.464108,0 -97.680071,30.483256,0 -97.58768400000001,30.505059,0 -97.56610000000001,30.499551,0 -97.537115,30.475578,0 -97.50184299999998,30.48439,0 -97.421907,30.445952,0 -97.39864400000002,30.444031,0 -97.374313,30.425611,0 -97.493287,30.209187,0 -97.659924,30.07416200000001,0", "-95.095355,30.168906,0 -95.25649,30.04311,0 -95.284063,30.041094,0 -95.289984,30.029892,0 -95.30979000000001,30.034409,0 -95.32845300000001,30.05904,0 -95.35341699999999,30.075225,0 -95.397539,30.089003,0 -95.42887400000001,30.114601,0 -95.47275899999998,30.104511,0 -95.49153600000001,30.108952,0 -95.511258,30.144581,0 -95.544066,30.16333,0 -95.570212,30.158892,0 -95.58483800000001,30.142531,0 -95.67419700000002,30.101658,0 -95.715892,30.102381,0 -95.773695,30.087676,0 -95.81220100000002,30.088698,0 -95.80625000000001,30.246955,0 -95.801939,30.352111,0 -95.82733000000002,30.634122,0 -95.597848,30.52176400000001,0 -95.359556,30.519307,0 -95.31447900000001,30.416212,0 -95.246835,30.38446,0 -95.208191,30.356219,0 -95.22218299999999,30.325225,0 -95.16278,30.353313,0 -95.095355,30.168906,0", "-96.799847,30.164596,0 -96.854765,30.12406,0 -97.03266399999998,30.038354,0 -97.0367,30.058155,0 -97.09032200000002,30.258293,0 -97.187127,30.335415,0 -97.334028,30.409544,0 -97.15523599999999,30.461346,0 -97.156441,30.472358,0 -96.96839400000002,30.566617,0 -96.917046,30.534086,0 -96.89740000000001,30.492359,0 -96.90158099999999,30.46594,0 -96.88265199999999,30.461744,0 -96.85458199999999,30.433033,0 -96.797932,30.403943,0 -96.77137400000001,30.378452,0 -96.74940799999999,30.33112300000001,0 -96.70881799999999,30.326709,0 -96.648933,30.302012,0 -96.672432,30.270682,0 -96.712,30.247154,0 -96.742991,30.23938,0 -96.75852500000001,30.194058,0 -96.799847,30.164596,0", "-94.102856,30.162601,0 -94.15914000000001,30.174785,0 -94.167419,30.184854,0 -94.20373600000001,30.1877,0 -94.242251,30.166807,0 -94.272601,30.171608,0 -94.291431,30.151961,0 -94.30073899999999,30.124478,0 -94.342069,30.107826,0 -94.39823100000001,30.10613,0 -94.42363700000001,30.097799,0 -94.451875,30.110236,0 -94.47686200000001,30.116084,0 -94.608518,30.115772,0 -94.73366399999999,30.489781,0 -94.540718,30.492289,0 -94.548058,30.525631,0 -94.06360700000001,30.523024,0 -94.11427400000001,30.424484,0 -94.083326,30.345831,0 -94.109877,30.293632,0 -94.11083000000002,30.280389,0 -94.09676099999999,30.254881,0 -94.101872,30.242779,0 -94.10327599999999,30.208472,0 -94.08827599999999,30.203536,0 -94.085178,30.195117,0 -94.100094,30.178958,0 -94.102856,30.162601,0", "-98.593796,30.140019,0 -98.92277799999999,30.137796,0 -99.30973400000002,30.143202,0 -99.31066800000002,30.284596,0 -99.30773500000001,30.506867,0 -98.96085799999999,30.509633,0 -98.58592000000002,30.506374,0 -98.593796,30.140019,0", "-98.30280600000002,30.039314,0 -98.41899700000001,29.94811,0 -98.593796,30.140019,0 -98.58592000000002,30.506374,0 -98.390745,30.505984,0 -98.34847600000001,30.498041,0 -98.12653799999998,30.439148,0 -98.17146700000001,30.349324,0 -98.20711900000001,30.292262,0 -98.30280600000002,30.039314,0", "-94.45045500000002,29.896016,0 -94.98296999999998,29.886947,0 -95.00327200000001,29.917223,0 -94.98773799999999,29.964651,0 -95.010673,29.9955,0 -95.04521900000002,30.00028,0 -95.06124200000001,30.014756,0 -95.05164400000001,30.051451,0 -95.095355,30.168906,0 -95.16278,30.353313,0 -94.84828400000001,30.491082,0 -94.73366399999999,30.489781,0 -94.608518,30.115772,0 -94.47686200000001,30.116084,0 -94.451875,30.110236,0 -94.45045500000002,29.896016,0", "-97.32528099999999,29.783435,0 -97.659924,30.07416200000001,0 -97.493287,30.209187,0 -97.374313,30.425611,0 -97.334028,30.409544,0 -97.187127,30.335415,0 -97.09032200000002,30.258293,0 -97.0367,30.058155,0 -97.200103,29.892538,0 -97.32528099999999,29.783435,0", "-96.15755600000001,30.06655,0 -96.178034,30.057647,0 -96.24537299999999,30.074177,0 -96.261349,30.071061,0 -96.2758,30.078423,0 -96.27757,30.097723,0 -96.29143999999999,30.094528,0 -96.299635,30.10030100000001,0 -96.57121100000002,30.058763,0 -96.58335700000001,30.058682,0 -96.601241,30.072979,0 -96.62791399999999,30.053195,0 -96.64560000000002,30.072516,0 -96.63822900000001,30.110761,0 -96.660904,30.124733,0 -96.659897,30.149431,0 -96.686998,30.145674,0 -96.696557,30.170689,0 -96.712503,30.155143,0 -96.77740900000001,30.143791,0 -96.78014799999998,30.154861,0 -96.799847,30.164596,0 -96.75852500000001,30.194058,0 -96.742991,30.23938,0 -96.712,30.247154,0 -96.672432,30.270682,0 -96.648933,30.302012,0 -96.45104199999999,30.348898,0 -96.42353800000001,30.348005,0 -96.41075799999999,30.361777,0 -96.396674,30.35674,0 -96.34739399999999,30.380747,0 -96.336468,30.376265,0 -96.29773300000001,30.389156,0 -96.259349,30.37092,0 -96.22293200000001,30.379288,0 -96.198556,30.390807,0 -96.19107899999999,30.403365,0 -96.18212200000002,30.40214,0 -96.149727,30.380868,0 -96.14277600000001,30.337134,0 -96.1259,30.31319,0 -96.09622899999999,30.313514,0 -96.094787,30.299269,0 -96.084502,30.292952,0 -96.08685199999999,30.243582,0 -96.11147299999999,30.237589,0 -96.10153899999999,30.22395600000001,0 -96.11428799999999,30.211588,0 -96.121781,30.221012,0 -96.14187699999998,30.209814,0 -96.15754,30.214027,0 -96.173288,30.193971,0 -96.155557,30.14343,0 -96.164652,30.141002,0 -96.17950600000002,30.151139,0 -96.18328300000002,30.137989,0 -96.20035799999999,30.13446,0 -96.190546,30.118088,0 -96.198962,30.107388,0 -96.17059500000001,30.10411,0 -96.164057,30.097011,0 -96.16732999999999,30.083383,0 -96.15773900000001,30.08533600000001,0 -96.14243500000001,30.073805,0 -96.15755600000001,30.06655,0", "-98.00686800000001,29.757702,0 -98.03792799999999,29.844386,0 -98.30280600000002,30.039314,0 -98.20711900000001,30.292262,0 -98.17146700000001,30.349324,0 -97.72784200000001,30.022479,0 -97.800467,29.948865,0 -97.832953,29.935775,0 -97.90110799999998,29.886269,0 -97.90846299999998,29.866258,0 -97.923912,29.858766,0 -97.894493,29.856828,0 -97.955575,29.812641,0 -98.00686800000001,29.757702,0", "-100.013987,29.624752,0 -100.115783,29.626526,0 -100.691341,29.622097,0 -100.691123,30.287785,0 -100.12042,30.288981,0 -99.759169,30.286493,0 -99.76134999999999,30.080128,0 -99.921215,30.080361,0 -99.92120799999999,30.086309,0 -99.972914,30.087707,0 -99.98242800000001,30.025005,0 -99.99138499999998,30.020886,0 -100.004034,29.903687,0 -100.017722,29.893613,0 -100.01982,29.870718,0 -100.035598,29.851023,0 -100.025595,29.837287,0 -100.017698,29.796531,0 -100.037146,29.776375,0 -100.031347,29.745231,0 -100.042371,29.71637,0 -100.026074,29.683851,0 -100.029217,29.660485,0 -100.016093,29.643079,0 -100.013987,29.624752,0", "-100.691341,29.622097,0 -100.691476,29.448869,0 -100.705941,29.363967,0 -100.718804,29.340042,0 -100.740167,29.330728,0 -100.746186,29.302716,0 -100.739213,29.28213,0 -100.746308,29.258236,0 -100.756219,29.256332,0 -100.755585,29.243954,0 -100.787485,29.247854,0 -100.797357,29.242736,0 -101.009431,29.373482,0 -101.067738,29.473776,0 -101.261812,29.526692,0 -101.254969,29.628964,0 -101.309314,29.581125,0 -101.306247,29.652644,0 -101.368787,29.657373,0 -101.416487,29.745641,0 -101.401663,29.770112,0 -101.448814,29.760792,0 -101.470856,29.788895,0 -101.538736,29.763222,0 -101.544344,29.810323,0 -101.581881,29.765354,0 -101.640065,29.757163,0 -101.759491,29.787368,0 -101.759015,30.284111,0 -101.750592,30.286075,0 -100.954001,30.287645,0 -100.691123,30.287785,0 -100.691341,29.622097,0", "-99.621747,29.919973,0 -99.68967499999999,29.920187,0 -99.69329999999999,30.07767000000001,0 -99.76134999999999,30.080128,0 -99.759169,30.286493,0 -99.31066800000002,30.284596,0 -99.30973400000002,30.143202,0 -98.92277799999999,30.137796,0 -98.929913,29.791281,0 -99.17899800000002,29.910217,0 -99.31999300000001,29.92309,0 -99.621747,29.919973,0", "-95.83439700000001,29.79579,0 -95.95280899999999,29.742031,0 -95.975949,29.741972,0 -95.97472799999999,29.734591,0 -96.04573000000001,29.734441,0 -96.05268800000002,29.797955,0 -96.05722000000002,29.802244,0 -96.06803100000001,29.796217,0 -96.07862900000002,29.805767,0 -96.098489,29.808771,0 -96.10106,29.821237,0 -96.11616600000001,29.824527,0 -96.12655800000002,29.838647,0 -96.10042599999999,29.856966,0 -96.114938,29.873065,0 -96.09621499999999,29.879271,0 -96.12707700000001,29.895035,0 -96.12135400000001,29.915912,0 -96.13365300000001,29.93467800000001,0 -96.127481,29.942705,0 -96.11103199999999,29.94487,0 -96.12506199999999,29.960491,0 -96.096574,29.960851,0 -96.10505000000001,29.971234,0 -96.10550000000001,29.995075,0 -96.09232400000001,30.006059,0 -96.100037,30.021452,0 -96.11573100000001,30.024302,0 -96.117127,30.03947,0 -96.127717,30.049924,0 -96.148538,30.056155,0 -96.15755600000001,30.06655,0 -96.14243500000001,30.073805,0 -96.15773900000001,30.08533600000001,0 -96.16732999999999,30.083383,0 -96.164057,30.097011,0 -96.17059500000001,30.10411,0 -96.198962,30.107388,0 -96.190546,30.118088,0 -96.20035799999999,30.13446,0 -96.18328300000002,30.137989,0 -96.17950600000002,30.151139,0 -96.164652,30.141002,0 -96.155557,30.14343,0 -96.173288,30.193971,0 -96.15754,30.214027,0 -96.14187699999998,30.209814,0 -96.121781,30.221012,0 -96.11428799999999,30.211588,0 -96.10153899999999,30.22395600000001,0 -95.80625000000001,30.246955,0 -95.81220100000002,30.088698,0 -95.826393,30.079619,0 -95.846695,30.085431,0 -95.87573399999999,30.117221,0 -95.903132,30.118709,0 -95.91868100000001,30.135321,0 -95.96455,30.159006,0 -95.83439700000001,29.79579,0", "-93.760368,30.006176,0 -93.85744700000001,29.990867,0 -93.85650000000001,29.964815,0 -93.91032800000002,29.997039,0 -93.931111,29.994525,0 -93.95371000000002,30.010457,0 -94.00207500000001,30.013582,0 -94.03797299999999,30.035728,0 -94.03734,30.05908300000001,0 -94.063761,30.073819,0 -94.09232700000001,30.073533,0 -94.096706,30.100825,0 -94.08242399999999,30.115645,0 -94.086941,30.126436,0 -94.11098200000001,30.130482,0 -94.11369000000001,30.151722,0 -94.102856,30.162601,0 -94.100094,30.178958,0 -94.085178,30.195117,0 -94.08827599999999,30.203536,0 -94.10327599999999,30.208472,0 -94.101872,30.242779,0 -93.89788499999999,30.243534,0 -93.70752400000002,30.239579,0 -93.71500900000001,30.220513,0 -93.704526,30.181068,0 -93.696331,30.175884,0 -93.69982600000002,30.151017,0 -93.683308,30.14844,0 -93.686123,30.141461,0 -93.698804,30.14143500000001,0 -93.69708700000001,30.118139,0 -93.70854699999998,30.11495,0 -93.716024,30.095879,0 -93.71264400000001,30.060731,0 -93.760368,30.006176,0", "-94.357182,29.560129,0 -94.36806999999999,29.897759,0 -94.45045500000002,29.896016,0 -94.451875,30.110236,0 -94.42363700000001,30.097799,0 -94.39823100000001,30.10613,0 -94.342069,30.107826,0 -94.30073899999999,30.124478,0 -94.291431,30.151961,0 -94.272601,30.171608,0 -94.242251,30.166807,0 -94.20373600000001,30.1877,0 -94.167419,30.184854,0 -94.15914000000001,30.174785,0 -94.102856,30.162601,0 -94.11369000000001,30.151722,0 -94.11098200000001,30.130482,0 -94.086941,30.126436,0 -94.08242399999999,30.115645,0 -94.096706,30.100825,0 -94.09232700000001,30.073533,0 -94.063761,30.073819,0 -94.03734,30.05908300000001,0 -94.03797299999999,30.035728,0 -94.00207500000001,30.013582,0 -93.95371000000002,30.010457,0 -93.931111,29.994525,0 -93.91032800000002,29.997039,0 -93.85650000000001,29.964815,0 -93.951937,29.818579,0 -93.83512500000002,29.674792,0 -94.06558200000001,29.674297,0 -94.357182,29.560129,0", "-96.88008000000001,29.636855,0 -97.15060200000001,29.632816,0 -97.13868500000001,29.643504,0 -97.32528099999999,29.783435,0 -97.200103,29.892538,0 -97.0367,30.058155,0 -97.03266399999998,30.038354,0 -96.854765,30.12406,0 -96.799847,30.164596,0 -96.78014799999998,30.154861,0 -96.77740900000001,30.143791,0 -96.712503,30.155143,0 -96.696557,30.170689,0 -96.686998,30.145674,0 -96.659897,30.149431,0 -96.660904,30.124733,0 -96.63822900000001,30.110761,0 -96.64560000000002,30.072516,0 -96.62791399999999,30.053195,0 -96.57627700000002,29.96227,0 -96.860075,29.666076,0 -96.88008000000001,29.636855,0", "-95.216543,29.566755,0 -95.25516499999999,29.561568,0 -95.252937,29.572941,0 -95.27284199999998,29.601335,0 -95.289956,29.605289,0 -95.332071,29.603435,0 -95.345187,29.594366,0 -95.385204,29.592402,0 -95.39828900000001,29.583781,0 -95.42123100000001,29.586585,0 -95.489486,29.615588,0 -95.48491600000001,29.593379,0 -95.501831,29.581695,0 -95.50063999999999,29.622931,0 -95.60800399999999,29.668598,0 -95.83439700000001,29.79579,0 -95.96455,30.159006,0 -95.91868100000001,30.135321,0 -95.903132,30.118709,0 -95.87573399999999,30.117221,0 -95.846695,30.085431,0 -95.826393,30.079619,0 -95.81220100000002,30.088698,0 -95.773695,30.087676,0 -95.715892,30.102381,0 -95.67419700000002,30.101658,0 -95.58483800000001,30.142531,0 -95.570212,30.158892,0 -95.544066,30.16333,0 -95.511258,30.144581,0 -95.49153600000001,30.108952,0 -95.47275899999998,30.104511,0 -95.42887400000001,30.114601,0 -95.397539,30.089003,0 -95.35341699999999,30.075225,0 -95.32845300000001,30.05904,0 -95.30979000000001,30.034409,0 -95.289984,30.029892,0 -95.284063,30.041094,0 -95.25649,30.04311,0 -95.095355,30.168906,0 -95.05164400000001,30.051451,0 -95.06124200000001,30.014756,0 -95.04521900000002,30.00028,0 -95.010673,29.9955,0 -94.98773799999999,29.964651,0 -95.00327200000001,29.917223,0 -94.98296999999998,29.886947,0 -94.97959800000001,29.87303500000001,0 -94.955069,29.860441,0 -94.941648,29.838724,0 -94.91491400000001,29.836563,0 -94.92307,29.80667400000001,0 -94.920377,29.764811,0 -94.943861,29.72508,0 -94.93002800000001,29.718933,0 -94.91908699999999,29.700073,0 -94.93279,29.682436,0 -95.08847299999999,29.804205,0 -95.040605,29.711806,0 -94.98953900000001,29.679929,0 -95.01432800000002,29.559495,0 -95.06492,29.565019,0 -95.085596,29.54393,0 -95.10770700000001,29.533915,0 -95.11487099999999,29.519095,0 -95.161312,29.505575,0 -95.174702,29.50984,0 -95.19376100000001,29.534088,0 -95.20329099999999,29.568925,0 -95.216543,29.566755,0", "-98.65241599999999,29.751558,0 -98.661823,29.75488100000001,0 -98.71201800000002,29.73762,0 -98.717916,29.729903,0 -98.737791,29.73609,0 -98.74377200000001,29.722875,0 -98.789535,29.718811,0 -98.929913,29.791281,0 -98.92277799999999,30.137796,0 -98.593796,30.140019,0 -98.41899700000001,29.94811,0 -98.65241599999999,29.751558,0", "-96.181316,29.633373,0 -96.21955499999999,29.658551,0 -96.265615,29.673895,0 -96.27837200000001,29.694045,0 -96.28002799999999,29.715649,0 -96.29986500000001,29.730535,0 -96.347656,29.827024,0 -96.35172300000001,29.830367,0 -96.36332,29.817922,0 -96.422411,29.826751,0 -96.44741299999998,29.857355,0 -96.482372,29.864902,0 -96.541685,29.907119,0 -96.57627700000002,29.96227,0 -96.62791399999999,30.053195,0 -96.601241,30.072979,0 -96.58335700000001,30.058682,0 -96.57121100000002,30.058763,0 -96.299635,30.10030100000001,0 -96.29143999999999,30.094528,0 -96.27757,30.097723,0 -96.2758,30.078423,0 -96.261349,30.071061,0 -96.24537299999999,30.074177,0 -96.178034,30.057647,0 -96.15755600000001,30.06655,0 -96.148538,30.056155,0 -96.127717,30.049924,0 -96.117127,30.03947,0 -96.11573100000001,30.024302,0 -96.100037,30.021452,0 -96.09232400000001,30.006059,0 -96.10550000000001,29.995075,0 -96.10505000000001,29.971234,0 -96.096574,29.960851,0 -96.12506199999999,29.960491,0 -96.11103199999999,29.94487,0 -96.127481,29.942705,0 -96.13365300000001,29.93467800000001,0 -96.12135400000001,29.915912,0 -96.12707700000001,29.895035,0 -96.09621499999999,29.879271,0 -96.114938,29.873065,0 -96.10042599999999,29.856966,0 -96.12655800000002,29.838647,0 -96.11616600000001,29.824527,0 -96.10106,29.821237,0 -96.098489,29.808771,0 -96.07862900000002,29.805767,0 -96.06803100000001,29.796217,0 -96.05722000000002,29.802244,0 -96.05268800000002,29.797955,0 -96.04573000000001,29.734441,0 -96.04159399999999,29.721912,0 -96.02895199999999,29.72237,0 -96.01953000000002,29.710564,0 -96.02714399999999,29.70534,0 -96.022772,29.686841,0 -96.05864699999999,29.68402,0 -96.05105500000001,29.66678,0 -96.03757400000001,29.674083,0 -96.02336699999999,29.663479,0 -96.03066900000002,29.653658,0 -96.02123899999998,29.631303,0 -96.027991,29.599907,0 -96.083634,29.600142,0 -96.100739,29.615839,0 -96.13376000000001,29.617019,0 -96.181316,29.633373,0", "-99.61991999999999,29.630503,0 -100.013987,29.624752,0 -100.016093,29.643079,0 -100.029217,29.660485,0 -100.026074,29.683851,0 -100.042371,29.71637,0 -100.031347,29.745231,0 -100.037146,29.776375,0 -100.017698,29.796531,0 -100.025595,29.837287,0 -100.035598,29.851023,0 -100.01982,29.870718,0 -100.017722,29.893613,0 -100.004034,29.903687,0 -99.99138499999998,30.020886,0 -99.98242800000001,30.025005,0 -99.972914,30.087707,0 -99.92120799999999,30.086309,0 -99.921215,30.080361,0 -99.76134999999999,30.080128,0 -99.69329999999999,30.07767000000001,0 -99.68967499999999,29.920187,0 -99.621747,29.919973,0 -99.61991999999999,29.630503,0", "-97.641961,29.650527,0 -97.65162000000001,29.661736,0 -97.74419,29.694394,0 -97.743717,29.711798,0 -97.757656,29.72079,0 -97.77662299999999,29.718889,0 -97.77000099999998,29.730666,0 -97.77792799999999,29.748696,0 -97.79130299999999,29.759506,0 -97.809263,29.756202,0 -97.82625400000001,29.789986,0 -97.84325200000001,29.783452,0 -97.85654300000002,29.838684,0 -97.894493,29.856828,0 -97.923912,29.858766,0 -97.90846299999998,29.866258,0 -97.90110799999998,29.886269,0 -97.832953,29.935775,0 -97.800467,29.948865,0 -97.72784200000001,30.022479,0 -97.659924,30.07416200000001,0 -97.32528099999999,29.783435,0 -97.60601,29.641035,0 -97.641961,29.650527,0", "-98.32763,29.594941,0 -98.348604,29.621841,0 -98.352076,29.658551,0 -98.36705300000001,29.671148,0 -98.385379,29.673711,0 -98.384647,29.711272,0 -98.354067,29.716769,0 -98.36105599999999,29.735199,0 -98.38435699999999,29.725927,0 -98.389385,29.737913,0 -98.41693500000001,29.753434,0 -98.42361099999999,29.733831,0 -98.43678800000001,29.731731,0 -98.440129,29.7217,0 -98.467558,29.744536,0 -98.49600100000001,29.740809,0 -98.55919699999998,29.763193,0 -98.58413799999998,29.749319,0 -98.605074,29.754171,0 -98.61578600000001,29.74239800000001,0 -98.630358,29.750826,0 -98.64515199999998,29.745972,0 -98.65241599999999,29.751558,0 -98.41899700000001,29.94811,0 -98.30280600000002,30.039314,0 -98.03792799999999,29.844386,0 -98.00686800000001,29.757702,0 -98.08671099999999,29.691784,0 -98.32763,29.594941,0", "-96.65308400000002,29.237498,0 -96.67382099999999,29.254656,0 -96.575445,29.346564,0 -96.79516200000001,29.578916,0 -96.83722400000002,29.57648,0 -96.84583000000001,29.612489,0 -96.88008000000001,29.636855,0 -96.860075,29.666076,0 -96.57627700000002,29.96227,0 -96.541685,29.907119,0 -96.482372,29.864902,0 -96.44741299999998,29.857355,0 -96.422411,29.826751,0 -96.36332,29.817922,0 -96.35172300000001,29.830367,0 -96.347656,29.827024,0 -96.29986500000001,29.730535,0 -96.28002799999999,29.715649,0 -96.27837200000001,29.694045,0 -96.265615,29.673895,0 -96.21955499999999,29.658551,0 -96.181316,29.633373,0 -96.31275800000002,29.511801,0 -96.352783,29.412242,0 -96.65308400000002,29.237498,0", "-99.61991999999999,29.630503,0 -99.621747,29.919973,0 -99.31999300000001,29.92309,0 -99.17899800000002,29.910217,0 -98.929913,29.791281,0 -98.789535,29.718811,0 -98.80929500000001,29.69612400000001,0 -98.920092,29.576318,0 -98.96590800000001,29.561184,0 -98.982105,29.56546,0 -98.987713,29.621874,0 -99.41791000000002,29.628235,0 -99.61991999999999,29.630503,0", "-94.377194,29.552199,0 -94.384603,29.600365,0 -94.410353,29.600316,0 -94.436156,29.568133,0 -94.46041799999999,29.566618,0 -94.512612,29.547697,0 -94.533891,29.554214,0 -94.56462999999999,29.579228,0 -94.788284,29.538787,0 -94.70661699999998,29.658742,0 -94.700476,29.754791,0 -94.735923,29.793208,0 -94.829615,29.760081,0 -94.88736299999999,29.668766,0 -94.93279,29.682436,0 -94.91908699999999,29.700073,0 -94.93002800000001,29.718933,0 -94.943861,29.72508,0 -94.920377,29.764811,0 -94.92307,29.80667400000001,0 -94.91491400000001,29.836563,0 -94.941648,29.838724,0 -94.955069,29.860441,0 -94.97959800000001,29.87303500000001,0 -94.98296999999998,29.886947,0 -94.45045500000002,29.896016,0 -94.36806999999999,29.897759,0 -94.357182,29.560129,0 -94.377194,29.552199,0", "-98.14320799999999,29.443896,0 -98.144627,29.450797,0 -98.13241199999999,29.45838,0 -98.13065700000001,29.489982,0 -98.146756,29.496215,0 -98.173146,29.487497,0 -98.177488,29.504528,0 -98.195944,29.499337,0 -98.20789199999999,29.528411,0 -98.227149,29.534684,0 -98.24091199999998,29.553242,0 -98.23383200000002,29.565502,0 -98.25773600000001,29.575971,0 -98.262779,29.560469,0 -98.28639200000001,29.559927,0 -98.32763,29.594941,0 -98.08671099999999,29.691784,0 -98.00686800000001,29.757702,0 -97.955575,29.812641,0 -97.894493,29.856828,0 -97.85654300000002,29.838684,0 -97.84325200000001,29.783452,0 -97.82625400000001,29.789986,0 -97.809263,29.756202,0 -97.79130299999999,29.759506,0 -97.77792799999999,29.748696,0 -97.77000099999998,29.730666,0 -97.77662299999999,29.718889,0 -97.757656,29.72079,0 -97.743717,29.711798,0 -97.74419,29.694394,0 -97.65162000000001,29.661736,0 -97.641961,29.650527,0 -97.843114,29.3847,0 -98.10151999999999,29.389074,0 -98.11798400000001,29.378355,0 -98.13714199999998,29.410782,0 -98.133656,29.426309,0 -98.14320799999999,29.443896,0", "-95.847497,29.272449,0 -95.88174600000001,29.277889,0 -95.91683500000001,29.319605,0 -95.94308800000002,29.328394,0 -95.96136900000001,29.350647,0 -95.950031,29.368577,0 -95.97288199999998,29.383195,0 -95.98837,29.420475,0 -96.04087700000001,29.43984,0 -96.040725,29.454055,0 -96.06510100000001,29.481549,0 -96.030936,29.494524,0 -96.029341,29.505933,0 -96.06075200000001,29.518087,0 -96.0596,29.542353,0 -96.04871300000002,29.550673,0 -96.067115,29.571979,0 -96.06825199999999,29.5922,0 -96.083634,29.600142,0 -96.027991,29.599907,0 -96.02123899999998,29.631303,0 -96.03066900000002,29.653658,0 -96.02336699999999,29.663479,0 -96.03757400000001,29.674083,0 -96.05105500000001,29.66678,0 -96.05864699999999,29.68402,0 -96.022772,29.686841,0 -96.02714399999999,29.70534,0 -96.01953000000002,29.710564,0 -96.02895199999999,29.72237,0 -96.04159399999999,29.721912,0 -96.04573000000001,29.734441,0 -95.97472799999999,29.734591,0 -95.975949,29.741972,0 -95.95280899999999,29.742031,0 -95.83439700000001,29.79579,0 -95.60800399999999,29.668598,0 -95.50063999999999,29.622931,0 -95.501831,29.581695,0 -95.48491600000001,29.593379,0 -95.489486,29.615588,0 -95.42123100000001,29.586585,0 -95.46871799999998,29.438087,0 -95.56433199999999,29.43378,0 -95.55596300000001,29.40406700000001,0 -95.578943,29.385733,0 -95.59336999999999,29.330787,0 -95.630053,29.329979,0 -95.639888,29.322114,0 -95.64421400000001,29.299339,0 -95.685345,29.303282,0 -95.76836299999999,29.327212,0 -95.792457,29.306123,0 -95.805275,29.311208,0 -95.847497,29.272449,0", "-97.731675,29.230155,0 -97.86205800000001,29.360313,0 -97.843114,29.3847,0 -97.641961,29.650527,0 -97.60601,29.641035,0 -97.32528099999999,29.783435,0 -97.13868500000001,29.643504,0 -97.15060200000001,29.632816,0 -97.20829699999999,29.587558,0 -97.21097399999998,29.507856,0 -97.236991,29.387463,0 -97.494501,29.213456,0 -97.61891,29.118079,0 -97.731675,29.230155,0", "-98.807287,29.251483,0 -98.80929500000001,29.69612400000001,0 -98.789535,29.718811,0 -98.74377200000001,29.722875,0 -98.737791,29.73609,0 -98.717916,29.729903,0 -98.71201800000002,29.73762,0 -98.661823,29.75488100000001,0 -98.65241599999999,29.751558,0 -98.64515199999998,29.745972,0 -98.630358,29.750826,0 -98.61578600000001,29.74239800000001,0 -98.605074,29.754171,0 -98.58413799999998,29.749319,0 -98.55919699999998,29.763193,0 -98.49600100000001,29.740809,0 -98.467558,29.744536,0 -98.440129,29.7217,0 -98.43678800000001,29.731731,0 -98.42361099999999,29.733831,0 -98.41693500000001,29.753434,0 -98.389385,29.737913,0 -98.38435699999999,29.725927,0 -98.36105599999999,29.735199,0 -98.354067,29.716769,0 -98.384647,29.711272,0 -98.385379,29.673711,0 -98.36705300000001,29.671148,0 -98.352076,29.658551,0 -98.348604,29.621841,0 -98.32763,29.594941,0 -98.28639200000001,29.559927,0 -98.262779,29.560469,0 -98.25773600000001,29.575971,0 -98.23383200000002,29.565502,0 -98.24091199999998,29.553242,0 -98.227149,29.534684,0 -98.20789199999999,29.528411,0 -98.195944,29.499337,0 -98.177488,29.504528,0 -98.173146,29.487497,0 -98.146756,29.496215,0 -98.13065700000001,29.489982,0 -98.13241199999999,29.45838,0 -98.144627,29.450797,0 -98.14320799999999,29.443896,0 -98.42120599999998,29.115347,0 -98.807287,29.251483,0", "-98.80904200000002,29.092334,0 -99.413301,29.092721,0 -99.41791000000002,29.628235,0 -98.987713,29.621874,0 -98.982105,29.56546,0 -98.96590800000001,29.561184,0 -98.920092,29.576318,0 -98.80929500000001,29.69612400000001,0 -98.807287,29.251483,0 -98.80904200000002,29.092334,0", "-96.980113,29.109914,0 -97.236991,29.387463,0 -97.21097399999998,29.507856,0 -97.20829699999999,29.587558,0 -97.15060200000001,29.632816,0 -96.88008000000001,29.636855,0 -96.84583000000001,29.612489,0 -96.83722400000002,29.57648,0 -96.79516200000001,29.578916,0 -96.575445,29.346564,0 -96.67382099999999,29.254656,0 -96.93229900000002,29.062208,0 -96.980113,29.109914,0", "-95.87667999999999,29.232253,0 -95.96469599999999,29.152485,0 -96.30709899999999,28.966391,0 -96.65308400000002,29.237498,0 -96.352783,29.412242,0 -96.31275800000002,29.511801,0 -96.181316,29.633373,0 -96.13376000000001,29.617019,0 -96.100739,29.615839,0 -96.083634,29.600142,0 -96.06825199999999,29.5922,0 -96.067115,29.571979,0 -96.04871300000002,29.550673,0 -96.0596,29.542353,0 -96.06075200000001,29.518087,0 -96.029341,29.505933,0 -96.030936,29.494524,0 -96.06510100000001,29.481549,0 -96.040725,29.454055,0 -96.04087700000001,29.43984,0 -95.98837,29.420475,0 -95.97288199999998,29.383195,0 -95.950031,29.368577,0 -95.96136900000001,29.350647,0 -95.94308800000002,29.328394,0 -95.91683500000001,29.319605,0 -95.88174600000001,29.277889,0 -95.847497,29.272449,0 -95.84436899999999,29.261771,0 -95.87667999999999,29.232253,0", "-99.413301,29.092721,0 -100.115029,29.089209,0 -100.115783,29.626526,0 -100.013987,29.624752,0 -99.61991999999999,29.630503,0 -99.41791000000002,29.628235,0 -99.413301,29.092721,0", "-100.115029,29.089209,0 -100.669132,29.080313,0 -100.768975,29.166807,0 -100.797357,29.242736,0 -100.787485,29.247854,0 -100.755585,29.243954,0 -100.756219,29.256332,0 -100.746308,29.258236,0 -100.739213,29.28213,0 -100.746186,29.302716,0 -100.740167,29.330728,0 -100.718804,29.340042,0 -100.705941,29.363967,0 -100.691476,29.448869,0 -100.691341,29.622097,0 -100.115783,29.626526,0 -100.115029,29.089209,0", "-95.06657199999999,29.196117,0 -95.16073,29.200271,0 -95.16498799999999,29.11779,0 -95.197552,29.105465,0 -95.24861800000001,28.978638,0 -95.52680699999999,28.803497,0 -95.54476,28.83048300000001,0 -95.58206900000002,28.8334,0 -95.591453,28.862736,0 -95.650284,28.912458,0 -95.65584500000001,28.945759,0 -95.68425000000001,28.960684,0 -95.768862,28.977363,0 -95.770478,29.007283,0 -95.799341,29.034592,0 -95.78907100000002,29.072769,0 -95.80746600000001,29.090934,0 -95.823297,29.129202,0 -95.85181599999999,29.154177,0 -95.85351,29.172605,0 -95.840654,29.178998,0 -95.846833,29.21229,0 -95.87667999999999,29.232253,0 -95.84436899999999,29.261771,0 -95.847497,29.272449,0 -95.805275,29.311208,0 -95.792457,29.306123,0 -95.76836299999999,29.327212,0 -95.685345,29.303282,0 -95.64421400000001,29.299339,0 -95.639888,29.322114,0 -95.630053,29.329979,0 -95.59336999999999,29.330787,0 -95.578943,29.385733,0 -95.55596300000001,29.40406700000001,0 -95.56433199999999,29.43378,0 -95.46871799999998,29.438087,0 -95.42123100000001,29.586585,0 -95.39828900000001,29.583781,0 -95.385204,29.592402,0 -95.345187,29.594366,0 -95.332071,29.603435,0 -95.289956,29.605289,0 -95.27284199999998,29.601335,0 -95.252937,29.572941,0 -95.25516499999999,29.561568,0 -95.216543,29.566755,0 -95.23601399999998,29.474463,0 -95.060614,29.204925,0 -95.06657199999999,29.196117,0", "-94.533891,29.554214,0 -94.512612,29.547697,0 -94.46041799999999,29.566618,0 -94.436156,29.568133,0 -94.410353,29.600316,0 -94.384603,29.600365,0 -94.377194,29.552199,0 -94.682712,29.433138,0 -94.766744,29.364228,0 -94.785444,29.383495,0 -94.68210999999998,29.475343,0 -94.572885,29.533283,0 -94.501473,29.517754,0 -94.46998499999998,29.55701,0 -94.51100200000001,29.545377,0 -94.533891,29.554214,0 |-95.06657199999999,29.196117,0 -95.060614,29.204925,0 -95.23601399999998,29.474463,0 -95.216543,29.566755,0 -95.20329099999999,29.568925,0 -95.19376100000001,29.534088,0 -95.174702,29.50984,0 -95.161312,29.505575,0 -95.11487099999999,29.519095,0 -95.10770700000001,29.533915,0 -95.085596,29.54393,0 -95.06492,29.565019,0 -95.01432800000002,29.559495,0 -94.91135800000001,29.500564,0 -94.983015,29.460759,0 -94.94395900000001,29.464913,0 -94.952709,29.424467,0 -94.913646,29.420345,0 -94.91719400000001,29.448054,0 -94.891336,29.399558,0 -94.815551,29.371166,0 -94.891672,29.394065,0 -94.898988,29.30901100000001,0 -94.951335,29.326158,0 -95.06657199999999,29.196117,0 |-94.91362799999999,29.25781,0 -94.76757499999999,29.342687,0 -94.7486,29.319727,0 -95.105622,29.097201,0 -94.91362799999999,29.25781,0", "-98.18686299999999,28.882197,0 -98.31980900000002,29.022047,0 -98.42120599999998,29.115347,0 -98.14320799999999,29.443896,0 -98.133656,29.426309,0 -98.13714199999998,29.410782,0 -98.11798400000001,29.378355,0 -98.10151999999999,29.389074,0 -97.843114,29.3847,0 -97.86205800000001,29.360313,0 -97.731675,29.230155,0 -98.18686299999999,28.882197,0", "-97.30872599999999,28.868421,0 -97.32413699999998,28.874316,0 -97.32995099999999,28.887776,0 -97.37939,28.904141,0 -97.385746,28.917153,0 -97.398296,28.91516,0 -97.423481,28.925407,0 -97.57601100000001,28.816454,0 -97.76010399999998,29.007747,0 -97.61891,29.118079,0 -97.494501,29.213456,0 -97.236991,29.387463,0 -96.980113,29.109914,0 -97.30872599999999,28.868421,0", "-96.324764,28.67067700000001,0 -96.392026,28.670523,0 -96.39297999999999,28.726298,0 -96.427336,28.712284,0 -96.449927,28.755305,0 -96.432509,28.69752,0 -96.559191,28.700969,0 -96.57081100000001,28.692113,0 -96.57246499999999,28.808442,0 -96.576739,28.690961,0 -96.591754,28.717631,0 -96.646771,28.714413,0 -96.66009200000001,28.722994,0 -96.66917100000001,28.755897,0 -96.69779699999998,28.767806,0 -96.707471,28.812661,0 -96.72634700000002,28.821967,0 -96.71215599999998,28.852308,0 -96.73726499999999,28.888895,0 -96.79158,28.924509,0 -96.81204200000001,28.961392,0 -96.81034099999998,28.97879,0 -96.838837,29.024162,0 -96.93229900000002,29.062208,0 -96.67382099999999,29.254656,0 -96.65308400000002,29.237498,0 -96.30709899999999,28.966391,0 -96.324764,28.67067700000001,0", "-98.808195,28.639249,0 -98.80904200000002,29.092334,0 -98.807287,29.251483,0 -98.42120599999998,29.115347,0 -98.31980900000002,29.022047,0 -98.18686299999999,28.882197,0 -98.10114400000001,28.785678,0 -98.34210899999999,28.606415,0 -98.34407800000001,28.63814,0 -98.808195,28.639249,0", "-96.32640499999999,28.634361,0 -96.324764,28.67067700000001,0 -96.30709899999999,28.966391,0 -95.96469599999999,29.152485,0 -95.87667999999999,29.232253,0 -95.846833,29.21229,0 -95.840654,29.178998,0 -95.85351,29.172605,0 -95.85181599999999,29.154177,0 -95.823297,29.129202,0 -95.80746600000001,29.090934,0 -95.78907100000002,29.072769,0 -95.799341,29.034592,0 -95.770478,29.007283,0 -95.768862,28.977363,0 -95.68425000000001,28.960684,0 -95.65584500000001,28.945759,0 -95.650284,28.912458,0 -95.591453,28.862736,0 -95.58206900000002,28.8334,0 -95.54476,28.83048300000001,0 -95.52680699999999,28.803497,0 -95.68326400000001,28.727214,0 -95.67155200000001,28.752941,0 -95.786593,28.739133,0 -95.937549,28.690721,0 -95.95638700000002,28.622942,0 -95.70238500000001,28.719248,0 -96.20682799999999,28.488663,0 -95.99188800000002,28.596695,0 -95.98399000000001,28.653402,0 -96.23783400000001,28.571596,0 -96.23927499999999,28.59739,0 -96.15771599999999,28.611503,0 -96.240702,28.635131,0 -96.15130499999998,28.762938,0 -96.212418,28.686989,0 -96.286219,28.661995,0 -96.270624,28.709249,0 -96.32640499999999,28.634361,0", "-98.007369,28.687078,0 -98.10114400000001,28.785678,0 -98.18686299999999,28.882197,0 -97.731675,29.230155,0 -97.61891,29.118079,0 -97.76010399999998,29.007747,0 -97.57601100000001,28.816454,0 -97.78415200000001,28.669841,0 -97.793864,28.675553,0 -97.83141699999999,28.66805,0 -97.876622,28.68595,0 -97.91892799999999,28.717093,0 -98.007369,28.687078,0", "-97.15604500000001,28.53877900000001,0 -97.16137000000001,28.580741,0 -97.176492,28.593548,0 -97.166298,28.726977,0 -97.17953500000002,28.734677,0 -97.167717,28.74631,0 -97.164574,28.777921,0 -97.190941,28.81305800000001,0 -97.194802,28.8375,0 -97.22970700000001,28.866875,0 -97.24010600000001,28.86714200000001,0 -97.231752,28.852233,0 -97.24942099999998,28.852687,0 -97.257577,28.841873,0 -97.30220300000001,28.844838,0 -97.30872599999999,28.868421,0 -96.980113,29.109914,0 -96.93229900000002,29.062208,0 -96.838837,29.024162,0 -96.81034099999998,28.97879,0 -96.81204200000001,28.961392,0 -96.79158,28.924509,0 -96.73726499999999,28.888895,0 -96.71215599999998,28.852308,0 -96.72634700000002,28.821967,0 -96.707471,28.812661,0 -96.69779699999998,28.767806,0 -96.66917100000001,28.755897,0 -96.66009200000001,28.722994,0 -96.665234,28.711207,0 -96.657574,28.694888,0 -96.72489800000001,28.659285,0 -96.86173499999998,28.622017,0 -96.927549,28.581185,0 -96.903432,28.546021,0 -96.9083,28.526397,0 -96.89987699999999,28.501791,0 -96.912603,28.493885,0 -96.912435,28.484227,0 -96.92288000000002,28.481768,0 -96.953307,28.499647,0 -97.022835,28.510797,0 -97.02647399999999,28.525146,0 -97.04714200000001,28.526637,0 -97.060036,28.54308,0 -97.06023500000001,28.53757,0 -97.078271,28.540362,0 -97.082261,28.5299,0 -97.11378600000001,28.54729800000001,0 -97.15604500000001,28.53877900000001,0", "-99.409727,28.63827,0 -100.11286,28.638459,0 -100.115029,29.089209,0 -99.413301,29.092721,0 -99.409727,28.63827,0", "-98.808195,28.639249,0 -99.393666,28.636804,0 -99.409727,28.63827,0 -99.413301,29.092721,0 -98.80904200000002,29.092334,0 -98.808195,28.639249,0", "-100.110729,28.203285,0 -100.214416,28.202206,0 -100.223809,28.241727,0 -100.298266,28.280622,0 -100.293239,28.320628,0 -100.351919,28.394447,0 -100.37712,28.478913,0 -100.346152,28.501072,0 -100.419884,28.544451,0 -100.403527,28.589992,0 -100.498264,28.661244,0 -100.590149,28.894469,0 -100.647585,28.922596,0 -100.669132,29.080313,0 -100.115029,29.089209,0 -100.11286,28.638459,0 -100.110729,28.203285,0", "-97.375942,28.382132,0 -97.385982,28.392032,0 -97.39332999999999,28.388534,0 -97.40111899999999,28.404353,0 -97.42473999999999,28.409981,0 -97.44375299999999,28.397105,0 -97.48499700000001,28.436238,0 -97.50091999999999,28.440289,0 -97.51922300000001,28.433819,0 -97.52303799999999,28.444941,0 -97.54516400000001,28.449129,0 -97.55410500000001,28.462203,0 -97.557958,28.507791,0 -97.574049,28.5247,0 -97.641448,28.522529,0 -97.672203,28.53423,0 -97.70274399999998,28.53489,0 -97.729799,28.588308,0 -97.73861899999999,28.626629,0 -97.78415200000001,28.669841,0 -97.57601100000001,28.816454,0 -97.423481,28.925407,0 -97.398296,28.91516,0 -97.385746,28.917153,0 -97.37939,28.904141,0 -97.32995099999999,28.887776,0 -97.32413699999998,28.874316,0 -97.30872599999999,28.868421,0 -97.30220300000001,28.844838,0 -97.257577,28.841873,0 -97.24942099999998,28.852687,0 -97.231752,28.852233,0 -97.24010600000001,28.86714200000001,0 -97.22970700000001,28.866875,0 -97.194802,28.8375,0 -97.190941,28.81305800000001,0 -97.164574,28.777921,0 -97.167717,28.74631,0 -97.17953500000002,28.734677,0 -97.166298,28.726977,0 -97.176492,28.593548,0 -97.16137000000001,28.580741,0 -97.15604500000001,28.53877900000001,0 -97.375942,28.382132,0", "-98.23893999999999,28.060933,0 -98.33936799999999,28.061629,0 -98.34210899999999,28.606415,0 -98.10114400000001,28.785678,0 -98.007369,28.687078,0 -98.09265999999998,28.656016,0 -97.813227,28.169878,0 -97.89722000000002,28.110854,0 -97.89798999999999,28.05888300000001,0 -98.23893999999999,28.060933,0", "-97.531477,28.156364,0 -97.55723400000001,28.121535,0 -97.813227,28.169878,0 -98.09265999999998,28.656016,0 -98.007369,28.687078,0 -97.91892799999999,28.717093,0 -97.876622,28.68595,0 -97.83141699999999,28.66805,0 -97.793864,28.675553,0 -97.78415200000001,28.669841,0 -97.73861899999999,28.626629,0 -97.729799,28.588308,0 -97.70274399999998,28.53489,0 -97.672203,28.53423,0 -97.641448,28.522529,0 -97.574049,28.5247,0 -97.557958,28.507791,0 -97.55410500000001,28.462203,0 -97.54516400000001,28.449129,0 -97.52303799999999,28.444941,0 -97.51922300000001,28.433819,0 -97.50091999999999,28.440289,0 -97.48499700000001,28.436238,0 -97.44375299999999,28.397105,0 -97.42473999999999,28.409981,0 -97.40111899999999,28.404353,0 -97.39332999999999,28.388534,0 -97.385982,28.392032,0 -97.375942,28.382132,0 -97.531477,28.156364,0", "-98.807045,28.060999,0 -99.39022900000001,28.036037,0 -99.39263299999999,28.203913,0 -99.393666,28.636804,0 -98.808195,28.639249,0 -98.807045,28.060999,0", "-98.33936799999999,28.061629,0 -98.807045,28.060999,0 -98.808195,28.639249,0 -98.34407800000001,28.63814,0 -98.34210899999999,28.606415,0 -98.33936799999999,28.061629,0", "-99.39263299999999,28.203913,0 -100.110729,28.203285,0 -100.11286,28.638459,0 -99.409727,28.63827,0 -99.393666,28.636804,0 -99.39263299999999,28.203913,0", "-97.260554,28.065018,0 -97.263156,28.080335,0 -97.280383,28.08952,0 -97.28509099999999,28.103443,0 -97.29608500000002,28.098202,0 -97.309741,28.106369,0 -97.304782,28.116367,0 -97.31138199999998,28.135855,0 -97.320201,28.134238,0 -97.318279,28.113487,0 -97.332393,28.123502,0 -97.34044200000001,28.113582,0 -97.37082300000002,28.131359,0 -97.38253399999999,28.119225,0 -97.39630500000001,28.124163,0 -97.390995,28.112532,0 -97.396466,28.102084,0 -97.42199400000001,28.110066,0 -97.421322,28.132133,0 -97.445065,28.131324,0 -97.443135,28.14416,0 -97.469129,28.15444,0 -97.46915899999999,28.170541,0 -97.49632000000001,28.159223,0 -97.50810699999998,28.14432,0 -97.516057,28.154625,0 -97.531477,28.156364,0 -97.375942,28.382132,0 -97.15604500000001,28.53877900000001,0 -97.11378600000001,28.54729800000001,0 -97.082261,28.5299,0 -97.078271,28.540362,0 -97.06023500000001,28.53757,0 -97.060036,28.54308,0 -97.04714200000001,28.526637,0 -97.02647399999999,28.525146,0 -97.022835,28.510797,0 -96.953307,28.499647,0 -96.92288000000002,28.481768,0 -96.912435,28.484227,0 -96.912603,28.493885,0 -96.89987699999999,28.501791,0 -96.845287,28.465718,0 -96.83615500000002,28.447057,0 -96.814578,28.428945,0 -96.78859900000001,28.446534,0 -96.75936299999999,28.411192,0 -96.775622,28.39191200000001,0 -96.853757,28.405278,0 -96.788493,28.352753,0 -96.78653300000001,28.313142,0 -97.11757900000001,28.269705,0 -97.12516299999999,28.244153,0 -97.100657,28.220953,0 -97.088793,28.220629,0 -97.05950300000001,28.201886,0 -97.02383500000001,28.200084,0 -97.132105,28.130717,0 -97.135683,28.162099,0 -97.16826100000002,28.159749,0 -97.15732800000001,28.116672,0 -97.260554,28.065018,0", "-96.89987699999999,28.501791,0 -96.9083,28.526397,0 -96.903432,28.546021,0 -96.927549,28.581185,0 -96.86173499999998,28.622017,0 -96.72489800000001,28.659285,0 -96.657574,28.694888,0 -96.665234,28.711207,0 -96.66009200000001,28.722994,0 -96.646771,28.714413,0 -96.660268,28.679348,0 -96.60696,28.623909,0 -96.61060000000001,28.559217,0 -96.566958,28.574375,0 -96.486833,28.5065,0 -96.56345000000002,28.469907,0 -96.518755,28.461107,0 -96.476754,28.499733,0 -96.390976,28.434339,0 -96.661568,28.306547,0 -96.70262200000001,28.34048,0 -96.704072,28.396167,0 -96.741029,28.403739,0 -96.787356,28.477785,0 -96.82413800000001,28.44992,0 -96.78859900000001,28.446534,0 -96.814578,28.428945,0 -96.83615500000002,28.447057,0 -96.845287,28.465718,0 -96.89987699999999,28.501791,0 |-96.432509,28.69752,0 -96.403646,28.71976400000001,0 -96.41903499999998,28.638937,0 -96.37564600000002,28.610362,0 -96.491456,28.557221,0 -96.43740800000001,28.597265,0 -96.454635,28.656206,0 -96.48352099999998,28.59833,0 -96.51214700000001,28.608456,0 -96.51198700000001,28.649815,0 -96.570651,28.636541,0 -96.57081100000001,28.692113,0 -96.559191,28.700969,0 -96.432509,28.69752,0 |-96.392026,28.670523,0 -96.324764,28.67067700000001,0 -96.32640499999999,28.634361,0 -96.364408,28.618254,0 -96.392026,28.670523,0 |-96.398133,28.346129,0 -96.834889,28.066616,0 -96.804104,28.17245,0 -96.739169,28.183823,0 -96.532391,28.318529,0 -96.46330500000001,28.326116,0 -96.42280700000001,28.391721,0 -96.398133,28.346129,0 |-96.803952,28.211734,0 -96.793598,28.271657,0 -96.778194,28.229636,0 -96.803952,28.211734,0", "-98.95837400000001,27.271005,0 -99.33546699999999,27.27129,0 -99.37142499999999,27.308386,0 -99.46559000000001,27.270187,0 -99.543908,27.318954,0 -99.490813,27.491051,0 -99.52706099999999,27.50458,0 -99.54950700000001,27.61292,0 -99.71481799999998,27.661849,0 -99.81605500000001,27.780395,0 -99.875063,27.797972,0 -99.942189,27.987162,0 -99.99364300000001,28.00374,0 -100.097263,28.154555,0 -100.214416,28.202206,0 -100.110729,28.203285,0 -99.39263299999999,28.203913,0 -99.39022900000001,28.036037,0 -98.807045,28.060999,0 -98.80811499999999,27.361142,0 -98.808825,27.27357,0 -98.95837400000001,27.271005,0", "-97.49980600000001,27.843545,0 -97.50932000000002,27.839692,0 -97.54378199999999,27.856147,0 -97.59284,27.866021,0 -97.61438600000001,27.885841,0 -97.643439,27.894774,0 -97.653609,27.917555,0 -97.668273,27.926624,0 -97.71570600000001,27.922591,0 -97.75741600000001,27.94005,0 -97.767449,27.93013600000001,0 -97.771248,27.942183,0 -97.784486,27.947521,0 -97.79534200000001,27.945446,0 -97.80654300000001,27.93003,0 -97.82190100000001,27.952898,0 -97.819757,27.976323,0 -97.80668000000001,27.984337,0 -97.80471200000001,28.000863,0 -97.802492,28.027046,0 -97.81147899999999,28.037813,0 -97.825777,28.042709,0 -97.84814699999998,28.03396,0 -97.87075299999999,28.035797,0 -97.89798999999999,28.05888300000001,0 -97.89722000000002,28.110854,0 -97.813227,28.169878,0 -97.55723400000001,28.121535,0 -97.531477,28.156364,0 -97.516057,28.154625,0 -97.50810699999998,28.14432,0 -97.49632000000001,28.159223,0 -97.46915899999999,28.170541,0 -97.469129,28.15444,0 -97.443135,28.14416,0 -97.445065,28.131324,0 -97.421322,28.132133,0 -97.42199400000001,28.110066,0 -97.396466,28.102084,0 -97.390995,28.112532,0 -97.39630500000001,28.124163,0 -97.38253399999999,28.119225,0 -97.37082300000002,28.131359,0 -97.34044200000001,28.113582,0 -97.332393,28.123502,0 -97.318279,28.113487,0 -97.320201,28.134238,0 -97.31138199999998,28.135855,0 -97.304782,28.116367,0 -97.309741,28.106369,0 -97.29608500000002,28.098202,0 -97.28509099999999,28.103443,0 -97.280383,28.08952,0 -97.263156,28.080335,0 -97.260554,28.065018,0 -97.24150299999998,28.048947,0 -97.27056399999999,28.026228,0 -97.23648299999999,28.040814,0 -97.136368,27.897497,0 -97.114891,27.915687,0 -97.195733,27.812525,0 -97.247293,27.822624,0 -97.21360900000001,27.831415,0 -97.283754,27.871448,0 -97.361316,27.840258,0 -97.34588899999999,27.87348,0 -97.479626,27.853264,0 -97.49695300000001,27.87577,0 -97.52197,27.863927,0 -97.49980600000001,27.843545,0", "-96.793598,28.271657,0 -96.803952,28.211734,0 -96.95117099999999,28.114646,0 -96.912986,28.25708300000001,0 -96.97557099999999,28.211037,0 -96.94133700000002,28.187059,0 -96.97537199999999,28.115337,0 -97.033883,28.137688,0 -97.02383500000001,28.200084,0 -97.05950300000001,28.201886,0 -97.088793,28.220629,0 -97.100657,28.220953,0 -97.12516299999999,28.244153,0 -97.11757900000001,28.269705,0 -96.78653300000001,28.313142,0 -96.793598,28.271657,0 |-96.94023000000001,28.046227,0 -96.872686,28.131695,0 -96.837689,28.102133,0 -96.85406999999999,28.049696,0 -97.04987199999998,27.841258,0 -97.02469600000001,27.914682,0 -96.94965199999999,27.984823,0 -96.97326600000001,28.001149,0 -96.94023000000001,28.046227,0 |-97.114891,27.915687,0 -97.136368,27.897497,0 -97.23648299999999,28.040814,0 -97.123346,28.05456,0 -97.02667299999999,28.108041,0 -97.02407100000001,28.020532,0 -97.114891,27.915687,0", "-98.53478399999999,27.273338,0 -98.537577,27.348977,0 -98.560557,27.349294,0 -98.56078599999999,27.365889,0 -98.598102,27.364548,0 -98.59683600000001,27.348401,0 -98.637181,27.348929,0 -98.63745600000001,27.363682,0 -98.80811499999999,27.361142,0 -98.807045,28.060999,0 -98.33936799999999,28.061629,0 -98.23893999999999,28.060933,0 -98.238917,27.266956,0 -98.53478399999999,27.273338,0", "-98.238917,27.266956,0 -98.23893999999999,28.060933,0 -97.89798999999999,28.05888300000001,0 -97.87075299999999,28.035797,0 -97.84814699999998,28.03396,0 -97.825777,28.042709,0 -97.81147899999999,28.037813,0 -97.802492,28.027046,0 -97.80471200000001,28.000863,0 -97.93930400000001,27.884824,0 -97.948268,27.640962,0 -98.062635,27.638053,0 -98.062415,27.263853,0 -98.238917,27.266956,0", "-97.331727,27.562637,0 -97.83864699999998,27.557242,0 -97.87564999999999,27.593004,0 -97.87964,27.61796,0 -97.948268,27.640962,0 -97.93930400000001,27.884824,0 -97.80471200000001,28.000863,0 -97.80668000000001,27.984337,0 -97.819757,27.976323,0 -97.82190100000001,27.952898,0 -97.80654300000001,27.93003,0 -97.79534200000001,27.945446,0 -97.784486,27.947521,0 -97.771248,27.942183,0 -97.767449,27.93013600000001,0 -97.75741600000001,27.94005,0 -97.71570600000001,27.922591,0 -97.668273,27.926624,0 -97.653609,27.917555,0 -97.643439,27.894774,0 -97.61438600000001,27.885841,0 -97.59284,27.866021,0 -97.54378199999999,27.856147,0 -97.50932000000002,27.839692,0 -97.49980600000001,27.843545,0 -97.48008400000001,27.820585,0 -97.388812,27.83173,0 -97.39682999999999,27.77114600000001,0 -97.318063,27.712535,0 -97.34977899999998,27.715638,0 -97.320283,27.690944,0 -97.35363200000001,27.641113,0 -97.399485,27.633498,0 -97.34777199999999,27.631752,0 -97.30947999999999,27.708173,0 -97.250061,27.689143,0 -97.331727,27.562637,0 |-97.22398299999999,27.574323,0 -97.24893899999999,27.581449,0 -97.25895,27.652062,0 -97.20384900000001,27.612379,0 -97.17044799999999,27.70777100000001,0 -97.07556100000001,27.811579,0 -97.11330400000001,27.819521,0 -97.053832,27.830778,0 -97.22398299999999,27.574323,0", "-97.78501799999999,27.28804,0 -97.820167,27.277556,0 -97.82624800000001,27.259236,0 -97.84015700000001,27.253989,0 -97.88582,27.243852,0 -97.930148,27.246578,0 -97.95685899999999,27.238802,0 -97.967541,27.218718,0 -97.98497399999999,27.214903,0 -97.98486800000001,27.262858,0 -98.062415,27.263853,0 -98.062635,27.638053,0 -97.948268,27.640962,0 -97.87964,27.61796,0 -97.87564999999999,27.593004,0 -97.83864699999998,27.557242,0 -97.331727,27.562637,0 -97.412528,27.321345,0 -97.500703,27.319988,0 -97.50780800000001,27.439532,0 -97.52865100000001,27.34442,0 -97.60038299999998,27.300455,0 -97.75034899999999,27.419983,0 -97.680279,27.294693,0 -97.78501799999999,27.28804,0 |-97.24893899999999,27.581449,0 -97.22398299999999,27.574323,0 -97.35938,27.284041,0 -97.376356,27.284965,0 -97.33576899999999,27.441138,0 -97.24893899999999,27.581449,0", "-98.43797600000002,26.787983,0 -98.960132,26.788945,0 -98.95837400000001,27.271005,0 -98.808825,27.27357,0 -98.80811499999999,27.361142,0 -98.63745600000001,27.363682,0 -98.637181,27.348929,0 -98.59683600000001,27.348401,0 -98.598102,27.364548,0 -98.56078599999999,27.365889,0 -98.560557,27.349294,0 -98.537577,27.348977,0 -98.53478399999999,27.273338,0 -98.54348200000001,27.27207500000001,0 -98.54104100000001,27.265589,0 -98.506738,27.242514,0 -98.50935599999998,27.150787,0 -98.48491800000001,27.149516,0 -98.484362,27.065099,0 -98.43554,27.062536,0 -98.43797600000002,26.787983,0", "-99.166128,26.580221,0 -99.285837,26.857679,0 -99.39083499999998,26.946944,0 -99.393033,26.995862,0 -99.455381,27.028958,0 -99.43747500000001,27.199502,0 -99.46559000000001,27.270187,0 -99.37142499999999,27.308386,0 -99.33546699999999,27.27129,0 -98.95837400000001,27.271005,0 -98.960132,26.788945,0 -99.012624,26.680488,0 -99.166128,26.580221,0", "-98.341567,26.78742,0 -98.43797600000002,26.787983,0 -98.43554,27.062536,0 -98.484362,27.065099,0 -98.48491800000001,27.149516,0 -98.50935599999998,27.150787,0 -98.506738,27.242514,0 -98.54104100000001,27.265589,0 -98.54348200000001,27.27207500000001,0 -98.53478399999999,27.273338,0 -98.238917,27.266956,0 -98.062415,27.263853,0 -97.98486800000001,27.262858,0 -97.98497399999999,27.214903,0 -97.990903,26.786808,0 -98.341567,26.78742,0", "-97.964032,26.61309500000001,0 -97.99178900000001,26.617329,0 -97.990903,26.786808,0 -97.98497399999999,27.214903,0 -97.967541,27.218718,0 -97.95685899999999,27.238802,0 -97.930148,27.246578,0 -97.88582,27.243852,0 -97.84015700000001,27.253989,0 -97.82624800000001,27.259236,0 -97.820167,27.277556,0 -97.78501799999999,27.28804,0 -97.548425,27.23053,0 -97.427481,27.265455,0 -97.50376700000001,27.081869,0 -97.47926000000001,26.996838,0 -97.568832,26.978189,0 -97.558317,26.846387,0 -97.49583800000001,26.794117,0 -97.45195800000001,26.601327,0 -97.86665499999999,26.59775,0 -97.964032,26.61309500000001,0 |-97.35938,27.284041,0 -97.379643,27.210777,0 -97.376356,27.284965,0 -97.35938,27.284041,0 |-97.29609199999999,26.601012,0 -97.30138700000002,26.601365,0 -97.35828199999999,26.706985,0 -97.381592,26.820711,0 -97.39557000000001,26.92232,0 -97.40117300000001,27.111554,0 -97.38905000000001,27.201975,0 -97.37879599999999,27.204773,0 -97.387187,27.097572,0 -97.381593,26.949354,0 -97.358283,26.803,0 -97.29609199999999,26.601012,0", "-98.600268,26.260803,0 -98.67821899999998,26.242405,0 -98.82013600000001,26.375414,0 -98.90920300000001,26.360672,0 -98.93957700000001,26.395651,0 -99.10703599999999,26.419869,0 -99.101781,26.488677,0 -99.16898900000001,26.546062,0 -99.166128,26.580221,0 -99.012624,26.680488,0 -98.960132,26.788945,0 -98.43797600000002,26.787983,0 -98.341567,26.78742,0 -98.600268,26.260803,0", "-98.600268,26.260803,0 -98.341567,26.78742,0 -97.990903,26.786808,0 -97.99178900000001,26.617329,0 -97.964032,26.61309500000001,0 -97.97647699999999,26.557437,0 -97.973929,26.536594,0 -97.98960000000001,26.53736,0 -98.004943,26.464179,0 -97.87388799999999,26.447255,0 -97.86923400000001,26.348695,0 -97.86770799999999,26.060496,0 -98.04035300000001,26.059751,0 -98.076632,26.034982,0 -98.08349800000002,26.066113,0 -98.20097999999999,26.055732,0 -98.292238,26.098459,0 -98.271646,26.121249,0 -98.29256599999999,26.133162,0 -98.328227,26.112001,0 -98.34748399999998,26.159033,0 -98.384816,26.156383,0 -98.453689,26.221262,0 -98.488815,26.201895,0 -98.600268,26.260803,0", "-97.86923400000001,26.348695,0 -97.87388799999999,26.447255,0 -98.004943,26.464179,0 -97.98960000000001,26.53736,0 -97.973929,26.536594,0 -97.97647699999999,26.557437,0 -97.964032,26.61309500000001,0 -97.86665499999999,26.59775,0 -97.45195800000001,26.601327,0 -97.42611599999999,26.51857,0 -97.474968,26.477151,0 -97.42144700000002,26.385408,0 -97.446037,26.365959,0 -97.46024399999999,26.329317,0 -97.499346,26.339052,0 -97.543644,26.326239,0 -97.541798,26.302148,0 -97.86923400000001,26.348695,0 |-97.23236099999998,26.41849,0 -97.251504,26.419652,0 -97.26750299999999,26.479251,0 -97.278803,26.540307,0 -97.30138700000002,26.601365,0 -97.29609199999999,26.601012,0 -97.23236099999998,26.41849,0", "-97.251504,26.419652,0 -97.23236099999998,26.41849,0 -97.19524299999999,26.259593,0 -97.172048,26.078077,0 -97.179586,26.072277,0 -97.20916699999999,26.250894,0 -97.226563,26.348901,0 -97.251504,26.419652,0 |-97.17247499999999,25.954927,0 -97.307399,25.965482,0 -97.30468999999998,25.939022,0 -97.381246,25.917379,0 -97.38589900000001,25.845722,0 -97.434607,25.845557,0 -97.59035299999999,25.933589,0 -97.57520100000001,25.954529,0 -97.61318900000001,25.962359,0 -97.64824,26.023801,0 -97.86770799999999,26.060496,0 -97.86923400000001,26.348695,0 -97.541798,26.302148,0 -97.543644,26.326239,0 -97.499346,26.339052,0 -97.46024399999999,26.329317,0 -97.446037,26.365959,0 -97.42144700000002,26.385408,0 -97.36895500000001,26.359409,0 -97.35362000000001,26.182803,0 -97.253373,26.068672,0 -97.27657499999999,26.002633,0 -97.21334799999998,26.009425,0 -97.17247499999999,25.954927,0"],
        countyCount: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        cityCount: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],

         //Push KML to google maps for solid counties
        paths: function(a) {
            //array of coordinates
            var b = [];
            //loop through each county pushed
            for (var i = 0; i &lt; a.length; i++) {
                //split the coordinates by lat/long 
                var c = a[i].split(',');
                //Map coordinates
                b.push(new google.maps.LatLng(c[1], c[0]));
            }
            return b;
        },
        //MAY NOT BE USING PLEASE CHECK Lines 85-96 accomplish the same thing
        //Push KML for counties with holes in them
        multiPaths: function(a) {
            //array of coordinates
            var b = [];
            //loop through each county pushed
            for (var i = 0; i &lt; a.length; i++) {
                //split the coordinates by each section
                var c = a[i].split(',');
                //push newly split coords to be mapped by paths function
                b.push(TXCountyData.paths(a[i]));

            }
            return b;
        }
    }
    function initializeBigMap() {
        geocoder = new google.maps.Geocoder();
        //center
        var texas = new google.maps.LatLng(31.4484, -97.7817);
        var infowindow = new google.maps.InfoWindow();
        //create map


        map = new google.maps.Map(document.getElementById('map'), {
            center: texas,
            zoom: 6,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            styles: [{
                "featureType": "landscape",
                "elementType": "labels",
                "stylers": [{
                    "visibility": "off"
                }]
            }, {
                "featureType": "transit",
                "elementType": "labels",
                "stylers": [{
                    "visibility": "off"
                }]
            }, {
                "featureType": "poi",
                "elementType": "labels",
                "stylers": [{
                    "visibility": "off"
                }]
            }, {
                "featureType": "water",
                "elementType": "labels",
                "stylers": [{
                    "visibility": "off"
                }]
            }, {
                "featureType": "road",
                "elementType": "labels.icon",
                "stylers": [{
                    "visibility": "off"
                }]
            }, {
                "stylers": [{
                    "hue": "#00aaff"
                }, {
                    "saturation": -100
                }, {
                    "gamma": 2.15
                }, {
                    "lightness": 12
                }]
            }, {
                "featureType": "road",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "visibility": "on"
                }, {
                    "lightness": 24
                }]
            }, {
                "featureType": "road",
                "elementType": "geometry",
                "stylers": [{
                    "lightness": 57
                }]
            }]
        });
        var records = document.getElementsByName('records');
        var a;
        for (i = 0; i &lt; records.length; i++) {
            var a = records[i].innerHTML.split('|');
            countRecords(a[0],a[1],a[2]);
        }

        //loop each county, assign coordinates and color
        for (var j=0; j &lt; TXCountyData.Names.length; j++) {
                
                    findCoordinates(TXCountyData.Names[j]);
     
                }       

        }

    function countRecords(countyName, cityName, jurisdictionType) {

            for (var x = 0; x &lt; TXCountyData.Names.length; x++) {

                if (TXCountyData.Names[x] == countyName &amp;&amp; jurisdictionType == 'County') {
            
                    TXCountyData.countyCount[x] = TXCountyData.countyCount[x] + 1;
                    if(cityName!==""){
                      var multiCities = cityName.split(',');
                      for (var i = 0; i &lt; multiCities.length; i++) {
                          cityData.countyCityList[x].push(multiCities[i]);
                         }
                    }
                }
                else if (TXCountyData.Names[x] == countyName &amp;&amp; jurisdictionType == 'City') {
                      cityData.countyCityList[x].push(cityName);
                      //console.log(cityName + ' ,' +TXCountyData.Names[x]);
                      TXCountyData.cityCount[x] = TXCountyData.cityCount[x] + 1;
                }
            }

        //}
    }

 //properly deliminates counties and paths them to their respective mapping functions
    function findCoordinates(a) {
        //loop through each county name
        for (var i = 0; i &lt; TXCountyData.Names.length; i++) {
            if (a == TXCountyData.Names[i]) {
                //if the county is a simple one (without holes)
                if (TXCountyData.Coordinates[i].indexOf('|') == -1) {
                    //split these county coordiantes using the paths function
                    var toArray = TXCountyData.paths(TXCountyData.Coordinates[i].split(' '));

                    var countyNumber = TXCountyData.countyCount[i];

                    var cityCount = TXCountyData.cityCount[i];

                    var cityList = String(cityData.countyCityList[i]);

                    var countyDeclared = TxDataobj.countyDeclared[i];

                    var countyLetter = TxDataobj.countyLetter[i];

                    var countyName = TXCountyData.Names[i];
                    //add style
                   // chooseStyle(toArray, countyNumber, countyName, cityList, countyDeclared, countyLetter);
                     addColor(toArray, countyNumber, cityCount, countyName, cityList, countyDeclared, countyLetter);
                    //addGreen(toArray);
                }
                //if the county is a complex one (with holes);
                else {
                    //split each pology and assign it to an array
                    var delim = TXCountyData.Coordinates[i].split('|');
                    //loop through each split polgyon
                    for (var x = 0; x &lt; delim.length; x++) {
                        //split each  by their coordinates
                        var c = TXCountyData.paths(delim[x].split(' '));
                            //push them to the mapping function and split coordinates by lat/long
                        var toArray = TXCountyData.paths(TXCountyData.Coordinates[i].split(' '));

                        var countyNumber = TXCountyData.countyCount[i];

                   var cityCount = TXCountyData.cityCount[i];

                        var countyName = TXCountyData.Names[i];

                        var cityList = String(cityData.countyCityList[i]);
                        //add style

                        var countyDeclared = TxDataobj.countyDeclared[i];
                        //console.log('m' + countyDeclared);
                        var countyLetter = TxDataobj.countyLetter[i];

                        //chooseStyle(c, countyNumber, countyName, cityList, countyDeclared, countyLetter);
                        //addGreen(d);
                        addColor(c, countyNumber,cityCount, countyName, cityList, countyDeclared, countyLetter);
                    }
                }
            }
        }
    };

var colorCountyWithDSO = '#00FFFF';
var colorCouuntyWithoutDSO = '#e6eea5';
var lineColorWithNoDec ='#0c0d0c';
var lineColorLocalDec ='#ea2711';
var lineColorStateDec = '#1120ea';
var lineColorFedDec = '#18ea11';
var iconBothLetterAndCities ='https://olympus.soc.texas.gov/images/aboth.png';
var iconLetterOnly = 'https://olympus.soc.texas.gov/images/amail.png';
var iconCitiesOnly ='https://olympus.soc.texas.gov/images/astar.png';
    function defaultColor () {

        if (!window.parent.window.parent.colorOneHex) {
            window.parent.window.parent.colorOneHex = "#F5CDCC";
            window.parent.window.parent.colorTwoHex = "#D18785";
            window.parent.window.parent.colorThreeHex = "#AE4E4A";
            window.parent.window.parent.colorFourHex = "#8B231E";
            window.parent.window.parent.colorFiveHex = "#690400";  
        }
    }
   // var image = 'https://olympus.soc.texas.gov/images/dso_icon.png'
    //style function to each polygon
   //c, countyNumber,cityCount, countyName, cityList, countyDeclared, countyLetter)
    function addColor(paths,countyNumber,cityNumber,countyName,cityList,countyDeclared,countyLetter){
      var polycolor,polyLineColor,icon,lineSize,strokeP;
      lineSize=2;
      strokeP=0;
    if(countyNumber!=0){ //If this is County or any of its Cites have a DSO turned in
 polycolor = colorCountyWithDSO;
    } else{
      polycolor = colorCouuntyWithoutDSO;
    }

    switch(countyDeclared) {
    case 1:
        polyLineColor=lineColorLocalDec;
        lineSize=3;
        strokeP=1;
        break;
      case 2:
        polyLineColor=lineColorStateDec;
        lineSize=3;
        strokeP=1;
        break;
         case 3:
        polyLineColor=lineColorFedDec;
        lineSize=3;
        strokeP=1;
        break;   
      default:
        polyLineColor=lineColorWithNoDec;
}
    
      var poly = new google.maps.Polygon({
            paths: paths,
            strokeColor: polyLineColor,
            strokeOpacity: 1,
            strokeWeight: lineSize,
            strokePosition: strokeP,
            fillColor: polycolor,
            fillOpacity: 0.8
        });
if(countyLetter==1 || cityNumber !=0){//if Letter has been turned in or if Cities in the jurisdiction have submitted DSO
if(countyLetter ==1 &amp;&amp; cityNumber!=0){
  icon = iconBothLetterAndCities;  //When both county letter and county has cites that have turned in DSOs
}
if(countyLetter ==1 &amp;&amp; cityNumber==0){
  icon = iconLetterOnly; //When only county letter has been submitted, no city DSOs
}
if(countyLetter ==0 &amp;&amp; cityNumber!=0){
  icon = iconCitiesOnly; //When only cities have turned in a DSO but no letter has been submitted for the county
}
 var bounds = new google.maps.LatLngBounds();
        for (var i = 0; i &lt; paths.length; i++) {
          bounds.extend(paths[i]);
        }

        var center = bounds.getCenter();
        var marker = new google.maps.Marker({
          position: center,
          icon: icon
        });

        
          marker.setMap(map);
        }
    
  poly.setMap(map);

        //add infowindow with total records and county name that opens on click
        google.maps.event.addListener(poly, 'click', function(event) {
            var infoWindow = new google.maps.InfoWindow({maxWidth: 200});
            //convert the total records to a string
            var countyNumberString = String(cityNumber);

            //set the content of the infowindow
            var contentString = '<div id="countyNameInfoWindow"><strong>' + countyName + '</strong> County <br /><strong>Total: ' + (cityList.split(',').length-1) +  ' <br />Cities: </strong>' + cityList + '</div>';
            infoWindow.setContent(contentString);
            //place the infowindow on the map where the user clicked
            infoWindow.setPosition(event.latLng)
            infoWindow.open(map);
        });

    }

    var TxDataobj = {};
    function dataFromEmbedview(obj){ //The Map wont load until data is retrived from the Ebedview.
    TxDataobj = obj; //countyName[Str], countyDeclared[None,Local,State,Federal], countyLetter[No,Yes]
     script.add('https://maps.googleapis.com/maps/api/js?v=3.exp&amp;sensor=false&amp;callback=initializeBigMap');
    }
    window.onload = init;
  </script></html><viewfilters viewfilterid="10864" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hidden" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Core" name="DSO Details (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="7132d33b-fba1-4c84-a213-acb29bf5ff8a" assignable="1"><html><head id="Head1"><title>DSO Form</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><style type="text/css">
        #container {  margin: 50px;
        }

    </style></head><body><div id="hidden" style="display:none"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="webeocIncident" /><eocfield name="updated" /></div><div id="container"><div><returnbutton>Back</returnbutton><pdflink type="button">PDF</pdflink></div><eocrepeatallrecords><h1><span class="label label-default">Confirmation:<eocfield name="editKey" /> Submitted: <eocfield name="submitedDateTime" /></span></h1><br /><h1><span class="label label-default">General</span></h1><div class="form-group form-inline"><label for="jurisdictionType">Jurisdiction Type:</label><eocfield name="jurisdictionType" /></div><div class="form-group form-inline"><label for="county">County:</label><eocfield name="county" /></div><div class="form-group form-inline"><label for="city">City:</label><eocfield name="city" /></div><div class="form-group form-inline"><label for="population">Population:</label><eocfield name="population" /></div><div class="form-group form-inline"><label for="type">Type:</label><eocfield name="type" /></div><div class="form-group form-inline"><label for="nfip">If this is a flood event, does the City/County participate in the National Flood Insurance Program (NFIP)?:</label><eocfield name="nfip" /></div><div class="form-group form-inline"><label for="dateOfDisaster">Inclusive dates of the disaster:</label><eocfield name="dateOfDisaster1" />- <eocfield name="dateOfDisaster2" />
Continuing: <eocfield name="continuing" /></div><div class="form-group form-inline"><label for="declarationIssued">Was a local disaster declaration issued:</label><eocfield name="declarationIssued" /></div><div class="form-group form-inline"><label for="contactPerson">Contact Person:</label><eocfield name="contactPersonTitle" /></div><div class="form-group form-inline"><label for="contactPerson">Contact Person Title:</label><eocfield name="contactPerson" /></div><div class="form-group form-inline"><label for="address">Address:</label><eocfield name="address" /></div><div class="form-group form-inline"><label for="phone">Phone:</label><eocfield name="phone" /></div><div class="form-group form-inline"><label for="mobilePhone">Mobile Phone:</label><eocfield name="mobilePhone" /></div><div class="form-group form-inline"><label for="fax">Fax:</label><eocfield name="fax" /></div><div class="form-group form-inline"><label for="pager">Pager:</label><eocfield name="pager" /></div><div class="form-group form-inline"><label for="dutyPhone">24 Hr Duty:</label><eocfield name="dutyPhone" /></div><!--  <h1><span class="label label-default"> Individual Assistance</span>
        </h1>
        <h3>
          <span class="label label-default"> Casualties:</span>
        </h3>
        <div class="form-group form-inline">
          <label for="fatalities">Number of Fatalities:</label>
          <eocfield name="fatalities" />
        </div>
        <div class="form-group form-inline">
          <label for="injuries">Number of Injuries:</label>
          <eocfield name="injuries" />
        </div>
        <div class="form-group form-inline">
          <label for="hospitalized">Number of Hospitalized:</label>
          <eocfield name="hospitalized" />
        </div>
<br/>--><!-- <h1>
         <span class="label label-default">Agricultural Losses: (Contact the Farm Service Agency in your county)</span>
        </h1>
        <div class="form-group form-inline">
          <label for="agricultural">Is agricultural assistance needed?:</label>
          <eocfield name="agricultural" />
<br />
    <i> If yes, please attach USDA flash situation report.</i>   
        </div>
 <div class="form-group form-inline">
      <label for="usdaFlashReport">USDA Flash Report:</label>
                 <eocfield name="usdaFlashReport" />
</div>--><h1><span class="label label-default">  Residential Losses - Primary Residence Only: (Local Damage Assessment) See guidelines on page 4 </span></h1><table class="table table-bordered"><tr><td>Type of Homes</td><td>Affected</td><td>Minor Damage</td><td>Major Damage</td><td>Destroyed</td><td>% Covered by Insurance</td></tr><tr><td>Single Family Homes</td><td><eocfield name="sfhAffected" /></td><td><eocfield name="sfhMinorDamage" /></td><td><eocfield name="sfhMajorDamage" /></td><td><eocfield name="sfhDestroyed" /></td><td><eocfield name="sfhCovByInsurance" /></td></tr><tr><td>Mobile Homes</td><td><eocfield name="mhAffected" /></td><td><eocfield name="mhMinorDamage" /></td><td><eocfield name="mhMajorDamage" /></td><td><eocfield name="mhDestroyed" /></td><td><eocfield name="mhCovByInsurance" /></td></tr><tr><td>Multi-Family Units</td><td><eocfield name="mfuAffected" /></td><td><eocfield name="mfuMinorDamage" /></td><td><eocfield name="mfuMajorDamage" /></td><td><eocfield name="mfuDestroyed" /></td><td><eocfield name="mfuCovByInsurance" /></td></tr><tr><td>Totals</td><td><eocfield name="totalsAffected" /></td><td><eocfield name="totalsMinorDamage" /></td><td><eocfield name="totalsMajorDamage" /></td><td><eocfield name="totalsDestroyed" /></td><td><eocfield name="totalsCovByInsurance" /></td></tr></table><div class="form-group form-inline"><label for="homesIsolated">Number of homes isolated due to road closure (high water, etc.):</label><eocfield name="homesIsolated" /></div><!--
        <div class="form-group form-inline">
          <label for="numNotSatisfiedByVolunteers">Estimated number of persons whose situation will not be satisfied by volunteer organizations (Contact local volunteer organizations):</label>
          <eocfield name="numNotSatisfiedByVolunteers" />
        </div>--><!-- <div class="form-group form-inline">
          <label for="sheltersOpen">Are shelters opened?:</label>
         <eocfield name="sheltersOpen" />
        </div>
        <div class="form-group form-inline">
          <label for="sheltersHowMany">How many shelters are open?:</label>
          <eocfield name="sheltersHowMany" />
        </div>
        <div class="form-group form-inline">
          <label for="shelterDetails">Name, location, capacity, and current occupancy of shelters:</label>
          <eocfield name="shelterDetails"  TextMode="MultiLine" Rows="5"/>
        </div>--><h1><span class="label label-default">Business Losses/Impacts:</span></h1><table class="table table-bordered"><tr><td /><td>Number</td><td># Covered by Adequate Insurance</td><td>Total estimated repair cost</td></tr><tr><td>Minor Damage (less than 40%)</td><td><eocfield name="numberMinorDamage" /></td><td><eocfield name="coveredMinorDamage" /></td><td><eocfield name="totalMinorDamage" /></td></tr><tr><td>Major Damage (greater than 40%)</td><td><eocfield name="numberMajorDamage" /></td><td><eocfield name="coveredMajorDamage" /></td><td><eocfield name="totalMajorDamage" /></td></tr><tr><td>Total</td><td><eocfield name="numberTotal" /></td><td><eocfield name="coveredTotal" /></td><td><eocfield name="totalTotal" /></td></tr></table><div class="form-group form-inline"><label for="businessesCeased">How many businesses have ceased operations:</label><eocfield name="businessesCeased" /></div><div class="form-group form-inline"><label for="businessesEconomicInjury">How many businesses have experienced economic injury:</label><eocfield name="businessesEconomicInjury" /></div><div class="form-group form-inline"><label for="numberUnemployed">Estimated number of persons unemployed because of this disaster</label><eocfield name="numberUnemployed" /><i>(Contact affected businesses and the local Texas Workforce Commission Office)</i></div><h1><span class="label label-default">PUBLIC ASSISTANCE</span></h1><table class="table table-bordered"><tr><td>Category</td><td>No of Sites</td><td>Estimated Repair Costs</td><td>Anticipated Insurance.*</td></tr><tr><td>Debris Clearance</td><td><eocfield name="sitesDebrisClearance" /></td><td><eocfield name="repairCostDebrisClearance" /></td><td><eocfield name="insuranceDebrisClearance" /></td></tr><tr><td>Emergency (EMS, Fire, Police)</td><td><eocfield name="sitesEmergency" /></td><td><eocfield name="repairCostEmergency" /></td><td><eocfield name="insuranceEmergency" /></td></tr><tr><td>Road &amp; Bridge</td><td><eocfield name="sitesRoadPaved" /></td><td><eocfield name="repairCostRoadPaved" /></td><td><eocfield name="insuranceRoadPaved" /></td></tr><tr><td>Water Control Facilities <br />(Dams, levees, dikes)
</td><td><eocfield name="sitesWaterControlFacilities" /></td><td><eocfield name="repairCostWaterControlFacilities" /></td><td><eocfield name="insuranceWaterControlFacilities" /></td></tr><tr><td>Buildings &amp; Equipment
</td><td><eocfield name="sitesBuildingsEquipment" /></td><td><eocfield name="repairCostBuildingsEquipment" /></td><td><eocfield name="insuranceBuildingsEquipment" /></td></tr><tr><td>Public Utility Systems<br />
(Gas, Electric, Sewer, Water)
</td><td><eocfield name="sitesUtilitySystems" /></td><td><eocfield name="repairCostUtilitySystems" /></td><td><eocfield name="insuranceUtilitySystems" /></td></tr><tr><td>
            Other<br />
(Recreational Facilities, Airports, etc.)
</td><td><eocfield name="sitesOther" /></td><td><eocfield name="repairCostOther" /></td><td><eocfield name="insuranceOther" /></td></tr><tr><td>
	 Total
            
	</td><td><eocfield name="sitesTotals" /></td><td><eocfield name="repairCostTotals" /></td><td><eocfield name="insuranceTotals" /></td></tr></table><i>* Anticipated insurance is normally calculated by subtracting any deductible, depreciation or 
     uncoverable loss from the estimated repair cost.
</i><div class="form-group form-inline"><label for="annualMaintenanceBudget">Total annual maintenance budget (i.e. Public Works, Road &amp; Bridge):</label><eocfield name="annualMaintenanceBudget" /></div><div class="form-group form-inline"><label for="startOfFiscalYear">Start of Fiscal Year(Month):</label><eocfield name="startOfFiscalYear" /></div><h1><span class="label label-default">Others</span></h1><i>(Contact non-profit or governmental, medical, emergency, utility, educational, custodial care facilities, etc.)</i><table class="table table-bordered"><tr><td selected="false">Organization/ Facility</td><td selected="false" colSpan="1" width="">Catagory</td><td>No. of Sites</td><td>Estimated Repair Cost</td><td>Anticipated Insurance *</td></tr><tr><td selected="false" colSpan="1"><eocfield name="orgFacility01" /></td><td selected="false" colSpan="1" width=""><eocfield name="cat01" /></td><td selected="false"><eocfield name="sites01" /></td><td><eocfield name="repairCost01" /></td><td><eocfield name="insurance01" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility02" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat02" /></td><td><eocfield name="sites02" /></td><td><eocfield name="repairCost02" /></td><td><eocfield name="insurance02" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility03" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat03" /></td><td><eocfield name="sites03" /></td><td><eocfield name="repairCost03" /></td><td><eocfield name="insurance03" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility04" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat04" /></td><td><eocfield name="sites04" /></td><td><eocfield name="repairCost04" /></td><td><eocfield name="insurance04" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility05" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat05" /></td><td><eocfield name="sites05" /></td><td><eocfield name="repairCost05" /></td><td><eocfield name="insurance05" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility06" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat06" /></td><td><eocfield name="sites06" /></td><td><eocfield name="repairCost06" /></td><td><eocfield name="insurance06" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility07" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat07" /></td><td><eocfield name="sites07" /></td><td><eocfield name="repairCost07" /></td><td><eocfield name="insurance07" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility08" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat08" /></td><td><eocfield name="sites08" /></td><td><eocfield name="repairCost08" /></td><td><eocfield name="insurance08" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility09" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat09" /></td><td><eocfield name="sites09" /></td><td><eocfield name="repairCost09" /></td><td><eocfield name="insurance09" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility10" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat10" /></td><td><eocfield name="sites10" /></td><td><eocfield name="repairCost10" /></td><td><eocfield name="insurance10" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility11" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat11" /></td><td><eocfield name="sites11" /></td><td><eocfield name="repairCost11" /></td><td><eocfield name="insurance11" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility12" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat12" /></td><td><eocfield name="sites12" /></td><td><eocfield name="repairCost12" /></td><td><eocfield name="insurance12" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility13" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat13" /></td><td><eocfield name="sites13" /></td><td><eocfield name="repairCost13" /></td><td><eocfield name="insurance13" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility14" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat14" /></td><td><eocfield name="sites14" /></td><td><eocfield name="repairCost14" /></td><td><eocfield name="insurance14" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility15" /></td><td colSpan="1" selected="true" width=""><eocfield name="cat15" /></td><td><eocfield name="sites15" /></td><td><eocfield name="repairCost15" /></td><td><eocfield name="insurance15" /></td></tr><tr><td colSpan="2">Totals</td><td><eocfield name="sitesOtherTotal" /></td><td><eocfield name="repairCostTotal" /></td><td><eocfield name="insuranceCostTotal" /></td></tr></table><br /><div><eocfield name="notes" /></div><div>
This form is for damage assessment reporting purposes only.  In accordance with the State Emergency Management Plan, if a Mayor/County Judge determines that a situation is of such severity and magnitude that an effective response is beyond the affected jurisdiction’s capability to recover, a letter outlining the disaster impact and the need for supplemental State and/or Federal assistance must accompany this DSO.
</div><h1><span class="label label-default">Submitter Information</span></h1><div class="form-group form-inline"><label for="submitterName">Name:</label><eocfield name="submitterName" /></div><div class="form-group form-inline"><label for="submitterEmail">Email:</label><eocfield name="submitterEmail" /></div><div class="form-group form-inline"><label class="control-label" for="hidden">Disable Online Editing:</label><eocfield name="dsoDisable" /></div></eocrepeatallrecords></div><div><returnbutton>Back</returnbutton></div></body></html></view><view tablename="Core" name="DSO PA" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="8f96e4f5-bacf-48a7-b657-146118cced37" assignable="1"><html><head><title>Local Estimate of Damage to Public Property By Category</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript">

    //add new row, builds the table, inserts rows. rowClass is added in PA file in to below like this (table,position,data,rowClass) IN IA file it says (table,position,data) 10 table datas below
var newRow = function(table,position,data,rowClass){
  var row = table.insertRow(position);
  //row.className('agencytemplate_tableentry');
    row.innerHTML = '<td />'+'<td>'+data[3]+'</td>'+'<td>'+comma(data[6])+'</td>'+'<td>'+comma(data[7])+'</td>'+'<td>'+comma(data[8])+'</td>'+'<td>'+comma(data[9])+'</td>'+'<td>'+comma(data[10])+'</td>'+'<td>'+comma(data[11])+'</td>'+'<td>'+comma(data[12])+'</td>'+'<td>'+comma(data[13])+'</td>'+'<td>'+comma(data[14])+'</td>'+'<td>'+comma(data[15])+'</td>'+'<td>'+comma(data[16])+'</td>';
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowClass;
    //agencytemplate_tableroweven
}
 //threshold code, placing threshold limit into cell, for county selected, not in IA file file
function threshold(c){
var a = [["Anderson","208110.48"],["Andrews","52638.16"],["Angelina","308904.76"],["Aransas","82442.48"],["Archer","32232.24"],["Armstrong","6767.56"],["Atascosa","159883.16"],["Austin","101164.52"],["Bailey","25507.4"],["Bandera","72926.6"],["Bastrop","264048.76"],["Baylor","13264.56"],["Bee","113425.16"],["Bell","1104436.6"],["Bexar","6104591.88"],["Blanco","37369.32"],["Borden","2281.96"],["Bosque","64834.72"],["Bowie","329531.4"],["Brazoria","1114870.96"],["Brazos","693669.56"],["Brewster","32865.92"],["Briscoe","5827.72"],["Brooks","25713.88"],["Brown","135657.36"],["Burleson","61185.72"],["Burnet","152190"],["Caldwell","135514.96"],["Calhoun","76116.36"],["Callahan","48216.64"],["Cameron","1446143.2"],["Camp","44147.56"],["Carson","22007.92"],["Cass","108451.84"],["Castro","28700.72"],["Chambers","124941.76"],["Cherokee","181008.2"],["Childress","25065.96"],["Clay","38277.12"],["Cochran","11132.12"],["Coke","11819.2"],["Coleman","31666.2"],["Collin","2785133.96"],["Collingsworth","10882.92"],["Colorado","74311.44"],["Comal","386160.32"],["Comanche","49747.44"],["Concho","14549.72"],["Cooke","136835.72"],["Coryell","268381.28"],["Cottle","5357.8"],["Crane","15575"],["Crockett","13239.64"],["Crosby","21570.04"],["Culberson","8536.88"],["Dallam","23862.68"],["Dallas","8430574.84"],["Dawson","49245.48"],["Deaf Smith","68964.32"],["Delta","18622.36"],["Denton","2358905.84"],["DeWitt","71545.32"],["Dickens","8700.64"],["Dimmit","35585.76"],["Donley","13090.12"],["Duval","41943.92"],["Eastland","66155.48"],["Ector","488182.8"],["Edwards","7127.12"],["El Paso","2850303.32"],["Ellis","532611.6"],["Erath","134888.4"],["Falls","63602.96"],["Fannin","120737.4"],["Fayette","87412.24"],["Fisher","14147.44"],["Floyd","22947.76"],["Foard","4756.16"],["Fort Bend","2083935"],["Franklin","37753.8"],["Freestone","70544.96"],["Frio","61292.52"],["Gaines","62392.56"],["Galveston","1037060.04"],["Garza","23001.16"],["Gillespie","88419.72"],["Glasscock","4364.56"],["Goliad","25667.6"],["Gonzales","70512.92"],["Gray","80224.6"],["Grayson","430322.12"],["Gregg","433358.8"],["Grimes","94710.24"],["Guadalupe","468257.48"],["Hale","129131.88"],["Hall","11936.68"],["Hamilton","30320.52"],["Hansford","19982.28"],["Hardeman","14734.84"],["Hardin","194500.6"],["Harris","14569154.04"],["Harrison","233646.36"],["Hartley","21580.72"],["Haskell","21000.44"],["Hays","559300.92"],["Hemphill","13552.92"],["Henderson","279573.92"],["Hidalgo","2758177.64"],["Hill","124916.84"],["Hockley","81648.6"],["Hood","182207.92"],["Hopkins","125173.16"],["Houston","84485.92"],["Howard","124642.72"],["Hudspeth","12374.56"],["Hunt","306619.24"],["Hutchinson","78854"],["Irion","5692.44"],["Jack","32196.64"],["Jackson","50107"],["Jasper","127127.6"],["Jeff Davis","8337.52"],["Jefferson","898091.88"],["Jim Hogg","18868"],["Jim Wells","145383.28"],["Johnson","537325.04"],["Jones","71919.12"],["Karnes","52773.44"],["Kaufman","367926"],["Kendall","118939.6"],["Kenedy","1480.96"],["Kent","2876.48"],["Kerr","176665"],["Kimble","16400.92"],["King","1018.16"],["Kinney","12808.88"],["Kleberg","114137.16"],["Knox","13239.64"],["La Salle","24514.16"],["Lamar","177263.08"],["Lamb","49758.12"],["Lampasas","70050.12"],["Lavaca","68576.28"],["Lee","59138.72"],["Leon","59811.56"],["Liberty","269289.08"],["Limestone","83247.04"],["Lipscomb","11755.12"],["Live Oak","41050.36"],["Llano","68711.56"],["Loving","291.92"],["Lubbock","992638.36"],["Lynn","21057.4"],["Madison","48643.84"],["Marion","37543.76"],["Martin","17084.44"],["Mason","14282.72"],["Matagorda","130659.12"],["Maverick","193158.48"],["McCulloch","29487.48"],["McLennan","836265.36"],["McMullen","2516.92"],["Medina","163781.36"],["Menard","7981.52"],["Midland","487264.32"],["Milam","88134.92"],["Mills","17572.16"],["Mitchell","33474.68"],["Montague","70199.64"],["Montgomery","1622455.76"],["Moore","77978.24"],["Morris","46045.04"],["Motley","4307.6"],["Nacogdoches","229705.44"],["Navarro","169936.6"],["Newton","51424.2"],["Nolan","54168.96"],["Nueces","1211193.88"],["Ochiltree","36393.88"],["Oldham","7305.12"],["Orange","291339.72"],["Palo Pinto","100075.16"],["Panola","84713.76"],["Parker","416260.12"],["Parmer","36557.64"],["Pecos","55204.92"],["Polk","161670.28"],["Potter","431019.88"],["Presidio","27832.08"],["Rains","38853.84"],["Randall","429781"],["Reagan","11986.52"],["Real","11780.04"],["Red River","45781.6"],["Reeves","49067.48"],["Refugio","26283.48"],["Roberts","3307.24"],["Robertson","59174.32"],["Rockwall","278879.72"],["Runnels","37383.56"],["Rusk","189854.8"],["Sabine","38569.04"],["San Augustine","31559.4"],["San Jacinto","93927.04"],["San Patricio","230702.24"],["San Saba","21826.36"],["Schleicher","12321.16"],["Scurry","60238.76"],["Shackelford","12025.68"],["Shelby","90594.88"],["Sherman","10801.04"],["Smith","746581.84"],["Somervell","30224.4"],["Starr","217046.08"],["Stephens","34282.8"],["Sterling","4069.08"],["Stonewall","5304.4"],["Sutton","14695.68"],["Swisher","27960.24"],["Tarrant","6440161.04"],["Taylor","468161.36"],["Terrell","3503.04"],["Terry","45037.56"],["Throckmorton","5841.96"],["Titus","115109.04"],["Tom Green","392397.44"],["Travis","3646386.96"],["Trinity","51922.6"],["Tyler","77486.96"],["Upshur","139940.04"],["Upton","11943.8"],["Uvalde","94001.8"],["Val Verde","174009.24"],["Van Zandt","187181.24"],["Victoria","308983.08"],["Walker","241585.16"],["Waller","153809.8"],["Ward","37942.48"],["Washington","120036.08"],["Webb","891082.24"],["Wharton","146956.8"],["Wheeler","19259.6"],["Wichita","468140"],["Wilbarger","48184.6"],["Willacy","78797.04"],["Williamson","1504737.24"],["Wilson","152788.08"],["Winkler","25311.6"],["Wise","210492.12"],["Wood","149391.84"],["Yoakum","28049.24"],["Young","66038"],["Zapata","49904.08"],["Zavala","41570.12"]];
for(var i = 0; i&lt;a.length;i++){
  if(c==a[i][0]){
    return a[i][1];
  }
}
return "";
}
//this function is quite different that the IA file
var masterData =[];
function setBubbleData(a){
 
 populateMasterData();

for(var k=0; k&lt;a.length;k++){
  var match = false;
  for(var i=0; i&lt;masterData.length;i++){
    if(a[k].type==masterData[i][2] &amp;&amp;a[k].county==masterData[i][4]&amp;&amp;a[k].city==masterData[i][5]){ //if there is a match from bubble input and DSO
     masterData[i][16]=a[k].letter;
    masterData[i][17]='DSO+';
    match=true;
    }
  }
 if(match===false){ //if not associated with a DSO
masterData.push([a[k].sortCounty,a[k].sortCity,a[k].type,a[k].label,a[k].county,a[k].city,"","","","","","","","",a[k].localDec,a[k].letter,"No DSO"]);}
}


masterData = masterData.sort(function(a,b){
  if(parseInt(a[0]) &gt; parseInt(b[0])){
    return 1;
  }else if(parseInt(a[0]) &lt; parseInt(b[0])){
    return -1;
  } else if(parseInt(a[1]) &gt; parseInt(b[1])){
    return 1;
  } else if(parseInt(a[0]) &gt; parseInt(b[0])){
    return -1;
  }

});
  popluateTable();
  alert("setBubbleData");
}

function start(){
  //these two functions run on onstart in IA file
 // populateMasterData();
 // popluateTable();
}
//populates the data, maybe holding area before the table - SAME as IA file
function populateMasterData(){
var a = document.getElementsByClassName('data');
  for(var i =0; i&lt;a.length;i++){
    var b =[];
    var c = a[i].innerHTML.split('|');
    for(var k=0; k&lt;c.length;k++){
      b.push(c[k]);
    }
    masterData.push(b);
  }
}
//creates a string, no idea - Different than IA file
function comma(x) {
if(isNaN(x)===true || x==""){
  x==undefined?x='':x=x;
  return x;
}
x=parseFloat(x).toFixed(2);
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
//return x;
}
//populates the actual table
function popluateTable(){
var t = document.getElementById('mainTable');
  for(var i=0; i &lt; masterData.length;i++){
    newRow(t,(t.rows.length),["","","",masterData[i][3],masterData[i][4],masterData[i][5],masterData[i][6],masterData[i][7],masterData[i][8],masterData[i][9],masterData[i][10],masterData[i][11],masterData[i][12],masterData[i][13],"","",masterData[i][14]],masterData[i][15]=='No DSO'?"rowBlue":"rowReg");
 if(masterData[i+1]){
    if((masterData[i+1][4]!=masterData[i][4])){ //Add Totals Row
      var thresholdResult = threshold(masterData[i][4]);
      var a = getTotalsFor(masterData[i][4]);
      var thresholdResult = threshold(masterData[i][4]);
      var Mets = parseFloat(a[7]) &gt;= parseFloat(thresholdResult)?'Yes':'No';
      newRow(t,t.rows.length,["","","","Totals for "+masterData[i][4],"","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],thresholdResult,Mets],"rowYellow")
    }
  }

  }
  //Bottom Total row Grand total label and table data cells that have total of each column.
  // 17 total table data spots below
  var a = getTotalsForAll();
      newRow(t,t.rows.length,["","","","Grand Totals","","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7]],"rowRed")
}
//8 0's totals for Debris removal through County totals
function getTotalsFor(c){
  var a =[0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' '){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][4]==c){
//parseFloat cuts off the first character if a number, otherwise NaN is returned - 8 spots below
    a[0]+=parseFloat(isNull(masterData[i][6]));
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    
  }
}
return a;

}
//Same as IA file except for 8 0's
function getTotalsForAll(){
  var a =[0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' '){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
    a[0]+=parseFloat(isNull(masterData[i][6]));
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
}
return a;

}
window.onload=start;

</script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
  .rowYellow {background-color:#ffff99;}
  .rowBlue {background-color:#b3e0ff;}
  .rowRed {background-color:#ffb3b3;}
.rowReg {}
.textYellow {color:#ffff99;}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false">PA - Infrastructure - Local Estimate of Damage to Public Property By Category</td></tr></tbody></table><div class="content"><!--<viewlink class="btn btn-default" type="button" name="!Display (DEFAULT)">Recovery Summery</viewlink>
        <viewlink class="btn btn-default" type="button" name="Map (DO NOT ASSIGN)">Map View</viewlink>
        <space />
        <space />
        <viewlink class="btn btn-default" type="button" name="DSO PA">DSO PA</viewlink>
        <viewlink class="btn btn-default" type="button" name="DSO IA">DSO IA</viewlink>
        <viewlink class="btn btn-default" type="button" name="Report View">Report View</viewlink>
        <viewlink class="btn btn-default" type="button" name="Dec Report">Dec Report</viewlink>--><table id="mainTable" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" width="" rowSpan="1"> </td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center"></td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">A</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">B</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">C</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">D</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">E</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">F</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">G</td><td selected="false" colSpan="1" width="" rowSpan="1"> </td><td selected="false" colSpan="1" width="" rowSpan="1"> </td><td selected="false" colSpan="1" width="" rowSpan="1"> </td><td selected="false" colSpan="1" width="" rowSpan="1"> </td></tr><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Total Jurisdictions</td><td selected="false" colSpan="1" style="font-weight: bold;" align="center">County/City</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Debris Removal</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Police/EMS</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Roads &amp; Bridges</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Water Facilites</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Buildings</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Public Utility Systems</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Other</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Area / <span class="textYellow">County</span> Totals</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">County Threshold</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Met?</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Local Dec</td></tr></tbody></table><eocrepeatallrecords rowcount="0" sort="sortCountyOrder, sortCityOrder"><if test="1=0"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="repairCostDebrisClearance" /><eocfield name="repairCostEmergency" /><eocfield name="repairCostRoadPaved" /><eocfield name="repairCostWaterControlFacilities" /><eocfield name="repairCostBuildingsEquipment" /><eocfield name="repairCostUtilitySystems" /><eocfield name="repairCostOther" /><eocfield name="repairCostTotals" /><eocfield name="cat01" /><eocfield name="cat02" /><eocfield name="cat03" /><eocfield name="cat04" /><eocfield name="cat05" /><eocfield name="cat06" /><eocfield name="cat07" /><eocfield name="cat08" /><eocfield name="cat09" /><eocfield name="cat10" /><eocfield name="cat11" /><eocfield name="cat12" /><eocfield name="cat13" /><eocfield name="cat14" /><eocfield name="cat15" /><eocfield name="repairCost01" /><eocfield name="repairCost02" /><eocfield name="repairCost03" /><eocfield name="repairCost04" /><eocfield name="repairCost05" /><eocfield name="repairCost06" /><eocfield name="repairCost07" /><eocfield name="repairCost08" /><eocfield name="repairCost09" /><eocfield name="repairCost10" /><eocfield name="repairCost11" /><eocfield name="repairCost12" /><eocfield name="repairCost13" /><eocfield name="repairCost14" /><eocfield name="repairCost15" /><eocfield name="declarationIssued" /></if><span style="display:none" class="data" name="data"><value-of select="@sortCountyOrder" />|<value-of select="@sortCityOrder" />|<value-of select="@jurisdictionType" />|<!--<viewlink name="Input (DO NOT ASSIGN)"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b>/<value-of select="@city" /></if><if test="@jurisdictionType='City'"><value-of select="@county" />/<b><value-of select="@city" /></b></if></viewlink>-->|<value-of select="@county" />|<value-of select="@city" />|<expression useboardlevelfilters="true" name="catASum">
      (case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'A' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'A' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'A' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'A' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'A' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'A' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'A' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'A' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'A' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'A' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'A' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'A' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'A' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'A' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostDebrisClearance as money)
      </expression>|<expression useboardlevelfilters="true" name="catBSum">
      (case when cat01 = 'B' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'B' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'B' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'B' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'B' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'B' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'B' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'B' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'B' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'B' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'B' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'B' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'B' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'B' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'B' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostEmergency as money)
      </expression>|<expression useboardlevelfilters="true" name="catCSum">
      (case when cat01 = 'C' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'C' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'C' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'C' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'C' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'C' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'C' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'C' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'C' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'C' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'C' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'C' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'C' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'C' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'C' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostRoadPaved as money)
      </expression>|<expression useboardlevelfilters="true" name="catDSum">
      (case when cat01 = 'D' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'D' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'D' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'D' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'D' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'D' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'D' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'D' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'D' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'D' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'D' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'D' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'D' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'D' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'D' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostWaterControlFacilities as money)
      </expression>|<expression useboardlevelfilters="true" name="catESum">
      (case when cat01 = 'E' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'E' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'E' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'E' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'E' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'E' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'E' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'E' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'E' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'E' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'E' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'E' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'E' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'E' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'E' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostBuildingsEquipment as money)
      </expression>|<expression useboardlevelfilters="true" name="catFSum">
      (case when cat01 = 'F' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'F' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'F' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'F' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'F' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'F' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'F' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'F' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'F' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'F' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'F' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'F' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'F' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'F' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'F' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostUtilitySystems as money)
      </expression>|<expression useboardlevelfilters="true" name="catGSum">
      (case when cat01 = 'G' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'G' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'G' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'G' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'G' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'G' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'G' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'G' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'G' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'G' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'G' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'G' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'G' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'G' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'G' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostOther as money)
      </expression>|<expression useboardlevelfilters="true" name="catSumTotal">
     (case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'A' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'A' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'A' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'A' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'A' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'A' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'A' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'A' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'A' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'A' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'A' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'A' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'A' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'A' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostDebrisClearance as money)+
      (case when cat01 = 'B' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'B' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'B' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'B' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'B' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'B' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'B' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'B' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'B' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'B' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'B' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'B' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'B' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'B' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'B' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostEmergency as money)+
       (case when cat01 = 'C' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'C' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'C' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'C' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'C' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'C' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'C' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'C' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'C' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'C' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'C' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'C' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'C' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'C' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'C' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostRoadPaved as money)+
      (case when cat01 = 'D' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'D' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'D' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'D' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'D' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'D' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'D' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'D' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'D' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'D' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'D' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'D' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'D' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'D' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'D' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostWaterControlFacilities as money)+
      (case when cat01 = 'E' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'E' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'E' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'E' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'E' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'E' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'E' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'E' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'E' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'E' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'E' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'E' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'E' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'E' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'E' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostBuildingsEquipment as money)+
      (case when cat01 = 'F' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'F' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'F' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'F' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'F' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'F' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'F' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'F' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'F' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'F' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'F' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'F' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'F' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'F' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'F' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostUtilitySystems as money)+
      (case when cat01 = 'G' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'G' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'G' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'G' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'G' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'G' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'G' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'G' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'G' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'G' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'G' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'G' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'G' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'G' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'G' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostOther as money)
      </expression>|<value-of select="@declarationIssued" />|No|DSO Only</span></eocrepeatallrecords></div></div><embedview style="display:none" view="Bubble Letter Embed"></embedview></body></html><viewfilters viewfilterid="10865" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hidden" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Core" name="DSO IA" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="4e9bde19-6b81-4ab4-850e-5ba40e35ac83" assignable="1"><html><head><title>Local Estimates</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript">
    /*add new row, builds the table, inserts rows.  rowClass is added in PA file in to below like this (table,position,data,rowClass - '<td>'+comma(data[number])+'</td>' goes to 21 here and 17 in PA File) 17 table data spots below*/
var newRow = function(table,position,data,rowClass){
	var row = table.insertRow(position);
	//row.className('agencytemplate_tableentry');
    row.innerHTML = '<td>'+'</td>'+'<td>'+data[3]+'</td>'+'<td>'+comma(data[6])+'</td>'+'<td>'+comma(data[7])+'</td>'+'<td>'+comma(data[8])+'</td>'+'<td>'+comma(data[9])+'</td>'+'<td>'+comma(data[10])+'</td>'+'<td>'+comma(data[11])+'</td>'+'<td>'+comma(data[12])+'</td>'+'<td>'+comma(data[13])+'</td>'+'<td>'+comma(data[14])+'</td>'+'<td>'+comma(data[15])+'</td>'+'<td>'+comma(data[16])+'</td>'+'<td>'+comma(data[17])+'</td>'+'<td>'+comma(data[18])+'</td>'+'<td>'+comma(data[19])+'</td>'+'<td>'+comma(data[20])+'</td>'+'<td>'+comma(data[21])+'</td>'+'<td>'+comma(data[22])+'</td>'+'<td>'+comma(data[23])+'</td>';
    //adds color to new total rows - PA file says +rowClass below instead of +rowColorClass at end of this block
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowClass;
    //agencytemplate_tableroweven
}

//array that loops through everything - this code does not run yet on this view
var masterData =[];
function setBubbleData(a){
 
 populateMasterData();

for(var k=0; k&lt;a.length;k++){
  var match = false;
  for(var i=0; i&lt;masterData.length;i++){
    if(a[k].type==masterData[i][2] &amp;&amp;a[k].county==masterData[i][4]&amp;&amp;a[k].city==masterData[i][5]){ //if there is a match from bubble input and DSO
     masterData[i][16]=a[k].letter;
    masterData[i][17]='DSO+';
    match=true;
    }
  }
 if(match===false){ //if not associated with a DSO
masterData.push([a[k].sortCounty,a[k].sortCity,a[k].type,a[k].label,a[k].county,a[k].city,"","","","","","","","",a[k].localDec,a[k].letter,"No DSO"]);}
}


masterData = masterData.sort(function(a,b){
  if(parseInt(a[0]) &gt; parseInt(b[0])){
    return 1;
  }else if(parseInt(a[0]) &lt; parseInt(b[0])){
    return -1;
  } else if(parseInt(a[1]) &gt; parseInt(b[1])){
    return 1;
  } else if(parseInt(a[0]) &gt; parseInt(b[0])){
    return -1;
  }

});
  popluateTable();
  alert("Hello");
}

function start(){
//next two lines are commented out in PA (working file)
	populateMasterData();
	popluateTable();

}

//populates the data, maybe holding area before the table - SAME as PA file
function populateMasterData(){
var a = document.getElementsByName('data');
	for(var i =0; i&lt;a.length;i++){
		var b =[];
		var c = a[i].innerHTML.split('|');
		for(var k=0; k&lt;c.length;k++){
			b.push(c[k]);
		}
		masterData.push(b);
	}
}
//uses regEx to place commas where they need to go
  function comma(x) {
if(isNaN(x)===true || x==""){
  x==undefined?x='':x=x;
  return x;
}
x=parseFloat(x).toFixed(2);
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
//return x;
}
/*populates the actual table [4] is county spot. Looks at td cells and determines if county matches the next county, add togeether andcreate  anew line. If counties does not match, do not add or create yellow row - add extra quotes and comma to add column at beginning*/

function popluateTable(){
var t = document.getElementById('mainTable');
	for(var i=0; i &lt; masterData.length;i++){
		newRow(t,(t.rows.length),masterData[i]);
		if((i!=0)&amp;&amp;(masterData[i][4]===masterData[i-1][4])&amp;&amp;(masterData[i+1][4]!=masterData[i][4])){ //Add Totals Row, This should be the yellow lines
			var a = getTotalsFor(masterData[i][4]);
			newRow(t,t.rows.length,["","","","Totals for "+masterData[i][4],"","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17]],"rowYellow")
		}
	}
  /*Bottom Total row Grand total label and table data cells that have total of each column. PA file stops at [7], 22 total table data spots below - NEED to add 1 blank set of quotes to begining to get extra columnn and add another couple a[]'s to make wotk at end'*/
	var a = getTotalsForAll();
			newRow(t,t.rows.length,["","","","","Grand Totals","","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12]],"rowRed")
}
//16 0's Single Family Aff totals through Totals Destroyed plus 2
function getTotalsFor(c){
	var a =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	var isNull = function(b){
		if(b==''||b==' '){return 0;}
		else return b;
	};
  //parseFloat cuts off the first character if a number, otherwise NaN is returned - 16 spots below - creates into decimal integer
for(var i=0; i&lt;masterData.length;i++){
	if(masterData[i][4]==c){
		a[0]+=parseFloat(isNull(masterData[i][6]));
		a[1]+=parseFloat(isNull(masterData[i][7]));
		a[2]+=parseFloat(isNull(masterData[i][8]));
		a[3]+=parseFloat(isNull(masterData[i][9]));
		a[4]+=parseFloat(isNull(masterData[i][10]));
		a[5]+=parseFloat(isNull(masterData[i][11]));
		a[6]+=parseFloat(isNull(masterData[i][12]));
		a[7]+=parseFloat(isNull(masterData[i][13]));
		a[8]+=parseFloat(isNull(masterData[i][14]));
		a[9]+=parseFloat(isNull(masterData[i][15]));
		a[10]+=parseFloat(isNull(masterData[i][16]));
		a[11]+=parseFloat(isNull(masterData[i][17]));
		a[12]+=parseFloat(isNull(masterData[i][18]));
		a[13]+=parseFloat(isNull(masterData[i][19]));
		a[14]+=parseFloat(isNull(masterData[i][20]));
		a[15]+=parseFloat(isNull(masterData[i][21]));
    a[16]+=parseFloat(isNull(masterData[i][22]));
    a[17]+=parseFloat(isNull(masterData[i][23]));
    a[18]+=parseFloat(isNull(masterData[i][24]));
	}
}
console.log(a);
return a;

}
//Same as PA file except for 16 0's Zeros define as interger - only 8 in second part after for - just like PA file
function getTotalsForAll(){
	var a =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	var isNull = function(b){
		if(b==''||b==' '){return 0;}
		else return b;
	};
for(var i=0; i&lt;masterData.length;i++){
		a[0]+=parseFloat(isNull(masterData[i][6]));
		a[1]+=parseFloat(isNull(masterData[i][7]));
		a[2]+=parseFloat(isNull(masterData[i][8]));
		a[3]+=parseFloat(isNull(masterData[i][9]));
		a[4]+=parseFloat(isNull(masterData[i][10]));
		a[5]+=parseFloat(isNull(masterData[i][11]));
		a[6]+=parseFloat(isNull(masterData[i][12]));
		a[7]+=parseFloat(isNull(masterData[i][13]));
}
return a;

}
window.onload=start;

</script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
  .rowYellow {background-color:#ffff99;}
  .rowBlue {background-color:#b3e0ff;}
  .rowRed {background-color:#ffb3b3;}
.rowReg {}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false" align="center">IA - Housing - Local Estimates</td></tr></tbody></table><div class="content"><!--<viewlink class="btn btn-default" type="button" name="!Display (DEFAULT)">Recovery Summery</viewlink>
        <viewlink class="btn btn-default" type="button" name="Map (DO NOT ASSIGN)">Map View</viewlink>
        <space />
        <space />
        <viewlink class="btn btn-default" type="button" name="DSO PA">DSO PA</viewlink>
        <viewlink class="btn btn-default" type="button" name="DSO IA">DSO IA</viewlink>
        <viewlink class="btn btn-default" type="button" name="Report View">Report View</viewlink>
        <viewlink class="btn btn-default" type="button" name="Dec Report">Dec Report</viewlink>--><table id="mainTable" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="true" /><td selected="false" colSpan="1" width="" rowSpan="1"></td><td selected="false" colSpan="4" width="" rowSpan="1">Single Family Homes</td><td selected="false" colSpan="4" width="" rowSpan="1" align="center">Mobile Homes</td><td selected="false" colSpan="4" width="" rowSpan="1" align="center">Multi-Family Homes</td><td selected="false" colSpan="4" width="" rowSpan="1" align="center">Totals</td><td selected="false" colSpan="2" width="" rowSpan="1" align="center">Business Loss/Economic Impact</td></tr><tr class="agencytemplate_tableheader"><td selected="false" rowSpan="1" colSpan="1">Total Jursidictions</td><td selected="false" rowSpan="1" colSpan="1">County</td><td selected="false" rowSpan="1" colSpan="1" width="">Aff</td><td selected="false" rowSpan="1" colSpan="1" width="">Minor</td><td selected="false" rowSpan="1" colSpan="1" width="">Major</td><td selected="false" rowSpan="1" colSpan="1" width="">Destroyed</td><td selected="false" rowSpan="1" colSpan="1" width="">Aff</td><td selected="false" rowSpan="1" colSpan="1" width="">Minor</td><td selected="false" rowSpan="1" colSpan="1" width="">Major</td><td selected="false" rowSpan="1" colSpan="1" width="">Destroyed</td><td selected="false" rowSpan="1" colSpan="1" width="">Aff</td><td selected="false" rowSpan="1" colSpan="1" width="">Minor</td><td selected="false" rowSpan="1" colSpan="1" width="">Major</td><td selected="false" rowSpan="1" colSpan="1" width="">Destroyed</td><td selected="false" rowSpan="1" colSpan="1" width="">Aff</td><td selected="false" rowSpan="1" colSpan="1" width="">Minor</td><td selected="false" rowSpan="1" colSpan="1" width="">Major</td><td selected="false" rowSpan="1" colSpan="1" width="">Destroyed</td><td selected="false" rowSpan="1" colSpan="1" width="">Minor</td><td selected="false" rowSpan="1" colSpan="1" width="">Major</td></tr></tbody></table><eocrepeatallrecords rowcount="0" sort="sortCountyOrder, sortCityOrder"><if test="1=0"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="sfhAffected" /><eocfield name="mhAffected" /><eocfield name="mfuAffected" /><eocfield name="sfhMinorDamage" /><eocfield name="mhMinorDamage" /><eocfield name="mfuMinorDamage" /><eocfield name="sfhMajorDamage" /><eocfield name="mhMajorDamage" /><eocfield name="mfuMajorDamage" /><eocfield name="sfhDestroyed" /><eocfield name="mhDestroyed" /><eocfield name="mfuDestroyed" /><eocfield name="totalsAffected" /><eocfield name="totalsMinorDamage" /><eocfield name="totalsMajorDamage" /><eocfield name="totalsDestroyed" /><eocfield name="numberMinorDamage" /><eocfield name="numberMajorDamage" /></if><a style="display:none" name="data"><value-of select="@sortCountyOrder" />|<value-of select="@sortCityOrder" />|<value-of select="@jurisdictionType" />|<if test="@jurisdictionType='County'"><b><value-of select="@county" /></b>/<value-of select="@city" /></if><if test="@jurisdictionType='City'"><value-of select="@county" />/<b><value-of select="@city" /></b></if>|<value-of select="@county" />|<value-of select="@city" />|<value-of select="@sfhAffected" />|<value-of select="@sfhMinorDamage" />|<value-of select="@sfhMajorDamage" />|<value-of select="@sfhDestroyed" />|<value-of select="@mhAffected" />|<value-of select="@mhMinorDamage" />|<value-of select="@mhMajorDamage" />|<value-of select="@mhDestroyed" />|<value-of select="@mfuAffected" />|<value-of select="@mfuMinorDamage" />|<value-of select="@mfuMajorDamage" />|<value-of select="@mfuDestroyed" />|<value-of select="@totalsAffected" />|<value-of select="@totalsMinorDamage" />|<value-of select="@totalsMajorDamage" />|<value-of select="@totalsDestroyed" />|<value-of select="@numberMinorDamage" />|<value-of select="@numberMajorDamage" /></a></eocrepeatallrecords></div></div></body></html><viewfilters viewfilterid="10866" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hidden" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Core" name="API Unique Check (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="c8b13544-f70a-4f31-b58b-fc769057cefe" assignable="1"><html><head><title /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2"><boardname /></td></tr></tbody></table><div class="content"><table class="display"><tbody><tr class="agencytemplate_tableheader"><td colSpan="4">[Place Header Fields Here]</td></tr><eocrepeatallrecords><tr class="agencytemplate_tableentry"><td selected="false"><dataid /></td><td selected="false" colSpan="1" width=""><eocfield name="jurisdictionType" /></td><td selected="false" colSpan="1" width=""><eocfield name="county" /></td><td selected="true" colSpan="1" width=""><eocfield name="city" /></td><td><eocfield name="hidden" />(<expression useboardlevelfilters="true" name="catASum">
      (case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)</expression>)</td></tr></eocrepeatallrecords></tbody></table></div></div></body></html></view><view tablename="Core" name="PA org" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="433d18ee-8d40-4f0e-8ef0-bc227f71cd47" assignable="1"><html><head><title /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
.updated{height:30px;}
}

</style><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript">
$( document ).ready(function() {
 // $('#countyFilter').addClass("form-control input-sm");
fixNumbers();
});
var total=0;
function fixNumbers(){
var a = document.getElementsByClassName('repairCostClass');
for(var i=0; i&lt;a.length;i++){
if(a[i].innerHTML!=''){
//total += parseInt(a[i].innerHTML);
a[i].innerHTML = Comma(a[i].innerHTML);
}}
//alert(total);
}

function Comma(number1)
    {
  var number  = number1;
  number = '' + Math.round(parseFloat(number));
  dec = number1-number;
dec=dec.toFixed(2);
    if (number.length &gt; 3)
       {
       var mod = number.length % 3;
       var output = (mod &gt; 0 ? (number.substring(0,mod)) : '');
       for (i=0 ; i &lt; Math.floor(number.length / 3); i++)
           {
           if ((mod == 0) &amp;&amp; (i == 0))
                output += number.substring(mod+ 3 * i, mod + 3 * i + 3);
           else
                output+= ',' + number.substring(mod + 3 * i, mod + 3 * i + 3);
           }
           output+=dec.substring(1,dec.length);
       return (output);
       }
    else return number;
    }

</script></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2"><boardname /></td></tr></tbody></table><div class="content"><!--<viewlink class="btn btn-default" type="button" name="Map (DO NOT ASSIGN)">Map View</viewlink>
        <space />
        <viewlink class="btn btn-default" type="button" name="IA Display (DO NOT ASSIGN)">IA List</viewlink>
        <space />
        <viewlink class="btn btn-default" type="button" name="DecLett List (DO NOT ASSIGN)">Dec and Lett List</viewlink>
        <space />
        <viewlink class="btn btn-default" type="button" name="Local Estimate of Damage to Public Property By Category">PA by Catagory</viewlink>
        <viewlink class="btn btn-default" type="button" name="Local Estimates">Local Estimates</viewlink>--><filterdropdown id="countyFilter" defaulttext="All Counties"><filter name="Anderson">Anderson</filter><filter name="Andrews">Andrews</filter><filter name="Angelina">Angelina</filter><filter name="Aransas">Aransas</filter><filter name="Archer">Archer</filter><filter name="Armstrong">Armstrong</filter><filter name="Atascosa">Atascosa</filter><filter name="Austin">Austin</filter><filter name="Bailey">Bailey</filter><filter name="Bandera">Bandera</filter><filter name="Bastrop">Bastrop</filter><filter name="Baylor">Baylor</filter><filter name="Bee">Bee</filter><filter name="Bell">Bell</filter><filter name="Bexar">Bexar</filter><filter name="Blanco">Blanco</filter><filter name="Borden">Borden</filter><filter name="Bosque">Bosque</filter><filter name="Bowie">Bowie</filter><filter name="Brazoria">Brazoria</filter><filter name="Brazos">Brazos</filter><filter name="Brewster">Brewster</filter><filter name="Briscoe">Briscoe</filter><filter name="Brooks">Brooks</filter><filter name="Brown">Brown</filter><filter name="Burleson">Burleson</filter><filter name="Burnet">Burnet</filter><filter name="Caldwell">Caldwell</filter><filter name="Calhoun">Calhoun</filter><filter name="Callahan">Callahan</filter><filter name="Cameron">Cameron</filter><filter name="Camp">Camp</filter><filter name="Carson">Carson</filter><filter name="Cass">Cass</filter><filter name="Castro">Castro</filter><filter name="Chambers">Chambers</filter><filter name="Cherokee">Cherokee</filter><filter name="Childress">Childress</filter><filter name="Clay">Clay</filter><filter name="Cochran">Cochran</filter><filter name="Coke">Coke</filter><filter name="Coleman">Coleman</filter><filter name="Collin">Collin</filter><filter name="Collingsworth">Collingsworth</filter><filter name="Colorado">Colorado</filter><filter name="Comal">Comal</filter><filter name="Comanche">Comanche</filter><filter name="Concho">Concho</filter><filter name="Cooke">Cooke</filter><filter name="Coryell">Coryell</filter><filter name="Cottle">Cottle</filter><filter name="Crane">Crane</filter><filter name="Crockett">Crockett</filter><filter name="Crosby">Crosby</filter><filter name="Culberson">Culberson</filter><filter name="Dallam">Dallam</filter><filter name="Dallas">Dallas</filter><filter name="Dawson">Dawson</filter><filter name="Deaf Smith">Deaf Smith</filter><filter name="Delta">Delta</filter><filter name="Denton">Denton</filter><filter name="DeWitt">DeWitt</filter><filter name="Dickens">Dickens</filter><filter name="Dimmit">Dimmit</filter><filter name="Donley">Donley</filter><filter name="Duval">Duval</filter><filter name="Eastland">Eastland</filter><filter name="Ector">Ector</filter><filter name="Edwards">Edwards</filter><filter name="El Paso">El Paso</filter><filter name="Ellis">Ellis</filter><filter name="Erath">Erath</filter><filter name="Falls">Falls</filter><filter name="Fannin">Fannin</filter><filter name="Fayette">Fayette</filter><filter name="Fisher">Fisher</filter><filter name="Floyd">Floyd</filter><filter name="Foard">Foard</filter><filter name="Fort Bend">Fort Bend</filter><filter name="Franklin">Franklin</filter><filter name="Freestone">Freestone</filter><filter name="Frio">Frio</filter><filter name="Gaines">Gaines</filter><filter name="Galveston">Galveston</filter><filter name="Garza">Garza</filter><filter name="Gillespie">Gillespie</filter><filter name="Glasscock">Glasscock</filter><filter name="Goliad">Goliad</filter><filter name="Gonzales">Gonzales</filter><filter name="Gray">Gray</filter><filter name="Grayson">Grayson</filter><filter name="Gregg">Gregg</filter><filter name="Grimes">Grimes</filter><filter name="Guadalupe">Guadalupe</filter><filter name="Hale">Hale</filter><filter name="Hall">Hall</filter><filter name="Hamilton">Hamilton</filter><filter name="Hansford">Hansford</filter><filter name="Hardeman">Hardeman</filter><filter name="Hardin">Hardin</filter><filter name="Harris">Harris</filter><filter name="Harrison">Harrison</filter><filter name="Hartley">Hartley</filter><filter name="Haskell">Haskell</filter><filter name="Hays">Hays</filter><filter name="Hemphill">Hemphill</filter><filter name="Henderson">Henderson</filter><filter name="Hidalgo">Hidalgo</filter><filter name="Hill">Hill</filter><filter name="Hockley">Hockley</filter><filter name="Hood">Hood</filter><filter name="Hopkins">Hopkins</filter><filter name="Houston">Houston</filter><filter name="Howard">Howard</filter><filter name="Hudspeth">Hudspeth</filter><filter name="Hunt">Hunt</filter><filter name="Hutchinson">Hutchinson</filter><filter name="Irion">Irion</filter><filter name="Jack">Jack</filter><filter name="Jackson">Jackson</filter><filter name="Jasper">Jasper</filter><filter name="Jeff Davis">Jeff Davis</filter><filter name="Jefferson">Jefferson</filter><filter name="Jim Hogg">Jim Hogg</filter><filter name="Jim Wells">Jim Wells</filter><filter name="Johnson">Johnson</filter><filter name="Jones">Jones</filter><filter name="Karnes">Karnes</filter><filter name="Kaufman">Kaufman</filter><filter name="Kendall">Kendall</filter><filter name="Kenedy">Kenedy</filter><filter name="Kent">Kent</filter><filter name="Kerr">Kerr</filter><filter name="Kimble">Kimble</filter><filter name="King">King</filter><filter name="Kinney">Kinney</filter><filter name="Kleberg">Kleberg</filter><filter name="Knox">Knox</filter><filter name="La Salle">La Salle</filter><filter name="Lamar">Lamar</filter><filter name="Lamb">Lamb</filter><filter name="Lampasas">Lampasas</filter><filter name="Lavaca">Lavaca</filter><filter name="Lee">Lee</filter><filter name="Leon">Leon</filter><filter name="Liberty">Liberty</filter><filter name="Limestone">Limestone</filter><filter name="Lipscomb">Lipscomb</filter><filter name="Live Oak">Live Oak</filter><filter name="Llano">Llano</filter><filter name="Loving">Loving</filter><filter name="Lubbock">Lubbock</filter><filter name="Lynn">Lynn</filter><filter name="Madison">Madison</filter><filter name="Marion">Marion</filter><filter name="Martin">Martin</filter><filter name="Mason">Mason</filter><filter name="Matagorda">Matagorda</filter><filter name="Maverick">Maverick</filter><filter name="McCulloch">McCulloch</filter><filter name="McLennan">McLennan</filter><filter name="McMullen">McMullen</filter><filter name="Medina">Medina</filter><filter name="Menard">Menard</filter><filter name="Midland">Midland</filter><filter name="Milam">Milam</filter><filter name="Mills">Mills</filter><filter name="Mitchell">Mitchell</filter><filter name="Montague">Montague</filter><filter name="Montgomery">Montgomery</filter><filter name="Moore">Moore</filter><filter name="Morris">Morris</filter><filter name="Motley">Motley</filter><filter name="Nacogdoches">Nacogdoches</filter><filter name="Navarro">Navarro</filter><filter name="Newton">Newton</filter><filter name="Nolan">Nolan</filter><filter name="Nueces">Nueces</filter><filter name="Ochiltree">Ochiltree</filter><filter name="Oldham">Oldham</filter><filter name="Orange">Orange</filter><filter name="Palo Pinto">Palo Pinto</filter><filter name="Panola">Panola</filter><filter name="Parker">Parker</filter><filter name="Parmer">Parmer</filter><filter name="Pecos">Pecos</filter><filter name="Polk">Polk</filter><filter name="Potter">Potter</filter><filter name="Presidio">Presidio</filter><filter name="Rains">Rains</filter><filter name="Randall">Randall</filter><filter name="Reagan">Reagan</filter><filter name="Real">Real</filter><filter name="Red River">Red River</filter><filter name="Reeves">Reeves</filter><filter name="Refugio">Refugio</filter><filter name="Roberts">Roberts</filter><filter name="Robertson">Robertson</filter><filter name="Rockwall">Rockwall</filter><filter name="Runnels">Runnels</filter><filter name="Rusk">Rusk</filter><filter name="Sabine">Sabine</filter><filter name="San Augustine">San Augustine</filter><filter name="San Jacinto">San Jacinto</filter><filter name="San Patricio">San Patricio</filter><filter name="San Saba">San Saba</filter><filter name="Schleicher">Schleicher</filter><filter name="Scurry">Scurry</filter><filter name="Shackelford">Shackelford</filter><filter name="Shelby">Shelby</filter><filter name="Sherman">Sherman</filter><filter name="Smith">Smith</filter><filter name="Somervell">Somervell</filter><filter name="Starr">Starr</filter><filter name="Stephens">Stephens</filter><filter name="Sterling">Sterling</filter><filter name="Stonewall">Stonewall</filter><filter name="Sutton">Sutton</filter><filter name="Swisher">Swisher</filter><filter name="Tarrant">Tarrant</filter><filter name="Taylor">Taylor</filter><filter name="Terrell">Terrell</filter><filter name="Terry">Terry</filter><filter name="Throckmorton">Throckmorton</filter><filter name="Titus">Titus</filter><filter name="Tom Green">Tom Green</filter><filter name="Travis">Travis</filter><filter name="Trinity">Trinity</filter><filter name="Tyler">Tyler</filter><filter name="Upshur">Upshur</filter><filter name="Upton">Upton</filter><filter name="Uvalde">Uvalde</filter><filter name="Val Verde">Val Verde</filter><filter name="Van Zandt">Van Zandt</filter><filter name="Victoria">Victoria</filter><filter name="Walker">Walker</filter><filter name="Waller">Waller</filter><filter name="Ward">Ward</filter><filter name="Washington">Washington</filter><filter name="Webb">Webb</filter><filter name="Wharton">Wharton</filter><filter name="Wheeler">Wheeler</filter><filter name="Wichita">Wichita</filter><filter name="Wilbarger">Wilbarger</filter><filter name="Willacy">Willacy</filter><filter name="Williamson">Williamson</filter><filter name="Wilson">Wilson</filter><filter name="Winkler">Winkler</filter><filter name="Wise">Wise</filter><filter name="Wood">Wood</filter><filter name="Yoakum">Yoakum</filter><filter name="Young">Young</filter><filter name="Zapata">Zapata</filter><filter name="Zavala">Zavala</filter></filterdropdown><filterbutton name="!Default"><on>Show Hidden</on><off><b>Hide Hidden</b></off></filterbutton><dataexport type="button"><field name="jurisdictionType" header="jurisdictionType " /><field name="county" header="county " /><field name="city" header="city " /><field name="type" header="type " /><field name="nfip" header="nfip " /><field name="dateOfDisaster" header="dateOfDisaster " /><field name="declarationIssued" header="declarationIssued " /><field name="contactPerson" header="contactPerson " /><field name="address" header="address " /><field name="phone" header="phone " /><field name="fax" header="fax " /><field name="pager" header="pager " /><field name="dutyPhone" header="dutyPhone " /><field name="fatalities" header="fatalities " /><field name="injuries" header="injuries " /><field name="hospitalized" header="hospitalized " /><field name="agricultural" header="agricultural " /><field name="sfhAffected" header="sfhAffected " /><field name="sfhMinorDamage" header="sfhMinorDamage " /><field name="sfhMajorDamage" header="sfhMajorDamage " /><field name="sfhDestroyed" header="sfhDestroyed " /><field name="sfhCovByInsurance" header="sfhCovByInsurance " /><field name="mhAffected" header="mhAffected " /><field name="mhMinorDamage" header="mhMinorDamage " /><field name="mhMajorDamage" header="mhMajorDamage " /><field name="mhDestroyed" header="mhDestroyed " /><field name="mhCovByInsurance" header="mhCovByInsurance " /><field name="mfuAffected" header="mfuAffected " /><field name="mfuMinorDamage" header="mfuMinorDamage " /><field name="mfuMajorDamage" header="mfuMajorDamage " /><field name="mfuDestroyed" header="mfuDestroyed " /><field name="mfuCovByInsurance" header="mfuCovByInsurance " /><field name="totalsAffected" header="totalsAffected " /><field name="totalsMinorDamage" header="totalsMinorDamage " /><field name="totalsMajorDamage" header="totalsMajorDamage " /><field name="totalsDestroyed" header="totalsDestroyed " /><field name="totalsCovByInsurance" header="totalsCovByInsurance " /><field name="numNotSatisfiedByVolunteers" header="numNotSatisfiedByVolunteers " /><field name="sheltersOpen" header="sheltersOpen " /><field name="sheltersHowMany" header="sheltersHowMany " /><field name="shelterDetails" header="shelterDetails " /><field name="numberMinorDamage" header="numberMinorDamage " /><field name="coveredMinorDamage" header="coveredMinorDamage " /><field name="totalMinorDamage" header="totalMinorDamage " /><field name="numberMajorDamage" header="numberMajorDamage " /><field name="coveredMajorDamage" header="coveredMajorDamage " /><field name="totalMajorDamage" header="totalMajorDamage " /><field name="numberTotal" header="numberTotal " /><field name="coveredTotal" header="coveredTotal " /><field name="totalTotal" header="totalTotal " /><field name="businessesCeased" header="businessesCeased " /><field name="businessesEconomicInjury" header="businessesEconomicInjury " /><field name="numberUnemployed" header="numberUnemployed " /><field name="subcategoryDebrisClearance" header="subcategoryDebrisClearance " /><field name="sitesDebrisClearance" header="sitesDebrisClearance " /><field name="repairCostDebrisClearance" header="repairCostDebrisClearance " /><field name="insuranceDebrisClearance" header="insuranceDebrisClearance " /><field name="subcategoryEmergency" header="subcategoryEmergency " /><field name="sitesEmergency" header="sitesEmergency " /><field name="repairCostEmergency" header="repairCostEmergency " /><field name="insuranceEmergency" header="insuranceEmergency " /><field name="sitesRoadPaved" header="sitesRoadPaved " /><field name="repairCostRoadPaved" header="repairCostRoadPaved " /><field name="insuranceRoadPaved" header="insuranceRoadPaved " /><field name="sitesRoadUnpaved" header="sitesRoadUnpaved " /><field name="repairCostRoadUnpaved" header="repairCostRoadUnpaved " /><field name="insuranceRoadUnpaved" header="insuranceRoadUnpaved " /><field name="sitesRoadDestroyed" header="sitesRoadDestroyed " /><field name="repairCostRoadDestroyed" header="repairCostRoadDestroyed " /><field name="insuranceRoadDestroyed" header="insuranceRoadDestroyed " /><field name="sitesRoadClosedRepairable" header="sitesRoadClosedRepairable " /><field name="repairCostRoadClosedRepairable" header="repairCostRoadClosedRepairable " /><field name="insuranceRoadClosedRepairable" header="insuranceRoadClosedRepairable " /><field name="sitesRoadDamagedServiceable" header="sitesRoadDamagedServiceable " /><field name="repairCostRoadDamagedServiceable" header="repairCostRoadDamagedServiceable " /><field name="insuranceRoadDamagedServiceable" header="insuranceRoadDamagedServiceable " /><field name="sitesRoadCulvertsWashedAway" header="sitesRoadCulvertsWashedAway " /><field name="repairCostRoadCulvertsWashedAway" header="repairCostRoadCulvertsWashedAway " /><field name="insuranceRoadCulvertsWashedAway" header="insuranceRoadCulvertsWashedAway " /><field name="sitesRoadCulvertsDamaged" header="sitesRoadCulvertsDamaged " /><field name="repairCostRoadCulvertsDamaged" header="repairCostRoadCulvertsDamaged " /><field name="insuranceRoadCulvertsDamaged" header="insuranceRoadCulvertsDamaged " /><field name="sitesWaterControlFacilities" header="sitesWaterControlFacilities " /><field name="repairCostWaterControlFacilities" header="repairCostWaterControlFacilities " /><field name="insuranceWaterControlFacilities" header="insuranceWaterControlFacilities " /><field name="subcategoryBuildingsEquipment" header="subcategoryBuildingsEquipment " /><field name="sitesBuildingsEquipment" header="sitesBuildingsEquipment " /><field name="repairCostBuildingsEquipment" header="repairCostBuildingsEquipment " /><field name="insuranceBuildingsEquipment" header="insuranceBuildingsEquipment " /><field name="subcategoryUtilitySystems" header="subcategoryUtilitySystems " /><field name="sitesUtilitySystems" header="sitesUtilitySystems " /><field name="repairCostUtilitySystems" header="repairCostUtilitySystems " /><field name="insuranceUtilitySystems" header="insuranceUtilitySystems " /><field name="subcategoryOther" header="subcategoryOther " /><field name="sitesOther" header="sitesOther " /><field name="repairCostOther" header="repairCostOther " /><field name="insuranceOther" header="insuranceOther " /><field name="sitesTotals" header="sitesTotals " /><field name="repairCostTotals" header="repairCostTotals " /><field name="insuranceTotals" header="insuranceTotals " /><field name="annualMaintenanceBudget" header="annualMaintenanceBudget " /><field name="startOfFiscalYear" header="startOfFiscalYear " /><field name="orgFacility01" header="orgFacility01 " /><field name="sites01" header="sites01 " /><field name="repairCost01" header="repairCost01 " /><field name="insurance01" header="insurance01 " /><field name="orgFacility02" header="orgFacility02 " /><field name="sites02" header="sites02 " /><field name="repairCost02" header="repairCost02 " /><field name="insurance02" header="insurance02 " /><field name="orgFacility03" header="orgFacility03 " /><field name="sites03" header="sites03 " /><field name="repairCost03" header="repairCost03 " /><field name="insurance03" header="insurance03 " /><field name="orgFacility04" header="orgFacility04 " /><field name="sites04" header="sites04 " /><field name="repairCost04" header="repairCost04 " /><field name="insurance04" header="insurance04 " /><field name="orgFacility05" header="orgFacility05 " /><field name="sites05" header="sites05 " /><field name="repairCost05" header="repairCost05 " /><field name="insurance05" header="insurance05 " /><field name="orgFacility06" header="orgFacility06 " /><field name="sites06" header="sites06 " /><field name="repairCost06" header="repairCost06 " /><field name="insurance06" header="insurance06 " /><field name="orgFacility07" header="orgFacility07 " /><field name="sites07" header="sites07 " /><field name="repairCost07" header="repairCost07 " /><field name="insurance07" header="insurance07 " /><field name="orgFacility08" header="orgFacility08 " /><field name="sites08" header="sites08 " /><field name="repairCost08" header="repairCost08 " /><field name="insurance08" header="insurance08 " /><field name="orgFacility09" header="orgFacility09 " /><field name="sites09" header="sites09 " /><field name="repairCost09" header="repairCost09 " /><field name="insurance09" header="insurance09 " /><field name="orgFacility10" header="orgFacility10 " /><field name="sites10" header="sites10 " /><field name="repairCost10" header="repairCost10 " /><field name="insurance10" header="insurance10 " /><field name="orgFacility11" header="orgFacility11 " /><field name="sites11" header="sites11 " /><field name="repairCost11" header="repairCost11 " /><field name="insurance11" header="insurance11 " /><field name="orgFacility12" header="orgFacility12 " /><field name="sites12" header="sites12 " /><field name="repairCost12" header="repairCost12 " /><field name="insurance12" header="insurance12 " /><field name="orgFacility13" header="orgFacility13 " /><field name="sites13" header="sites13 " /><field name="repairCost13" header="repairCost13 " /><field name="insurance13" header="insurance13 " /><field name="orgFacility14" header="orgFacility14 " /><field name="sites14" header="sites14 " /><field name="repairCost14" header="repairCost14 " /><field name="insurance14" header="insurance14 " /><field name="orgFacility15" header="orgFacility15 " /><field name="sites15" header="sites15 " /><field name="repairCost15" header="repairCost15 " /><field name="insurance15" header="insurance15 " /><field name="sitesOtherTotal" header="sitesOtherTotal " /><field name="repairCostTotal" header="repairCostTotal " /><field name="insuranceCostTotal" header="insuranceCostTotal " /><field name="subcategoryFacilities" header="subcategoryFacilities " /><field name="submitterName" header="submitterName " /><field name="submitterEmail" header="submitterEmail " /><field name="sortCountyOrder" header="sortCountyOrder " /><field name="sortCityOrder" header="sortCityOrder " /></dataexport><table class="table display"><tbody><tr class="agencytemplate_tableheader"><td>Jurisdiction</td><td>Type</td><td># of Sites</td><td>Estimated Repair Cost</td><td>Anticipated Insurance</td><td>Action</td></tr><eocrepeatallrecords sort="sortCountyOrder, sortCityOrder"><if test="1=0"><eocfield name="jurisdictionType" /><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="repairCostTotals" /><eocfield name="updated" /><expression useboardlevelfilters="true" name="how_old">datediff(hh,entrydate,getUTCDate())</expression></if><tr class="agencytemplate_tableentry"><td><b><eocfield name="county" /></b><if test="@jurisdictionType='City'"><i><eocfield name="city" /></i></if><if test="@how_old &lt;3 and @updated='Yes'"><img src="https://olympus.soc.texas.gov/images/Updated.jpg" class="updated" /></if><if test="@how_old &lt;3 and @updated='No'"><img src="https://olympus.soc.texas.gov/images/new.png" class="updated" /></if></td><td><eocfield name="type" /></td><td><eocfield name="sitesTotals" /></td><td><span class="repairCostClass"><value-of select="@repairCostTotals" /></span></td><td><eocfield name="insuranceTotals" /></td><td><!--<viewlink name="Input (DO NOT ASSIGN)" type="button">Edit</viewlink>
                  <viewlink name="DSO Details (DO NOT ASSIGN)" type="button">View</viewlink>--><value-of select="@sortCountyOrder" />/<value-of select="@sortCityOrder" /></td></tr></eocrepeatallrecords><!-- <tr>
              <td>Totals</td>
              <td>
                <expression useboardlevelfilters="true" name="totalsType">count(*)</expression>
              </td>
              <td>
                <expression useboardlevelfilters="true" name="totalssitesTotals">isNull(cast (round ( sum (cast(sitesTotals as float) ),2) as varchar(100)),0)</expression>
              </td>
              <td>
                <span class="repairCostClass"><expression useboardlevelfilters="true" name="totalsrepairCostTotals">isNull(cast (round ( sum (cast(repairCostTotals as money) ),2) as varchar(100)),0)</expression></span>
              </td>
              <td>
                <expression useboardlevelfilters="true" name="totalsinsuranceTotals">isNull(cast (round ( sum (cast(insuranceTotals as float) ),2) as varchar(100)),0)</expression>
              </td>
              <td></td>
            </tr>--></tbody></table></div></div></body></html><viewfilters viewfilterid="10867" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hidden" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Core" name="Report View" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="0a386e5f-da37-4b39-8c33-e94fb6c91478" assignable="1"><html><head><title /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
.updated{height:30px;}
  .rowYellow {background-color:Yellow;}
  .rowBlue {background-color:Blue;}
  .rowRed {background-color:Red;}
.rowReg {}
</style><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript">
$( document ).ready(function() {
 // $('#countyFilter').addClass("form-control input-sm");
fixNumbers();
});
var total=0;
function fixNumbers(){
var a = document.getElementsByClassName('repairCostClass');
for(var i=0; i&lt;a.length;i++){
if(a[i].innerHTML!=''){
//total += parseInt(a[i].innerHTML);
a[i].innerHTML = comma(a[i].innerHTML);
}}
//alert(total);

runReport2();
runReport3();
}
function comma(x) {
if(isNaN(x)===true || x==""){
  x==undefined?x='':x=x;
  return x;
}
x=parseFloat(x).toFixed(2);
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
//return x;
}
//Report 1 Area
function report1Data(a){
report1popluateTable(a);

}
function report1popluateTable(data){
var t = document.getElementById('report1');
  for(var i=0; i &lt; data.length;i++){
    report1NewRow(t,(t.rows.length),data[i]);
  }
}
function report1NewRow(table,position,data){
  var row = table.insertRow(position);
  var string ="";
  for(var i=0; i&lt; data.length;i++){
    string=string +'<td>'+data[i]+'</td>';
  }

  //row.className('agencytemplate_tableentry');
    row.innerHTML = string;
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowColorClass;
    //agencytemplate_tableroweven
}
 function setDSOData(a){

      var check = function(a,b){
        var c = b.split('|');
      for(var k=0; k&lt; a.length; k++){
        if(b[0]==a[k].type &amp;&amp; b[1]==a[k].county &amp;&amp; b[2]==a[k].city){
            return 'Yes';
            }
        else{
        return 'No';
        }
      }
      }
    
      var b = document.getElementsByClassName('data');
      for(var i=0; i&lt;b.length; i++){

     b[i].innerHTML=check(a,b[i].innerHTML);
     b[i].style.display='';
       
      }
    }
//Report 2 area
var masterData2 =[];
function runReport2(){
  report2PopulateMasterData();
  report2PopluateTable();

}


function report2PopulateMasterData(){
var a = document.getElementsByName('data2');
  for(var i =0; i&lt;a.length;i++){
    var b =[];
    var c = a[i].innerHTML.split('|');
    for(var k=0; k&lt;c.length;k++){
      b.push(c[k]);
    }
    masterData2.push(b);
  }
}

function report2PopluateTable(){
var t = document.getElementById('report2');
  for(var i=0; i &lt; masterData2.length;i++){
    report2NewRow(t,(t.rows.length),masterData2[i]);
    if((i!=0)&amp;&amp;(masterData2[i][4]===masterData2[i-1][4])&amp;&amp;(masterData2[i+1][4]!=masterData2[i][4])){ //Add Totals Row
      var a = report2GetTotalsFor(masterData2[i][4]);
      report2NewRow(t,t.rows.length,["","","","Totals for "+masterData2[i][4],"","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]])
    }
  }
  var a = report2GetTotalsForAll();
      report2NewRow(t,t.rows.length,["","","","Grand Totals","","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]])
}
function report2GetTotalsFor(c){
  var a =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' '){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData2.length;i++){
  if(masterData2[i][4]==c){
    a[0]+=parseFloat(isNull(masterData2[i][6]));
    a[1]+=parseFloat(isNull(masterData2[i][7]));
    a[2]+=parseFloat(isNull(masterData2[i][8]));
    a[3]+=parseFloat(isNull(masterData2[i][9]));
    a[4]+=parseFloat(isNull(masterData2[i][10]));
    a[5]+=parseFloat(isNull(masterData2[i][11]));
    a[6]+=parseFloat(isNull(masterData2[i][12]));
    a[7]+=parseFloat(isNull(masterData2[i][13]));
    a[8]+=parseFloat(isNull(masterData2[i][14]));
    a[9]+=parseFloat(isNull(masterData2[i][15]));
    a[10]+=parseFloat(isNull(masterData2[i][16]));
    a[11]+=parseFloat(isNull(masterData2[i][17]));
    a[12]+=parseFloat(isNull(masterData2[i][18]));
    a[13]+=parseFloat(isNull(masterData2[i][19]));
    a[14]+=parseFloat(isNull(masterData2[i][20]));
    a[15]+=parseFloat(isNull(masterData2[i][21]));
  }
}

return a;

}
function report2GetTotalsForAll(){
  var a =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' '){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData2.length;i++){
    a[0]+=parseFloat(isNull(masterData2[i][6]));
    a[1]+=parseFloat(isNull(masterData2[i][7]));
    a[2]+=parseFloat(isNull(masterData2[i][8]));
    a[3]+=parseFloat(isNull(masterData2[i][9]));
    a[4]+=parseFloat(isNull(masterData2[i][10]));
    a[5]+=parseFloat(isNull(masterData2[i][11]));
    a[6]+=parseFloat(isNull(masterData2[i][12]));
    a[7]+=parseFloat(isNull(masterData2[i][13]));
}
return a;

}
function report2NewRow(table,position,data){
  var row = table.insertRow(position);
  //row.className('agencytemplate_tableentry');
    row.innerHTML = '<td>'+data[3]+'</td>'+'<td>'+comma(data[6])+'</td>'+'<td>'+comma(data[7])+'</td>'+'<td>'+comma(data[8])+'</td>'+'<td>'+comma(data[9])+'</td>'+'<td>'+comma(data[10])+'</td>'+'<td>'+comma(data[11])+'</td>'+'<td>'+comma(data[12])+'</td>'+'<td>'+comma(data[13])+'</td>'+'<td>'+comma(data[14])+'</td>'+'<td>'+comma(data[15])+'</td>'+'<td>'+comma(data[16])+'</td>'+'<td>'+comma(data[17])+'</td>'+'<td>'+comma(data[18])+'</td>'+'<td>'+comma(data[19])+'</td>'+'<td>'+comma(data[20])+'</td>'+'<td>'+comma(data[21])+'</td>';
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowColorClass;
}

//Report 3 area
var masterData3 =[];
function runReport3(){
// report3PopulateMasterData();
//  report3PopluateTable();
}
function setBubbleData(a){
 
 report3PopulateMasterData();

for(var k=0; k&lt;a.length;k++){
var match=false;
  for(var i=0; i&lt;masterData3.length;i++){
    if(a[k].type==masterData3[i][2] &amp;&amp;a[k].county==masterData3[i][4]&amp;&amp;a[k].city==masterData3[i][5]){ //if there is a match from bubble input and DSO
     masterData3[i][16]=a[k].letter;
    masterData3[i][17]='DSO+';
match=true;
    }
  }
if(match===false){
  //if not associated with a DSO
masterData3.push([a[k].sortCounty,a[k].sortCity,a[k].type,a[k].label,a[k].county,a[k].city,"","","","","","","","",a[k].localDec,a[k].letter,"No DSO"]);
}}


masterData3 = masterData3.sort(function(a,b){
  if(parseInt(a[0]) &gt; parseInt(b[0])){
    return 1;
  }else if(parseInt(a[0]) &lt; parseInt(b[0])){
    return -1;
  } else if(parseInt(a[1]) &gt; parseInt(b[1])){
    return 1;
  } else if(parseInt(a[0]) &gt; parseInt(b[0])){
    return -1;
  }

});
  report3PopluateTable();
}

function threshold(c){
var a = [["Anderson","208110.48"],["Andrews","52638.16"],["Angelina","308904.76"],["Aransas","82442.48"],["Archer","32232.24"],["Armstrong","6767.56"],["Atascosa","159883.16"],["Austin","101164.52"],["Bailey","25507.4"],["Bandera","72926.6"],["Bastrop","264048.76"],["Baylor","13264.56"],["Bee","113425.16"],["Bell","1104436.6"],["Bexar","6104591.88"],["Blanco","37369.32"],["Borden","2281.96"],["Bosque","64834.72"],["Bowie","329531.4"],["Brazoria","1114870.96"],["Brazos","693669.56"],["Brewster","32865.92"],["Briscoe","5827.72"],["Brooks","25713.88"],["Brown","135657.36"],["Burleson","61185.72"],["Burnet","152190"],["Caldwell","135514.96"],["Calhoun","76116.36"],["Callahan","48216.64"],["Cameron","1446143.2"],["Camp","44147.56"],["Carson","22007.92"],["Cass","108451.84"],["Castro","28700.72"],["Chambers","124941.76"],["Cherokee","181008.2"],["Childress","25065.96"],["Clay","38277.12"],["Cochran","11132.12"],["Coke","11819.2"],["Coleman","31666.2"],["Collin","2785133.96"],["Collingsworth","10882.92"],["Colorado","74311.44"],["Comal","386160.32"],["Comanche","49747.44"],["Concho","14549.72"],["Cooke","136835.72"],["Coryell","268381.28"],["Cottle","5357.8"],["Crane","15575"],["Crockett","13239.64"],["Crosby","21570.04"],["Culberson","8536.88"],["Dallam","23862.68"],["Dallas","8430574.84"],["Dawson","49245.48"],["Deaf Smith","68964.32"],["Delta","18622.36"],["Denton","2358905.84"],["DeWitt","71545.32"],["Dickens","8700.64"],["Dimmit","35585.76"],["Donley","13090.12"],["Duval","41943.92"],["Eastland","66155.48"],["Ector","488182.8"],["Edwards","7127.12"],["El Paso","2850303.32"],["Ellis","532611.6"],["Erath","134888.4"],["Falls","63602.96"],["Fannin","120737.4"],["Fayette","87412.24"],["Fisher","14147.44"],["Floyd","22947.76"],["Foard","4756.16"],["Fort Bend","2083935"],["Franklin","37753.8"],["Freestone","70544.96"],["Frio","61292.52"],["Gaines","62392.56"],["Galveston","1037060.04"],["Garza","23001.16"],["Gillespie","88419.72"],["Glasscock","4364.56"],["Goliad","25667.6"],["Gonzales","70512.92"],["Gray","80224.6"],["Grayson","430322.12"],["Gregg","433358.8"],["Grimes","94710.24"],["Guadalupe","468257.48"],["Hale","129131.88"],["Hall","11936.68"],["Hamilton","30320.52"],["Hansford","19982.28"],["Hardeman","14734.84"],["Hardin","194500.6"],["Harris","14569154.04"],["Harrison","233646.36"],["Hartley","21580.72"],["Haskell","21000.44"],["Hays","559300.92"],["Hemphill","13552.92"],["Henderson","279573.92"],["Hidalgo","2758177.64"],["Hill","124916.84"],["Hockley","81648.6"],["Hood","182207.92"],["Hopkins","125173.16"],["Houston","84485.92"],["Howard","124642.72"],["Hudspeth","12374.56"],["Hunt","306619.24"],["Hutchinson","78854"],["Irion","5692.44"],["Jack","32196.64"],["Jackson","50107"],["Jasper","127127.6"],["Jeff Davis","8337.52"],["Jefferson","898091.88"],["Jim Hogg","18868"],["Jim Wells","145383.28"],["Johnson","537325.04"],["Jones","71919.12"],["Karnes","52773.44"],["Kaufman","367926"],["Kendall","118939.6"],["Kenedy","1480.96"],["Kent","2876.48"],["Kerr","176665"],["Kimble","16400.92"],["King","1018.16"],["Kinney","12808.88"],["Kleberg","114137.16"],["Knox","13239.64"],["La Salle","24514.16"],["Lamar","177263.08"],["Lamb","49758.12"],["Lampasas","70050.12"],["Lavaca","68576.28"],["Lee","59138.72"],["Leon","59811.56"],["Liberty","269289.08"],["Limestone","83247.04"],["Lipscomb","11755.12"],["Live Oak","41050.36"],["Llano","68711.56"],["Loving","291.92"],["Lubbock","992638.36"],["Lynn","21057.4"],["Madison","48643.84"],["Marion","37543.76"],["Martin","17084.44"],["Mason","14282.72"],["Matagorda","130659.12"],["Maverick","193158.48"],["McCulloch","29487.48"],["McLennan","836265.36"],["McMullen","2516.92"],["Medina","163781.36"],["Menard","7981.52"],["Midland","487264.32"],["Milam","88134.92"],["Mills","17572.16"],["Mitchell","33474.68"],["Montague","70199.64"],["Montgomery","1622455.76"],["Moore","77978.24"],["Morris","46045.04"],["Motley","4307.6"],["Nacogdoches","229705.44"],["Navarro","169936.6"],["Newton","51424.2"],["Nolan","54168.96"],["Nueces","1211193.88"],["Ochiltree","36393.88"],["Oldham","7305.12"],["Orange","291339.72"],["Palo Pinto","100075.16"],["Panola","84713.76"],["Parker","416260.12"],["Parmer","36557.64"],["Pecos","55204.92"],["Polk","161670.28"],["Potter","431019.88"],["Presidio","27832.08"],["Rains","38853.84"],["Randall","429781"],["Reagan","11986.52"],["Real","11780.04"],["Red River","45781.6"],["Reeves","49067.48"],["Refugio","26283.48"],["Roberts","3307.24"],["Robertson","59174.32"],["Rockwall","278879.72"],["Runnels","37383.56"],["Rusk","189854.8"],["Sabine","38569.04"],["San Augustine","31559.4"],["San Jacinto","93927.04"],["San Patricio","230702.24"],["San Saba","21826.36"],["Schleicher","12321.16"],["Scurry","60238.76"],["Shackelford","12025.68"],["Shelby","90594.88"],["Sherman","10801.04"],["Smith","746581.84"],["Somervell","30224.4"],["Starr","217046.08"],["Stephens","34282.8"],["Sterling","4069.08"],["Stonewall","5304.4"],["Sutton","14695.68"],["Swisher","27960.24"],["Tarrant","6440161.04"],["Taylor","468161.36"],["Terrell","3503.04"],["Terry","45037.56"],["Throckmorton","5841.96"],["Titus","115109.04"],["Tom Green","392397.44"],["Travis","3646386.96"],["Trinity","51922.6"],["Tyler","77486.96"],["Upshur","139940.04"],["Upton","11943.8"],["Uvalde","94001.8"],["Val Verde","174009.24"],["Van Zandt","187181.24"],["Victoria","308983.08"],["Walker","241585.16"],["Waller","153809.8"],["Ward","37942.48"],["Washington","120036.08"],["Webb","891082.24"],["Wharton","146956.8"],["Wheeler","19259.6"],["Wichita","468140"],["Wilbarger","48184.6"],["Willacy","78797.04"],["Williamson","1504737.24"],["Wilson","152788.08"],["Winkler","25311.6"],["Wise","210492.12"],["Wood","149391.84"],["Yoakum","28049.24"],["Young","66038"],["Zapata","49904.08"],["Zavala","41570.12"]];
for(var i = 0; i&lt;a.length;i++){
  if(c==a[i][0]){
    return a[i][1];
  }
}
return "";
}
function report3NewRow(table,position,data,rowClass){
  var row = table.insertRow(position);
  //row.className('agencytemplate_tableentry');
    row.innerHTML = '<td>'+data[3]+'</td>'+'<td>'+comma(data[6])+'</td>'+'<td>'+comma(data[7])+'</td>'+'<td>'+comma(data[8])+'</td>'+'<td>'+comma(data[9])+'</td>'+'<td>'+comma(data[10])+'</td>'+'<td>'+comma(data[11])+'</td>'+'<td>'+comma(data[12])+'</td>'+'<td>'+comma(data[13])+'</td>'+'<td>'+comma(data[14])+'</td>'+'<td>'+comma(data[15])+'</td>'+'<td>'+comma(data[16])+'</td>'+'<td>'+comma(data[17])+'</td>';
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowClass;
    //agencytemplate_tableroweven
}


function report3PopulateMasterData(){
var a = document.getElementsByName('data3');
  for(var i =0; i&lt;a.length;i++){
    var b =[];
    var c = a[i].innerHTML.split('|');
    for(var k=0; k&lt;c.length;k++){
      b.push(c[k]);
    }
    masterData3.push(b);
  }
}

function report3PopluateTable(){
var t = document.getElementById('report3');
  for(var i=0; i &lt; masterData3.length;i++){
    report3NewRow(t,(t.rows.length),["","","",masterData3[i][3],masterData3[i][4],masterData3[i][5],masterData3[i][6],masterData3[i][7],masterData3[i][8],masterData3[i][9],masterData3[i][10],masterData3[i][11],masterData3[i][12],masterData3[i][13],"","",masterData3[i][14],masterData3[i][15]],masterData3[i][16]=='No DSO'?"rowBlue":"rowReg");
 if(masterData3[i+1]){
    if((masterData3[i+1][4]!=masterData3[i][4])){ //Add Totals Row
      var thresholdResult = threshold(masterData3[i][4]);
      var a = report3GetTotalsFor(masterData3[i][4]);
      var thresholdResult = threshold(masterData3[i][4]);
      var Mets = parseFloat(a[7]) &gt;= parseFloat(thresholdResult)?'Yes':'No';
      report3NewRow(t,t.rows.length,["","","","Totals for "+masterData3[i][4],"","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],thresholdResult,Mets],"rowYellow")
    }
  }

  }
  var a = report3GetTotalsForAll();
      report3NewRow(t,t.rows.length,["","","","Grand Totals","","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],"",""],"")
}
function report3GetTotalsFor(c){
  var a =[0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' '){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData3.length;i++){
  if(masterData3[i][4]==c){

    a[0]+=parseFloat(isNull(masterData3[i][6]));
    a[1]+=parseFloat(isNull(masterData3[i][7]));
    a[2]+=parseFloat(isNull(masterData3[i][8]));
    a[3]+=parseFloat(isNull(masterData3[i][9]));
    a[4]+=parseFloat(isNull(masterData3[i][10]));
    a[5]+=parseFloat(isNull(masterData3[i][11]));
    a[6]+=parseFloat(isNull(masterData3[i][12]));
    a[7]+=parseFloat(isNull(masterData3[i][13]));
    
  }
}
return a;

}
function report3GetTotalsForAll(){
  var a =[0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' '){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData3.length;i++){
    a[0]+=parseFloat(isNull(masterData3[i][6]));
    a[1]+=parseFloat(isNull(masterData3[i][7]));
    a[2]+=parseFloat(isNull(masterData3[i][8]));
    a[3]+=parseFloat(isNull(masterData3[i][9]));
    a[4]+=parseFloat(isNull(masterData3[i][10]));
    a[5]+=parseFloat(isNull(masterData3[i][11]));
    a[6]+=parseFloat(isNull(masterData3[i][12]));
    a[7]+=parseFloat(isNull(masterData3[i][13]));
}
return a;

}

</script></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td align="right"><returnbutton>Return</returnbutton></td></tr><tr><td id="tdBoard" colSpan="2">
              DSO Report View
            </td></tr></tbody></table><div class="content"><!--<viewlink class="btn btn-default" type="button" name="!Display (DEFAULT)">Recovery Summery</viewlink>
        <viewlink class="btn btn-default" type="button" name="Map (DO NOT ASSIGN)">Map View</viewlink>
        <space />
        <space />
        <viewlink class="btn btn-default" type="button" name="DSO PA">DSO PA</viewlink>
        <viewlink class="btn btn-default" type="button" name="DSO IA">DSO IA</viewlink>
        <viewlink class="btn btn-default" type="button" name="Report View">Report View</viewlink>
        <viewlink class="btn btn-default" type="button" name="Dec Report">Dec Report</viewlink>
        <embedview view="Map (DO NOT ASSIGN)" width="100%" height="300" scrolling="false"></embedview>--><table id="report1" class="display"><tr class="agencytemplate_tableheader"><td selected="false">County/City</td><td selected="false" colSpan="1" width="">Disater Dec</td><td selected="false" colSpan="1" width="">Letter to Gov</td><td selected="false" colSpan="1" width="">DSO</td><td selected="false" colSpan="1" width="">Incident Period</td><td selected="false" colSpan="1" width="">Local Disaster Proc Issue Rec'd</td><td selected="false" colSpan="1" width="">Acknowledge Letter Sent</td><td selected="false" colSpan="1" width="">Impacted Counties DSO Rec'd</td><td selected="false" colSpan="1" width="">Acknowledge Letter Rec'd</td><td selected="false" colSpan="1" width="">Request Letter Rec'd</td><td selected="false" colSpan="1" width="">Acknowledge Letter Sent</td><td selected="false" colSpan="1" width="">Request Packets Complete</td><td selected="false" colSpan="1" width="">IA PDA Scheduled</td><td selected="false" colSpan="1" width="">IA PDA Complete</td><td selected="false" colSpan="1" width="">PA PDA Scheduled</td><td selected="false" colSpan="1" width="">PA PDA Complete</td><td selected="false" colSpan="1" width="" rowSpan="1">Flash Rpt Rec'd</td></tr></table><table id="report2" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="true" /><td selected="false" colSpan="4" width="" rowSpan="1">Single Family Homes</td><td selected="false" colSpan="4" width="" rowSpan="1" align="center">Mobile Homes</td><td selected="false" colSpan="4" width="" rowSpan="1" align="center">Multi-Family Homes</td><td selected="false" colSpan="4" width="" rowSpan="1" align="center">Totals</td></tr><tr class="agencytemplate_tableheader"><td selected="false" rowSpan="1" colSpan="1">County</td><td selected="false" rowSpan="1" colSpan="1" width="">Aff</td><td selected="false" rowSpan="1" colSpan="1" width="">Minor</td><td selected="false" rowSpan="1" colSpan="1" width="">Major</td><td selected="false" rowSpan="1" colSpan="1" width="">Destroyed</td><td selected="false" rowSpan="1" colSpan="1" width="">Aff</td><td selected="false" rowSpan="1" colSpan="1" width="">Minor</td><td selected="false" rowSpan="1" colSpan="1" width="">Major</td><td selected="false" rowSpan="1" colSpan="1" width="">Destroyed</td><td selected="false" rowSpan="1" colSpan="1" width="">Aff</td><td selected="false" rowSpan="1" colSpan="1" width="">Minor</td><td selected="false" rowSpan="1" colSpan="1" width="">Major</td><td selected="false" rowSpan="1" colSpan="1" width="">Destroyed</td><td selected="false" rowSpan="1" colSpan="1" width="">Aff</td><td selected="false" rowSpan="1" colSpan="1" width="">Minor</td><td selected="false" rowSpan="1" colSpan="1" width="">Major</td><td selected="false" rowSpan="1" colSpan="1" width="">Destroyed</td></tr></tbody></table><table id="report3" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false">Matrix</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">A</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">B</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">C</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">D</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">E</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">F</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">G</td><td selected="false" colSpan="1" width="" rowSpan="1"> </td><td selected="false" colSpan="1" width="" rowSpan="1"> </td><td selected="false" colSpan="1" width="" rowSpan="1"> </td><td selected="false" colSpan="1" width="" rowSpan="1"> </td><td selected="false" colSpan="1" width="" rowSpan="1"> </td></tr><tr class="agencytemplate_tableheader"><td selected="false" rowSpan="1">County/City</td><td selected="false" colSpan="1" width="" rowSpan="1">Debris Removal</td><td selected="false" colSpan="1" width="" rowSpan="1">Police/EMS</td><td selected="false" colSpan="1" width="" rowSpan="1">Roads &amp; Bridges</td><td selected="false" colSpan="1" width="" rowSpan="1">Water Facilites</td><td selected="false" colSpan="1" width="" rowSpan="1">Buildings</td><td selected="false" colSpan="1" width="" rowSpan="1">Public Utility Systems</td><td selected="false" colSpan="1" width="" rowSpan="1" style="font-weight: bold;" align="center">Other</td><td selected="false" colSpan="1" width="" rowSpan="1">County Totals</td><td selected="false" colSpan="1" width="" rowSpan="1">County Threshold</td><td selected="false" colSpan="1" width="" rowSpan="1">Mets</td><td selected="false" colSpan="1" width="" rowSpan="1">Local Dec</td><td selected="false" colSpan="1" width="" rowSpan="1">Ltr to Gov</td></tr></tbody></table><eocrepeatallrecords rowcount="0" sort="sortCountyOrder, sortCityOrder"><if test="1=0"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="repairCostDebrisClearance" /><eocfield name="repairCostEmergency" /><eocfield name="repairCostRoadPaved" /><eocfield name="repairCostWaterControlFacilities" /><eocfield name="repairCostBuildingsEquipment" /><eocfield name="repairCostUtilitySystems" /><eocfield name="repairCostOther" /><eocfield name="repairCostTotals" /><eocfield name="cat01" /><eocfield name="cat02" /><eocfield name="cat03" /><eocfield name="cat04" /><eocfield name="cat05" /><eocfield name="cat06" /><eocfield name="cat07" /><eocfield name="cat08" /><eocfield name="cat09" /><eocfield name="cat10" /><eocfield name="cat11" /><eocfield name="cat12" /><eocfield name="cat13" /><eocfield name="cat14" /><eocfield name="cat15" /><eocfield name="repairCost01" /><eocfield name="repairCost02" /><eocfield name="repairCost03" /><eocfield name="repairCost04" /><eocfield name="repairCost05" /><eocfield name="repairCost06" /><eocfield name="repairCost07" /><eocfield name="repairCost08" /><eocfield name="repairCost09" /><eocfield name="repairCost10" /><eocfield name="repairCost11" /><eocfield name="repairCost12" /><eocfield name="repairCost13" /><eocfield name="repairCost14" /><eocfield name="repairCost15" /></if><a name="data3" style="display:none"><value-of select="@sortCountyOrder" />|<value-of select="@sortCityOrder" />|<value-of select="@jurisdictionType" />|<if test="@jurisdictionType='County'"><b><value-of select="@county" /></b>/<value-of select="@city" /></if><if test="@jurisdictionType='City'"><value-of select="@county" />/<b><value-of select="@city" /></b></if>|<value-of select="@county" />|<value-of select="@city" />|<expression useboardlevelfilters="true" name="catASum">
      (case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'A' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'A' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'A' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'A' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'A' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'A' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'A' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'A' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'A' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'A' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'A' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'A' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'A' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'A' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostDebrisClearance as money)
      </expression>|<expression useboardlevelfilters="true" name="catBSum">
      (case when cat01 = 'B' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'B' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'B' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'B' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'B' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'B' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'B' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'B' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'B' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'B' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'B' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'B' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'B' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'B' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'B' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostEmergency as money)
      </expression>|<expression useboardlevelfilters="true" name="catCSum">
      (case when cat01 = 'C' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'C' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'C' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'C' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'C' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'C' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'C' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'C' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'C' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'C' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'C' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'C' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'C' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'C' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'C' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostRoadPaved as money)
      </expression>|<expression useboardlevelfilters="true" name="catDSum">
      (case when cat01 = 'D' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'D' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'D' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'D' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'D' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'D' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'D' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'D' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'D' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'D' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'D' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'D' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'D' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'D' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'D' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostWaterControlFacilities as money)
      </expression>|<expression useboardlevelfilters="true" name="catESum">
      (case when cat01 = 'E' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'E' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'E' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'E' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'E' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'E' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'E' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'E' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'E' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'E' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'E' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'E' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'E' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'E' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'E' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostBuildingsEquipment as money)
      </expression>|<expression useboardlevelfilters="true" name="catFSum">
      (case when cat01 = 'F' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'F' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'F' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'F' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'F' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'F' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'F' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'F' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'F' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'F' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'F' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'F' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'F' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'F' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'F' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostUtilitySystems as money)
      </expression>|<expression useboardlevelfilters="true" name="catGSum">
      (case when cat01 = 'G' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'G' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'G' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'G' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'G' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'G' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'G' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'G' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'G' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'G' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'G' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'G' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'G' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'G' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'G' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostOther as money)
      </expression>|<expression useboardlevelfilters="true" name="catSumTotal">
     (case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'A' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'A' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'A' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'A' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'A' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'A' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'A' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'A' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'A' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'A' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'A' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'A' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'A' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'A' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostDebrisClearance as money)+
      (case when cat01 = 'B' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'B' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'B' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'B' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'B' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'B' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'B' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'B' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'B' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'B' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'B' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'B' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'B' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'B' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'B' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostEmergency as money)+
       (case when cat01 = 'C' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'C' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'C' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'C' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'C' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'C' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'C' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'C' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'C' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'C' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'C' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'C' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'C' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'C' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'C' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostRoadPaved as money)+
      (case when cat01 = 'D' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'D' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'D' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'D' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'D' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'D' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'D' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'D' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'D' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'D' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'D' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'D' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'D' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'D' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'D' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostWaterControlFacilities as money)+
      (case when cat01 = 'E' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'E' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'E' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'E' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'E' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'E' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'E' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'E' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'E' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'E' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'E' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'E' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'E' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'E' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'E' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostBuildingsEquipment as money)+
      (case when cat01 = 'F' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'F' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'F' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'F' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'F' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'F' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'F' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'F' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'F' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'F' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'F' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'F' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'F' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'F' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'F' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostUtilitySystems as money)+
      (case when cat01 = 'G' then isNull(cast(repairCost01 as money),0) else 0 end)+
      (case when cat02 = 'G' then isNull(cast(repairCost02 as money),0) else 0 end)+
      (case when cat03 = 'G' then isNull(cast(repairCost03 as money),0) else 0 end)+
      (case when cat04 = 'G' then isNull(cast(repairCost04 as money),0) else 0 end)+
      (case when cat05 = 'G' then isNull(cast(repairCost05 as money),0) else 0 end)+
      (case when cat06 = 'G' then isNull(cast(repairCost06 as money),0) else 0 end)+
      (case when cat07 = 'G' then isNull(cast(repairCost07 as money),0) else 0 end)+
      (case when cat08 = 'G' then isNull(cast(repairCost08 as money),0) else 0 end)+
      (case when cat09 = 'G' then isNull(cast(repairCost09 as money),0) else 0 end)+
      (case when cat10 = 'G' then isNull(cast(repairCost10 as money),0) else 0 end)+
      (case when cat11 = 'G' then isNull(cast(repairCost11 as money),0) else 0 end)+
      (case when cat12 = 'G' then isNull(cast(repairCost12 as money),0) else 0 end)+
      (case when cat13 = 'G' then isNull(cast(repairCost13 as money),0) else 0 end)+
      (case when cat14 = 'G' then isNull(cast(repairCost14 as money),0) else 0 end)+
      (case when cat15 = 'G' then isNull(cast(repairCost15 as money),0) else 0 end)+
      cast(repairCostOther as money)
      </expression>|<value-of select="@declarationIssued" />|No|DSO Only</a></eocrepeatallrecords><embedview view="Bubble Embed Full" style="display:none" scrolling="false"></embedview><!--Report 2 Data --><eocrepeatallrecords rowcount="0" sort="sortCountyOrder, sortCityOrder"><if test="1=0"><eocfield name="sfhAffected" /><eocfield name="mhAffected" /><eocfield name="mfuAffected" /><eocfield name="sfhMinorDamage" /><eocfield name="mhMinorDamage" /><eocfield name="mfuMinorDamage" /><eocfield name="sfhMajorDamage" /><eocfield name="mhMajorDamage" /><eocfield name="mfuMajorDamage" /><eocfield name="sfhDestroyed" /><eocfield name="mhDestroyed" /><eocfield name="mfuDestroyed" /><eocfield name="totalsAffected" /><eocfield name="totalsMinorDamage" /><eocfield name="totalsMajorDamage" /><eocfield name="totalsDestroyed" /></if><a style="display:none" name="data2"><value-of select="@sortCountyOrder" />|<value-of select="@sortCityOrder" />|<value-of select="@jurisdictionType" />|<if test="@jurisdictionType='County'"><b><value-of select="@county" /></b>/<value-of select="@city" /></if><if test="@jurisdictionType='City'"><value-of select="@county" />/<b><value-of select="@city" /></b></if>|<value-of select="@county" />|<value-of select="@city" />|<value-of select="@sfhAffected" />|<value-of select="@sfhMinorDamage" />|<value-of select="@sfhMajorDamage" />|<value-of select="@sfhDestroyed" />|<value-of select="@mhAffected" />|<value-of select="@mhMinorDamage" />|<value-of select="@mhMajorDamage" />|<value-of select="@mhDestroyed" />|<value-of select="@mfuAffected" />|<value-of select="@mfuMinorDamage" />|<value-of select="@mfuMajorDamage" />|<value-of select="@mfuDestroyed" />|<value-of select="@totalsAffected" />|<value-of select="@totalsMinorDamage" />|<value-of select="@totalsMajorDamage" />|<value-of select="@totalsDestroyed" /></a></eocrepeatallrecords><embedview style="display:none" view="Bubble Letter Embed"></embedview><embedview style="display:none" view="DSO Entered Embed"></embedview></div></div></body></html><viewfilters viewfilterid="10868" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hidden" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Core" name="DSO Entered Embed" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="238b10a7-e7bd-48af-81ea-11ce58919e1a" assignable="1"><html><head><title></title><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style><script type="text/javascript">
var DataObj = function(a,b,c){
	var obj = {
		type:a,
		county:b,
		city:c,

	};

return obj;
};
	function start(){
		var a = document.getElementsByName('data');
		var b =[];
		for(var i =0; i&lt; a.length; i++){
			var d= a[i].innerHTML.split('|');
			var c = new DataObj(d[0],d[1],d[2]);
			b.push(c);
		}

		window.parent.window.parent.setDSOData(b);
	}

	window.onload=start;
</script></head><body><div class="container agencytemplate_boardbackground"><div class="content"><eocrepeatallrecords rowcount="0" sort="sortCountyOrder, sortCityOrder"><if test="1=0"><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="sortCityOrder" /><eocfield name="sortCountyOrder" /></if><a name="data"><value-of select="@jurisdictionType" />|<value-of select="@county" />|<value-of select="@city" /></a></eocrepeatallrecords></div></div></body></html><viewfilters viewfilterid="10869" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hidden" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Core" name="API DSO Detail (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="2e245be4-e963-4145-9194-8d45530ad8dd" assignable="1"><html><head id="Head1"><title>DSO Form</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><style type="text/css">
        #container {  margin: 50px;
        }

    </style></head><body><div id="hidden" style="display:none"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="webeocIncident" /><eocfield name="additionalEmails" /><eocfield name="updated" /></div><div id="container"><eocrepeatallrecords><h1><span class="label label-default">General</span></h1><div class="form-group form-inline"><label for="jurisdictionType">Jurisdiction Type:</label><eocfield name="jurisdictionType" /></div><div class="form-group form-inline"><label for="county">County:</label><eocfield name="county" /></div><div class="form-group form-inline"><label for="city">City:</label><eocfield name="city" /></div><div class="form-group form-inline"><label for="population">Population:</label><eocfield name="population" /></div><div class="form-group form-inline"><label for="type">Type:</label><eocfield name="type" /></div><div class="form-group form-inline"><label for="nfip">If this is a flood event, does the City/County participate in the National Flood Insurance Program (NFIP)?:</label><eocfield name="nfip" /></div><div class="form-group form-inline"><label for="dateOfDisaster">Inclusive dates of the disaster:</label><eocfield name="dateOfDisaster1" />- <eocfield name="dateOfDisaster2" />
Continuing: <eocfield name="continuing" /></div><div class="form-group form-inline"><label for="declarationIssued">Was a local disaster declaration issued:</label><eocfield name="declarationIssued" /></div><div class="form-group form-inline"><label for="contactPerson">Contact Person:</label><eocfield name="contactPersonTitle" /></div><div class="form-group form-inline"><label for="contactPerson">Contact Person Title:</label><eocfield name="contactPerson" /></div><div class="form-group form-inline"><label for="address">Address:</label><eocfield name="address" /></div><div class="form-group form-inline"><label for="phone">Phone:</label><eocfield name="phone" /></div><div class="form-group form-inline"><label for="mobilePhone">Mobile Phone:</label><eocfield name="mobilePhone" /></div><div class="form-group form-inline"><label for="fax">Fax:</label><eocfield name="fax" /></div><div class="form-group form-inline"><label for="pager">Pager:</label><eocfield name="pager" /></div><div class="form-group form-inline"><label for="dutyPhone">24 Hr Duty:</label><eocfield name="dutyPhone" /></div><!--  <h1><span class="label label-default"> Individual Assistance</span>
        </h1>
        <h3>
          <span class="label label-default"> Casualties:</span>
        </h3>
        <div class="form-group form-inline">
          <label for="fatalities">Number of Fatalities:</label>
          <eocfield name="fatalities" />
        </div>
        <div class="form-group form-inline">
          <label for="injuries">Number of Injuries:</label>
          <eocfield name="injuries" />
        </div>
        <div class="form-group form-inline">
          <label for="hospitalized">Number of Hospitalized:</label>
          <eocfield name="hospitalized" />
        </div>
<br/>--><!-- <h1>
         <span class="label label-default">Agricultural Losses: (Contact the Farm Service Agency in your county)</span>
        </h1>
        <div class="form-group form-inline">
          <label for="agricultural">Is agricultural assistance needed?:</label>
          <eocfield name="agricultural" />
<br />
    <i> If yes, please attach USDA flash situation report.</i>   
        </div>
 <div class="form-group form-inline">
      <label for="usdaFlashReport">USDA Flash Report:</label>
                 <eocfield name="usdaFlashReport" />
</div>--><h1><span class="label label-default">  Residentaial Losses - Primary Residence Only: (Local Damage Assessment) See guidelines on page 4 </span></h1><table class="table table-bordered"><tr><td>Type of Homes</td><td>Affected</td><td>Minor Damage</td><td>Major Damage</td><td>Destroyed</td><td>% Covered by Insurance</td></tr><tr><td>Single Family Homes</td><td><eocfield name="sfhAffected" /></td><td><eocfield name="sfhMinorDamage" /></td><td><eocfield name="sfhMajorDamage" /></td><td><eocfield name="sfhDestroyed" /></td><td><eocfield name="sfhCovByInsurance" /></td></tr><tr><td>Mobile Homes</td><td><eocfield name="mhAffected" /></td><td><eocfield name="mhMinorDamage" /></td><td><eocfield name="mhMajorDamage" /></td><td><eocfield name="mhDestroyed" /></td><td><eocfield name="mhCovByInsurance" /></td></tr><tr><td>Multi-Family Units</td><td><eocfield name="mfuAffected" /></td><td><eocfield name="mfuMinorDamage" /></td><td><eocfield name="mfuMajorDamage" /></td><td><eocfield name="mfuDestroyed" /></td><td><eocfield name="mfuCovByInsurance" /></td></tr><tr><td>Totals</td><td><eocfield name="totalsAffected" /></td><td><eocfield name="totalsMinorDamage" /></td><td><eocfield name="totalsMajorDamage" /></td><td><eocfield name="totalsDestroyed" /></td><td><eocfield name="totalsCovByInsurance" /></td></tr></table><div class="form-group form-inline"><label for="homesIsolated">Number of homes isolated due to road closure (high water, etc.):</label><eocfield name="homesIsolated" /></div><!--
        <div class="form-group form-inline">
          <label for="numNotSatisfiedByVolunteers">Estimated number of persons whose situation will not be satisfied by volunteer organizations (Contact local volunteer organizations):</label>
          <eocfield name="numNotSatisfiedByVolunteers" />
        </div>--><!-- <div class="form-group form-inline">
          <label for="sheltersOpen">Are shelters opened?:</label>
         <eocfield name="sheltersOpen" />
        </div>
        <div class="form-group form-inline">
          <label for="sheltersHowMany">How many shelters are open?:</label>
          <eocfield name="sheltersHowMany" />
        </div>
        <div class="form-group form-inline">
          <label for="shelterDetails">Name, location, capacity, and current occupancy of shelters:</label>
          <eocfield name="shelterDetails"  TextMode="MultiLine" Rows="5"/>
        </div>--><h1><span class="label label-default">Business Losses/Impacts:</span></h1><table class="table table-bordered"><tr><td /><td>Number</td><td># Covered by Adequate Insurance</td><td>Total estimated repair cost</td></tr><tr><td>Minor Damage (less than 40%)</td><td><eocfield name="numberMinorDamage" /></td><td><eocfield name="coveredMinorDamage" /></td><td><eocfield name="totalMinorDamage" /></td></tr><tr><td>Major Damage (greater than 40%)</td><td><eocfield name="numberMajorDamage" /></td><td><eocfield name="coveredMajorDamage" /></td><td><eocfield name="totalMajorDamage" /></td></tr><tr><td>Total</td><td><eocfield name="numberTotal" /></td><td><eocfield name="coveredTotal" /></td><td><eocfield name="totalTotal" /></td></tr></table><div class="form-group form-inline"><label for="businessesCeased">How many businesses have ceased operations:</label><eocfield name="businessesCeased" /></div><div class="form-group form-inline"><label for="businessesEconomicInjury">How many businesses have experienced economic injury:</label><eocfield name="businessesEconomicInjury" /></div><div class="form-group form-inline"><label for="numberUnemployed">Estimated number of persons unemployed because of this disaster</label><eocfield name="numberUnemployed" /><i>(Contact affected businesses and the local Texas Workforce Commission Office)</i></div><h1><span class="label label-default">PUBLIC ASSISTANCE</span></h1><table class="table table-bordered"><tr><td>Category</td><td>Subcategory</td><td>No of Sites</td><td>Estimated Repair Costs</td><td>Anticipated Insurance.*</td></tr><tr><td>Debris Clearance</td><td><eocfield name="subcategoryDebrisClearance" /></td><td><eocfield name="sitesDebrisClearance" /></td><td><eocfield name="repairCostDebrisClearance" /></td><td><eocfield name="insuranceDebrisClearance" /></td></tr><tr><td>Emergency (EMS, Fire, Police)</td><td><eocfield name="subcategoryEmergency" /></td><td><eocfield name="sitesEmergency" /></td><td><eocfield name="repairCostEmergency" /></td><td><eocfield name="insuranceEmergency" /></td></tr><tr><td rowspan="7">Road &amp; Bridge</td><td>Roads-Paved</td><td><eocfield name="sitesRoadPaved" /></td><td><eocfield name="repairCostRoadPaved" /></td><td><eocfield name="insuranceRoadPaved" /></td></tr><tr><td>Roads - Unpaved</td><td><eocfield name="sitesRoadUnpaved" /></td><td><eocfield name="repairCostRoadUnpaved" /></td><td><eocfield name="insuranceRoadUnpaved" /></td></tr><tr><td>Bridges - Destroyed</td><td><eocfield name="sitesRoadDestroyed" /></td><td><eocfield name="repairCostRoadDestroyed" /></td><td><eocfield name="insuranceRoadDestroyed" /></td></tr><tr><td>Bridges - Closed &amp; Repairable</td><td><eocfield name="sitesRoadClosedRepairable" /></td><td><eocfield name="repairCostRoadClosedRepairable" /></td><td><eocfield name="insuranceRoadClosedRepairable" /></td></tr><tr><td>Bridges - Damaged &amp; Serviceable</td><td><eocfield name="sitesRoadDamagedServiceable" /></td><td><eocfield name="repairCostRoadDamagedServiceable" /></td><td><eocfield name="insuranceRoadDamagedServiceable" /></td></tr><tr><td>Culverts - Totally washed away</td><td><eocfield name="sitesRoadCulvertsWashedAway" /></td><td><eocfield name="repairCostRoadCulvertsWashedAway" /></td><td><eocfield name="insuranceRoadCulvertsWashedAway" /></td></tr><tr><td>Culverts - Damaged &amp; still in place</td><td><eocfield name="sitesRoadCulvertsDamaged" /></td><td><eocfield name="repairCostRoadCulvertsDamaged" /></td><td><eocfield name="insuranceRoadCulvertsDamaged" /></td></tr><tr><td>Water Control Facilities <br />(Dams, levees, dikes)
</td><td><eocfield name="subcategoryFacilities" /></td><td><eocfield name="sitesWaterControlFacilities" /></td><td><eocfield name="repairCostWaterControlFacilities" /></td><td><eocfield name="insuranceWaterControlFacilities" /></td></tr><tr><td>Buildings &amp; Equipment
</td><td><eocfield name="subcategoryBuildingsEquipment" /></td><td><eocfield name="sitesBuildingsEquipment" /></td><td><eocfield name="repairCostBuildingsEquipment" /></td><td><eocfield name="insuranceBuildingsEquipment" /></td></tr><tr><td>Public Utility Systems<br />
(Gas, Electric, Sewer, Water)
</td><td><eocfield name="subcategoryUtilitySystems" /></td><td><eocfield name="sitesUtilitySystems" /></td><td><eocfield name="repairCostUtilitySystems" /></td><td><eocfield name="insuranceUtilitySystems" /></td></tr><tr><td>
            Other<br />
(Recreational Facilities, Airports, etc.)
</td><td><eocfield name="subcategoryOther" /></td><td><eocfield name="sitesOther" /></td><td><eocfield name="repairCostOther" /></td><td><eocfield name="insuranceOther" /></td></tr><tr><td /><td /><td><eocfield name="sitesTotals" /></td><td><eocfield name="repairCostTotals" /></td><td><eocfield name="insuranceTotals" /></td></tr></table><i>* Anticipated insurance is normally calculated by subtracting any deductible, depreciation or 
     uncoverable loss from the estimated repair cost.
</i><div class="form-group form-inline"><label for="annualMaintenanceBudget">Total annual maintenance budget (i.e. Public Works, Road &amp; Bridge):</label><eocfield name="annualMaintenanceBudget" /></div><div class="form-group form-inline"><label for="startOfFiscalYear">Start of Fiscal Year(Month):</label><eocfield name="startOfFiscalYear" /></div><h1><span class="label label-default">Others</span></h1><i>(Contact non-profit or governmental, medical, emergency, utility, educational, custodial care facilities, etc.)</i><table class="table table-bordered"><tr><td selected="false">Organization/ Facility</td><td selected="false" colSpan="1" width="">Catagory</td><td>No. of Sites</td><td>Estimated Repair Cost</td><td>Anticipated Insurance *</td></tr><tr><td selected="false" colSpan="1"><eocfield name="orgFacility01" /></td><td selected="false" colSpan="1" width=""><eocfield name="cat01" /></td><td selected="false"><eocfield name="sites01" /></td><td><eocfield name="repairCost01" /></td><td><eocfield name="insurance01" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility02" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat02" /></td><td><eocfield name="sites02" /></td><td><eocfield name="repairCost02" /></td><td><eocfield name="insurance02" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility03" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat03" /></td><td><eocfield name="sites03" /></td><td><eocfield name="repairCost03" /></td><td><eocfield name="insurance03" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility04" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat04" /></td><td><eocfield name="sites04" /></td><td><eocfield name="repairCost04" /></td><td><eocfield name="insurance04" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility05" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat05" /></td><td><eocfield name="sites05" /></td><td><eocfield name="repairCost05" /></td><td><eocfield name="insurance05" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility06" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat06" /></td><td><eocfield name="sites06" /></td><td><eocfield name="repairCost06" /></td><td><eocfield name="insurance06" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility07" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat07" /></td><td><eocfield name="sites07" /></td><td><eocfield name="repairCost07" /></td><td><eocfield name="insurance07" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility08" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat08" /></td><td><eocfield name="sites08" /></td><td><eocfield name="repairCost08" /></td><td><eocfield name="insurance08" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility09" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat09" /></td><td><eocfield name="sites09" /></td><td><eocfield name="repairCost09" /></td><td><eocfield name="insurance09" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility10" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat10" /></td><td><eocfield name="sites10" /></td><td><eocfield name="repairCost10" /></td><td><eocfield name="insurance10" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility11" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat11" /></td><td><eocfield name="sites11" /></td><td><eocfield name="repairCost11" /></td><td><eocfield name="insurance11" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility12" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat12" /></td><td><eocfield name="sites12" /></td><td><eocfield name="repairCost12" /></td><td><eocfield name="insurance12" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility13" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat13" /></td><td><eocfield name="sites13" /></td><td><eocfield name="repairCost13" /></td><td><eocfield name="insurance13" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility14" /></td><td colSpan="1" selected="false" width=""><eocfield name="cat14" /></td><td><eocfield name="sites14" /></td><td><eocfield name="repairCost14" /></td><td><eocfield name="insurance14" /></td></tr><tr><td colSpan="1" selected="false"><eocfield name="orgFacility15" /></td><td colSpan="1" selected="true" width=""><eocfield name="cat15" /></td><td><eocfield name="sites15" /></td><td><eocfield name="repairCost15" /></td><td><eocfield name="insurance15" /></td></tr><tr><td colSpan="2">Totals</td><td><eocfield name="sitesOtherTotal" /></td><td><eocfield name="repairCostTotal" /></td><td><eocfield name="insuranceCostTotal" /></td></tr></table><br /><div><eocfield name="notes" /></div><div>
This form is for damage assessment reporting purposes only.  In accordance with the State Emergency Management Plan, if a Mayor/County Judge determines that a situation is of such severity and magnitude that an effective response is beyond the affected jurisdiction’s capability to recover, a letter outlining the disaster impact and the need for supplemental State and/or Federal assistance must accompany this DSO.
</div><h1><span class="label label-default">Submitter Information</span></h1><div class="form-group form-inline"><label for="submitterName">Name:</label><eocfield name="submitterName" /></div><div class="form-group form-inline"><label for="submitterEmail">Email:</label><eocfield name="submitterEmail" /></div><div class="form-group form-inline"><label class="control-label" for="hidden">Disable Online Editing:</label><eocfield name="dsoDisable" /></div></eocrepeatallrecords></div></body></html></view><view tablename="Core" name="!Instructions" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="08db98de-12bb-41d1-b5f3-e7dbfc803152" assignable="1"><html>
The API user needs to have the following views assigned
-API DSO Detail
-API DSO Input
-API Unique Check
-Bubble Update
-Bubble Input


</html></view><view tablename="Core" name="Housing (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="62866a07-9918-48cb-b2d7-aeb9a36968d1" assignable="1"><html><head><title>Local Estimates</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/etn/etn.js" /><script type="text/javascript" src="../boards/board_lib.js" /><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" /><script type="text/javascript">
    /*add new row, builds the table, inserts rows.  rowClass is added in PA file in to below like this (table,position,data,rowClass - '<td>'+comma(data[number])+'</td>' goes to 21 here and 17 in PA File) 17 table data spots below*/



//window.onload=start;

</script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em; width:99%;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
  .rowYellow {background-color:#ffffb3;}
  .rowBlue {background-color:#ccebff;}
  .rowRed {background-color:#FFCCCC;}
  .rowRedTotal {background-color:#FF8C8C;}
  .lightRowRed {background-color:#FFb3b3;} /*FFCCCC*/
  .rowGray {background-color: #b7bfc8;}
.rowReg {}
.rowGreen{background-color:#00e673;}
.cellYellow{background-color:#ffff00;}
.textYellow {color:#ffff99;}
.cellOrange {background-color:#ff751a;}
.rowReg {}
.data {
  text-align:center;
}
.fieldsetButtons { 
    display:inline-block;

   }
legend{
   font-size: 10pt;
}
.tableWords {
  font-size: 10pt;
}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><span id="incidentNameSpan"><incidentname /></span></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false" align="center"><strong><i>UNVETTED and VETTED</i></strong> - Local Estimates - <strong><i>UNVETTED and VETTED</i></strong><br /><h3>(Housing / IA)<br /></h3><hr /><span style="float:left"><button type="button" class="btn btn-danger btn" data-toggle="modal" data-target="#myModal">Legend</button><space /><span id="pdfButtons" class="hide"><pdflink type="button" class="btn btn-warning" orientation="landscape">PDF</pdflink></span><span id="dataMan"><dataexport type="button" filename="DSO Housing" class="btn btn-warning"><field name="totalJurisictionsexpressionHousing2" header="Grand Total Jurisdictions"></field><field name="totalJurisictionsexpressionHousing" header="Total Jurisdictions"></field><field name="county" header="County"></field><field name="city" header="City"></field><field name="sfhAffected" header="Single Family Homes Affected"></field><field name="sfhMinorDamage" header="Single Family Homes Minor Damage"></field><field name="sfhMajorDamage" header="Single Family Homes Major Damage"></field><field name="sfhDestroyed" header="Single Family Homes Destroyed "></field><field name="mhAffected" header="Mobile Homes Affected"></field><field name="mhMinorDamage" header="Mobile Homes Minor Damage"></field><field name="mhMajorDamage" header="Mobile Homes Major Damage"></field><field name="mhDestroyed" header="Moblie Homes Destroyed"></field><field name="mfuAffected" header="Multi-Family Homes Affected"></field><field name="mfuMinorDamage" header="Multi-Family Homes Minor Damage"></field><field name="mfuMajorDamage" header="Multi-Family Homes Major Damage"></field><field name="mfuDestroyed" header="Multi-Family Homes Destroyed"></field><field name="totalsAffected" header="PA Date PDA CMPL"></field></dataexport></span></span></td></tr></tbody></table><div class="container"><!-- Trigger the modal with a button --><!-- Modal --><div class="modal fade" id="myModal" role="dialog"><div class="modal-dialog"><!-- Modal content--><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">x</button><h4 class="modal-title">Legend / Information</h4></div><div class="modal-body"><table id="smallTable" class="table display"><tr><td><div style="text-align:center;" class="rowYellow"><span style="text-align:center;font-size:12pt">County / City Totals</span></div></td><td><div style="text-align:center;" class="rowGray"><span style="text-align:center;font-size:12pt">Grand Totals</span></div></td><td><div style="text-align:center;" class="rowRed"><span style="text-align:center;font-size:12pt">FEMA Vetting</span></div></td><td><div style="text-align:center;" class="rowGreen"><span style="text-align:center;font-size:12pt">Yes</span></div></td><td><div style="text-align:center;" class="cellYellow"><span style="font-size:12pt">No</span></div></td><td><div style="text-align:center;" class="cellOrange"><span style="text-align:center;font-size:12pt">N/A</span></div></td></tr></table><table><tr><h5>X<!--The RED (total) row indicates that the Housing PDAs have been completed and that the numbers have been vetted between IA and FEMA--></h5></tr></table></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div></div></div></div></div><div class="content"><div><fieldset class="fieldsetButtons"><legend>Operations</legend><space /><space /><viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink><!--<button type="button" class="btn active">View DSO List</button>--><space /><space /><viewlink class="btn btn-info" type="button" name="!Summary(DEFAULT)">View Recovery Summary</viewlink><!--<viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink>--><space /><space /><button type="button" class="btn active">View Housing / IA</button><!--<viewlink class="btn btn-info" type="button" name="Housing (DO NOT ASSIGN)">View Housing / IA</viewlink>--><space /><space /><viewlink class="btn btn-info" type="button" name="Infrastructure (DO NOT ASSIGN)">View Infrastructure / PA</viewlink><space /><space /><space /><space /><viewlink class="btn btn-success" type="button" name="Bubble Input (DO NOT ASSIGN)">+ New Bubble Input</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>Recovery</legend><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery IA (DO NOT ASSIGN)">View Recovery IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery PA (DO NOT ASSIGN)">View Recovery PA</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>DSO</legend><space /><space /><viewlink class="btn btn-success" type="button" name="Input (DO NOT ASSIGN)">+ New DSO for Testing</viewlink></fieldset></div><hr /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><filterlistdropdown field="county" list="Counties - Texas" defaulttext="All Counties" class="form-control" /><space /><space /><space /><space /><space /><space /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><label for="webeocIncident" class=""><h4><sub>Incidents:</sub></h4></label><space /><select name="webeocIncident" id="webeocIncident" class="form-control" onchange="filterByIncident.incidentListActionOnChange();" /></div><space /><space /><space /><space /><space /><space /><span id="searchDIV"><search exact="false" range="false" rangetext="false"><field name="county" /><field name="city" /><field name="otherValue" /></search><clearsearchbutton /><span style="display: none;" id="incidentNameSearchSPAN"><search field="webeocIncident" clearsearch="true" /></span></span></div><div /><br /><table id="mainTable" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">Total Jursidictions</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">County / City
                        <br />(Click to Edit DSO)</span></td><td selected="false" colSpan="4" width="" rowSpan="1" align="center"><span class="tableWords">Single Family Homes</span></td><td selected="false" colSpan="4" width="" rowSpan="1" align="center"><span class="tableWords">Mobile Homes</span></td><td selected="false" colSpan="4" width="" rowSpan="1" align="center"><span class="tableWords">Multi-Family Homes</span></td><td selected="false" colSpan="4" width="" rowSpan="1" align="center"><span class="tableWords">Totals</span></td><td selected="false" colSpan="2" width="" rowSpan="1" align="center"><span class="tableWords">Business Loss / Economic Impact</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">DSO Audit Log</span></td></tr><tr class="agencytemplate_tableheader"><td selected="false" align="center" top-align="center" style="font-weight: normal; font-size: 14pt; background-color:#BDFFFF; color:black" rowSpan="1"><span class="tableWords"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionHousing2">sum(case when (totalsAffected!='' and totalsAffected!='0.00') or (totalsMinorDamage!='' and totalsMinorDamage!='0.00') or (totalsMajorDamage!='' and totalsMajorDamage!='0.00') or (totalsDestroyed!='' and totalsDestroyed!='0.00') or (numberMinorDamage!='' and numberMinorDamage!='0') or (numberMajorDamage!='' and numberMajorDamage!='0') then 1 else 0 end)</expression></span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Aff</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Minor</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Major</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Destroyed</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Aff</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Minor</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Major</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Destroyed</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Aff</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Minor</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Major</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Destroyed</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Aff</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Minor</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Major</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Destroyed</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Minor</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">Major</span></td></tr></tbody></table><eocrepeatallrecords rowcount="0" sort=" cast(sortCountyOrder as int) asc, cast(sortCityOrder as int) asc"><if test="1=0"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="city2" /><eocfield name="otherValue" /><eocfield name="sfhAffected" /><eocfield name="mhAffected" /><eocfield name="mfuAffected" /><eocfield name="sfhMinorDamage" /><eocfield name="mhMinorDamage" /><eocfield name="mfuMinorDamage" /><eocfield name="sfhMajorDamage" /><eocfield name="mhMajorDamage" /><eocfield name="mfuMajorDamage" /><eocfield name="sfhDestroyed" /><eocfield name="mhDestroyed" /><eocfield name="mfuDestroyed" /><eocfield name="totalsAffected" /><eocfield name="totalsMinorDamage" /><eocfield name="totalsMajorDamage" /><eocfield name="totalsDestroyed" /><eocfield name="numberMinorDamage" /><eocfield name="numberMajorDamage" /><eocfield name="dsoSelected" /><eocfield name="DSOisSelected" /><eocfield name="masterDSOThisIs" /></if><span style="font-size:10pt;display:none" class="data" name="data"><value-of select="@sortCountyOrder" />|
          
                  <value-of select="@sortCityOrder" />|<if test="@totalJurisictionsexpressionHousing!='0'"><div align="center"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionHousing">(case when ((totalsAffected!='' and totalsAffected!='0.00') or (totalsMinorDamage!='' and totalsMinorDamage!='0.00') or (totalsMajorDamage!='' and totalsMajorDamage!='0.00') or (totalsDestroyed!='' and totalsDestroyed!='0.00') or (numberMinorDamage!='' and numberMinorDamage!='0') or (numberMajorDamage!='' and numberMajorDamage!='0')) then 1 else 0 end)</expression></div></if>|
            
                  
                  <value-of select="@jurisdictionType" />|
            
                  
                  <viewlink name="Input (DO NOT ASSIGN)"><span style="color:#111111"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b> /
                        <value-of select="@city2" /><if test="@otherValue!=''"> - <value-of select="@otherValue" /></if><if test="@DSOisSelected!=''"> / <value-of select="@DSOisSelected" /></if></if><if test="@jurisdictionType='City'"><value-of select="@county" /> /
                        <b><value-of select="@city2" /></b><if test="@otherValue!=''"> - <value-of select="@otherValue" /></if><if test="@DSOisSelected!=''"> / <value-of select="@DSOisSelected" /></if></if></span></viewlink>|
            
                  
                  <value-of select="@county" />|
            
                  
                  <value-of select="@city" />|
            
                  
                  <value-of select="@sfhAffected" />|
            
                  
                  <value-of select="@sfhMinorDamage" />|
            
                  
                  <value-of select="@sfhMajorDamage" />|
            
                  
                  <value-of select="@sfhDestroyed" />|
            
                  
                  <value-of select="@mhAffected" />|
            
                  
                  <value-of select="@mhMinorDamage" />|
            
                  
                  <value-of select="@mhMajorDamage" />|
            
                  
                  <value-of select="@mhDestroyed" />|
            
                  
                  <value-of select="@mfuAffected" />|
            
                  
                  <value-of select="@mfuMinorDamage" />|
            
                  
                  <value-of select="@mfuMajorDamage" />|
            
                  
                  <value-of select="@mfuDestroyed" />|
            
                  
                  <value-of select="@totalsAffected" />|
            
                  
                  <value-of select="@totalsMinorDamage" />|
            
                  
                  <value-of select="@totalsMajorDamage" />|
            
                  
                  <value-of select="@totalsDestroyed" />|
            
                  
                  <value-of select="@numberMinorDamage" />|
            
                  
                  <value-of select="@numberMajorDamage" />|
            
                  
                  <viewlink name="DSO Audit RelatedList (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">DSO History</button></viewlink>|<relatedexpression name="femaTest" table="Supplemental">sum(case when femaCheckboxV1='Yes' then 1 else 0 end)</relatedexpression>|<expression name="masterTest">case when masterDSOThisIs='masterDSO' then 1 else 0 end</expression>|END28
               </span></eocrepeatallrecords></div></div></body><script type="text/javascript">
  var newRow = function(table,position,data,rowClass){
  var row = table.insertRow(position);
  var align='left';
    if(trim(data[3])==="City"){
align='right'
  }
  
  //row.className('agencytemplate_tableentry');
    row.innerHTML = '<td>'+data[2]+'</td>'+'<td align="'+align+'">'+data[4]+'</td>'+'<td>'+comma(data[7])+'</td>'+'<td>'+comma(data[8])+'</td>'+'<td>'+comma(data[9])+'</td>'+'<td>'+comma(data[10])+'</td>'+'<td>'+comma(data[11])+'</td>'+'<td>'+comma(data[12])+'</td>'+'<td>'+comma(data[13])+'</td>'+'<td>'+comma(data[14])+'</td>'+'<td>'+comma(data[15])+'</td>'+'<td>'+comma(data[16])+'</td>'+'<td>'+comma(data[17])+'</td>'+'<td>'+comma(data[18])+'</td>'+'<td>'+comma(data[19])+'</td>'+'<td>'+comma(data[20])+'</td>'+'<td>'+comma(data[21])+'</td>'+'<td>'+comma(data[22])+'</td>'+'<td>'+comma(data[23])+'</td>'+'<td>'+comma(data[24])+'</td>'+'<td>'+comma(data[25])+'</td>'+'<td>'+comma(data[26])+'</td>'+'<td>'+comma(data[27])+'</td>';//[26]is where the femaCheck totals are stored, uncomment if wish to see them
    //adds color to new total rows - PA file says +rowClass below instead of +rowColorClass at end of this block
    console.log(rowClass);
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowClass;
    //agencytemplate_tableroweven
}

//array that loops through everything - this code does not run yet on this view
var masterData =[];
/*function setBubbleData(a){
 
 populateMasterData();

for(var k=0; k&lt;a.length;k++
  var match = false;
  for(var i=0; i&lt;masterData.length;i++){
    if(a[k].type==masterData[i][2] &amp;&amp;a[k].county==masterData[i][4]&amp;&amp;a[k].city==masterData[i][5]){ //if there is a match from bubble input and DSO
     masterData[i][16]=a[k].letter;
    masterData[i][17]='DSO+';
    match=true;
    }
  }
 if(match===false){ //if not associated with a DSO
masterData.push([a[k].sortCounty,a[k].sortCity,a[k].type,a[k].label,a[k].county,a[k].city,"","","","","","","","",a[k].localDec,a[k].letter,"No DSO"]);}
}


masterData = masterData.sort(function(a,b){
  if(parseInt(a[0]) &gt; parseInt(b[0])){
    return 1;
  }else if(parseInt(a[0]) &lt; parseInt(b[0])){
    return -1;
  } else if(parseInt(a[1]) &gt; parseInt(b[1])){
    return 1;
  } else if(parseInt(a[0]) &gt; parseInt(b[0])){
    return -1;
  }

});
  popluateTable();
  alert("Hello");
}*/

function start(){
//next two lines are commented out in PA (working file)
  //populateMasterData();
  //popluateTable();

}

//populates the data, maybe holding area before the table - SAME as PA file
function populateMasterData(){
var a = document.getElementsByName('data');
  for(var i =0; i&lt;a.length;i++){
    var b =[];
    var c = a[i].innerHTML.split('|');
    for(var k=0; k&lt;c.length;k++){
      b.push(c[k]);
    }
    masterData.push(b);
  }
}
//uses regEx to place commas where they need to go
  function comma(x) {
if(isNaN(x)===true || x=="" || x==0){
  x==undefined?x='':x=x;
  return x;
}
x=parseFloat(x).toFixed(2);
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
//return x;
}
function trim(a) {
  return a.replace(/^\s+|\s+$|\&amp;nbsp;+$/g, '');
}
/*populates the actual table [4] is county spot. Looks at td cells and determines if county matches the next county, add togeether andcreate  anew line. If counties does not match, do not add or create yellow row - add extra quotes and comma to add column at beginning*/
//this function will break if only one county is recorded, with two or more it will work. Jaime says put a clause in it to make sure it runs in that case
function popluateTable(){
var t = document.getElementById('mainTable');
 //var c = a[19]&gt;0?"rowRedTotal":"rowYellow";

var firstGrandTotal = getTotalsForAll();
      newRow(t,t.rows.length,["","","","","Grand Totals","",firstGrandTotal[0],firstGrandTotal[1],firstGrandTotal[2],firstGrandTotal[3],firstGrandTotal[4],firstGrandTotal[5],firstGrandTotal[6],firstGrandTotal[7],firstGrandTotal[8],firstGrandTotal[9],firstGrandTotal[10],firstGrandTotal[11],firstGrandTotal[12],firstGrandTotal[13],firstGrandTotal[14],firstGrandTotal[15],firstGrandTotal[16],firstGrandTotal[17],firstGrandTotal[18]],"rowGray");

var totalRowVar=function(i){
   var a = getTotalsFor(masterData[i][5]);
   var b = a[20]===true?"rowRedTotal":"rowYellow";
   // this works to turn total row red when all in county are vetted, unless more than one Bubble input is associated with one DSO, that ignores it

//.addClass("rowRed")


   //var b = a[19]&gt;0?"rowRed":"rowYellow";//[19] is hidden and contains the femaCheck totals for the county //this turns the row red if only 1 record is vetted, needs to be all of them
      //alert("yellow rows");
      newRow(t,t.rows.length,["","","","","Totals for "+masterData[i][5],"",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],"","FEMAS "+a[20]],b);//swtich "rowYellow" back to b when code works //[20] is hidden and contains the femaCheck totals for the county // 20 gives true or false, whereas 19 here gives the total of the 1 counts for fema
};
//var ff = document.getElementById('femaFemaHousing').value; //femaFemaHousing was id on '<td>'+comma(data[26])+'</td>' did not work
//var bb = masterData[i][26]&gt;0?"rowRed":"rowReg"; //breaks it

//var bb = "rowReg";

  for(var i=0; i &lt; masterData.length;i++){//alert("won!");
      if(masterData[i][26]&gt;='1'){
  //turns rows red based on femaCheckboxV1 linked to DSO
  var bb = "rowRed";
} else {
  var bb = "rowReg"; 
}

//var md = masterData[i][27].value();
//if(masterData[i][27]="")

    newRow(t,(t.rows.length),["","",masterData[i][2],masterData[i][3],masterData[i][4],masterData[i][5],masterData[i][6],masterData[i][7],masterData[i][8],masterData[i][9],masterData[i][10],masterData[i][11],masterData[i][12],masterData[i][13],masterData[i][14],masterData[i][15],masterData[i][16],masterData[i][17],masterData[i][18],masterData[i][19],masterData[i][20],masterData[i][21],masterData[i][22],masterData[i][23],masterData[i][24],masterData[i][25],masterData[i][26],masterData[i][27]],bb);//alert("new row");
    if(i==masterData.length-1){//alert();
 totalRowVar(i)
    
    }
    else if(i==0 &amp;&amp; masterData[i][5]!=masterData[i+1][5]){
       totalRowVar(i);
    }

    else if(((i!=0)&amp;&amp; ((masterData[i][5]===masterData[i-1][5]) &amp;&amp;(masterData[i+1][5]!=masterData[i][5])||(masterData[i][5]!=masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5]) )))
      { //Add Totals Row, This should be the yellow lines
      totalRowVar(i);
    }
  }
  
  /*Bottom Total row Grand total label and table data cells that have total of each column. PA file stops at [7], 22 total table data spots below - NEED to add 1 blank set of quotes to begining to get extra columnn and add another couple a[]'s to make wotk at end'*/
  var a = getTotalsForAll();
      newRow(t,t.rows.length,["","","","","Grand Totals","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18]],"rowGray");//alert("TANK");
}
//16 0's Single Family Aff totals through Totals Destroyed plus 2

function getTotalsFor(c){
  var a =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,true]; //21 true
  var isNull = function(b){
    if(b==''||b==' '||b==0){return 0;}
    else return b;
  };
  //parseFloat cuts off the first character if a number, otherwise NaN is returned - 16 spots below - creates into decimal integer
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][5]==c){
    a[0]+=parseFloat(isNull(masterData[i][6]));
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10])); //5
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));
    a[9]+=parseFloat(isNull(masterData[i][15])); //10
    a[10]+=parseFloat(isNull(masterData[i][16]));
    a[11]+=parseFloat(isNull(masterData[i][17]));
    a[12]+=parseFloat(isNull(masterData[i][18]));
    a[13]+=parseFloat(isNull(masterData[i][19]));
    a[14]+=parseFloat(isNull(masterData[i][20])); //15
    a[15]+=parseFloat(isNull(masterData[i][21]));
    a[16]+=parseFloat(isNull(masterData[i][22]));
    a[17]+=parseFloat(isNull(masterData[i][23]));
    a[18]+=parseFloat(isNull(masterData[i][24]));
    a[19]+=parseFloat(isNull(masterData[i][26])); //20

    if(masterData[i][26]!="1"){
      a[20]=false;                                 //21
    }
  }
}
console.log(a);
return a;

}
//Same as PA file except for 16 0's Zeros define as interger - only 8 in second part after for - just like PA file
function getTotalsForAll(){
  var a =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' '||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
    a[0]+=parseFloat(isNull(masterData[i][6]));
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));
    a[9]+=parseFloat(isNull(masterData[i][15]));
    a[10]+=parseFloat(isNull(masterData[i][16]));
    a[11]+=parseFloat(isNull(masterData[i][17]));
    a[12]+=parseFloat(isNull(masterData[i][18]));
    a[13]+=parseFloat(isNull(masterData[i][19]));
    a[14]+=parseFloat(isNull(masterData[i][20]));
    a[15]+=parseFloat(isNull(masterData[i][21]));
    a[16]+=parseFloat(isNull(masterData[i][22]));
    a[17]+=parseFloat(isNull(masterData[i][23]));
    a[18]+=parseFloat(isNull(masterData[i][24]));
}
return a;

}
  var dsoPageHelper={

    

    //startOf: identifying what filter is on
    filterSet: function(arg1,arg2) {
      if($(arg1).html()==='on'){$(arg2).css('font-weight', 'Bold').css('text-decoration', 'underline');}
    },
    
    /*showFilterButtonSelected: function() {
      
    },*/
    //startOf: styling search field
      styleSearchField: function() {
         var searchFld=document.getElementById('searchDIV').getElementsByTagName('input');
         for(var j=0; j &lt; searchFld.length; j++) {
            if($(searchFld[j]).val()=='Search' || $(searchFld[j]).val()=='Clear Search'){$(searchFld[j]).addClass('btn btn-default');}
          if(searchFld[j].id.search('searchfield')&gt;=0){$(searchFld[j]).addClass('form-control').prop('placeholder', 'Search');}
        }     
      }
  };
   
/*function totalJurisdictionsSum() {
  
  
    alert("HEEEELO");
  
}*/
var incSelList=document.getElementById('webeocIncident');
var loopAllInputs=document.getElementsByTagName('input');
var incVar;

//startOf: filter by incident process method
var filterByIncident={
 clearIncidentListSelection: function() {
   var incSearch=document.getElementById('incidentNameSearchSPAN').getElementsByTagName('input');
   for(var i=0; i &lt; incSearch.length; i++) {
     if(incSearch[i].value==='') {
       window.parent.window.parent.selectedIncident='';
     } else {
       $('#webeocIncident').val(window.parent.window.parent.selectedIncident);
     //  console.log(window.parent.window.parent.selectedIncident);
     }      
   }
 },
 searchFieldVariableSet: function() {
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].id &amp;&amp; loopAllInputs[i].getAttribute('id').indexOf('searchfield')&gt; -1){incVar=loopAllInputs[i];}
   }
 },
 incidentListOptionsBuild: function() {
   <for-each select="/data/allincidentlist/incidents">
     incSelList.options[incSelList.options.length]=new Option('<value-of select="@name" />','<value-of select="@name" />',false,false);
   </for-each>
   incSelList.options.selectedIndex=0;
 },
 incidentListActionOnChange: function() {
   incSelList.options[incSelList.options.length]=new Option('','',false,false);
   incVar.value=incSelList.options[incSelList.options.selectedIndex].text;
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].getAttribute('value')=='Search'){$(loopAllInputs[i]).click();}
   }
   window.parent.window.parent.selectedIncident=(incSelList.options[incSelList.options.selectedIndex]).text;
 }
};

$(document).ready(function(){
    
    dsoPageHelper.styleSearchField();
    //var countyFilter=document.getElementById('countyFilter').getElementsByTagName('select')[0];
    //$(countyFilter).addClass('form-control');
    filterByIncident.incidentListOptionsBuild();
    filterByIncident.searchFieldVariableSet();
    filterByIncident.clearIncidentListSelection();
    populateMasterData();
    popluateTable();
    //filterByIncident.incidentListActionOnChange();
   /* var ddcFilter=document.getElementById('ddcFilter').getElementsByTagName('select')[0];
    $(ddcFilter).addClass('form-control');*/
  });
  </script></html></view><view tablename="Core" name="Infrastructure (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="7319b58b-f22e-4ddb-b7c1-b2746be135da" assignable="1"><html><head><title>Local Estimate of Damage to Public Property By Category</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/etn/etn.js" /><script type="text/javascript" src="../boards/board_lib.js" /><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" /><script type="text/javascript">


//window.onload=start;

</script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;} /*controls the outermost black border boundry*/
  div.content{margin:1em; width:99%;} /*Squish this to fit inside a PDF*/
  div.content2{margin:1em; width:99%;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:99%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 3px;border-color:#ccc;}
  .rowYellow {background-color:#ffffb3;}
  .rowBlue {background-color:#ccebff;}
  .rowRed {background-color:#FFCCCC;}
  .lightRowRed {background-color:#FFb3b3;}
  .rowRedTotal {background-color:#FF8C8C;}
  .rowGray {background-color: #b7bfc8;}
.rowReg {}
.rowGreen{background-color:#00e673;}
.cellYellow{background-color:#ffff00;}
.textYellow {color:#ffff99;}
.cellOrange {background-color:#ff751a;}
.fieldsetButtons { 
    display:inline-block;
    margin-top: 5px;

   }
legend{
   font-size: 10pt;
}
.tableWords {
  font-size: 10pt;
}

.narrowColumns50px{
  max-width: 50px;
  /*word-break: break-all;
  word-wrap: break-word;*/
}

.narrowDateColumns160px{
  max-width: 160px;
  /*word-break: break-all;
  word-wrap: break-word;*/
}
.narrowColumns200px{
  max-width: 200px;
  /*word-break: break-all;
  word-wrap: break-word;*/
}

@media print and (max-width: 800px)
{ 
  
  div.container{border:solid 1px #0069aa; width:100%;}
  table.display{border-collapse:collapse;border:solid 1px;width:95%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 3px;border-color:#ccc;}
@page {
      margin: 1em;   
    }
    


  table { page-break-after:auto }
  tr    { page-break-inside:avoid; page-break-after:auto }
  td    { page-break-inside:avoid; page-break-after:auto }
  thead { display:table-header-group }
  tfoot { display:table-footer-group }
  div   { page-break-inside:avoid; }  
    .no-print, .no-print *
    {
        display: none !important;
    }
}

.btnMargin {
  margin:5px;
}

.topBtnMargin {
  top-margin:5px;
}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><span id="incidentNameSpan"><incidentname /></span></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false"><strong><i>UNVETTED and VETTED</i></strong> - Local Estimate of Damage to Public Property By Category - <strong><i>UNVETTED and VETTED</i></strong><br /><h3>(Infrastructure / PA)</h3><hr /><span style="float:left"><button type="button" class="btn btn-danger btn" data-toggle="modal" data-target="#myModal">Legend</button><space /><span id="pdfButtons" class="hidea"><pdflink type="button" class="btn btn-warning" orientation="landscape" enablejs="false">PDF</pdflink></span><space /><span><a href="javascript:window.print()"><button type="button" class="btn btn-info btn">Print</button></a></span></span></td></tr></tbody></table><div class="container"><!-- Trigger the modal with a button --><!-- Modal --><div class="modal fade" id="myModal" role="dialog"><div class="modal-dialog"><!-- Modal content--><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">x</button><h4 class="modal-title">Legend / Information</h4></div><div class="modal-body"><table id="smallTable" class="table display"><tr><td><div style="text-align:center;" class="rowYellow"><span style="text-align:center;font-size:12pt">County / City Totals</span></div></td><td><div style="text-align:center;" class="rowGray"><span style="text-align:center;font-size:12pt">Grand Totals</span></div></td><td><div style="text-align:center;" class="rowRed"><span style="text-align:center;font-size:12pt">FEMA Vetting</span></div></td><td><div style="text-align:center;" class="rowGreen"><span style="text-align:center;font-size:12pt">Yes</span></div></td><td><div style="text-align:center;" class="cellYellow"><span style="font-size:12pt">No</span></div></td><td><div style="text-align:center;" class="cellOrange"><span style="text-align:center;font-size:12pt">N/A</span></div></td></tr></table><table><tr><h5><br />If Anticipated Insurance is entered, it is subtracted.</h5><hr /><h5>The RED row indicates that the Infrastructure PDAs have been completed and that the numbers have been vetted between PA and FEMA.</h5></tr></table></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div></div></div></div></div><div class="content2"><div class="no-print"><fieldset class="fieldsetButtons"><legend>Operations</legend><space /><space /><viewlink class="btn btn-info btnMargin" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink><!--<button type="button" class="btn active">View DSO List</button>--><space /><space /><viewlink class="btn btn-info btnMargin" type="button" name="!Summary(DEFAULT)">View Recovery Summary</viewlink><!--<viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink>--><space /><space /><viewlink class="btn btn-info btnMargin" type="button" name="Housing (DO NOT ASSIGN)">View Housing / IA</viewlink><space /><space /><button type="button" class="btn active btnMargin">View Infrastructure / PA</button><!--<viewlink class="btn btn-info" type="button" name="Infrastructure (DO NOT ASSIGN)">View Infrastructure / PA</viewlink>--><space /><space /><space /><space /><viewlink class="btn btn-success btnMargin" type="button" name="Bubble Input (DO NOT ASSIGN)">+ New Bubble Input</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>Recovery</legend><space /><space /><viewlink class="btn btn-info btnMargin" type="button" name="Recovery IA (DO NOT ASSIGN)">View Recovery IA</viewlink><space /><space /><viewlink class="btn btn-info btnMargin" type="button" name="Recovery PA (DO NOT ASSIGN)">View Recovery PA</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>DSO</legend><space /><space /><viewlink class="btn btn-success btnMargin" type="button" name="Input (DO NOT ASSIGN)">+ New DSO for Testing</viewlink></fieldset></div><hr /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><filterlistdropdown field="county" list="Counties - Texas" defaulttext="All Counties" class="form-control btnMargin" /><space /><space /><space /><space /><space /><space /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><label for="webeocIncident" class=""><h4><sub>Incidents:</sub></h4></label><space /><select name="webeocIncident" id="webeocIncident" class="form-control btnMargin" onchange="filterByIncident.incidentListActionOnChange();" /></div><space /><space /><space /><space /><space /><space /><span id="searchDIV"><search exact="false" range="false" rangetext="false" class="btnMargin"><field name="county" /><field name="city" /><field name="otherValue" /></search><clearsearchbutton class="btnMargin" /><span style="display: none;" id="incidentNameSearchSPAN"><search field="webeocIncident" clearsearch="true" /></span></span></div><div /><br /><table id="mainTable" class="content table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" width="" rowSpan="1" align="center" class="narrowColumns50px"><span class="tableWords">Total JDX</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" class="narrowColumns200px"><span class="tableWords">County / City
                        <br />(Click to Edit DSO)</span></td><td selected="false" colSpan="8" width="" rowSpan="1" style="font-weight: bold;" align="center" top-align="center">Public Assistance Categories</td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">County Threshold</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">Met?</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">Disaster Dec</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">DSO Audit Log</span></td><!--<td selected="false" colSpan="1" width="" rowSpan="2" align="center">Related Info</td>--></tr><tr class="agencytemplate_tableheader"><td selected="false" align="center" top-align="center" style="font-weight: normal; font-size: 14pt; background-color:#BDFFFF; color:black" rowSpan="1"><span class="tableWords"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionInfra2">sum(case when repairCostTotals!='' and repairCostTotals!='0' and repairCostTotals!='0.00' and repairCostTotals!='0.0000' then 1 else 0 end)</expression></span></td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">A</strong><br />Debris Removal</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">B</strong><br />Police / EMS</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">C</strong><br />Roads &amp; Bridges</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">D</strong><br />Water Facilites</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">E</strong><br />Buildings</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">F</strong><br />Public Utility Systems</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">G</strong><br />Other</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">A - G</strong><br />Totals<br />minus insurance,<br />if entered</td></tr></tbody></table><eocrepeatallrecords rowcount="0" sort="cast(sortCountyOrder as int) asc, cast(sortCityOrder as int) asc"><if test="1=0"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="city2" /><eocfield name="otherValue" /><eocfield name="dsoSelected" /><eocfield name="repairCostDebrisClearance" /><eocfield name="repairCostEmergency" /><eocfield name="repairCostRoadPaved" /><eocfield name="repairCostWaterControlFacilities" /><eocfield name="repairCostBuildingsEquipment" /><eocfield name="repairCostUtilitySystems" /><eocfield name="repairCostOther" /><eocfield name="repairCostTotals" /><eocfield name="cat01" /><eocfield name="cat02" /><eocfield name="cat03" /><eocfield name="cat04" /><eocfield name="cat05" /><eocfield name="cat06" /><eocfield name="cat07" /><eocfield name="cat08" /><eocfield name="cat09" /><eocfield name="cat10" /><eocfield name="cat11" /><eocfield name="cat12" /><eocfield name="cat13" /><eocfield name="cat14" /><eocfield name="cat15" /><eocfield name="repairCost01" /><eocfield name="repairCost02" /><eocfield name="repairCost03" /><eocfield name="repairCost04" /><eocfield name="repairCost05" /><eocfield name="repairCost06" /><eocfield name="repairCost07" /><eocfield name="repairCost08" /><eocfield name="repairCost09" /><eocfield name="repairCost10" /><eocfield name="repairCost11" /><eocfield name="repairCost12" /><eocfield name="repairCost13" /><eocfield name="repairCost14" /><eocfield name="repairCost15" /><eocfield name="declarationIssued" /></if><relatedlist table="Supplemental"><if test="1=0"><eocfield table="Supplemental" type="rl" name="dateDecRecState" /><eocfield table="Supplemental" type="rl" name="dateDecRecFederal" /><eocfield table="Supplemental" type="rl" name="declarationIssuedFederal" /><eocfield table="Supplemental" type="rl" name="declarationIssuedState" /></if></relatedlist><span style="display:none;font-weight: normal; font-size: 10pt;" class="data" name="data"><value-of select="@sortCountyOrder" />|
          
                  <value-of select="@sortCityOrder" />|<if test="@totalJurisictionsexpressionInfra1!='0'"><div align="center"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionInfra1">(case when repairCostTotals!='' and repairCostTotals!='0' and repairCostTotals!='0.00' and repairCostTotals!='0.0000' then 1 else 0 end)</expression></div></if>|
                  <value-of select="@jurisdictionType" />|
                  <viewlink name="Input (DO NOT ASSIGN)"><span class="narrowColumns200px" style="color:#111111"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b> /
                        <value-of select="@city2" /><if test="@otherValue!=''"> - <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if><if test="@jurisdictionType='City'"><value-of select="@county" /> /
                        <b><value-of select="@city2" /></b><if test="@otherValue!=''"> - <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / XX</if></if></span></viewlink><space />|<value-of select="@county" />|<value-of select="@city" />|<expression useboardlevelfilters="true" name="catASum">
      ((case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'A' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'A' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'A' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'A' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'A' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'A' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'A' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'A' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'A' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'A' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'A' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'A' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'A' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'A' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'A' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'A' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'A' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'A' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'A' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'A' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'A' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'A' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'A' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'A' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'A' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'A' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'A' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'A' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'A' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostDebrisClearance as money))-(cast(insuranceDebrisClearance as money)))
      </expression>|<expression useboardlevelfilters="true" name="catBSum">
      ((case when cat01 = 'B' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'B' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'B' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'B' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'B' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'B' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'B' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'B' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'B' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'B' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'B' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'B' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'B' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'B' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'B' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'B' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'B' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'B' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'B' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'B' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'B' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'B' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'B' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'B' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'B' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'B' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'B' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'B' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'B' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'B' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostEmergency as money))-(cast(insuranceEmergency as money)))
      </expression>|<expression useboardlevelfilters="true" name="catCSum">
      ((case when cat01 = 'C' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'C' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'C' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'C' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'C' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'C' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'C' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'C' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'C' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'C' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'C' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'C' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'C' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'C' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'C' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'C' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'C' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'C' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'C' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'C' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'C' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'C' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'C' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'C' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'C' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'C' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'C' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'C' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'C' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'C' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostRoadPaved as money))-(cast(insuranceRoadPaved as money)))
      </expression>|<expression useboardlevelfilters="true" name="catDSum">
      ((case when cat01 = 'D' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'D' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'D' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'D' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'D' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'D' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'D' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'D' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'D' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'D' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'D' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'D' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'D' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'D' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'D' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'D' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'D' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'D' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'D' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'D' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'D' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'D' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'D' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'D' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'D' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'D' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'D' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'D' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'D' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'D' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostWaterControlFacilities as money))-(cast(insuranceWaterControlFacilities as money)))
      </expression>|<expression useboardlevelfilters="true" name="catESum">
      ((case when cat01 = 'E' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'E' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'E' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'E' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'E' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'E' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'E' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'E' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'E' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'E' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'E' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'E' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'E' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'E' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'E' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'E' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'E' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'E' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'E' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'E' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'E' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'E' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'E' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'E' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'E' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'E' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'E' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'E' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'E' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'E' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostBuildingsEquipment as money))-(cast(insuranceBuildingsEquipment as money)))
      </expression>|<expression useboardlevelfilters="true" name="catFSum">
      ((case when cat01 = 'F' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'F' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'F' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'F' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'F' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'F' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'F' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'F' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'F' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'F' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'F' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'F' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'F' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'F' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'F' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'F' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'F' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'F' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'F' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'F' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'F' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'F' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'F' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'F' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'F' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'F' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'F' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'F' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'F' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'F' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostUtilitySystems as money))-(cast(insuranceUtilitySystems as money)))
      </expression>|<expression useboardlevelfilters="true" name="catGSum">
      ((case when cat01 = 'G' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'G' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'G' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'G' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'G' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'G' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'G' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'G' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'G' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'G' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'G' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'G' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'G' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'G' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'G' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'G' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'G' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'G' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'G' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'G' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'G' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'G' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'G' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'G' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'G' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'G' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'G' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'G' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'G' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'G' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostOther as money))-(cast(insuranceOther as money)))
      </expression>|<expression useboardlevelfilters="true" name="catSumTotal">
     ((case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'A' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'A' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'A' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'A' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'A' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'A' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'A' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'A' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'A' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'A' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'A' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'A' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'A' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'A' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'A' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'A' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'A' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'A' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'A' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'A' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'A' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'A' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'A' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'A' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'A' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'A' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'A' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'A' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'A' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostDebrisClearance as money))-(cast(insuranceDebrisClearance as money)))+
      ((case when cat01 = 'B' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'B' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'B' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'B' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'B' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'B' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'B' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'B' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'B' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'B' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'B' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'B' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'B' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'B' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'B' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'B' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'B' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'B' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'B' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'B' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'B' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'B' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'B' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'B' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'B' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'B' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'B' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'B' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'B' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'B' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostEmergency as money))-(cast(insuranceEmergency as money)))+
      ((case when cat01 = 'C' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'C' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'C' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'C' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'C' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'C' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'C' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'C' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'C' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'C' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'C' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'C' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'C' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'C' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'C' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'C' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'C' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'C' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'C' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'C' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'C' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'C' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'C' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'C' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'C' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'C' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'C' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'C' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'C' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'C' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostRoadPaved as money))-(cast(insuranceRoadPaved as money)))+
      ((case when cat01 = 'D' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'D' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'D' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'D' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'D' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'D' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'D' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'D' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'D' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'D' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'D' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'D' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'D' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'D' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'D' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'D' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'D' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'D' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'D' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'D' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'D' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'D' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'D' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'D' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'D' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'D' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'D' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'D' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'D' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'D' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostWaterControlFacilities as money))-(cast(insuranceWaterControlFacilities as money)))+
      ((case when cat01 = 'E' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'E' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'E' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'E' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'E' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'E' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'E' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'E' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'E' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'E' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'E' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'E' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'E' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'E' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'E' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'E' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'E' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'E' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'E' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'E' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'E' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'E' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'E' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'E' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'E' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'E' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'E' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'E' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'E' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'E' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostBuildingsEquipment as money))-(cast(insuranceBuildingsEquipment as money)))+
      ((case when cat01 = 'F' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'F' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'F' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'F' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'F' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'F' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'F' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'F' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'F' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'F' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'F' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'F' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'F' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'F' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'F' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'F' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'F' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'F' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'F' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'F' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'F' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'F' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'F' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'F' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'F' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'F' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'F' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'F' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'F' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'F' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostUtilitySystems as money))-(cast(insuranceUtilitySystems as money)))+
      ((case when cat01 = 'G' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'G' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'G' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'G' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'G' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'G' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'G' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'G' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'G' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'G' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'G' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'G' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'G' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'G' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'G' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'G' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'G' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'G' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'G' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'G' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'G' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'G' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'G' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'G' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'G' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'G' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'G' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'G' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'G' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'G' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostOther as money))-(cast(insuranceOther as money)))
      </expression>|
      <span style="display: none;"><relatedexpression name="declarationIssuedStateTest" table="Supplemental">sum(case when declarationIssuedState='Yes' then 1 else 0 end)</relatedexpression><relatedexpression name="declarationIssuedFederalTest" table="Supplemental">sum(case when declarationIssuedFederal='Yes' then 1 else 0 end)</relatedexpression></span><if test="@declarationIssued='Yes'"><span class="greenCell">Local<br /></span></if><if test="@declarationIssuedStateTest &gt; '0'" table="Supplemental"><span class="greenCell">State</span></if><if test="@declarationIssuedFederalTest &gt; '0'" table="Supplemental"><span class="greenCell"><br />Federal</span></if> 


      
      |NomNom16|<viewlink name="DSO Audit RelatedList (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">DSO History</button></viewlink>|18|<relatedexpression name="femaTest2" table="Supplemental">sum(case when femaCheckboxV2='Yes' then 1 else 0 end)</relatedexpression>|x|<expression useboardlevelfilters="true" name="repairCostVSinsurance">(case when (repairCostDebrisClearance!='' and insuranceDebrisClearance='') or (repairCostEmergency!='' and insuranceEmergency='') or (repairCostRoadPaved!='' and insuranceRoadPaved='') or (repairCostWaterControlFacilities!='' and insuranceWaterControlFacilities='') or (repairCostBuildingsEquipment!='' and insuranceBuildingsEquipment='') or (repairCostUtilitySystems!='' and insuranceUtilitySystems='') or (repairCostOther!='' and insuranceOther='') or (cat01!='' and insurance01='') or (cat02!='' and insurance02='') or (cat03!='' and insurance03='') or (cat04!='' and insurance04='') or (cat05!='' and insurance05='') or (cat06!='' and insurance06='') or (cat07!='' and insurance07='') or (cat08!='' and insurance08='') or (cat09!='' and insurance09='') or (cat10!='' and insurance10='') or (cat11!='' and insurance11='') or (cat12!='' and insurance12='') or (cat13!='' and insurance13='') or (cat14!='' and insurance14='') or (cat15!='' and insurance15='') then 1 else 0 end)</expression>|END</span><!--and this and that and this and that whole row--><!--then another--></eocrepeatallrecords></div></div><!--<embedview style="display:none" view="Bubble Letter Embed"/>--></body><script type="text/javascript">
   //this newRow adds places in the array to the table rows as they add for a regular row -- td's need to added as needed
   var newRow = function(table,position,data,rowClass){
   var row = table.insertRow(position);
   var align='left';
    if(trim(data[3])==="City"){
align='right'
  }
  var metClass="NoClass";
  if(comma(data[16])==='Yes'){
   metClass="rowGreen";
  } else if (comma(data[16])==='No'){
    metClass="cellYellow";
  }
  if(data[21]=='1'){
  
   data[16]='N/A';
  }
  /*if(data[16]='N/A'){
    Mets='N/A';cellOrange
  }*/
  //row.className('agencytemplate_tableentry');
    row.innerHTML = '<td>'+data[2]+'</td>'+'<td align="'+align+'">'+data[4]+'</td>'+'<td>'+comma(data[7])+'</td>'+'<td>'+comma(data[8])+'</td>'+'<td>'+comma(data[9])+'</td>'+'<td>'+comma(data[10])+'</td>'+'<td>'+comma(data[11])+'</td>'+'<td>'+comma(data[12])+'</td>'+'<td>'+comma(data[13])+'</td>'+'<td>'+comma(data[14])+'</td>'+'<td>'+comma(data[15])+'</td>'+'<td class="'+metClass+'">'+comma(data[16])+'</td>'+'<td>'+comma(data[17])+'</td>'+'<td>'+comma(data[18])+'</td>'+'<td>'+comma(data[19])+'</td>'+'<td>'+comma(data[20])+'</td>'+'<td>'+comma(data[21])+'</td>'+'<td>'+comma(data[22])+'</td>';//view femaCheck total cell[20] here, Below in row array in spot masterData[i][19]in comment area "adds regular row"
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowClass;
    //agencytemplate_tableroweven
}
 //threshold totals and limits
function threshold(c){
var a = [["Anderson","208110.48"],["Andrews","52638.16"],["Angelina","308904.76"],["Aransas","82442.48"],["Archer","32232.24"],["Armstrong","6767.56"],["Atascosa","159883.16"],["Austin","101164.52"],["Bailey","25507.4"],["Bandera","72926.6"],["Bastrop","264048.76"],["Baylor","13264.56"],["Bee","113425.16"],["Bell","1104436.6"],["Bexar","6104591.88"],["Blanco","37369.32"],["Borden","2281.96"],["Bosque","64834.72"],["Bowie","329531.4"],["Brazoria","1114870.96"],["Brazos","693669.56"],["Brewster","32865.92"],["Briscoe","5827.72"],["Brooks","25713.88"],["Brown","135657.36"],["Burleson","61185.72"],["Burnet","152190"],["Caldwell","135514.96"],["Calhoun","76116.36"],["Callahan","48216.64"],["Cameron","1446143.2"],["Camp","44147.56"],["Carson","22007.92"],["Cass","108451.84"],["Castro","28700.72"],["Chambers","124941.76"],["Cherokee","181008.2"],["Childress","25065.96"],["Clay","38277.12"],["Cochran","11132.12"],["Coke","11819.2"],["Coleman","31666.2"],["Collin","2785133.96"],["Collingsworth","10882.92"],["Colorado","74311.44"],["Comal","386160.32"],["Comanche","49747.44"],["Concho","14549.72"],["Cooke","136835.72"],["Coryell","268381.28"],["Cottle","5357.8"],["Crane","15575"],["Crockett","13239.64"],["Crosby","21570.04"],["Culberson","8536.88"],["Dallam","23862.68"],["Dallas","8430574.84"],["Dawson","49245.48"],["Deaf Smith","68964.32"],["Delta","18622.36"],["Denton","2358905.84"],["DeWitt","71545.32"],["Dickens","8700.64"],["Dimmit","35585.76"],["Donley","13090.12"],["Duval","41943.92"],["Eastland","66155.48"],["Ector","488182.8"],["Edwards","7127.12"],["El Paso","2850303.32"],["Ellis","532611.6"],["Erath","134888.4"],["Falls","63602.96"],["Fannin","120737.4"],["Fayette","87412.24"],["Fisher","14147.44"],["Floyd","22947.76"],["Foard","4756.16"],["Fort Bend","2083935"],["Franklin","37753.8"],["Freestone","70544.96"],["Frio","61292.52"],["Gaines","62392.56"],["Galveston","1037060.04"],["Garza","23001.16"],["Gillespie","88419.72"],["Glasscock","4364.56"],["Goliad","25667.6"],["Gonzales","70512.92"],["Gray","80224.6"],["Grayson","430322.12"],["Gregg","433358.8"],["Grimes","94710.24"],["Guadalupe","468257.48"],["Hale","129131.88"],["Hall","11936.68"],["Hamilton","30320.52"],["Hansford","19982.28"],["Hardeman","14734.84"],["Hardin","194500.6"],["Harris","14569154.04"],["Harrison","233646.36"],["Hartley","21580.72"],["Haskell","21000.44"],["Hays","559300.92"],["Hemphill","13552.92"],["Henderson","279573.92"],["Hidalgo","2758177.64"],["Hill","124916.84"],["Hockley","81648.6"],["Hood","182207.92"],["Hopkins","125173.16"],["Houston","84485.92"],["Howard","124642.72"],["Hudspeth","12374.56"],["Hunt","306619.24"],["Hutchinson","78854"],["Irion","5692.44"],["Jack","32196.64"],["Jackson","50107"],["Jasper","127127.6"],["Jeff Davis","8337.52"],["Jefferson","898091.88"],["Jim Hogg","18868"],["Jim Wells","145383.28"],["Johnson","537325.04"],["Jones","71919.12"],["Karnes","52773.44"],["Kaufman","367926"],["Kendall","118939.6"],["Kenedy","1480.96"],["Kent","2876.48"],["Kerr","176665"],["Kimble","16400.92"],["King","1018.16"],["Kinney","12808.88"],["Kleberg","114137.16"],["Knox","13239.64"],["La Salle","24514.16"],["Lamar","177263.08"],["Lamb","49758.12"],["Lampasas","70050.12"],["Lavaca","68576.28"],["Lee","59138.72"],["Leon","59811.56"],["Liberty","269289.08"],["Limestone","83247.04"],["Lipscomb","11755.12"],["Live Oak","41050.36"],["Llano","68711.56"],["Loving","291.92"],["Lubbock","992638.36"],["Lynn","21057.4"],["Madison","48643.84"],["Marion","37543.76"],["Martin","17084.44"],["Mason","14282.72"],["Matagorda","130659.12"],["Maverick","193158.48"],["McCulloch","29487.48"],["McLennan","836265.36"],["McMullen","2516.92"],["Medina","163781.36"],["Menard","7981.52"],["Midland","487264.32"],["Milam","88134.92"],["Mills","17572.16"],["Mitchell","33474.68"],["Montague","70199.64"],["Montgomery","1622455.76"],["Moore","77978.24"],["Morris","46045.04"],["Motley","4307.6"],["Nacogdoches","229705.44"],["Navarro","169936.6"],["Newton","51424.2"],["Nolan","54168.96"],["Nueces","1211193.88"],["Ochiltree","36393.88"],["Oldham","7305.12"],["Orange","291339.72"],["Palo Pinto","100075.16"],["Panola","84713.76"],["Parker","416260.12"],["Parmer","36557.64"],["Pecos","55204.92"],["Polk","161670.28"],["Potter","431019.88"],["Presidio","27832.08"],["Rains","38853.84"],["Randall","429781"],["Reagan","11986.52"],["Real","11780.04"],["Red River","45781.6"],["Reeves","49067.48"],["Refugio","26283.48"],["Roberts","3307.24"],["Robertson","59174.32"],["Rockwall","278879.72"],["Runnels","37383.56"],["Rusk","189854.8"],["Sabine","38569.04"],["San Augustine","31559.4"],["San Jacinto","93927.04"],["San Patricio","230702.24"],["San Saba","21826.36"],["Schleicher","12321.16"],["Scurry","60238.76"],["Shackelford","12025.68"],["Shelby","90594.88"],["Sherman","10801.04"],["Smith","746581.84"],["Somervell","30224.4"],["Starr","217046.08"],["Stephens","34282.8"],["Sterling","4069.08"],["Stonewall","5304.4"],["Sutton","14695.68"],["Swisher","27960.24"],["Tarrant","6440161.04"],["Taylor","468161.36"],["Terrell","3503.04"],["Terry","45037.56"],["Throckmorton","5841.96"],["Titus","115109.04"],["Tom Green","392397.44"],["Travis","3646386.96"],["Trinity","51922.6"],["Tyler","77486.96"],["Upshur","139940.04"],["Upton","11943.8"],["Uvalde","94001.8"],["Val Verde","174009.24"],["Van Zandt","187181.24"],["Victoria","308983.08"],["Walker","241585.16"],["Waller","153809.8"],["Ward","37942.48"],["Washington","120036.08"],["Webb","891082.24"],["Wharton","146956.8"],["Wheeler","19259.6"],["Wichita","468140"],["Wilbarger","48184.6"],["Willacy","78797.04"],["Williamson","1504737.24"],["Wilson","152788.08"],["Winkler","25311.6"],["Wise","210492.12"],["Wood","149391.84"],["Yoakum","28049.24"],["Young","66038"],["Zapata","49904.08"],["Zavala","41570.12"]];
for(var i = 0; i&lt;a.length;i++){
  if(c==a[i][0]){
    return a[i][1];
  }
}
return "";
}
threshold.TotalOnPage=0;

var masterData =[];


//populates the data, holding area before the table
function populateMasterData(){
var a = document.getElementsByClassName('data');
  for(var i =0; i&lt;a.length;i++){
    var b =[];
    var c = a[i].innerHTML.split('|');
    for(var k=0; k&lt;c.length;k++){
      b.push(c[k]);
    }
    masterData.push(b);
  }
}

function comma(x) {
if(isNaN(x)===true || x=="" || x==0){
  x==undefined?x='':x=x;
  return x;
}
x=parseFloat(x).toFixed(2);
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
//return x;
}
//very useful and needed in many webeoc files as most browsers do this, webeoc does not and excess spaces will change return and cause to fail
function trim(a) {
  return a.replace(/^\s+|\s+$|\&amp;nbsp;+$/g, '');
}
//this populates the table - t is main table itself, b is for the total row turning yellow or red based on femaCheck choice
function popluateTable(){
var t = document.getElementById('mainTable');

var totalRowVar=function(i){
   var a = getTotalsFor(masterData[i][5]);
   //var b = "rowYellow"; // uncomment this and recomment below to stop county from turning red 
   var b = a[10]===true?"rowRedTotal":"rowYellow"; // if all records in a county are fema checked yes make rowRedTotal
   var NaCount = parseFloat(a[12]) &gt; (0)?'Yes':'No';

      var thresholdResult = threshold(masterData[i][5]);
      var a = getTotalsFor(masterData[i][5]);
      threshold.TotalOnPage+=parseInt(thresholdResult);
      var Mets2 = parseFloat(a[8]) &gt;= parseFloat(thresholdResult)?'Yes':'No';
      var Mets = (NaCount=='Yes')?'N/A':Mets2;
      var yesMets = (Mets2=='Yes')?'1':'0';

      //var numYesMets = parseInt(yesMets.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));

      var thresholdResultWithCommas = thresholdResult.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

      var Mets3 = "$ "+((thresholdResult-(a[8])).toFixed(2))+" MORE to REACH THRESHOLD ";
      var Mets33 = "$ "+(((a[8])-thresholdResult).toFixed(2))+" OVER the THRESHOLD ";
      var Mets4 = 0;
      //var totalsAccurate = true;
      
      if((a[8]) &gt; thresholdResult){
        Mets4 = Mets33;
      } else {
        Mets4 = Mets3;
      }

      var Mets5 = Mets4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

      


      //yellow or red total rows
      newRow(t,t.rows.length,["","","","","Totals for "+masterData[i][5],"",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],Mets5+"$ "+thresholdResultWithCommas,Mets2,"","",yesMets,"FEMAS "+a[10],"NAS "+NaCount],b); //NaCount is not needed, nor filtered on Infrastructure page. Moved to Recovery PA and vetted PA pages
};
  for(var i=0; i &lt; masterData.length;i++){
    //adds regular row
    newRow(t,(t.rows.length),["","",masterData[i][2],masterData[i][3],masterData[i][4],masterData[i][5],masterData[i][6],masterData[i][7],masterData[i][8],masterData[i][9],masterData[i][10],masterData[i][11],masterData[i][12],masterData[i][13],masterData[i][14],"","",masterData[i][15],masterData[i][17],masterData[i][20],"FEMA "+masterData[i][19],""],masterData[i][19]=='1'?"rowRed":"rowReg");
    if(i==masterData.length-1){//if not the last row
 totalRowVar(i);
 console.log("reg");
    }
    else if(i==0 &amp;&amp; masterData[i][5]!=masterData[i+1][5]){
       totalRowVar(i);
    }
//else if (( (there is an entry) and 
//((county equals county before) and (county after does not equal county) or 
//(county does not equal county before) and 
//(county after does not equal coounty)) ))
    else if((i!=0)&amp;&amp;(((masterData[i][5]===masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5]))||((masterData[i][5]!=masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5])) ))
      {
      totalRowVar(i);
      console.log("else if");
    }
  }

//below
  //a[10] = Met grand totals
  //grand totals row and class of rowGray
  var a = getTotalsForAll();
      newRow(t,t.rows.length,["","","","","Grand Totals","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10]],"rowGray")
      newRow(t,2,["","","","","Grand Totals","",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10]],"rowGray")
}

//this will get totals for the county totals row, for more spots, O's nned to added to var a as well as the parseFloat statements below
function getTotalsFor(c){
  //var a =[0,0,0,0,0,0,0,0,0,0,true,0,0]; // commented out 110816 dont think this is needed will need for FEMA rows!!!!
  var a =[0,0,0,0,0,0,0,0,0,false];
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][5]==c){
//parseFloat cuts off the first character if a number, otherwise NaN is returned ------------ the [19] spot is where the total is stored from femaCheckboxes
    //a[0]+=parseFloat(isNull(masterData[i][6]));
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11])); //5
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));
    a[9]+=parseFloat(isNull(masterData[i][19]));
    //edit below still
    if(masterData[i][19]&gt;="1"){
      a[10]=true;                                 
    } else{
      a[10]=false;
    }

    //commented out 110816 dont think this is needed
    /*a[9]+=parseFloat(isNull(masterData[i][19]));
    a[12]+=parseFloat(isNull(masterData[i][21]));
    if(masterData[i][19]!="1"){
      a[10]=false;
      a[11]+=parseFloat(isNull(masterData[i][20]));
      
    }*/ //commented out 110816 dont think this is needed
    
    //a[10]+=parseFloat(isNull(masterData[i][19]));
  }
}
console.log(a);
return a;

}
//Grand totals 
function getTotalsForAll(){
  var a =[0,0,0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
    //a[0]+=parseFloat(isNull(masterData[i][6]));
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));
    a[10]+=parseFloat(isNull(masterData[i][16])); //Met grand totals THIS row is not right yet
   
}
 a[9]=parseFloat(threshold.TotalOnPage);
console.log(a);
return a;

}



var dsoPageHelper={


    //startOf: identifying what filter is on
    filterSet: function(arg1,arg2) {
      if($(arg1).html()==='on'){$(arg2).css('font-weight', 'Bold').css('text-decoration', 'underline');}
    },
    
    //startOf: styling search field
      styleSearchField: function() {
         var searchFld=document.getElementById('searchDIV').getElementsByTagName('input');
         for(var j=0; j &lt; searchFld.length; j++) {
            if($(searchFld[j]).val()=='Search' || $(searchFld[j]).val()=='Clear Search'){$(searchFld[j]).addClass('btn btn-default');}
          if(searchFld[j].id.search('searchfield')&gt;=0){$(searchFld[j]).addClass('form-control').prop('placeholder', 'Search');}
        }     
      }
  };

var incSelList=document.getElementById('webeocIncident');
var loopAllInputs=document.getElementsByTagName('input');
var incVar;

//startOf: filter by incident process method
var filterByIncident={
 clearIncidentListSelection: function() {
   var incSearch=document.getElementById('incidentNameSearchSPAN').getElementsByTagName('input');
   for(var i=0; i &lt; incSearch.length; i++) {
     if(incSearch[i].value==='') {
       window.parent.window.parent.selectedIncident='';
     } else {
       $('#webeocIncident').val(window.parent.window.parent.selectedIncident);
     //  console.log(window.parent.window.parent.selectedIncident);
     }      
   }
 },
 searchFieldVariableSet: function() {
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].id &amp;&amp; loopAllInputs[i].getAttribute('id').indexOf('searchfield')&gt; -1){incVar=loopAllInputs[i];}
   }
 },
 incidentListOptionsBuild: function() {
   <for-each select="/data/allincidentlist/incidents">
     incSelList.options[incSelList.options.length]=new Option('<value-of select="@name" />','<value-of select="@name" />',false,false);
   </for-each>
   incSelList.options.selectedIndex=0;
 },
 incidentListActionOnChange: function() {
   incSelList.options[incSelList.options.length]=new Option('','',false,false);
   incVar.value=incSelList.options[incSelList.options.selectedIndex].text;
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].getAttribute('value')=='Search'){$(loopAllInputs[i]).click();}
   }
   window.parent.window.parent.selectedIncident=(incSelList.options[incSelList.options.selectedIndex]).text;
 }
};

$(document).ready(function(){
    populateMasterData();
    popluateTable();
    dsoPageHelper.styleSearchField();
    //var countyFilter=document.getElementById('countyFilter').getElementsByTagName('select')[0];
    //$(countyFilter).addClass('form-control');
    filterByIncident.incidentListOptionsBuild();
    filterByIncident.searchFieldVariableSet();
    filterByIncident.clearIncidentListSelection();
    //filterByIncident.incidentListActionOnChange();
    
   /* var ddcFilter=document.getElementById('ddcFilter').getElementsByTagName('select')[0];
    $(ddcFilter).addClass('form-control');*/
    var a = document.getElementsByClassName('greenCell');
for(var i=0; i&lt;a.length;i++){a[i].parentElement.style.backgroundColor="#00e673";}/*Local Dec*/
  var b = document.getElementsByClassName('yellowCell');
for(var i=0; i&lt;b.length;i++){b[i].parentElement.style.backgroundColor="#ffff00";}
   //totalGrandRowVar();
  });

  
</script></html></view><view tablename="Core" name="DSO List (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="55830f0f-b25f-4f68-bf78-c4a290512933" assignable="1"><html><head><title>DSO List</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/etn/etn.js" /><script type="text/javascript" src="../boards/board_lib.js" /><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" /><script type="text/javascript">
    
    function linkOutside(a){
var b = a.parentNode.childNodes[4].innerHTML;
    window.open("https://olympus.soc.texas.gov/services/DSO/?key="+b,"_blank");
}
</script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em;width:99%;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
  .rowYellow {background-color:#ffffb3;}
  .rowBlue {background-color:#ccebff;}
  .rowRed {background-color:#FF9999;}
  .lightRowRed {background-color:#FFb3b3;}
  .rowGray {background-color: #b7bfc8;}
.rowReg {}
.rowGreen{background-color:#00e673;}
.cellYellow{background-color:#ffff00;}
.textYellow {color:#ffff99;}
.cellOrange {background-color:#ff751a;}
  .fieldsetButtons { 
    display:inline-block;

   }
legend {
   font-size: 10pt;
}
.tableWords {
  font-size: 10pt;
}
.hideA { font-size: 20pt;}
  /*.tjCount{background-color:#ffffb3;}*/
}
/*.tableFontSize {
    font-size: 6pt;
}*/

</style></head><body><div class="container"><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><span id="incidentNameSpan"><incidentname /></span></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="3" selected="false" align="center">DSO List<hr /><span style="float:left"><button type="button" class="btn btn-danger btn" data-toggle="modal" data-target="#myModal">Legend</button><space /><span id="pdfButtons" class="hide"><pdflink type="button" class="btn btn-warning" orientation="landscape">PDF</pdflink></span></span></td></tr></tbody></table><div class="container"><!-- Trigger the modal with a button --><!-- Modal --><div class="modal fade" id="myModal" role="dialog"><div class="modal-dialog"><!-- Modal content--><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">x</button><h4 class="modal-title">Legend / Information</h4></div><div class="modal-body"><!--<table id="smallTable" class="table display">
          <tr><td><div style="text-align:center;" class="rowYellow"><span style="text-align:center;font-size:12pt">County / City Totals</span></div></td><td><div style="text-align:center;" class="rowGray"><span style="text-align:center;font-size:12pt">Grand Totals</span></div></td><td><div style="text-align:center;" class="rowRed"><span style="text-align:center;font-size:12pt">FEMA Vetting</span></div></td><td><div style="text-align:center;" class="rowGreen"><span style="text-align:center;font-size:12pt">Yes</span></div></td><td><div style="text-align:center;" class="cellYellow"><span style="font-size:12pt">No</span></div></td><td><div style="text-align:center;" class="cellOrange"><span style="text-align:center;font-size:12pt">N/A</span></div></td></tr>

        </table>--><table><tr><h5><!--<br/>-->xxxxx</h5><hr /><h5>xxxxxx</h5></tr></table></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div></div></div></div></div><div class="content"><!--<viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink>--><div><fieldset class="fieldsetButtons"><legend>Operations</legend><space /><space /><button type="button" class="btn active">View DSO List</button><space /><space /><viewlink class="btn btn-info" type="button" name="!Summary(DEFAULT)">View Recovery Summary</viewlink><!--<viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink>--><space /><space /><viewlink class="btn btn-info" type="button" name="Housing (DO NOT ASSIGN)">View Housing / IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Infrastructure (DO NOT ASSIGN)">View Infrastructure / PA</viewlink><space /><space /><space /><space /><viewlink class="btn btn-success" type="button" name="Bubble Input (DO NOT ASSIGN)">+ New Bubble Input</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>Recovery</legend><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery IA (DO NOT ASSIGN)">View Recovery IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery PA (DO NOT ASSIGN)">View Recovery PA</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>DSO</legend><space /><space /><viewlink class="btn btn-success" type="button" name="Input (DO NOT ASSIGN)">+ New DSO for Testing</viewlink></fieldset></div><hr /><div class="table-responsive" style=""><table class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false"><span class="tableWords">Number</span></td><td selected="false" colSpan="1" width=""><span class="tableWords">Type</span></td><td selected="false" colSpan="1" width=""><span class="tableWords">County / City</span></td><td selected="false" colSpan="1" width=""><span class="tableWords">Incident</span></td><td selected="false" colSpan="1" width=""><span class="tableWords">SOC Status</span></td><td selected="false" colSpan="1" width="" rowSpan="1"><span class="tableWords">Update Date</span></td><td selected="false" colSpan="1" width=""><span class="tableWords">Action</span></td></tr><eocrepeatallrecords rowcount="0" sort=" cast(sortCountyOrder as int) asc, cast(sortCityOrder as int) asc"><if test="1=0"><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="otherValue" /><eocfield name="dsoSelected" /></if><tr class="agencytemplate_tableentry"><td selected="false" colSpan="1"><eocfield name="dataid" /><space /><space />|<space /><space /><eocfield name="editKey" /><a name="amount" style="display:none"><eocfield name="repairCostTotals" />| 
                              
                              <eocfield name="repairCostTotal" /><eocfield name="entryType" /></a></td><td selected="false" colSpan="1" width=""><value-of select="@jurisdictionType" /></td><td selected="false" colSpan="1" width=""><viewlink name="Input (DO NOT ASSIGN)"><span style="color:#111111"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b> /
                        <value-of select="@city" /><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if><if test="@jurisdictionType='City'"><value-of select="@county" /> /
                        <b><value-of select="@city" /></b><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if></span></viewlink></td><td selected="false" colSpan="1" width=""><eocfield name="webeocIncident" /></td><td selected="false" colSpan="1" width=""><eocfield name="socProcessed" /></td><td selected="false" colSpan="1" width="" rowSpan="1"><eocfield name="entrydate" /></td><td selected="true" colSpan="1" width=""><viewlink name="DSO Details (DO NOT ASSIGN)" type="button">View DSO</viewlink><viewlink name="Input (DO NOT ASSIGN)" type="button">Edit (WebEOC)</viewlink><!--<input type="button" onclick="linkOutside(this)" value="Edit Online"/>--><viewlink name="DSO OPS Options Input" type="button">Admin</viewlink><viewlink name="DSO Audit RelatedList (DO NOT ASSIGN)" type="button">Log</viewlink><a style="display:none"><value-of select="@editKey" /></a><!--<viewlink name="AutoHide" type="button">Hide</viewlink>--></td></tr></eocrepeatallrecords></tbody></table></div></div></div></div></body></html><viewfilters viewfilterid="10870" name="Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hidden" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Core" name="DSO Audit RelatedList (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="938389f7-bcf5-4a84-93b8-c34e8c8d3c3b" assignable="1"><html><head><title /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter" selected="false" align="right"><returnbutton>Back</returnbutton></td></tr><tr><td id="tdBoard" colSpan="2" selected="false" align="center">Audit Log</td></tr></tbody></table><div class="content"><table class="display"><tbody><eocrepeatallrecords><tr class="agencytemplate_tableheader"><td selected="false"><eocfield name="county" />/<eocfield name="city" />(<eocfield name="jurisdictionType" />) - <eocfield name="webeocIncident" /></td></tr><relatedlist table="DSO Audit"><tr class="agencytemplate_tableentry"><td selected="true"><eocfield table="DSO Audit" type="rl" name="auditUser" /> - <eocfield table="DSO Audit" type="rl" name="dateTime" /><br /><eocfield table="DSO Audit" type="rl" name="audit" /></td></tr></relatedlist></eocrepeatallrecords></tbody></table></div></div></body></html></view><view tablename="Core" name="DSO List ViewOnly" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="72ff29c8-1520-465d-8caa-7c3768f63516" assignable="1"><html><head><title /><script type="text/javascript">
    
    function linkOutside(a){
var b = a.parentNode.childNodes[4].innerHTML;
    window.open("https://olympus.soc.texas.gov/services/DSO/?key="+b,"_blank");
}
</script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident" colSpan="2"><incidentname /></td><td id="tdFilter" selected="true" align="right"><!--<input type="button" onclick="window.open('https://olympus.soc.texas.gov/services/dso/','_blank')" value="New DSO"/>--></td></tr><tr><td id="tdBoard" colSpan="3" selected="false" align="center">DSO List</td></tr><tr><td id="tdBoard" colSpan="1" selected="false" align="left" rowSpan="1"></td><td id="tdBoard" colSpan="1" selected="" align="center" rowSpan="1" width=""> </td><td id="tdBoard" colSpan="1" selected="" align="center" rowSpan="1" width=""> </td></tr></tbody></table><div class="content"><table class="display"><tbody><tr class="agencytemplate_tableheader"><td selected="false">Number</td><td selected="false" colSpan="1" width="">Type</td><td selected="false" colSpan="1" width="">County/City</td><td selected="false" colSpan="1" width="">Incident</td><td selected="false" colSpan="1" width="">SOC Status</td><td selected="false" colSpan="1" width="" rowSpan="1">Update Date</td><td selected="false" colSpan="1" width="">Action</td></tr><eocrepeatallrecords><tr class="agencytemplate_tableentry"><td selected="false" colSpan="1"><eocfield name="editKey" /><a name="amount" style="display:none"><eocfield name="repairCostTotals" />| 
<eocfield name="repairCostTotal" /><eocfield name="entryType" /></a></td><td selected="false" colSpan="1" width=""><eocfield name="jurisdictionType" /></td><td selected="false" colSpan="1" width=""><eocfield name="county" />/<eocfield name="city" /></td><td selected="false" colSpan="1" width=""><eocfield name="webeocIncident" /></td><td selected="false" colSpan="1" width=""><eocfield name="socProcessed" /></td><td selected="false" colSpan="1" width="" rowSpan="1"><eocfield name="entrydate" /></td><td selected="false" colSpan="1" width=""><viewlink name="DSO Details (DO NOT ASSIGN)" type="button">View DSO</viewlink><!--<viewlink name="Input (DO NOT ASSIGN)" type="button">Edit (WebEOC)</viewlink>    <input type="button" onclick="linkOutside(this)" value="Edit Online"/> --><viewlink name="DSO Audit RelatedList (DO NOT ASSIGN)" type="button">Log</viewlink><a style="display:none"><value-of select="@editKey" /></a><!--<viewlink name="AutoHide" type="button">Hide</viewlink>--></td></tr></eocrepeatallrecords></tbody></table></div></div></body></html><viewfilters viewfilterid="10871" name="Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hidden" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Core" name="History View" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="c4a8ab71-655e-4fa6-8302-beed09d43d44" assignable="1"><html version="6" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><head><title></title><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style></head><body><eocrepeatallrecords><div class="container agencytemplate_boardbackground"><table class="heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2"><boardname /><br /><eocfield name="cardPanel" /></td></tr><tr><td colspan="2"><returnbutton>Return</returnbutton></td></tr></tbody></table><relatedlist table="DSO Audit"><div class="content"><table class="display"><tbody><tr class="agencytemplate_tableheader"></tr><tr class="agencytemplate_tableentry"><td><eocfield table="History Audit table" type="rl" name="saveDateTime" /><br /><eocfield table="History Audit table" type="rl" name="currentUser" /><br /><eocfield table="History Audit table" type="rl" name="msg" /></td></tr></tbody></table></div></relatedlist></div></eocrepeatallrecords></body></html></view><view tablename="Supplemental" name="Bubble Audit RelatedList (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="a6fab4dc-d8fb-4e79-84ad-f55eeb546d1c" assignable="1"><html version="6" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><head><title /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style></head><body><eocrepeatallrecords><div class="container agencytemplate_boardbackground"><table class="heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2"><boardname /><br /><eocfield name="msg" /></td></tr><tr><td colspan="2"><returnbutton>Return</returnbutton></td></tr></tbody></table><relatedlist table="DSO Audit"><div class="content"><table class="display"><tbody><tr class="agencytemplate_tableheader" /><tr class="agencytemplate_tableentry"><td><eocfield table="DSO Audit" type="rl" name="saveDateTime" /><br /><eocfield table="DSO Audit" type="rl" name="currentUser" /><br /><eocfield table="DSO Audit" type="rl" name="msg" /></td></tr></tbody></table></div></relatedlist></div></eocrepeatallrecords></body></html></view><view tablename="Supplemental" name="Bubble Letter Embed" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="44a65f55-6f9b-43f2-a567-ea6b7108bee4" assignable="1"><html><head><title></title><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style><script type="text/javascript">
var DataObj = function(a){
	var obj = {
		type:a[2],
		county:a[4],
		city:a[5],
letter:a[6],
sortCity:a[1],
sortCounty:a[0],
label:a[3],
      localDec:a[7]
	};

return obj;
};
	function start(){
		var a = document.getElementsByClassName('data');
		var b =[];
		for(var i =0; i&lt; a.length; i++){
			var d= a[i].innerHTML.split('|');
			var c = new DataObj(d);
			b.push(c);
		}

		window.parent.window.parent.setBubbleData(b);
	}

	window.onload=start;
</script></head><body><div class="container agencytemplate_boardbackground"><div class="content"><eocrepeatallrecords rowcount="0" sort="sortCountyOrder, sortCityOrder"><if test="1=0"><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="sortCityOrder" /><eocfield name="sortCountyOrder" /><eocfield name="countyDeclared" /><eocfield name="countyLetter" /></if><span class="data"><value-of select="@sortCountyOrder" />|<value-of select="@sortCityOrder" />|<value-of select="@jurisdictionType" />|<viewlink name="Bubble Input (DO NOT ASSIGN)"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b>/<value-of select="@city" /></if><if test="@jurisdictionType='City'"><value-of select="@county" />/<b><value-of select="@city" /></b></if></viewlink>|<value-of select="@county" />|<value-of select="@city" />|<value-of select="@countyLetter" />|<if test="@countyDeclared='Local'">Yes</if></span></eocrepeatallrecords></div></div></body></html><viewfilters viewfilterid="10872" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hide" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Supplemental" name="Dec Report" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="7efc3219-b794-406a-be53-ff708f841432" assignable="1"><html><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><title></title><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style><script type="text/javascript">
var newRow = function(table,position,data){
  var row = table.insertRow(position);
  //row.className('agencytemplate_tableentry');
    row.innerHTML = '<td>'+data[0]+'</td>'+'<td>'+data[1]+'</td>'+'<td>'+data[2]+'</td>'+'<td>'+data[3]+'</td>'+'<td>'+data[4]+'</td>'+'<td>'+data[5]+'</td>';
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowColorClass;
    //agencytemplate_tableroweven
}
var local= [];
var state = [];
var possible =[];
	function start(){
var a = document.getElementsByName('data');
for(var i=0; i&lt; a.length;i++){
	var b = a[i].innerHTML.split('|');
if(b[1]=='Local'){
local.push(b);
}
if(b[1]=='State'){
state.push(b);
}
if(b[1]=='Possible'){
possible.push(b);
}

}
popluateTable();
	}
function popluateTable(){
var t = document.getElementById('table');
 newRow(t,(t.rows.length),["#","State ("+state.length+")","#","Local ("+local.length+")","#","Possible ("+possible.length+")"]);
var l=0;
if(local.length &gt;= state.length){
	l = local.length;
}else {l = state.length;}
if(l &lt;= possible.length){
	l = possible.length;
}

for(var i=0; i&lt;l;i++){
newRow(t,(t.rows.length),['&lt;span id="stateNumber'+i+'"&gt;&lt;/span&gt;','&lt;span id="stateCounty'+i+'"&gt;&lt;/span&gt;','&lt;span id="localNumber'+i+'"&gt;&lt;/span&gt;','&lt;span id="localCounty'+i+'"&gt;&lt;/span&gt;','&lt;span id="possibleNumber'+i+'"&gt;&lt;/span&gt;','&lt;span id="possibleCounty'+i+'"&gt;&lt;/span&gt;']);
}
i=0;
for(i=0; i&lt;local.length;i++){
	document.getElementById('localNumber'+(i)).innerHTML=i+1;
	document.getElementById('localCounty'+(i)).innerHTML=local[i][0];
}
i=0;
for(i=0; i&lt;state.length;i++){
	document.getElementById('stateNumber'+(i)).innerHTML=i+1;
	document.getElementById('stateCounty'+(i)).innerHTML=state[i][0];
}
i=0;
for(i=0; i&lt;possible.length;i++){
	document.getElementById('possibleNumber'+(i)).innerHTML=i+1;
	document.getElementById('possibleCounty'+(i)).innerHTML=possible[i][0];
}

}
	window.onload=start;
</script></head><body><div class="container agencytemplate_boardbackground"><table class="heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2"><boardname /></td></tr></tbody></table><div class="content"><!--<viewlink class="btn btn-default" type="button" name="!Display (DEFAULT)">Recovery Summery</viewlink>
        <viewlink class="btn btn-default" type="button" name="Map (DO NOT ASSIGN)">Map View</viewlink>
        <space />
        <space />
        <viewlink class="btn btn-default" type="button" name="DSO PA">DSO PA</viewlink>
        <viewlink class="btn btn-default" type="button" name="DSO IA">DSO IA</viewlink>
        <viewlink class="btn btn-default" type="button" name="Report View">Report View</viewlink>
        <viewlink class="btn btn-default" type="button" name="Dec Report">Dec Report</viewlink>--><table role="table" id="table" class="display"><tbody><!--<tr class="agencytemplate_tableheader">
          
          <td>#</td>
          <td>State</td>
<td>#</td>
          <td>Local</td>
          <td>#</td>
         <td>Possible</td>
          </tr>
         --></tbody></table><eocrepeatallrecords><if test="1=0"><eocfield name="county" /><eocfield name="countyDeclared" /></if><a name="data" style="display:none"><value-of select="@county" />|<value-of select="@countyDeclared" /></a></eocrepeatallrecords></div></div></body></html><viewfilters viewfilterid="10873" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hide" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Supplemental" name="API Unique Check  Bubble (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="6e47b512-d0af-4867-a4fd-b14f0f5f085d" assignable="1"><html><head><title /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2"><boardname /></td></tr></tbody></table><div class="content"><table class="display"><tbody><tr class="agencytemplate_tableheader"><td colSpan="1" selected="false">County</td><td colSpan="1" selected="false" width="">City</td><td colSpan="1" selected="false" width="">Hide</td></tr><eocrepeatallrecords><tr class="agencytemplate_tableentry"><td selected="false"><eocfield name="county" /></td><td selected="false" colSpan="1" width=""><eocfield name="city" /></td><td selected="true" colSpan="1" width=""><eocfield name="hide" /></td></tr></eocrepeatallrecords></tbody></table></div></div></body></html></view><view tablename="Supplemental" name="Bubble Embed Full" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="f38e0e63-7d8d-42a9-b635-1fddfbf78322" assignable="1"><html><head><title></title><script type="text/javascript">
function start(){
  var a = [];
  var b = document.getElementsByName('data');
  for(var i=0; i &lt; b.length;i++){
    var c = b[i].innerHTML;
    var d = c.split('|');
    a.push(d);
  }
  window.parent.window.parent.report1Data(a);
}

window.onload=start;
  </script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style></head><body><div class="container agencytemplate_boardbackground"><div class="content"><eocrepeatallrecords rowcount="0" sort="sortCountyOrder, sortCityOrder"><if test="1=0"><eocfield name="county" /><eocfield name="incidentPeriod" /><eocfield name="locDecRec" /><eocfield name="acknowledgeLetterSent1" /><eocfield name="impactedCountiesDSO" /><eocfield name="acknowledgeLetterSent2" /><eocfield name="requestLetterRec1" /><eocfield name="acknowledgeLetterSent3" /><eocfield name="requestPacketComplete" /><eocfield name="iaPDAScheduled" /><eocfield name="iaPDAComplete" /><eocfield name="paPDAScheduled" /><eocfield name="paPDAComplete" /><eocfield name="flashRptRec" /><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="jurisdictionType" /><eocfield name="countyDeclared" /><eocfield name="countyLetter" /></if><a style="display:none" name="data"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b>/<value-of select="@city" /></if><if test="@jurisdictionType='City'"><value-of select="@county" />/<b><value-of select="@city" /></b></if>|<value-of select="@countyDeclared" />|<value-of select="@countyLetter" />|<span class="data" style="display:none"><value-of select="@jurisdictionType" />|<value-of select="@county" />|<value-of select="@city" /></span>|<value-of select="@incidentPeriod" />|<value-of select="@locDecRec" />|<value-of select="@acknowledgeLetterSent1" />|<value-of select="@impactedCountiesDSO" />|<value-of select="@acknowledgeLetterSent2" />|<value-of select="@requestLetterRec1" />|<value-of select="@acknowledgeLetterSent3" />|<value-of select="@requestPacketComplete" />|<value-of select="@iaPDAScheduled" />|<value-of select="@iaPDAComplete" />|<value-of select="@paPDAScheduled" />|<value-of select="@paPDAComplete" />|<value-of select="@flashRptRec" /></a></eocrepeatallrecords></div></div></body></html><viewfilters viewfilterid="10874" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hide" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Supplemental" name="Bubble Embed (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="7d49b54b-e142-46f7-ba4e-0c7a144da880" assignable="1"><html><head /><body onload="init();"><if test="1=0"><eocfield name="county" />,
         <eocfield name="countyDeclared" />,
         <eocfield name="countyLetter" />,
         <eocfield name="jurisdictionType" /></if><eocrepeatallrecords rowcount="0"><if test="@jurisdictionType='County'"><a name="records"><value-of select="@county" />,
               <value-of select="@countyDeclared" />,
               <value-of select="@countyLetter" /></a></if></eocrepeatallrecords></body><script type="text/javascript">
     var TXCountyData = {
        Names: ["Lipscomb", "Sherman", "Dallam", "Hansford", "Ochiltree", "Roberts", "Hemphill", "Hutchinson", "Hartley", "Moore", "Potter", "Carson", "Gray", "Wheeler", "Oldham", "Randall", "Armstrong", "Collingsworth", "Donley", "Deaf Smith", "Parmer", "Castro", "Swisher", "Briscoe", "Childress", "Hall", "Hardeman", "Wilbarger", "Motley", "Cottle", "Floyd", "Hale", "Lamb", "Bailey", "Foard", "Wichita", "Clay", "Montague", "Red River", "Grayson", "Cooke", "Lamar", "Fannin", "King", "Dickens", "Crosby", "Lubbock", "Archer", "Hockley", "Knox", "Baylor", "Cochran", "Bowie", "Delta", "Jack", "Wise", "Denton", "Hunt", "Collin", "Titus", "Haskell", "Throckmorton", "Young", "Kent", "Stonewall", "Franklin", "Garza", "Lynn", "Terry", "Yoakum", "Hopkins", "Morris", "Cass", "Camp", "Wood", "Palo Pinto", "Parker", "Tarrant", "Dallas", "Rockwall", "Rains", "Shackelford", "Jones", "Fisher", "Scurry", "Borden", "Dawson", "Stephens", "Gaines", "Upshur", "Marion", "Kaufman", "Van Zandt", "Harrison", "Smith", "Gregg", "Johnson", "Hood", "Ellis", "Taylor", "Howard", "Mitchell", "Eastland", "Callahan", "Martin", "Andrews", "Nolan", "Erath", "Rusk", "Panola", "Henderson", "Navarro", "Somervell", "Hill", "Comanche", "Bosque", "Cherokee", "Sterling", "Glasscock", "Midland", "Coke", "Winkler", "Ector", "Runnels", "Coleman", "Brown", "Anderson", "Hamilton", "Freestone", "Culberson", "Reeves", "Loving", "Hudspeth", "El Paso", "Shelby", "McLennan", "Nacogdoches", "Limestone", "Mills", "Coryell", "Tom Green", "Ward", "San Augustine", "Crane", "Upton", "Reagan", "Leon", "Sabine", "Houston", "Concho", "Irion", "Angelina", "Falls", "McCulloch", "San Saba", "Lampasas", "Trinity", "Pecos", "Robertson", "Bell", "Newton", "Jasper", "Polk", "Milam", "Jeff Davis", "Madison", "Schleicher", "Menard", "Crockett", "Tyler", "Walker", "Burnet", "Brazos", "Mason", "Llano", "Williamson", "San Jacinto", "Grimes", "Burleson", "Kimble", "Sutton", "Brewster", "Terrell", "Presidio", "Travis", "Montgomery", "Lee", "Hardin", "Gillespie", "Blanco", "Liberty", "Bastrop", "Washington", "Hays", "Edwards", "Val Verde", "Kerr", "Waller", "Orange", "Jefferson", "Fayette", "Harris", "Kendall", "Austin", "Real", "Caldwell", "Comal", "Colorado", "Bandera", "Chambers", "Guadalupe", "Fort Bend", "Gonzales", "Bexar", "Medina", "Lavaca", "Wharton", "Uvalde", "Kinney", "Brazoria", "Galveston", "Wilson", "De Witt", "Jackson", "Atascosa", "Matagorda", "Karnes", "Victoria", "Zavala", "Frio", "Maverick", "Goliad", "Live Oak", "Bee", "La Salle", "McMullen", "Dimmit", "Refugio", "Calhoun", "Webb", "San Patricio", "Aransas", "Duval", "Jim Wells", "Nueces", "Kleberg", "Jim Hogg", "Zapata", "Brooks", "Kenedy", "Starr", "Hidalgo", "Willacy", "Cameron"],
        countyDeclared: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        countyLetter: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
      }

    function init() {
      //window.parent.window.parent.window.parent.countyStatus = "test";

      var arr = [];

      var records = document.getElementsByName('records');
      var a;
      for (i = 0; i &lt; records.length; i++) {
        var a = records[i].innerHTML.split(',');
        countRecords(a[0],a[1],a[2]);
      }

      window.parent.window.parent.dataFromEmbedview(TXCountyData);

    }

    function countRecords(countyName, countyDeclared, countyLetter) {
            for (var x = 0; x &lt; TXCountyData.Names.length; x++) {
              if(TXCountyData.Names[x] == countyName){
                if(countyDeclared=='None' ||countyDeclared=='Possible'){
                  TXCountyData.countyDeclared[x] = 0;
                }else if(countyDeclared=='Local'){
                  TXCountyData.countyDeclared[x] = 1;
                }else if(countyDeclared=='State'){
                  TXCountyData.countyDeclared[x] = 2;
                }else if(countyDeclared=='Federal'){
                  TXCountyData.countyDeclared[x] = 3;
                }
                if(countyLetter == 'Yes'){
                  TXCountyData.countyLetter[x] = 1;
                }
              }
            }

        //}
    }
    </script></html><viewfilters viewfilterid="10875" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hide" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Supplemental" name="Recovery Summery" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="f30cadb3-087f-4963-a955-12a91d5b0c3a" assignable="1"><html><head><title /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}

</style><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript">
var counties =[];
$( document ).ready(function() {
 // $('#countyFilter').addClass("form-control input-sm");
var a = document.getElementsByName('countiesAlreadyPopulated');
for(var i=0; i &lt;a.length; i++){
counties.push(a[i].innerHTML);
}
window.parent.window.parent.counties = counties;

});


</script></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2">
              Declarations and Letter List
            </td></tr></tbody></table><div class="content"><!--<viewlink class="btn btn-default" type="button" name="!Display (DEFAULT)">Main Display</viewlink>
        <viewlink class="btn btn-default" type="button" name="Map (DO NOT ASSIGN)">Map View</viewlink>
        <space />
        <viewlink class="btn btn-default" type="button" name="Recovery Summery">Recovery Summary</viewlink>
        <space />
        <viewlink class="btn btn-default" type="button" name="DSO PA">DSO PA</viewlink>
        <viewlink class="btn btn-default" type="button" name="DSO IA">DSO IA</viewlink>
        <viewlink class="btn btn-default" type="button" name="Report View">Report View</viewlink>
        <viewlink class="btn btn-default" type="button" name="Bubble Input (DO NOT ASSIGN)">New</viewlink>--><space /><filterdropdown id="countyFilter" class="form-control input-sm" defaulttext="All Counties"><filter name="Anderson">Anderson</filter><filter name="Andrews">Andrews</filter><filter name="Angelina">Angelina</filter><filter name="Aransas">Aransas</filter><filter name="Archer">Archer</filter><filter name="Armstrong">Armstrong</filter><filter name="Atascosa">Atascosa</filter><filter name="Austin">Austin</filter><filter name="Bailey">Bailey</filter><filter name="Bandera">Bandera</filter><filter name="Bastrop">Bastrop</filter><filter name="Baylor">Baylor</filter><filter name="Bee">Bee</filter><filter name="Bell">Bell</filter><filter name="Bexar">Bexar</filter><filter name="Blanco">Blanco</filter><filter name="Borden">Borden</filter><filter name="Bosque">Bosque</filter><filter name="Bowie">Bowie</filter><filter name="Brazoria">Brazoria</filter><filter name="Brazos">Brazos</filter><filter name="Brewster">Brewster</filter><filter name="Briscoe">Briscoe</filter><filter name="Brooks">Brooks</filter><filter name="Brown">Brown</filter><filter name="Burleson">Burleson</filter><filter name="Burnet">Burnet</filter><filter name="Caldwell">Caldwell</filter><filter name="Calhoun">Calhoun</filter><filter name="Callahan">Callahan</filter><filter name="Cameron">Cameron</filter><filter name="Camp">Camp</filter><filter name="Carson">Carson</filter><filter name="Cass">Cass</filter><filter name="Castro">Castro</filter><filter name="Chambers">Chambers</filter><filter name="Cherokee">Cherokee</filter><filter name="Childress">Childress</filter><filter name="Clay">Clay</filter><filter name="Cochran">Cochran</filter><filter name="Coke">Coke</filter><filter name="Coleman">Coleman</filter><filter name="Collin">Collin</filter><filter name="Collingsworth">Collingsworth</filter><filter name="Colorado">Colorado</filter><filter name="Comal">Comal</filter><filter name="Comanche">Comanche</filter><filter name="Concho">Concho</filter><filter name="Cooke">Cooke</filter><filter name="Coryell">Coryell</filter><filter name="Cottle">Cottle</filter><filter name="Crane">Crane</filter><filter name="Crockett">Crockett</filter><filter name="Crosby">Crosby</filter><filter name="Culberson">Culberson</filter><filter name="Dallam">Dallam</filter><filter name="Dallas">Dallas</filter><filter name="Dawson">Dawson</filter><filter name="Deaf Smith">Deaf Smith</filter><filter name="Delta">Delta</filter><filter name="Denton">Denton</filter><filter name="DeWitt">DeWitt</filter><filter name="Dickens">Dickens</filter><filter name="Dimmit">Dimmit</filter><filter name="Donley">Donley</filter><filter name="Duval">Duval</filter><filter name="Eastland">Eastland</filter><filter name="Ector">Ector</filter><filter name="Edwards">Edwards</filter><filter name="El Paso">El Paso</filter><filter name="Ellis">Ellis</filter><filter name="Erath">Erath</filter><filter name="Falls">Falls</filter><filter name="Fannin">Fannin</filter><filter name="Fayette">Fayette</filter><filter name="Fisher">Fisher</filter><filter name="Floyd">Floyd</filter><filter name="Foard">Foard</filter><filter name="Fort Bend">Fort Bend</filter><filter name="Franklin">Franklin</filter><filter name="Freestone">Freestone</filter><filter name="Frio">Frio</filter><filter name="Gaines">Gaines</filter><filter name="Galveston">Galveston</filter><filter name="Garza">Garza</filter><filter name="Gillespie">Gillespie</filter><filter name="Glasscock">Glasscock</filter><filter name="Goliad">Goliad</filter><filter name="Gonzales">Gonzales</filter><filter name="Gray">Gray</filter><filter name="Grayson">Grayson</filter><filter name="Gregg">Gregg</filter><filter name="Grimes">Grimes</filter><filter name="Guadalupe">Guadalupe</filter><filter name="Hale">Hale</filter><filter name="Hall">Hall</filter><filter name="Hamilton">Hamilton</filter><filter name="Hansford">Hansford</filter><filter name="Hardeman">Hardeman</filter><filter name="Hardin">Hardin</filter><filter name="Harris">Harris</filter><filter name="Harrison">Harrison</filter><filter name="Hartley">Hartley</filter><filter name="Haskell">Haskell</filter><filter name="Hays">Hays</filter><filter name="Hemphill">Hemphill</filter><filter name="Henderson">Henderson</filter><filter name="Hidalgo">Hidalgo</filter><filter name="Hill">Hill</filter><filter name="Hockley">Hockley</filter><filter name="Hood">Hood</filter><filter name="Hopkins">Hopkins</filter><filter name="Houston">Houston</filter><filter name="Howard">Howard</filter><filter name="Hudspeth">Hudspeth</filter><filter name="Hunt">Hunt</filter><filter name="Hutchinson">Hutchinson</filter><filter name="Irion">Irion</filter><filter name="Jack">Jack</filter><filter name="Jackson">Jackson</filter><filter name="Jasper">Jasper</filter><filter name="Jeff Davis">Jeff Davis</filter><filter name="Jefferson">Jefferson</filter><filter name="Jim Hogg">Jim Hogg</filter><filter name="Jim Wells">Jim Wells</filter><filter name="Johnson">Johnson</filter><filter name="Jones">Jones</filter><filter name="Karnes">Karnes</filter><filter name="Kaufman">Kaufman</filter><filter name="Kendall">Kendall</filter><filter name="Kenedy">Kenedy</filter><filter name="Kent">Kent</filter><filter name="Kerr">Kerr</filter><filter name="Kimble">Kimble</filter><filter name="King">King</filter><filter name="Kinney">Kinney</filter><filter name="Kleberg">Kleberg</filter><filter name="Knox">Knox</filter><filter name="La Salle">La Salle</filter><filter name="Lamar">Lamar</filter><filter name="Lamb">Lamb</filter><filter name="Lampasas">Lampasas</filter><filter name="Lavaca">Lavaca</filter><filter name="Lee">Lee</filter><filter name="Leon">Leon</filter><filter name="Liberty">Liberty</filter><filter name="Limestone">Limestone</filter><filter name="Lipscomb">Lipscomb</filter><filter name="Live Oak">Live Oak</filter><filter name="Llano">Llano</filter><filter name="Loving">Loving</filter><filter name="Lubbock">Lubbock</filter><filter name="Lynn">Lynn</filter><filter name="Madison">Madison</filter><filter name="Marion">Marion</filter><filter name="Martin">Martin</filter><filter name="Mason">Mason</filter><filter name="Matagorda">Matagorda</filter><filter name="Maverick">Maverick</filter><filter name="McCulloch">McCulloch</filter><filter name="McLennan">McLennan</filter><filter name="McMullen">McMullen</filter><filter name="Medina">Medina</filter><filter name="Menard">Menard</filter><filter name="Midland">Midland</filter><filter name="Milam">Milam</filter><filter name="Mills">Mills</filter><filter name="Mitchell">Mitchell</filter><filter name="Montague">Montague</filter><filter name="Montgomery">Montgomery</filter><filter name="Moore">Moore</filter><filter name="Morris">Morris</filter><filter name="Motley">Motley</filter><filter name="Nacogdoches">Nacogdoches</filter><filter name="Navarro">Navarro</filter><filter name="Newton">Newton</filter><filter name="Nolan">Nolan</filter><filter name="Nueces">Nueces</filter><filter name="Ochiltree">Ochiltree</filter><filter name="Oldham">Oldham</filter><filter name="Orange">Orange</filter><filter name="Palo Pinto">Palo Pinto</filter><filter name="Panola">Panola</filter><filter name="Parker">Parker</filter><filter name="Parmer">Parmer</filter><filter name="Pecos">Pecos</filter><filter name="Polk">Polk</filter><filter name="Potter">Potter</filter><filter name="Presidio">Presidio</filter><filter name="Rains">Rains</filter><filter name="Randall">Randall</filter><filter name="Reagan">Reagan</filter><filter name="Real">Real</filter><filter name="Red River">Red River</filter><filter name="Reeves">Reeves</filter><filter name="Refugio">Refugio</filter><filter name="Roberts">Roberts</filter><filter name="Robertson">Robertson</filter><filter name="Rockwall">Rockwall</filter><filter name="Runnels">Runnels</filter><filter name="Rusk">Rusk</filter><filter name="Sabine">Sabine</filter><filter name="San Augustine">San Augustine</filter><filter name="San Jacinto">San Jacinto</filter><filter name="San Patricio">San Patricio</filter><filter name="San Saba">San Saba</filter><filter name="Schleicher">Schleicher</filter><filter name="Scurry">Scurry</filter><filter name="Shackelford">Shackelford</filter><filter name="Shelby">Shelby</filter><filter name="Sherman">Sherman</filter><filter name="Smith">Smith</filter><filter name="Somervell">Somervell</filter><filter name="Starr">Starr</filter><filter name="Stephens">Stephens</filter><filter name="Sterling">Sterling</filter><filter name="Stonewall">Stonewall</filter><filter name="Sutton">Sutton</filter><filter name="Swisher">Swisher</filter><filter name="Tarrant">Tarrant</filter><filter name="Taylor">Taylor</filter><filter name="Terrell">Terrell</filter><filter name="Terry">Terry</filter><filter name="Throckmorton">Throckmorton</filter><filter name="Titus">Titus</filter><filter name="Tom Green">Tom Green</filter><filter name="Travis">Travis</filter><filter name="Trinity">Trinity</filter><filter name="Tyler">Tyler</filter><filter name="Upshur">Upshur</filter><filter name="Upton">Upton</filter><filter name="Uvalde">Uvalde</filter><filter name="Val Verde">Val Verde</filter><filter name="Van Zandt">Van Zandt</filter><filter name="Victoria">Victoria</filter><filter name="Walker">Walker</filter><filter name="Waller">Waller</filter><filter name="Ward">Ward</filter><filter name="Washington">Washington</filter><filter name="Webb">Webb</filter><filter name="Wharton">Wharton</filter><filter name="Wheeler">Wheeler</filter><filter name="Wichita">Wichita</filter><filter name="Wilbarger">Wilbarger</filter><filter name="Willacy">Willacy</filter><filter name="Williamson">Williamson</filter><filter name="Wilson">Wilson</filter><filter name="Winkler">Winkler</filter><filter name="Wise">Wise</filter><filter name="Wood">Wood</filter><filter name="Yoakum">Yoakum</filter><filter name="Young">Young</filter><filter name="Zapata">Zapata</filter><filter name="Zavala">Zavala</filter></filterdropdown><dataexport type="button"><field name="county" header="County" /><field name="countyDeclared" header="County Declared" /><field name="countyLetter" header="County Letter" /></dataexport><table class="table display"><tbody><tr class="agencytemplate_tableheader"><td>County</td><td>Declaration</td><td>Return Dec Letter Date</td><td>Letter</td><td>Return Gov Letter Date</td><td>Action</td></tr><eocrepeatallrecords rowcount="0" sort="county"><tr class="agencytemplate_tableentry"><td><eocfield name="county" /><eocfield name="otherAttachment" /></td><td><eocfield name="countyDeclared" /><eocfield name="decAttachment" /></td><td><eocfield name="returnLocalDecLetter" /></td><td><eocfield name="countyLetter" /><eocfield name="letterAttachment" /></td><td><eocfield name="returnLetterToGovDate" /></td><td><!--<viewlink name="Bubble Input (DO NOT ASSIGN)" type="button">Edit</viewlink>--><a style="display:none" name="countiesAlreadyPopulated"><value-of select="@county" /></a></td></tr></eocrepeatallrecords></tbody></table></div></div></body></html><viewfilters viewfilterid="10876" name="SAMROCKS" b_all="1" applied="0"><viewfiltercriteria/></viewfilters><viewfilters viewfilterid="10877" name="Anderson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Anderson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10878" name="Andrews" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Andrews'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10879" name="Angelina" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Angelina'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10880" name="Aransas" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Aransas'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10881" name="Archer" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Archer'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10882" name="Armstrong" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Armstrong'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10883" name="Atascosa" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Atascosa'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10884" name="Austin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Austin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10885" name="Bailey" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bailey'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10886" name="Bandera" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bandera'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10887" name="Bastrop" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bastrop'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10888" name="Baylor" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Baylor'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10889" name="Bee" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bee'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10890" name="Bell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10891" name="Bexar" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bexar'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10892" name="Blanco" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Blanco'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10893" name="Borden" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Borden'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10894" name="Bosque" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bosque'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10895" name="Bowie" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bowie'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10896" name="Brazoria" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Brazoria'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10897" name="Brazos" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Brazos'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10898" name="Brewster" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Brewster'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10899" name="Briscoe" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Briscoe'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10900" name="Brooks" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Brooks'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10901" name="Brown" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Brown'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10902" name="Burleson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Burleson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10903" name="Burnet" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Burnet'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10904" name="Caldwell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Caldwell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10905" name="Calhoun" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Calhoun'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10906" name="Callahan" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Callahan'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10907" name="Cameron" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cameron'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10908" name="Camp" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Camp'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10909" name="Carson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Carson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10910" name="Cass" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cass'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10911" name="Castro" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Castro'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10912" name="Chambers" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Chambers'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10913" name="Cherokee" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cherokee'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10914" name="Childress" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Childress'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10915" name="Clay" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Clay'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10916" name="Cochran" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cochran'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10917" name="Coke" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Coke'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10918" name="Coleman" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Coleman'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10919" name="Collin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Collin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10920" name="Collingsworth" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Collingsworth'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10921" name="Colorado" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Colorado'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10922" name="Comal" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Comal'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10923" name="Comanche" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Comanche'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10924" name="Concho" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Concho'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10925" name="Cooke" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cooke'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10926" name="Coryell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Coryell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10927" name="Cottle" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cottle'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10928" name="Crane" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Crane'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10929" name="Crockett" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Crockett'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10930" name="Crosby" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Crosby'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10931" name="Culberson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Culberson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10932" name="Dallam" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Dallam'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10933" name="Dallas" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Dallas'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10934" name="Dawson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Dawson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10935" name="Deaf Smith" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Deaf Smith'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10936" name="Delta" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Delta'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10937" name="Denton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Denton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10938" name="DeWitt" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'DeWitt'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10939" name="Dickens" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Dickens'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10940" name="Dimmit" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Dimmit'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10941" name="Donley" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Donley'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10942" name="Duval" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Duval'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10943" name="Eastland" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Eastland'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10944" name="Ector" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Ector'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10945" name="Edwards" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Edwards'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10946" name="El Paso" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'El Paso'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10947" name="Ellis" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Ellis'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10948" name="Erath" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Erath'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10949" name="Falls" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Falls'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10950" name="Fannin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Fannin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10951" name="Fayette" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Fayette'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10952" name="Fisher" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Fisher'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10953" name="Floyd" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Floyd'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10954" name="Foard" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Foard'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10955" name="Fort Bend" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Fort Bend'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10956" name="Franklin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Franklin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10957" name="Freestone" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Freestone'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10958" name="Frio" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Frio'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10959" name="Gaines" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Gaines'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10960" name="Galveston" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Galveston'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10961" name="Garza" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Garza'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10962" name="Gillespie" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Gillespie'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10963" name="Glasscock" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Glasscock'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10964" name="Goliad" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Goliad'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10965" name="Gonzales" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Gonzales'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10966" name="Gray" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Gray'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10967" name="Grayson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Grayson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10968" name="Gregg" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Gregg'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10969" name="Grimes" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Grimes'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10970" name="Guadalupe" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Guadalupe'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10971" name="Hale" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hale'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10972" name="Hall" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hall'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10973" name="Hamilton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hamilton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10974" name="Hansford" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hansford'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10975" name="Hardeman" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hardeman'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10976" name="Hardin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hardin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10977" name="Harris" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Harris'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10978" name="Harrison" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Harrison'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10979" name="Hartley" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hartley'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10980" name="Haskell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Haskell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10981" name="Hays" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hays'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10982" name="Hemphill" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hemphill'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10983" name="Henderson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Henderson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10984" name="Hidalgo" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hidalgo'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10985" name="Hill" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hill'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10986" name="Hockley" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hockley'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10987" name="Hood" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hood'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10988" name="Hopkins" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hopkins'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10989" name="Houston" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Houston'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10990" name="Howard" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Howard'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10991" name="Hudspeth" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hudspeth'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10992" name="Hunt" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hunt'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10993" name="Hutchinson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hutchinson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10994" name="Irion" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Irion'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10995" name="Jack" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jack'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10996" name="Jackson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jackson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10997" name="Jasper" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jasper'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10998" name="Jeff Davis" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jeff Davis'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="10999" name="Jefferson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jefferson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11000" name="Jim Hogg" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jim Hogg'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11001" name="Jim Wells" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jim Wells'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11002" name="Johnson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Johnson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11003" name="Jones" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jones'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11004" name="Karnes" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Karnes'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11005" name="Kaufman" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kaufman'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11006" name="Kendall" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kendall'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11007" name="Kenedy" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kenedy'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11008" name="Kent" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kent'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11009" name="Kerr" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kerr'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11010" name="Kimble" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kimble'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11011" name="King" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'King'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11012" name="Kinney" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kinney'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11013" name="Kleberg" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kleberg'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11014" name="Knox" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Knox'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11015" name="La Salle" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'La Salle'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11016" name="Lamar" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lamar'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11017" name="Lamb" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lamb'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11018" name="Lampasas" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lampasas'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11019" name="Lavaca" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lavaca'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11020" name="Lee" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lee'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11021" name="Leon" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Leon'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11022" name="Liberty" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Liberty'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11023" name="Limestone" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Limestone'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11024" name="Lipscomb" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lipscomb'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11025" name="Live Oak" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Live Oak'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11026" name="Llano" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Llano'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11027" name="Loving" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Loving'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11028" name="Lubbock" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lubbock'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11029" name="Lynn" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lynn'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11030" name="Madison" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Madison'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11031" name="Marion" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Marion'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11032" name="Martin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Martin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11033" name="Mason" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Mason'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11034" name="Matagorda" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Matagorda'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11035" name="Maverick" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Maverick'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11036" name="McCulloch" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'McCulloch'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11037" name="McLennan" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'McLennan'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11038" name="McMullen" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'McMullen'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11039" name="Medina" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Medina'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11040" name="Menard" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Menard'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11041" name="Midland" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Midland'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11042" name="Milam" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Milam'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11043" name="Mills" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Mills'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11044" name="Mitchell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Mitchell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11045" name="Montague" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Montague'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11046" name="Montgomery" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Montgomery'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11047" name="Moore" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Moore'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11048" name="Morris" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Morris'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11049" name="Motley" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Motley'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11050" name="Nacogdoches" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Nacogdoches'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11051" name="Navarro" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Navarro'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11052" name="Newton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Newton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11053" name="Nolan" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Nolan'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11054" name="Nueces" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Nueces'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11055" name="Ochiltree" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Ochiltree'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11056" name="Oldham" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Oldham'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11057" name="Orange" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Orange'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11058" name="Palo Pinto" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Palo Pinto'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11059" name="Panola" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Panola'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11060" name="Parker" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Parker'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11061" name="Parmer" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Parmer'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11062" name="Pecos" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Pecos'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11063" name="Polk" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Polk'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11064" name="Potter" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Potter'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11065" name="Presidio" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Presidio'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11066" name="Rains" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Rains'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11067" name="Randall" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Randall'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11068" name="Reagan" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Reagan'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11069" name="Real" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Real'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11070" name="Red River" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Red River'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11071" name="Reeves" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Reeves'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11072" name="Refugio" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Refugio'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11073" name="Roberts" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Roberts'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11074" name="Robertson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Robertson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11075" name="Rockwall" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Rockwall'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11076" name="Runnels" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Runnels'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11077" name="Rusk" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Rusk'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11078" name="Sabine" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Sabine'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11079" name="San Augustine" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'San Augustine'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11080" name="San Jacinto" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'San Jacinto'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11081" name="San Patricio" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'San Patricio'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11082" name="San Saba" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'San Saba'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11083" name="Schleicher" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Schleicher'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11084" name="Scurry" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Scurry'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11085" name="Shackelford" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Shackelford'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11086" name="Shelby" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Shelby'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11087" name="Sherman" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Sherman'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11088" name="Smith" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Smith'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11089" name="Somervell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Somervell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11090" name="Starr" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Starr'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11091" name="Stephens" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Stephens'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11092" name="Sterling" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Sterling'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11093" name="Stonewall" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Stonewall'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11094" name="Sutton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Sutton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11095" name="Swisher" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Swisher'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11096" name="Tarrant" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Tarrant'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11097" name="Taylor" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Taylor'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11098" name="Terrell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Terrell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11099" name="Terry" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Terry'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11100" name="Throckmorton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Throckmorton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11101" name="Titus" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Titus'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11102" name="Tom Green" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Tom Green'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11103" name="Travis" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Travis'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11104" name="Trinity" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Trinity'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11105" name="Tyler" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Tyler'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11106" name="Upshur" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Upshur'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11107" name="Upton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Upton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11108" name="Uvalde" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Uvalde'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11109" name="Val Verde" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Val Verde'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11110" name="Van Zandt" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Van Zandt'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11111" name="Victoria" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Victoria'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11112" name="Walker" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Walker'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11113" name="Waller" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Waller'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11114" name="Ward" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Ward'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11115" name="Washington" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Washington'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11116" name="Webb" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Webb'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11117" name="Wharton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wharton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11118" name="Wheeler" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wheeler'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11119" name="Wichita" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wichita'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11120" name="Wilbarger" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wilbarger'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11121" name="Willacy" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Willacy'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11122" name="Williamson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Williamson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11123" name="Wilson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wilson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11124" name="Winkler" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Winkler'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11125" name="Wise" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wise'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11126" name="Wood" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wood'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11127" name="Yoakum" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Yoakum'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11128" name="Young" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Young'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11129" name="Zapata" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Zapata'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11130" name="Zavala" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Zavala'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11131" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hide" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Supplemental" name="DSO Status" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="fc5d551c-a810-423f-a3f5-4ef89692246b" assignable="1"><html><head><title /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa;}
  div.content{margin:1em;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false" align="center">DSO Status</td></tr></tbody></table><div class="content"><table class="display"><tbody><tr class="agencytemplate_tableheader"><td selected="false">County/City</td><td selected="false" colSpan="1" width="">Incident Period</td><td selected="false" colSpan="1" width="">Local Disaster Proc Issue Rec'd</td><td selected="false" colSpan="1" width="">Acknowledge Letter Sent</td><td selected="false" colSpan="1" width="">Impacted Counties DSO Rec'd</td><td selected="false" colSpan="1" width="">Acknowledge Letter Rec'd</td><td selected="false" colSpan="1" width="">Request Letter Rec'd</td><td selected="false" colSpan="1" width="">Acknowledge Letter Sent</td><td selected="false" colSpan="1" width="">Request Packets Complete</td><td selected="false" colSpan="1" width="">IA PDA Scheduled</td><td selected="false" colSpan="1" width="">IA PDA Complete</td><td selected="false" colSpan="1" width="">PA PDA Scheduled</td><td selected="false" colSpan="1" width="">PA PDA Complete</td><td selected="false" colSpan="1" width="" rowSpan="1">Flash Rpt Rec'd</td></tr><eocrepeatallrecords><tr class="agencytemplate_tableentry"><td colSpan="1" selected="false"><eocfield name="county" /></td><td colSpan="1" selected="false" width=""><eocfield name="incidentPeriod" /></td><td colSpan="1" selected="false" width=""><eocfield name="locDecRec" /></td><td colSpan="1" selected="false" width=""><eocfield name="returnLocalDecLetter" /></td><td colSpan="1" selected="false" width=""><eocfield name="impactedCountiesDSO" /></td><td colSpan="1" selected="false" width=""><eocfield name="dsoAcknowledgeLetterSent" /></td><td colSpan="1" selected="false" width=""><eocfield name="returnLetterToGovDate" /></td><td colSpan="1" selected="true" width=""> </td><td colSpan="1" selected="false" width=""><eocfield name="requestPacketComplete" /></td><td colSpan="1" selected="false" width=""><eocfield name="iaPDAScheduled" /></td><td colSpan="1" selected="false" width=""><eocfield name="iaPDAComplete" /></td><td colSpan="1" selected="false" width=""><eocfield name="paPDAScheduled" /></td><td colSpan="1" selected="false" width=""><eocfield name="paPDAComplete" /></td><td colSpan="1" selected="false" width=""><eocfield name="flashRptRec" /></td></tr></eocrepeatallrecords></tbody></table></div></div></body></html></view><view tablename="Supplemental" name="!Summary(DEFAULT)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="9b0f6d30-3c35-4e81-a002-78f22851e275" assignable="1"><html><head><title>Summary</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/etn/etn.js" /><script type="text/javascript" src="../boards/board_lib.js" /><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em;width:99%;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;word-wrap:break-word;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
  .rowYellow {background-color:#ffffb3;}
  .rowBlue {background-color:#ccebff;}
  .rowRed {background-color:#FF9999;}
  .lightRowRed {background-color:#FFb3b3;}
  .rowGray {background-color: #b7bfc8;}
.rowReg {}
.rowGreen{background-color:#00e673;}
.cellYellow{background-color:#ffff00;}
.textYellow {color:#ffff99;}
.cellOrange {background-color:#ff751a;}
  .fieldsetButtons { 
    display:inline-block;

   }
legend {
   font-size: 10pt;
}
.hideA { font-size: 20pt;}
  /*.tjCount{background-color:#ffffb3;}*/
}
.tJ {font-size:14pt;background-color:#BDFFFF;color:black; 
}
.smallHeaders {
  font-size: 10pt;
}

.tableWords {
  
  font-size: 10pt;
}

.pdfSettings{
  max-width: 30px;
  word-break: break-all;
  word-wrap: break-word;
}
.narrowColumns50px{
  max-width: 50px;
  /*word-break: break-all;
  word-wrap: break-word;*/
}

.narrowDateColumns160px{
  max-width: 160px;
  /*word-break: break-all;
  word-wrap: break-word;*/
}

.narrowColumns200px{
  max-width: 200px;
  /*word-break: break-all;
  word-wrap: break-word;*/
}
.smallestWords {
  font-size: 6pt;
}
.PDFhide{ 
display:none; 
}
/*.tableFontSize {
    font-size: 6pt;
}*/
.lookHere{
  font-size:14pt;
  font-weight:bold;
  color:#CD0101
}
@media print {
  body table.display table.heading div.content div.container th{ 
    font-size: 5pt; 
    width:50%;

  }
}

</style></head><body><div class="container"><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><span id="incidentNameSpan"><incidentname /></span></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false" align="center">Recovery Summary
                     
                     
                     <br /><h3>(Bubble Inputs)</h3><hr /><span style="float:left"><button type="button" class="btn btn-danger btn" data-toggle="modal" data-target="#myModal">Legend</button><space /><span id="pdfButtons" class="hidea"><pdflink id="pdfButton" type="button" class="btn btn-warning" orientation="landscape" enablejs="true">PDF</pdflink><space /><button id="fakePdfButton" class="btn btn-danger" orientation="landscape" onclick="pdfFontChangeSize()">Small</button><space /><button id="fakePdfButton2" class="btn btn-danger" orientation="landscape" onclick="pdfFontChangeSize2()">Large</button><space /><viewlink name="!Summary(DEFAULT)_PDF" id="pdfView" type="button" class="btn btn-warning">Get PDF View</viewlink></span><span id="dataManSum"><dataexport type="button" filename="DSO Recovery Summary" class="btn btn-warning"><field name="incidentName" header="Incident Name"></field><field name="totalJurisictionsexpression2" header="Grand Total Jurisdictions"></field><field name="totalJurisdictions" header="Total Jurisdictions"></field><field name="jurisdictionType" header="Jurisdiction Type"></field><field name="county" header="County"></field><field name="city" header="City"></field><field name="dateOfDisaster1" header="Date Disaster Start"></field><field name="dateOfDisaster2" header="Date Disaster End"></field><field name="dateDecRec" header="Dec Rec Date Local"></field><field name="dateDecRecState" header="Dec Rec Date State"></field><field name="dateDecRecFederal" header="Dec Rec Date Fed"></field><field name="ack1" header="ACK Letters Sent 1 Date"></field><field name="assistanceRequestedDate" header="Asst Req Date"></field><field name="dsoYesNo" header="DSO"></field><field name="impactedCountiesDSO" header="DSO Rec Date"></field><field name="copyFK" header="Linked to DSO"></field><field name="ack2" header="ACK Letters Sent 2 Date"></field><field name="iaPDAScheduled" header="IA Date PDA SCHED"></field><field name="iaPDAComplete" header="IA Date PDA CMPL"></field><field name="paPDAScheduled" header="PA Date PDA SCHED"></field><field name="paPDAComplete" header="PA Date PDA CMPL"></field></dataexport></span></span></td></tr></tbody></table><div class="container"><!-- Trigger the modal with a button --><!-- Modal --><div class="modal fade" id="myModal" role="dialog"><div class="modal-dialog"><!-- Modal content--><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">x</button><h4 class="modal-title">Legend / Information</h4></div><div class="modal-body"><!--<table id="smallTable" class="table display">
          <tr><td><div style="text-align:center;" class="rowYellow"><span style="text-align:center;font-size:12pt">County / City Totals</span></div></td><td><div style="text-align:center;" class="rowGray"><span style="text-align:center;font-size:12pt">Grand Totals</span></div></td><td><div style="text-align:center;" class="rowRed"><span style="text-align:center;font-size:12pt">FEMA Vetting</span></div></td><td><div style="text-align:center;" class="rowGreen"><span style="text-align:center;font-size:12pt">Yes</span></div></td><td><div style="text-align:center;" class="cellYellow"><span style="font-size:12pt">No</span></div></td><td><div style="text-align:center;" class="cellOrange"><span style="text-align:center;font-size:12pt">N/A</span></div></td></tr>

        </table>--><table><tr><h5><!--<br/>-->This page shows only Supplemental Inputs (Bubble Inputs)</h5><hr /><h5>Total Jurisdictions (JDX) are determined if a yes value is entered for Disaster Declaration, if a date is entered into Acknowledgement Letters Sent 1 or 2 or a date is entered into Date Impacted Counties DSO Rec'd.</h5></tr></table></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div></div></div></div></div><div class="content"><div id="buttonsFiltersSearch"><!--<button type="button" class="btn active">View Recovery Summary</button>--><div><fieldset class="fieldsetButtons"><legend>Operations</legend><space /><space /><viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink><space /><space /><button type="button" class="btn active">View Recovery Summary</button><!--<viewlink class="btn btn-info" type="button" name="!Summary(DEFAULT)">View Recovery Summary</viewlink>--><space /><space /><viewlink class="btn btn-info" type="button" name="Housing (DO NOT ASSIGN)">View Housing / IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Infrastructure (DO NOT ASSIGN)">View Infrastructure / PA</viewlink><space /><space /><space /><space /><viewlink class="btn btn-success" type="button" name="Bubble Input (DO NOT ASSIGN)">+ New Bubble Input</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>Recovery</legend><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery IA (DO NOT ASSIGN)">View Recovery IA</viewlink><space /><space /><!--<button type="button" class="btn active">View Recovery PA</button>--><viewlink class="btn btn-info" type="button" name="Recovery PA (DO NOT ASSIGN)">View Recovery PA</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>DSO</legend><space /><space /><viewlink class="btn btn-success" type="button" name="Input (DO NOT ASSIGN)">+ New DSO for Testing</viewlink></fieldset></div><hr /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><span id="countyFilter"><filterdropdown defaulttext="All Counties" class="form-control"><filter name="Anderson">Anderson</filter><filter name="Andrews">Andrews</filter><filter name="Angelina">Angelina</filter><filter name="Aransas">Aransas</filter><filter name="Archer">Archer</filter><filter name="Armstrong">Armstrong</filter><filter name="Atascosa">Atascosa</filter><filter name="Austin">Austin</filter><filter name="Bailey">Bailey</filter><filter name="Bandera">Bandera</filter><filter name="Bastrop">Bastrop</filter><filter name="Baylor">Baylor</filter><filter name="Bee">Bee</filter><filter name="Bell">Bell</filter><filter name="Bexar">Bexar</filter><filter name="Blanco">Blanco</filter><filter name="Borden">Borden</filter><filter name="Bosque">Bosque</filter><filter name="Bowie">Bowie</filter><filter name="Brazoria">Brazoria</filter><filter name="Brazos">Brazos</filter><filter name="Brewster">Brewster</filter><filter name="Briscoe">Briscoe</filter><filter name="Brooks">Brooks</filter><filter name="Brown">Brown</filter><filter name="Burleson">Burleson</filter><filter name="Burnet">Burnet</filter><filter name="Caldwell">Caldwell</filter><filter name="Calhoun">Calhoun</filter><filter name="Callahan">Callahan</filter><filter name="Cameron">Cameron</filter><filter name="Camp">Camp</filter><filter name="Carson">Carson</filter><filter name="Cass">Cass</filter><filter name="Castro">Castro</filter><filter name="Chambers">Chambers</filter><filter name="Cherokee">Cherokee</filter><filter name="Childress">Childress</filter><filter name="Clay">Clay</filter><filter name="Cochran">Cochran</filter><filter name="Coke">Coke</filter><filter name="Coleman">Coleman</filter><filter name="Collin">Collin</filter><filter name="Collingsworth">Collingsworth</filter><filter name="Colorado">Colorado</filter><filter name="Comal">Comal</filter><filter name="Comanche">Comanche</filter><filter name="Concho">Concho</filter><filter name="Cooke">Cooke</filter><filter name="Coryell">Coryell</filter><filter name="Cottle">Cottle</filter><filter name="Crane">Crane</filter><filter name="Crockett">Crockett</filter><filter name="Crosby">Crosby</filter><filter name="Culberson">Culberson</filter><filter name="Dallam">Dallam</filter><filter name="Dallas">Dallas</filter><filter name="Dawson">Dawson</filter><filter name="Deaf Smith">Deaf Smith</filter><filter name="Delta">Delta</filter><filter name="Denton">Denton</filter><filter name="DeWitt">DeWitt</filter><filter name="Dickens">Dickens</filter><filter name="Dimmit">Dimmit</filter><filter name="Donley">Donley</filter><filter name="Duval">Duval</filter><filter name="Eastland">Eastland</filter><filter name="Ector">Ector</filter><filter name="Edwards">Edwards</filter><filter name="Ellis">Ellis</filter><filter name="El Paso">El Paso</filter><filter name="Erath">Erath</filter><filter name="Falls">Falls</filter><filter name="Fannin">Fannin</filter><filter name="Fayette">Fayette</filter><filter name="Fisher">Fisher</filter><filter name="Floyd">Floyd</filter><filter name="Foard">Foard</filter><filter name="Fort Bend">Fort Bend</filter><filter name="Franklin">Franklin</filter><filter name="Freestone">Freestone</filter><filter name="Frio">Frio</filter><filter name="Gaines">Gaines</filter><filter name="Galveston">Galveston</filter><filter name="Garza">Garza</filter><filter name="Gillespie">Gillespie</filter><filter name="Glasscock">Glasscock</filter><filter name="Goliad">Goliad</filter><filter name="Gonzales">Gonzales</filter><filter name="Gray">Gray</filter><filter name="Grayson">Grayson</filter><filter name="Gregg">Gregg</filter><filter name="Grimes">Grimes</filter><filter name="Guadalupe">Guadalupe</filter><filter name="Hale">Hale</filter><filter name="Hall">Hall</filter><filter name="Hamilton">Hamilton</filter><filter name="Hansford">Hansford</filter><filter name="Hardeman">Hardeman</filter><filter name="Hardin">Hardin</filter><filter name="Harris">Harris</filter><filter name="Harrison">Harrison</filter><filter name="Hartley">Hartley</filter><filter name="Haskell">Haskell</filter><filter name="Hays">Hays</filter><filter name="Hemphill">Hemphill</filter><filter name="Henderson">Henderson</filter><filter name="Hidalgo">Hidalgo</filter><filter name="Hill">Hill</filter><filter name="Hockley">Hockley</filter><filter name="Hood">Hood</filter><filter name="Hopkins">Hopkins</filter><filter name="Houston">Houston</filter><filter name="Howard">Howard</filter><filter name="Hudspeth">Hudspeth</filter><filter name="Hunt">Hunt</filter><filter name="Hutchinson">Hutchinson</filter><filter name="Irion">Irion</filter><filter name="Jack">Jack</filter><filter name="Jackson">Jackson</filter><filter name="Jasper">Jasper</filter><filter name="Jeff Davis">Jeff Davis</filter><filter name="Jefferson">Jefferson</filter><filter name="Jim Hogg">Jim Hogg</filter><filter name="Jim Wells">Jim Wells</filter><filter name="Johnson">Johnson</filter><filter name="Jones">Jones</filter><filter name="Karnes">Karnes</filter><filter name="Kaufman">Kaufman</filter><filter name="Kendall">Kendall</filter><filter name="Kenedy">Kenedy</filter><filter name="Kent">Kent</filter><filter name="Kerr">Kerr</filter><filter name="Kimble">Kimble</filter><filter name="King">King</filter><filter name="Kinney">Kinney</filter><filter name="Kleberg">Kleberg</filter><filter name="Knox">Knox</filter><filter name="Lamar">Lamar</filter><filter name="Lamb">Lamb</filter><filter name="Lampasas">Lampasas</filter><filter name="LaSalle">La Salle</filter><filter name="Lavaca">Lavaca</filter><filter name="Lee">Lee</filter><filter name="Leon">Leon</filter><filter name="Liberty">Liberty</filter><filter name="Limestone">Limestone</filter><filter name="Lipscomb">Lipscomb</filter><filter name="Live Oak">Live Oak</filter><filter name="Llano">Llano</filter><filter name="Loving">Loving</filter><filter name="Lubbock">Lubbock</filter><filter name="Lynn">Lynn</filter><filter name="Madison">Madison</filter><filter name="Marion">Marion</filter><filter name="Martin">Martin</filter><filter name="Mason">Mason</filter><filter name="Matagorda">Matagorda</filter><filter name="Maverick">Maverick</filter><filter name="McCulloch">McCulloch</filter><filter name="McLennan">McLennan</filter><filter name="McMullen">McMullen</filter><filter name="Medina">Medina</filter><filter name="Menard">Menard</filter><filter name="Midland">Midland</filter><filter name="Milam">Milam</filter><filter name="Mills">Mills</filter><filter name="Mitchell">Mitchell</filter><filter name="Montague">Montague</filter><filter name="Montgomery">Montgomery</filter><filter name="Moore">Moore</filter><filter name="Morris">Morris</filter><filter name="Motley">Motley</filter><filter name="Nacogdoches">Nacogdoches</filter><filter name="Navarro">Navarro</filter><filter name="Newton">Newton</filter><filter name="Nolan">Nolan</filter><filter name="Nueces">Nueces</filter><filter name="Ochiltree">Ochiltree</filter><filter name="Oldham">Oldham</filter><filter name="Orange">Orange</filter><filter name="Palo Pinto">Palo Pinto</filter><filter name="Panola">Panola</filter><filter name="Parker">Parker</filter><filter name="Parmer">Parmer</filter><filter name="Pecos">Pecos</filter><filter name="Polk">Polk</filter><filter name="Potter">Potter</filter><filter name="Presidio">Presidio</filter><filter name="Rains">Rains</filter><filter name="Randall">Randall</filter><filter name="Reagan">Reagan</filter><filter name="Real">Real</filter><filter name="Red River">Red River</filter><filter name="Reeves">Reeves</filter><filter name="Refugio">Refugio</filter><filter name="Roberts">Roberts</filter><filter name="Robertson">Robertson</filter><filter name="Rockwall">Rockwall</filter><filter name="Runnels">Runnels</filter><filter name="Rusk">Rusk</filter><filter name="Sabine">Sabine</filter><filter name="San Augustine">San Augustine</filter><filter name="San Jacinto">San Jacinto</filter><filter name="San Patricio">San Patricio</filter><filter name="San Saba">San Saba</filter><filter name="Schleicher">Schleicher</filter><filter name="Scurry">Scurry</filter><filter name="Shackelford">Shackelford</filter><filter name="Shelby">Shelby</filter><filter name="Sherman">Sherman</filter><filter name="Smith">Smith</filter><filter name="Somervell">Somervell</filter><filter name="Starr">Starr</filter><filter name="Stephens">Stephens</filter><filter name="Sterling">Sterling</filter><filter name="Stonewall">Stonewall</filter><filter name="Sutton">Sutton</filter><filter name="Swisher">Swisher</filter><filter name="Tarrant">Tarrant</filter><filter name="Taylor">Taylor</filter><filter name="Terrell">Terrell</filter><filter name="Terry">Terry</filter><filter name="Throckmorton">Throckmorton</filter><filter name="Titus">Titus</filter><filter name="Tom Green">Tom Green</filter><filter name="Travis">Travis</filter><filter name="Trinity">Trinity</filter><filter name="Tyler">Tyler</filter><filter name="Upshur">Upshur</filter><filter name="Upton">Upton</filter><filter name="Uvalde">Uvalde</filter><filter name="Val Verde">Val Verde</filter><filter name="Van Zandt">Van Zandt</filter><filter name="Victoria">Victoria</filter><filter name="Walker">Walker</filter><filter name="Waller">Waller</filter><filter name="Ward">Ward</filter><filter name="Washington">Washington</filter><filter name="Webb">Webb</filter><filter name="Wharton">Wharton</filter><filter name="Wheeler">Wheeler</filter><filter name="Wichita">Wichita</filter><filter name="Wilbarger">Wilbarger</filter><filter name="Willacy">Willacy</filter><filter name="Williamson">Williamson</filter><filter name="Wilson">Wilson</filter><filter name="Winkler">Winkler</filter><filter name="Wise">Wise</filter><filter name="Wood">Wood</filter><filter name="Yoakum">Yoakum</filter><filter name="Young">Young</filter><filter name="Zapata">Zapata</filter><filter name="Zavala">Zavala</filter></filterdropdown></span><space /><space /><space /><space /><space /><space /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><label for="incidentList" class=""><h4><sub>Incidents:</sub></h4></label><space /><select name="incidentList" id="incidentList" class="form-control" onchange="filterByIncident.incidentListActionOnChange();" /></div><space /><space /><space /><space /><space /><space /><span id="searchDIV"><search exact="false" range="false" rangetext="false"><field name="county" /><field name="city" /><field name="otherValue" /></search><clearsearchbutton /><span style="display: none;" id="incidentNameSearchSPAN"><search field="incidentName" clearsearch="true" /></span></span></div></div><div /><br /><div class="table"><table id="sumTable" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" rowSpan="1" width="" align="center" class="narrowColumns50px"><span class="tableWords">Total JDX</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" class="narrowColumns200px"><span class="tableWords">County / City</span><br /><span class="tableWords">(Click to Edit)</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" class="narrowDateColumns160px"><span class="tableWords">Incident<br />Period</span></td><!--<td selected="false" colSpan="1" width="" rowSpan="2" align="center">Disaster Dec
                        
                        
                        <br />(X)
                     
                     
                     </td>--><td selected="false" colSpan="1" width="" rowSpan="2" align="center" class="narrowDateColumns160px"><span class="tableWords">Dec Rec'd Date<br />Local<br />State<br />Fed</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">ACK Letters<br />Sent 1 Date</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">Asst Req'd Date</span></td><!--<td selected="false" colSpan="1" width="" rowSpan="2" align="center">DSO</td>--><td selected="false" colSpan="1" width="" rowSpan="2" align="center" class="narrowColumns200px"><strong>DSO</strong><br /><span class="tableWords">Y or N / Rec'd Date<br />--<br />Linked to DSO<br /></span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">ACK Letters<br />Sent 2 Date</span></td><td selected="false" colSpan="2" width="" rowSpan="1" align="center"><span class="tableWords">IA Dates</span></td><td selected="false" colSpan="2" width="" rowSpan="1" align="center"><span class="tableWords">PA Dates</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">Bubble Audit Log</span></td><!--<td selected="false" colSpan="1" width="" rowSpan="2" align="center">IA PDA FEMA</td>
              <td selected="false" colSpan="1" width="" rowSpan="2" align="center">PA PDA FEMA</td>--></tr><tr class="agencytemplate_tableheader"><td selected="false" align="center" top-align="center" rowSpan="1"><span class="tableWords"><expression useboardlevelfilters="true" name="totalJurisictionsexpression2">sum(isnull(totalJurisdictions,0))</expression></span></td><!--<td selected="false" colSpan="1" width="" rowSpan="1" align="center" style="font-weight: normal; font-size: 10pt;">PDA Requested</td>--><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">PDA SCHED</span></td><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">PDA CMPL</span></td><!--<td selected="false" colSpan="1" width="" rowSpan="1" align="center" style="font-weight: normal; font-size: 10pt;">PDA Requested</td>--><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">PDA SCHED</span></td><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">PDA CMPL</span></td></tr><eocrepeatallrecords rowcount="0" sort="cast(sortCountyOrder as int) asc, cast(sortCityOrder as int) asc"><if test="1=0"><eocfield name="totalJurisdictions" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="city2" /><eocfield name="otherValue" /><eocfield name="dsoYesNo" /><eocfield name="impactedCountiesDSO" /><eocfield name="dateDecRec" /><eocfield name="dateDecRecState" /><eocfield name="dateDecRecFederal" /><eocfield name="femaCheckboxV1" /><eocfield name="femaCheckboxV2" /></if><tr class="agencytemplate_tableentry"><td colSpan="1" selected="false" align="center"><if test="@totalJurisdictions!='0'"><div><value-of select="@totalJurisdictions" /></div></if></td><td class="hide"><eocfield name="incidentName" /></td><td colSpan="1" selected="false" width=""><viewlink name="Bubble Input (DO NOT ASSIGN)"><span class="tableWords" style="color:#111111"><if test="@county = '' "><span class="lookHere">ADD COUNTY</span></if><if test="@city = '' "><span class="lookHere">ADD CITY</span></if><if test="@jurisdictionType='County'"><div style="text-align:left"><b><value-of select="@county" /></b> / <value-of select="@city2" /><if test="@otherValue!=''"> - <value-of select="@otherValue" /></if></div></if><if test="@jurisdictionType='City'"><div style="text-align:right"><value-of select="@county" /> / <b><value-of select="@city2" /></b><if test="@otherValue!=''"> - <value-of select="@otherValue" /></if></div></if></span></viewlink></td><td colSpan="1" selected="false" width="" align="center" class="narrowDateColumns160px"><!--<eocfield name="incidentPeriod" />--><span class="tableWords"><eocfield table="Core" name="dateOfDisaster1" />- 
                           <eocfield table="Core" name="dateOfDisaster2" /></span></td><!--<td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="declarationIssued" />
                </td>--><td colSpan="1" selected="false" width="" align="center" class="tableWords"><span><if test="@dateDecRec!=''"><div>( L <value-of select="@dateDecRec" /> )</div></if><if test="@dateDecRecState!=''"><div>( S <value-of select="@dateDecRecState" /> )</div></if><if test="@dateDecRecFederal!=''"><div>( F <value-of select="@dateDecRecFederal" /> )</div></if></span></td><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="ack1" /></span></td><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="assistanceRequestedDate" /></span></td><!--<td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="dsoYesNo" />
                </td>--><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><if test="@dsoYesNo!=''"><value-of select="@dsoYesNo" /></if><if test="@impactedCountiesDSO!=''"> / <value-of select="@impactedCountiesDSO" /></if><br />--<br /><eocfield table="Core" name="DSOisSelected" /><eocfield name="copyFK" /><hr /><eocfield name="copyFK2" /></span></td><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="ack2" /></span></td><!--<td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="iaPdaRequested" />
                </td>--><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="iaPDAScheduled" /></span></td><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><if test="@femaCheckboxV1='Yes'"><value-of select="@femaCheckboxV1" /><br /></if><eocfield name="iaPDAComplete" /></span></td><!--<td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="paPdaRequested" />
                </td>--><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="paPDAScheduled" /></span></td><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><if test="@femaCheckboxV2='Yes'"><value-of select="@femaCheckboxV2" /><br /></if><eocfield name="paPDAComplete" /></span></td><td colSpan="1" selected="false" width="" align="center"><viewlink name="Bubble Audit RelatedList (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">Bubble History</button></viewlink></td><!--<td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="femaCheckboxV1" />
                </td>
                <td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="femaCheckboxV2" />
                </td>--></tr></eocrepeatallrecords></tbody></table></div></div></div></div></body><script type="text/javascript">


//SCRIPT works at bottom of page, not the top
//document.getElementById("pdfButton").onclick = function() {pdfFontChangeSize()};
//document.getElementById("fakePdfButton").onclick = document.getElementById("pdfButton").click;
/*function findingCityDupes(){
  alert('dupes');
  var $tableRows = $("#sumTable tbody tr");
    var $rowsToMark = $();

    $tableRows.each(function(n) {
        var id = this.id;
        var example = $(this).find('.content').html();

        $tableRows.each(function(n) {
            var $this;
            if (this.id != id) {
                $this = $(this);
                if ($this.find('.content').html() == example) {
                    $rowsToMark.add($this);
                }
            }
        });
    });

    $rowsToMark.css('backgroundColor', 'azure');
    alert('dupes2');
}*/ //no dice
/*function findDuplicates() {
    var isDuplicate = false;
    jQuery("#city").each(function (i,el1) {
        var current_val = jQuery(el1).val();
        if (current_val != "") {
            jQuery("#city").each(function (i,el2) {
                if (jQuery(el2).val() == current_val &amp;&amp; jQuery(el1).attr("name") != jQuery(el2).attr("name")) {
                    isDuplicate = true;
                    jQuery(el2).css("background-color", "yellow");
                    jQuery(el1).css("background-color", "yellow");
                    return;
                }
            });
        }
    });

    if (isDuplicate) {
        alert ("Duplicate values found.");
        return false;
    } else {
        return true;
    }
}*/

/*function inputsHaveDuplicateValues() {
  alert('hasDuplicates1');
  var hasDuplicates = false;
  $('input').each(function () {
    var $inputsWithSameValue = $('input[value=' + $(this).val() + ']');
    hasDuplicates = $inputsWithSameValue.length &gt; 1;
    //This will break out of the each loop if duplicates have been found.
    return hasDuplicates;
    alert('hasDuplicates2');
  });
  return hasDuplicates;
}*/

function pdfFontChangeSize() {
  //alert("resizing");
  $(".tableWords").addClass("smallestWords");
    
}

function pdfFontChangeSize2() {
  //alert("resizing");
  $(".tableWords").removeClass("smallestWords");
    
}

 
var dsoPageHelper={


    //startOf: identifying what filter is on
    filterSet: function(arg1,arg2) {
      if($(arg1).html()==='on'){$(arg2).css('font-weight', 'Bold').css('text-decoration', 'underline');}
    },
    
    
    //startOf: styling search field
      styleSearchField: function() {
         var searchFld=document.getElementById('searchDIV').getElementsByTagName('input');
         for(var j=0; j &lt; searchFld.length; j++) {
            if($(searchFld[j]).val()=='Search' || $(searchFld[j]).val()=='Clear Search'){$(searchFld[j]).addClass('btn btn-default');}
          if(searchFld[j].id.search('searchfield')&gt;=0){$(searchFld[j]).addClass('form-control').prop('placeholder', 'Search');}
        }     
      }
  };
   
var incSelList=document.getElementById('incidentList');
var loopAllInputs=document.getElementsByTagName('input');
var incVar;

//startOf: filter by incident process method
var filterByIncident={
 clearIncidentListSelection: function() {
   var incSearch=document.getElementById('incidentNameSearchSPAN').getElementsByTagName('input');
   for(var i=0; i &lt; incSearch.length; i++) {
     if(incSearch[i].value==='') {
       window.parent.window.parent.selectedIncident='';
     } else {
       $('#incidentList').val(window.parent.window.parent.selectedIncident);
     //  console.log(window.parent.window.parent.selectedIncident);
     }      
   }
 },
 searchFieldVariableSet: function() {
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].id &amp;&amp; loopAllInputs[i].getAttribute('id').indexOf('searchfield')&gt; -1){incVar=loopAllInputs[i];}
   }
 },
 incidentListOptionsBuild: function() {
   <for-each select="/data/allincidentlist/incidents">
     incSelList.options[incSelList.options.length]=new Option('<value-of select="@name" />','<value-of select="@name" />',false,false);
  </for-each>
   incSelList.options.selectedIndex=0;
 },
 incidentListActionOnChange: function() {
   incSelList.options[incSelList.options.length]=new Option('','',false,false);
   incVar.value=incSelList.options[incSelList.options.selectedIndex].text;
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].getAttribute('value')=='Search'){$(loopAllInputs[i]).click();}
   }
   window.parent.window.parent.selectedIncident=(incSelList.options[incSelList.options.selectedIndex]).text;
 }
};


$(document).ready(function(){
  
    dsoPageHelper.styleSearchField();
    var countyFilter=document.getElementById('countyFilter').getElementsByTagName('select')[0];
    $(countyFilter).addClass('form-control');
    filterByIncident.incidentListOptionsBuild();
    filterByIncident.searchFieldVariableSet();
    filterByIncident.clearIncidentListSelection();
    //findingCityDupes();
    //findDuplicates();
    //inputsHaveDuplicateValues();
    
  });


//window.onload = start;

</script></html><viewfilters viewfilterid="11132" name="Anderson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Anderson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11133" name="Andrews" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Andrews'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11134" name="Angelina" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Angelina'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11135" name="Aransas" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Aransas'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11136" name="Archer" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Archer'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11137" name="Armstrong" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Armstrong'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11138" name="Atascosa" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Atascosa'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11139" name="Austin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Austin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11140" name="Bailey" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bailey'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11141" name="Bandera" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bandera'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11142" name="Bastrop" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bastrop'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11143" name="Baylor" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Baylor'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11144" name="Bee" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bee'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11145" name="Bell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11146" name="Bexar" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bexar'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11147" name="Blanco" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Blanco'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11148" name="Borden" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Borden'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11149" name="Bosque" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bosque'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11150" name="Bowie" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Bowie'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11151" name="Brazoria" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Brazoria'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11152" name="Brazos" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Brazos'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11153" name="Brewster" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Brewster'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11154" name="Briscoe" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Briscoe'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11155" name="Brooks" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Brooks'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11156" name="Brown" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Brown'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11157" name="Burleson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Burleson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11158" name="Burnet" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Burnet'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11159" name="Caldwell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Caldwell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11160" name="Calhoun" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Calhoun'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11161" name="Callahan" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Callahan'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11162" name="Cameron" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cameron'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11163" name="Camp" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Camp'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11164" name="Carson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Carson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11165" name="Cass" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cass'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11166" name="Castro" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Castro'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11167" name="Chambers" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Chambers'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11168" name="Cherokee" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cherokee'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11169" name="Childress" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Childress'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11170" name="Clay" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Clay'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11171" name="Cochran" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cochran'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11172" name="Coke" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Coke'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11173" name="Coleman" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Coleman'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11174" name="Collin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Collin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11175" name="Collingsworth" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Collingsworth'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11176" name="Colorado" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Colorado'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11177" name="Comal" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Comal'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11178" name="Comanche" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Comanche'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11179" name="Concho" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Concho'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11180" name="Cooke" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cooke'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11181" name="Coryell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Coryell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11182" name="Cottle" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Cottle'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11183" name="Crane" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Crane'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11184" name="Crockett" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Crockett'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11185" name="Crosby" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Crosby'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11186" name="Culberson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Culberson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11187" name="Dallam" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Dallam'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11188" name="Dallas" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Dallas'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11189" name="Dawson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Dawson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11190" name="Deaf Smith" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Deaf Smith'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11191" name="Delta" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Delta'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11192" name="Denton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Denton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11193" name="DeWitt" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'DeWitt'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11194" name="Dickens" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Dickens'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11195" name="Dimmit" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Dimmit'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11196" name="Donley" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Donley'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11197" name="Duval" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Duval'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11198" name="Eastland" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Eastland'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11199" name="Ector" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Ector'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11200" name="Edwards" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Edwards'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11201" name="El Paso" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'El Paso'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11202" name="Ellis" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Ellis'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11203" name="Erath" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Erath'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11204" name="Falls" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Falls'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11205" name="Fannin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Fannin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11206" name="Fayette" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Fayette'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11207" name="Fisher" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Fisher'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11208" name="Floyd" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Floyd'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11209" name="Foard" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Foard'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11210" name="Fort Bend" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Fort Bend'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11211" name="Franklin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Franklin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11212" name="Freestone" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Freestone'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11213" name="Frio" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Frio'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11214" name="Gaines" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Gaines'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11215" name="Galveston" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Galveston'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11216" name="Garza" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Garza'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11217" name="Gillespie" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Gillespie'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11218" name="Glasscock" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Glasscock'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11219" name="Goliad" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Goliad'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11220" name="Gonzales" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Gonzales'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11221" name="Gray" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Gray'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11222" name="Grayson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Grayson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11223" name="Gregg" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Gregg'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11224" name="Grimes" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Grimes'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11225" name="Guadalupe" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Guadalupe'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11226" name="Hale" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hale'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11227" name="Hall" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hall'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11228" name="Hamilton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hamilton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11229" name="Hansford" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hansford'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11230" name="Hardeman" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hardeman'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11231" name="Hardin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hardin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11232" name="Harris" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Harris'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11233" name="Harrison" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Harrison'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11234" name="Hartley" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hartley'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11235" name="Haskell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Haskell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11236" name="Hays" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hays'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11237" name="Hemphill" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hemphill'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11238" name="Henderson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Henderson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11239" name="Hidalgo" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hidalgo'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11240" name="Hill" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hill'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11241" name="Hockley" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hockley'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11242" name="Hood" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hood'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11243" name="Hopkins" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hopkins'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11244" name="Houston" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Houston'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11245" name="Howard" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Howard'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11246" name="Hudspeth" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hudspeth'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11247" name="Hunt" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hunt'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11248" name="Hutchinson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Hutchinson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11249" name="Irion" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Irion'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11250" name="Jack" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jack'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11251" name="Jackson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jackson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11252" name="Jasper" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jasper'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11253" name="Jeff Davis" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jeff Davis'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11254" name="Jefferson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jefferson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11255" name="Jim Hogg" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jim Hogg'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11256" name="Jim Wells" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jim Wells'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11257" name="Johnson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Johnson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11258" name="Jones" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Jones'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11259" name="Karnes" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Karnes'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11260" name="Kaufman" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kaufman'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11261" name="Kendall" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kendall'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11262" name="Kenedy" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kenedy'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11263" name="Kent" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kent'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11264" name="Kerr" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kerr'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11265" name="Kimble" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kimble'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11266" name="King" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'King'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11267" name="Kinney" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kinney'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11268" name="Kleberg" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Kleberg'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11269" name="Knox" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Knox'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11270" name="La Salle" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'La Salle'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11271" name="Lamar" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lamar'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11272" name="Lamb" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lamb'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11273" name="Lampasas" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lampasas'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11274" name="Lavaca" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lavaca'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11275" name="Lee" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lee'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11276" name="Leon" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Leon'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11277" name="Liberty" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Liberty'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11278" name="Limestone" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Limestone'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11279" name="Lipscomb" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lipscomb'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11280" name="Live Oak" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Live Oak'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11281" name="Llano" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Llano'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11282" name="Loving" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Loving'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11283" name="Lubbock" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lubbock'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11284" name="Lynn" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Lynn'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11285" name="Madison" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Madison'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11286" name="Marion" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Marion'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11287" name="Martin" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Martin'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11288" name="Mason" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Mason'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11289" name="Matagorda" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Matagorda'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11290" name="Maverick" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Maverick'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11291" name="McCulloch" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'McCulloch'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11292" name="McLennan" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'McLennan'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11293" name="McMullen" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'McMullen'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11294" name="Medina" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Medina'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11295" name="Menard" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Menard'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11296" name="Midland" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Midland'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11297" name="Milam" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Milam'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11298" name="Mills" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Mills'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11299" name="Mitchell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Mitchell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11300" name="Montague" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Montague'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11301" name="Montgomery" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Montgomery'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11302" name="Moore" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Moore'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11303" name="Morris" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Morris'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11304" name="Motley" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Motley'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11305" name="Nacogdoches" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Nacogdoches'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11306" name="Navarro" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Navarro'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11307" name="Newton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Newton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11308" name="Nolan" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Nolan'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11309" name="Nueces" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Nueces'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11310" name="Ochiltree" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Ochiltree'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11311" name="Oldham" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Oldham'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11312" name="Orange" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Orange'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11313" name="Palo Pinto" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Palo Pinto'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11314" name="Panola" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Panola'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11315" name="Parker" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Parker'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11316" name="Parmer" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Parmer'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11317" name="Pecos" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Pecos'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11318" name="Polk" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Polk'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11319" name="Potter" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Potter'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11320" name="Presidio" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Presidio'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11321" name="Rains" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Rains'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11322" name="Randall" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Randall'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11323" name="Reagan" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Reagan'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11324" name="Real" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Real'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11325" name="Red River" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Red River'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11326" name="Reeves" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Reeves'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11327" name="Refugio" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Refugio'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11328" name="Roberts" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Roberts'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11329" name="Robertson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Robertson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11330" name="Rockwall" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Rockwall'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11331" name="Runnels" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Runnels'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11332" name="Rusk" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Rusk'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11333" name="Sabine" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Sabine'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11334" name="San Augustine" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'San Augustine'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11335" name="San Jacinto" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'San Jacinto'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11336" name="San Patricio" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'San Patricio'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11337" name="San Saba" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'San Saba'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11338" name="Schleicher" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Schleicher'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11339" name="Scurry" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Scurry'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11340" name="Shackelford" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Shackelford'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11341" name="Shelby" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Shelby'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11342" name="Sherman" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Sherman'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11343" name="Smith" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Smith'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11344" name="Somervell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Somervell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11345" name="Starr" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Starr'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11346" name="Stephens" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Stephens'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11347" name="Sterling" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Sterling'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11348" name="Stonewall" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Stonewall'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11349" name="Sutton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Sutton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11350" name="Swisher" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Swisher'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11351" name="Tarrant" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Tarrant'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11352" name="Taylor" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Taylor'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11353" name="Terrell" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Terrell'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11354" name="Terry" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Terry'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11355" name="Throckmorton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Throckmorton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11356" name="Titus" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Titus'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11357" name="Tom Green" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Tom Green'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11358" name="Travis" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Travis'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11359" name="Trinity" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Trinity'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11360" name="Tyler" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Tyler'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11361" name="Upshur" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Upshur'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11362" name="Upton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Upton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11363" name="Uvalde" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Uvalde'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11364" name="Val Verde" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Val Verde'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11365" name="Van Zandt" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Van Zandt'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11366" name="Victoria" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Victoria'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11367" name="Walker" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Walker'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11368" name="Waller" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Waller'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11369" name="Ward" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Ward'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11370" name="Washington" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Washington'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11371" name="Webb" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Webb'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11372" name="Wharton" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wharton'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11373" name="Wheeler" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wheeler'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11374" name="Wichita" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wichita'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11375" name="Wilbarger" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wilbarger'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11376" name="Willacy" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Willacy'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11377" name="Williamson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Williamson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11378" name="Wilson" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wilson'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11379" name="Winkler" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Winkler'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11380" name="Wise" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wise'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11381" name="Wood" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Wood'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11382" name="Yoakum" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Yoakum'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11383" name="Young" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Young'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11384" name="Zapata" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Zapata'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11385" name="Zavala" b_all="0" applied="0"><viewfiltercriteria fieldname="county" operation="=" fieldvalue="N'Zavala'" expressionvalue="0"/></viewfilters><viewfilters viewfilterid="11386" name="!Default" b_all="1" applied="1"><viewfiltercriteria fieldname="hide" operation="&lt;&gt;" fieldvalue="N'yes'" expressionvalue="0"/></viewfilters></view><view tablename="Core" name="Recovery IA (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="2633d241-0f68-4eed-a7c3-c421709dc905" assignable="1"><html><head><title>Local Estimates</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/etn/etn.js" /><script type="text/javascript" src="../boards/board_lib.js" /><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" /><script type="text/javascript">
    /*add new row, builds the table, inserts rows.  rowClass is added in PA file in to below like this (table,position,data,rowClass - '<td>'+comma(data[number])+'</td>' goes to 21 here and 17 in PA File) 17 table data spots below*/



//window.onload=start;

</script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em; width:99%;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
  .rowYellow {background-color:#ffffb3;}
  .rowBlue {background-color:#ccebff;}
  .rowRed {background-color:#FFCCCC;}
  .rowRedTotal {background-color:#FF8C8C;}
  .lightRowRed {background-color:#FFb3b3;}
  .rowGray {background-color: #b7bfc8;}
.rowReg {}
.rowRedExclude{display: none;}
.rowGreen{background-color:#00e673;}
.cellYellow{background-color:#ffff00;}
.textYellow {color:#ffff99;}
.cellOrange {background-color:#ff751a;}
.rowReg {}
.data {
  text-align:center;
}
.fieldsetButtons { 
    display:inline-block;

   }
legend{
   font-size: 10pt;
}
.tableWords {
  font-size: 10pt;
}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><span id="incidentNameSpan"><incidentname /></span></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false" align="center"><strong><i>UNVETTED</i></strong> - Recovery IA Summary - <strong><i>UNVETTED</i></strong><br /><h3>(Housing / IA)<br /></h3><hr /><span style="float:left"><button type="button" class="btn btn-danger btn" data-toggle="modal" data-target="#myModal">Legend</button><space /><span id="pdfButtons" class="hide"><pdflink type="button" class="btn btn-warning" orientation="landscape">PDF</pdflink></span></span><h5>AFF = Affected<space /><space /><space /><space />|<space /><space /><space /><space />MI = Minor<space /><space /><space /><space />|<space /><space /><space /><space />MA = Major<space /><space /><space /><space />|<space /><space /><space /><space />DS = Destroyed<space /><space /><space /><space />|<space /><space /><space /><space />% IS = % Covered by Insurance</h5></td></tr></tbody></table><div class="container"><!-- Trigger the modal with a button --><!-- Modal --><div class="modal fade" id="myModal" role="dialog"><div class="modal-dialog"><!-- Modal content--><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">x</button><h4 class="modal-title">Legend / Information</h4></div><div class="modal-body"><table id="smallTable" class="table display"><tr><td><div style="text-align:center;" class="rowYellow"><span style="text-align:center;font-size:12pt">County / City Totals</span></div></td><td><div style="text-align:center;" class="rowGray"><span style="text-align:center;font-size:12pt">Grand Totals</span></div></td><td><div style="text-align:center;" class="rowRed"><span style="text-align:center;font-size:12pt">FEMA Vetting</span></div></td><td><div style="text-align:center;" class="rowGreen"><span style="text-align:center;font-size:12pt">Yes</span></div></td><td><div style="text-align:center;" class="cellYellow"><span style="font-size:12pt">No</span></div></td><td><div style="text-align:center;" class="cellOrange"><span style="text-align:center;font-size:12pt">N/A</span></div></td></tr></table><table><tr><h4>AFF = Affected<space /><space /><space /><space />|<space /><space /><space /><space />MI = Minor<space /><space /><space /><space />|<space /><space /><space /><space />MA = Major<space /><space /><space /><space />|<space /><space /><space /><space /><br />DS = Destroyed<space /><space /><space /><space />|<space /><space /><space /><space />% IS = % Covered by Insurance</h4></tr></table></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div></div></div></div></div><div class="content"><div><fieldset class="fieldsetButtons"><legend>Operations</legend><space /><space /><viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink><!--<button type="button" class="btn active">View DSO List</button>--><space /><space /><viewlink class="btn btn-info" type="button" name="!Summary(DEFAULT)">View Recovery Summary</viewlink><!--<viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink>--><space /><space /><viewlink class="btn btn-info" type="button" name="Housing (DO NOT ASSIGN)">View Housing / IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Infrastructure (DO NOT ASSIGN)">View Infrastructure / PA</viewlink><space /><space /><space /><space /><viewlink class="btn btn-success" type="button" name="Bubble Input (DO NOT ASSIGN)">+ New Bubble Input</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>Recovery</legend><space /><space /><button type="button" class="btn active">View Recovery IA</button><!--<viewlink class="btn btn-info" type="button" name="Recovery IA (DO NOT ASSIGN)">View Recovery IA</viewlink>--><space /><space /><viewlink class="btn btn-info" type="button" name="Vetted Recovery IA (DO NOT ASSIGN)">View Vetted Recovery IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery PA (DO NOT ASSIGN)">View Recovery PA</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>DSO</legend><space /><space /><viewlink class="btn btn-success" type="button" name="Input (DO NOT ASSIGN)">+ New DSO for Testing</viewlink><space /><space /><viewlink class="btn btn-warning" type="button" name="Master Input (DO NOT ASSIGN)">+ Master County Totals</viewlink></fieldset></div><hr /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><filterlistdropdown field="county" list="Counties - Texas" defaulttext="All Counties" class="form-control" /><space /><space /><space /><space /><space /><space /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><label for="webeocIncident" class=""><h4><sub>Incidents:</sub></h4></label><space /><select name="webeocIncident" id="webeocIncident" class="form-control" onchange="filterByIncident.incidentListActionOnChange();" /></div><space /><space /><space /><space /><space /><space /><span id="searchDIV"><search exact="false" range="false" rangetext="false"><field name="county" /><field name="city" /><field name="otherValue" /></search><clearsearchbutton /><span style="display: none;" id="incidentNameSearchSPAN"><search field="webeocIncident" clearsearch="true" /></span></span></div><div /><br /><table id="mainTable" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" rowSpan="1" width="" align="center"><span class="tableWords">Total JDX</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">County / City
                        
                        
                        <br />(Click to Edit)</span></td><td selected="false" colSpan="5" width="" rowSpan="1" align="center"><span class="tableWords">Single Family Homes</span></td><td selected="false" colSpan="5" width="" rowSpan="1" align="center"><span class="tableWords">Mobile Homes</span></td><td selected="false" colSpan="5" width="" rowSpan="1" align="center"><span class="tableWords">Multi-Family Homes</span></td><td selected="false" colSpan="4" width="" rowSpan="1" align="center"><span class="tableWords">Totals</span></td><td selected="false" colSpan="2" width="" rowSpan="1" align="center"><span class="tableWords">Business Loss / Economic Impact</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">DSO Audit Log</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">Related Info</span></td></tr><tr class="agencytemplate_tableheader"><td selected="false" align="center" top-align="center" style="font-weight: normal; font-size: 14pt; background-color:#BDFFFF; color:black" rowSpan="1"><span class="tableWords"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionHousing2">sum(case when (totalsAffected!='' and totalsAffected!='0.00') or (totalsMinorDamage!='' and totalsMinorDamage!='0.00') or (totalsMajorDamage!='' and totalsMajorDamage!='0.00') or (totalsDestroyed!='' and totalsDestroyed!='0.00') or (numberMinorDamage!='' and numberMinorDamage!='0') or (numberMajorDamage!='' and numberMajorDamage!='0') then 1 else 0 end)</expression></span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">AFF</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MI</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MA</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">DS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">% IS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">AFF</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MI</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MA</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">DS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">% IS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">AFF</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MI</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MA</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">DS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">% IS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">AFF</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MI</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MA</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">DS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MI</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MA</span></td></tr></tbody></table><eocrepeatallrecords rowcount="0" sort=" cast(sortCountyOrder as int) asc, cast(sortCityOrder as int) asc"><if test="1=0"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="otherValue" /><eocfield name="dsoSelected" /><eocfield name="dsoYesNo" /><eocfield name="sfhCovByInsurance" /><eocfield name="mhCovByInsurance" /><eocfield name="mfuCovByInsurance" /><eocfield name="sfhAffected" /><eocfield name="mhAffected" /><eocfield name="mfuAffected" /><eocfield name="sfhMinorDamage" /><eocfield name="mhMinorDamage" /><eocfield name="mfuMinorDamage" /><eocfield name="sfhMajorDamage" /><eocfield name="mhMajorDamage" /><eocfield name="mfuMajorDamage" /><eocfield name="sfhDestroyed" /><eocfield name="mhDestroyed" /><eocfield name="mfuDestroyed" /><eocfield name="totalsAffected" /><eocfield name="totalsMinorDamage" /><eocfield name="totalsMajorDamage" /><eocfield name="totalsDestroyed" /><eocfield name="numberMinorDamage" /><eocfield name="numberMajorDamage" /></if><span style="font-size:10pt;display:none" class="data" name="data"><value-of select="@sortCountyOrder" />|
          
                  <value-of select="@sortCityOrder" />|<if test="@totalJurisictionsexpressionHousing!='0'"><div align="center"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionHousing">(case when ((totalsAffected!='' and totalsAffected!='0.00') or (totalsMinorDamage!='' and totalsMinorDamage!='0.00') or (totalsMajorDamage!='' and totalsMajorDamage!='0.00') or (totalsDestroyed!='' and totalsDestroyed!='0.00') or (numberMinorDamage!='' and numberMinorDamage!='0') or (numberMajorDamage!='' and numberMajorDamage!='0')) then 1 else 0 end)</expression></div></if>|
            
                  
                  <value-of select="@jurisdictionType" />|
            
                  
                  <viewlink name="Input (DO NOT ASSIGN)"><span style="color:#111111"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b> /
                        <value-of select="@city" /><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if><if test="@jurisdictionType='City'"><value-of select="@county" /> /
                        <b><value-of select="@city" /></b><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if></span></viewlink>|
            
                  
                  <value-of select="@county" />|
            
                  
                  <value-of select="@city" />|
            
                  
                  <value-of select="@sfhAffected" />|
            
                  
                  <value-of select="@sfhMinorDamage" />|
            
                  
                  <value-of select="@sfhMajorDamage" />|
            
                  
                  <value-of select="@sfhDestroyed" />|


                  <if test="@sfhCovByInsurance!=''"><value-of select="@sfhCovByInsurance" />%</if>|
            
                  
                  <value-of select="@mhAffected" />|
            
                  
                  <value-of select="@mhMinorDamage" />|
            
                  
                  <value-of select="@mhMajorDamage" />|
            
                  
                  <value-of select="@mhDestroyed" />|


                  <if test="@mhCovByInsurance!=''"><value-of select="@mhCovByInsurance" />%</if>|
            
                  
                  <value-of select="@mfuAffected" />|
            
                  
                  <value-of select="@mfuMinorDamage" />|
            
                  
                  <value-of select="@mfuMajorDamage" />|
            
                  
                  <value-of select="@mfuDestroyed" />|


                  <if test="@mfuCovByInsurance!=''"><value-of select="@mfuCovByInsurance" />%</if>|
            
                  
                  <value-of select="@totalsAffected" />|
            
                  
                  <value-of select="@totalsMinorDamage" />|
            
                  
                  <value-of select="@totalsMajorDamage" />|
            
                  
                  <value-of select="@totalsDestroyed" />|
            
                  
                  <value-of select="@numberMinorDamage" />|
            
                  
                  <value-of select="@numberMajorDamage" />|
            
                  
                  <viewlink name="DSO Audit RelatedList (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">DSO History</button></viewlink>|<viewlink name="Inbetween (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">Supplemental Info</button></viewlink>|<relatedexpression name="femaTest" table="Supplemental">sum(case when femaCheckboxV1='Yes' then 1 else 0 end)</relatedexpression>|28
               </span></eocrepeatallrecords></div></div></body><script type="text/javascript">
  var newRow = function(table,position,data,rowClass){
  var row = table.insertRow(position);
  var align='left';
    if(trim(data[3])==="City"){
align='right'
  }
  
  //row.className('agencytemplate_tableentry');
    row.innerHTML = '<td>'+data[2]+'</td>'+'<td align="'+align+'">'+data[4]+'</td>'+'<td>'+comma(data[7])+'</td>'+'<td>'+comma(data[8])+'</td>'+'<td>'+comma(data[9])+'</td>'+'<td>'+comma(data[10])+'</td>'+'<td>'+comma(data[11])+'</td>'+'<td>'+comma(data[12])+'</td>'+'<td>'+comma(data[13])+'</td>'+'<td>'+comma(data[14])+'</td>'+'<td>'+comma(data[15])+'</td>'+'<td>'+comma(data[16])+'</td>'+'<td>'+comma(data[17])+'</td>'+'<td>'+comma(data[18])+'</td>'+'<td>'+comma(data[19])+'</td>'+'<td>'+comma(data[20])+'</td>'+'<td>'+comma(data[21])+'</td>'+'<td>'+comma(data[22])+'</td>'+'<td>'+comma(data[23])+'</td>'+'<td>'+comma(data[24])+'</td>'+'<td>'+comma(data[25])+'</td>'+'<td>'+comma(data[26])+'</td>'+'<td>'+comma(data[27])+'</td>'+'<td>'+comma(data[28])+'</td>'+'<td>'+comma(data[29])+'</td>'/*+'<td>'+comma(data[30])+'</td>'+'<td>'+comma(data[31])+'</td>'*/;//comma(data[30]) is where the femaCheck totals are stored, uncomment if wish to see them
    //adds color to new total rows - PA file says +rowClass below instead of +rowColorClass at end of this block
    console.log(rowClass);
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowClass;
    //agencytemplate_tableroweven
}

//array that loops through everything - this code does not run yet on this view
var masterData =[];
/*function setBubbleData(a){
 
 populateMasterData();

for(var k=0; k&lt;a.length;k++
  var match = false;
  for(var i=0; i&lt;masterData.length;i++){
    if(a[k].type==masterData[i][2] &amp;&amp;a[k].county==masterData[i][4]&amp;&amp;a[k].city==masterData[i][5]){ //if there is a match from bubble input and DSO
     masterData[i][16]=a[k].letter;
    masterData[i][17]='DSO+';
    match=true;
    }
  }
 if(match===false){ //if not associated with a DSO
masterData.push([a[k].sortCounty,a[k].sortCity,a[k].type,a[k].label,a[k].county,a[k].city,"","","","","","","","",a[k].localDec,a[k].letter,"No DSO"]);}
}


masterData = masterData.sort(function(a,b){
  if(parseInt(a[0]) &gt; parseInt(b[0])){
    return 1;
  }else if(parseInt(a[0]) &lt; parseInt(b[0])){
    return -1;
  } else if(parseInt(a[1]) &gt; parseInt(b[1])){
    return 1;
  } else if(parseInt(a[0]) &gt; parseInt(b[0])){
    return -1;
  }

});
  popluateTable();
  alert("Hello");
}*/

function start(){
//next two lines are commented out in PA (working file)
  //populateMasterData();
  //popluateTable();

}

//populates the data, maybe holding area before the table - SAME as PA file
function populateMasterData(){
var a = document.getElementsByName('data');
  for(var i =0; i&lt;a.length;i++){
    var b =[];
    var c = a[i].innerHTML.split('|');
    for(var k=0; k&lt;c.length;k++){
      b.push(c[k]);
    }
    masterData.push(b);
  }
}
//uses regEx to place commas where they need to go
  function comma(x) {
if(isNaN(x)===true || x=="" || x==0){
  x==undefined?x='':x=x;
  return x;
}
x=parseFloat(x).toFixed(2);
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
//return x;
}
function trim(a) {
  return a.replace(/^\s+|\s+$|\&amp;nbsp;+$/g, '');
}
/*populates the actual table [4] is county spot. Looks at td cells and determines if county matches the next county, add togeether andcreate  anew line. If counties does not match, do not add or create yellow row - add extra quotes and comma to add column at beginning*/
//this function will break if only one county is recorded, with two or more it will work. Jaime says put a clause in it to make sure it runs in that case
function popluateTable(){
var t = document.getElementById('mainTable');

var firstGrandTotal = getTotalsForAll();
      newRow(t,t.rows.length,["","","","","Grand Totals","",firstGrandTotal[0],firstGrandTotal[1],firstGrandTotal[2],firstGrandTotal[3],firstGrandTotal[4],"%",firstGrandTotal[6],firstGrandTotal[7],firstGrandTotal[8],firstGrandTotal[9],"%",firstGrandTotal[11],firstGrandTotal[12],firstGrandTotal[13],firstGrandTotal[14],"%",firstGrandTotal[16],firstGrandTotal[17],firstGrandTotal[18],firstGrandTotal[19],firstGrandTotal[20],firstGrandTotal[21]],"rowGray");

var totalRowVar=function(i){
   var a = getTotalsFor(masterData[i][5]);
   var b = a[23]===true?"rowRedTotal":"rowYellow";

      //alert("yellow rows");
      newRow(t,t.rows.length,["","","","","Totals for "+masterData[i][5],"",a[0],a[1],a[2],a[3],a[4],"%",a[6],a[7],a[8],a[9],"%",a[11],a[12],a[13],a[14],"%",a[16],a[17],a[18],a[19],/*MI*/a[20],/*MA*/a[21],"","",a[22],"Here"],b);//[x] is hidden and contains the femaCheck totals for the county
};
  for(var i=0; i &lt; masterData.length;i++){//alert("won!");
      if(masterData[i][30]&gt;='1'){
  
  var bb = "rowRedExclude";//hides row based on femaCheckboxV1 linked to DSO
} else {
  var bb = "rowReg"; 
}
    newRow(t,(t.rows.length),["","",masterData[i][2],masterData[i][3],masterData[i][4],masterData[i][5],masterData[i][6],masterData[i][7],masterData[i][8],masterData[i][9],masterData[i][10],masterData[i][11],masterData[i][12],masterData[i][13],masterData[i][14],masterData[i][15],masterData[i][16],masterData[i][17],masterData[i][18],masterData[i][19],masterData[i][20],masterData[i][21],masterData[i][22],masterData[i][23],masterData[i][24],masterData[i][25],masterData[i][26],masterData[i][27],masterData[i][28],masterData[i][29],masterData[i][30]],bb);//alert("new row");
    if(i==masterData.length-1){//alert();
 totalRowVar(i)
    
    }
    else if(i==0 &amp;&amp; masterData[i][5]!=masterData[i+1][5]){
       totalRowVar(i);
    }

    else if(((i!=0)&amp;&amp; ((masterData[i][5]===masterData[i-1][5]) &amp;&amp;(masterData[i+1][5]!=masterData[i][5])||(masterData[i][5]!=masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5]) )))
      { //Add Totals Row, This should be the yellow lines
      totalRowVar(i);
    }
  }
  
  /*Bottom Total row Grand total label and table data cells that have total of each column. PA file stops at [7], 22 total table data spots below - NEED to add 1 blank set of quotes to begining to get extra columnn and add another couple a[]'s to make wotk at end'*/
  var a = getTotalsForAll();
      newRow(t,t.rows.length,["","","","","Grand Totals","",a[0],a[1],a[2],a[3],a[4],"%",a[6],a[7],a[8],a[9],"%",a[11],a[12],a[13],a[14],"%",a[16],a[17],a[18],a[19],a[20],a[21]],"rowGray");//alert("TANK");
}
//16 0's Single Family Aff totals through Totals Destroyed plus 2

function getTotalsFor(c){
  var a =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,true]; //24 true
  var isNull = function(b){
    if(b==''||b==' '||b==0){return 0;}
    else return b;
  };
  //parseFloat cuts off the first character if a number, otherwise NaN is returned - 16 spots below - creates into decimal integer
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][5]==c){
    if(masterData[i][30]&lt;'1'){ //this removes redRows values with femaCheckboxV1's from the total count
    a[0]+=parseFloat(isNull(masterData[i][6]));
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10])); //5
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));
    a[9]+=parseFloat(isNull(masterData[i][15])); //10
    a[10]+=parseFloat(isNull(masterData[i][16]));
    a[11]+=parseFloat(isNull(masterData[i][17]));
    a[12]+=parseFloat(isNull(masterData[i][18]));
    a[13]+=parseFloat(isNull(masterData[i][19]));
    a[14]+=parseFloat(isNull(masterData[i][20])); //15
    a[15]+=parseFloat(isNull(masterData[i][21]));
    a[16]+=parseFloat(isNull(masterData[i][22]));
    a[17]+=parseFloat(isNull(masterData[i][23]));
    a[18]+=parseFloat(isNull(masterData[i][24]));
    a[19]+=parseFloat(isNull(masterData[i][25])); //20
    a[20]+=parseFloat(isNull(masterData[i][26]));
    a[21]+=parseFloat(isNull(masterData[i][27]));
    a[22]+=parseFloat(isNull(masterData[i][30]));
  }
    //a[23]+=parseFloat(isNull(masterData[i][30]));
    //a[24]+=parseFloat(isNull(masterData[i][30]));
    if(masterData[i][30]!="1"){                   //24
      a[23]=false;
    }    
  }
}
console.log(a);
return a;

}
//Same as PA file except for 16 0's Zeros define as interger - only 8 in second part after for - just like PA file
function getTotalsForAll(){
  var a =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' '||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][30]&lt;'1'){ //this removes redRows values with femaCheckboxV1's from the grand total count
    a[0]+=parseFloat(isNull(masterData[i][6]));
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));
    a[9]+=parseFloat(isNull(masterData[i][15]));
    a[10]+=parseFloat(isNull(masterData[i][16]));
    a[11]+=parseFloat(isNull(masterData[i][17]));
    a[12]+=parseFloat(isNull(masterData[i][18]));
    a[13]+=parseFloat(isNull(masterData[i][19]));
    a[14]+=parseFloat(isNull(masterData[i][20]));
    a[15]+=parseFloat(isNull(masterData[i][21]));
    a[16]+=parseFloat(isNull(masterData[i][22]));
    a[17]+=parseFloat(isNull(masterData[i][23]));
    a[18]+=parseFloat(isNull(masterData[i][24]));
    a[19]+=parseFloat(isNull(masterData[i][25]));
    a[20]+=parseFloat(isNull(masterData[i][26]));
    a[21]+=parseFloat(isNull(masterData[i][27]));
  }
}
return a;

}
  var dsoPageHelper={

    

    //startOf: identifying what filter is on
    filterSet: function(arg1,arg2) {
      if($(arg1).html()==='on'){$(arg2).css('font-weight', 'Bold').css('text-decoration', 'underline');}
    },
    
    /*showFilterButtonSelected: function() {
      
    },*/
    //startOf: styling search field
      styleSearchField: function() {
         var searchFld=document.getElementById('searchDIV').getElementsByTagName('input');
         for(var j=0; j &lt; searchFld.length; j++) {
            if($(searchFld[j]).val()=='Search' || $(searchFld[j]).val()=='Clear Search'){$(searchFld[j]).addClass('btn btn-default');}
          if(searchFld[j].id.search('searchfield')&gt;=0){$(searchFld[j]).addClass('form-control').prop('placeholder', 'Search');}
        }     
      }
  };
   
/*function totalJurisdictionsSum() {
  
  
    alert("HEEEELO");
  
}*/
var incSelList=document.getElementById('webeocIncident');
var loopAllInputs=document.getElementsByTagName('input');
var incVar;

//startOf: filter by incident process method
var filterByIncident={
 clearIncidentListSelection: function() {
   var incSearch=document.getElementById('incidentNameSearchSPAN').getElementsByTagName('input');
   for(var i=0; i &lt; incSearch.length; i++) {
     if(incSearch[i].value==='') {
       window.parent.window.parent.selectedIncident='';
     } else {
       $('#webeocIncident').val(window.parent.window.parent.selectedIncident);
     //  console.log(window.parent.window.parent.selectedIncident);
     }      
   }
 },
 searchFieldVariableSet: function() {
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].id &amp;&amp; loopAllInputs[i].getAttribute('id').indexOf('searchfield')&gt; -1){incVar=loopAllInputs[i];}
   }
 },
 incidentListOptionsBuild: function() {
   <for-each select="/data/allincidentlist/incidents">
     incSelList.options[incSelList.options.length]=new Option('<value-of select="@name" />','<value-of select="@name" />',false,false);
   </for-each>
   incSelList.options.selectedIndex=0;
 },
 incidentListActionOnChange: function() {
   incSelList.options[incSelList.options.length]=new Option('','',false,false);
   incVar.value=incSelList.options[incSelList.options.selectedIndex].text;
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].getAttribute('value')=='Search'){$(loopAllInputs[i]).click();}
   }
   window.parent.window.parent.selectedIncident=(incSelList.options[incSelList.options.selectedIndex]).text;
 }
};

$(document).ready(function(){
    
    dsoPageHelper.styleSearchField();
    //var countyFilter=document.getElementById('countyFilter').getElementsByTagName('select')[0];
    //$(countyFilter).addClass('form-control');
    filterByIncident.incidentListOptionsBuild();
    filterByIncident.searchFieldVariableSet();
    filterByIncident.clearIncidentListSelection();
    populateMasterData();
    popluateTable();
    //filterByIncident.incidentListActionOnChange();
   /* var ddcFilter=document.getElementById('ddcFilter').getElementsByTagName('select')[0];
    $(ddcFilter).addClass('form-control');*/
  });
  </script></html></view><view tablename="Core" name="Recovery PA (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="c6b66e92-e31d-4d48-863e-97a58d87a9b7" assignable="1"><html><head><title>Local Estimate of Damage to Public Property By Category</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/etn/etn.js" /><script type="text/javascript" src="../boards/board_lib.js" /><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" /><script type="text/javascript">


//window.onload=start;

</script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em; width:99%;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
  .rowYellow {background-color:#ffffb3;}
  .rowBlue {background-color:#ccebff;}
  .rowRed {background-color:#FFCCCC;}
  .lightRowRed {background-color:#FFb3b3;}
  .rowGray {background-color: #b7bfc8;}
.rowReg {}
.rowRedExclude{display: none;}
.rowGreen{background-color:#00e673;}
.cellYellow{background-color:#ffff66;}
.textYellow {color:#ffff99;}
.cellOrange {background-color:#ff751a;}
.hideValues {display: none;}
.hideValuesRed {display: none;}
.hideValuesNoInsurance {display: none;}
.fieldsetButtons { 
    display:inline-block;

   }
legend{
   font-size: 10pt;
}
.tableWords {
  font-size: 10pt;
}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><span id="incidentNameSpan"><incidentname /></span></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false"><strong><i>UNVETTED</i></strong> - Local Estimate of Damage to Public Property By Category - <strong><i>UNVETTED</i></strong><br /><h3>(Infrastructure / PA)</h3><hr /><span style="float:left"><button type="button" class="btn btn-danger btn" data-toggle="modal" data-target="#myModal">Legend</button><space /><span id="pdfButtons" class="hide"><pdflink type="button" class="btn btn-warning" orientation="landscape">PDF</pdflink><space /></span><span id="dataManRecPA"><dataexport type="button" filename="Recovery PA" class="btn btn-warning"><field name="incidentName" header="Incident Name"></field><field name="totalJurisictionsexpressionInfra2" header="Grand Total Jurisdictions"></field><field name="totalJurisictionsexpressionInfra1" header="Total Jurisdictions"></field><field name="jurisdictionType" header="Jurisdiction Type"></field><field name="county" header="County"></field><field name="city" header="City"></field><field name="catASum" header="Debris Removal Ignore Anticipated Insurance if not entered for Totals"></field><field name="catASumWithInsurance" header="Debris Removal Must Enter Anticipated Insurance for Totals or will be Zero"></field></dataexport></span></span></td></tr></tbody></table><div class="container"><!-- Trigger the modal with a button --><!-- Modal --><div class="modal fade" id="myModal" role="dialog"><div class="modal-dialog"><!-- Modal content--><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">x</button><h4 class="modal-title">Legend / Information</h4></div><div class="modal-body"><table id="smallTable" class="table display"><tr><td><div style="text-align:center;" class="rowYellow"><span style="text-align:center;font-size:12pt">County / City Totals</span></div></td><td><div style="text-align:center;" class="rowGray"><span style="text-align:center;font-size:12pt">Grand Totals</span></div></td><td><div style="text-align:center;" class="rowRed"><span style="text-align:center;font-size:12pt">FEMA Vetting</span></div></td><td><div style="text-align:center;" class="rowGreen"><span style="text-align:center;font-size:12pt">Yes</span></div></td><td><div style="text-align:center;" class="cellYellow"><span style="font-size:12pt">No</span></div></td><td><div style="text-align:center;" class="cellOrange"><span style="text-align:center;font-size:12pt">N/A</span></div></td></tr></table><table><tr><h5><br /><strong>Must Use Anticipated Insurance for Totals: Yes</strong><br />The values with N/A are not factored into the totals. Once all the N/A's are gone, the totals can be considered accurate.</h5><hr /><h5><strong>Must Use Anticipated Insurance for Totals: No</strong><br />The values are factored into the totals, regardless if Anticipated Insurance is entered or not. If Anticipated Insurance is entered, it is subtracted.<br /><br /><span style="color:#c61aff;">NOTE: Use it, if there, if not, don't.(PA Question: Is this the way it should be displayed or take out AI entirely for this choice?)</span></h5><hr /><h5>The RED row indicates that the Infrastructure PDAs have been completed and that the numbers have been vetted between PA and FEMA.</h5></tr></table></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div></div></div></div></div><div class="content"><div><fieldset class="fieldsetButtons"><legend>Operations</legend><space /><space /><viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink><!--<button type="button" class="btn active">View DSO List</button>--><space /><space /><viewlink class="btn btn-info" type="button" name="!Summary(DEFAULT)">View Recovery Summary</viewlink><!--<viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink>--><space /><space /><viewlink class="btn btn-info" type="button" name="Housing (DO NOT ASSIGN)">View Housing / IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Infrastructure (DO NOT ASSIGN)">View Infrastructure / PA</viewlink><space /><space /><space /><space /><viewlink class="btn btn-success" type="button" name="Bubble Input (DO NOT ASSIGN)">+ New Bubble Input</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>Recovery</legend><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery IA (DO NOT ASSIGN)">View Recovery IA</viewlink><space /><space /><button type="button" class="btn active">View Recovery PA</button><space /><space /><viewlink class="btn btn-info" type="button" name="Vetted Recovery PA (DO NOT ASSIGN)">View Vetted Recovery PA</viewlink><!--<viewlink class="btn btn-info" type="button" name="Recovery PA (DO NOT ASSIGN)">View Recovery PA</viewlink>--></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>DSO</legend><space /><space /><viewlink class="btn btn-success" type="button" name="Input (DO NOT ASSIGN)">+ New DSO for Testing</viewlink><space /><space /><viewlink class="btn btn-warning" type="button" name="Master Input (DO NOT ASSIGN)">+ Master County Totals</viewlink></fieldset></div><hr /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><filterlistdropdown field="county" list="Counties - Texas" defaulttext="All Counties" class="form-control" /><space /><space /><space /><space /><space /><space /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><label for="webeocIncident" class=""><h4><sub>Incidents:</sub></h4></label><space /><select name="webeocIncident" id="webeocIncident" class="form-control" onchange="filterByIncident.incidentListActionOnChange();" /></div><space /><space /><space /><space /><space /><space /><span id="searchDIV"><search exact="false" range="false" rangetext="false"><field name="county" /><field name="city" /><field name="otherValue" /></search><clearsearchbutton /><span style="display: none;" id="incidentNameSearchSPAN"><search field="webeocIncident" clearsearch="true" /></span></span></div><div /><br /><table id="mainTable" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">Total Jurisdictions</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span class="tableWords">County / City
                        <br />(Click to Edit DSO)</span></td><td selected="false" colSpan="8" width="" rowSpan="1" align="center" top-align="center" style="background-color:#003366;"><div class="form-inline" id="AnticipatedInsuranceRadios" name="AnticipatedInsuranceRadios" style="background-color:#003366;"><label id="AnticipatedInsuranceLabel" class="control-label" for="AnticipatedInsurance"><h4 style="font-weight: bold;">Must Use Anticipated Insurance for Totals:</h4></label><space /><space /><space /><space /><span style="vertical-align:-12%;"><strong>Yes</strong><space /><input id="AnticipatedInsurance1" type="radio" name="AnticipatedInsurance" value="Yes" /><space /><space /><space /><strong>No</strong><space /><input id="AnticipatedInsurance2" type="radio" name="AnticipatedInsurance" value="No" /></span><!--<input id="AnticipatedInsurance2" type="radio" name="AnticipatedInsurance" value="No" onclick="reloadPage()"/>--></div></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span style="color:#E8E8E8"><span class="tableWords">$$'s towards State Threshold in gray</span><br />--------------<br /><span style="color:white"><span class="tableWords">$$'s towards County Threshold in yellow or red</span></span></span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span class="tableWords">Met?</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span class="tableWords">Disaster Dec</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span class="tableWords">DSO Audit Log</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span class="tableWords">Related Info</span></td></tr><tr class="agencytemplate_tableheader"><td selected="false" align="center" top-align="center" style="font-weight: normal; font-size: 14pt; background-color:#BDFFFF; color:black" rowSpan="1"><span class="tableWords"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionInfra2">sum(case when repairCostTotals!='' and repairCostTotals!='0' and repairCostTotals!='0.00' and repairCostTotals!='0.0000' then 1 else 0 end)</expression></span></td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">A</strong><br />Debris Removal</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">B</strong><br />Police / EMS</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">C</strong><br />Roads &amp; Bridges</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">D</strong><br />Water Facilites</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">E</strong><br />Buildings</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">F</strong><br />Public Utility Systems</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">G</strong><br />Other</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">A - G</strong><br />Totals</td></tr></tbody></table><eocrepeatallrecords rowcount="0" sort="cast(sortCountyOrder as int) asc, cast(sortCityOrder as int) asc"><if test="1=0"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="otherValue" /><eocfield name="dsoSelected" /><eocfield name="repairCostDebrisClearance" /><eocfield name="insuranceDebrisClearance" /><eocfield name="repairCostEmergency" /><eocfield name="insuranceEmergency" /><eocfield name="repairCostRoadPaved" /><eocfield name="insuranceRoadPaved" /><eocfield name="repairCostWaterControlFacilities" /><eocfield name="insuranceWaterControlFacilities" /><eocfield name="repairCostBuildingsEquipment" /><eocfield name="insuranceBuildingsEquipment" /><eocfield name="repairCostUtilitySystems" /><eocfield name="insuranceUtilitySystems" /><eocfield name="repairCostOther" /><eocfield name="insuranceOther" /><eocfield name="repairCostTotals" /><eocfield name="cat01" /><eocfield name="cat02" /><eocfield name="cat03" /><eocfield name="cat04" /><eocfield name="cat05" /><eocfield name="cat06" /><eocfield name="cat07" /><eocfield name="cat08" /><eocfield name="cat09" /><eocfield name="cat10" /><eocfield name="cat11" /><eocfield name="cat12" /><eocfield name="cat13" /><eocfield name="cat14" /><eocfield name="cat15" /><eocfield name="repairCost01" /><eocfield name="repairCost02" /><eocfield name="repairCost03" /><eocfield name="repairCost04" /><eocfield name="repairCost05" /><eocfield name="repairCost06" /><eocfield name="repairCost07" /><eocfield name="repairCost08" /><eocfield name="repairCost09" /><eocfield name="repairCost10" /><eocfield name="repairCost11" /><eocfield name="repairCost12" /><eocfield name="repairCost13" /><eocfield name="repairCost14" /><eocfield name="repairCost15" /><eocfield name="insurance01" /><eocfield name="insurance02" /><eocfield name="insurance03" /><eocfield name="insurance04" /><eocfield name="insurance05" /><eocfield name="insurance06" /><eocfield name="insurance07" /><eocfield name="insurance08" /><eocfield name="insurance09" /><eocfield name="insurance10" /><eocfield name="insurance11" /><eocfield name="insurance12" /><eocfield name="insurance13" /><eocfield name="insurance14" /><eocfield name="insurance15" /><eocfield name="declarationIssued" /><eocfield name="masterDSOThisIs" /><eocfield name="sfhAffectedMasterDSO" /><eocfield name="sfhMinorDamageMasterDSO" /><eocfield name="sfhMajorDamageMasterDSO" /><eocfield name="sfhDestroyedMasterDSO" /><eocfield name="sfhCovByInsuranceMasterDSO" /><eocfield name="mhAffectedMasterDSO" /><eocfield name="mhMinorDamageMasterDSO" /><eocfield name="mhMajorDamageMasterDSO" /><eocfield name="mhDestroyedMasterDSO" /><eocfield name="mhCovByInsuranceMasterDSO" /><eocfield name="mfuAffectedMasterDSO" /><eocfield name="mfuMinorDamageMasterDSO" /><eocfield name="mfuMajorDamageMasterDSO" /><eocfield name="mfuDestroyedMasterDSO" /><eocfield name="mfuCovByInsuranceMasterDSO" /><eocfield name="totalsAffectedMasterDSO" /><eocfield name="totalsMinorDamageMasterDSO" /><eocfield name="totalsMajorDamageMasterDSO" /><eocfield name="totalsDestroyedMasterDSO" /><eocfield name="totalsCovByInsuranceMasterDSO" /></if><relatedlist table="Supplemental"><if test="1=0"><eocfield table="Supplemental" type="rl" name="dateDecRecState" /><eocfield table="Supplemental" type="rl" name="dateDecRecFederal" /><eocfield table="Supplemental" type="rl" name="declarationIssuedFederal" /><eocfield table="Supplemental" type="rl" name="declarationIssuedState" /></if></relatedlist><span style="display:none;font-weight: normal; font-size: 10pt;" class="data" name="data" id="data"><span id="catSumsSpan" style="display:none;"><expression useboardlevelfilters="true" name="catASum">
      ((case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'A' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'A' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'A' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'A' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'A' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'A' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'A' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'A' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'A' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'A' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'A' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'A' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'A' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'A' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'A' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'A' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'A' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'A' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'A' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'A' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'A' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'A' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'A' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'A' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'A' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'A' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'A' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'A' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'A' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostDebrisClearance as money))-(cast(insuranceDebrisClearance as money)))
      </expression>/end A start B/<expression useboardlevelfilters="true" name="catBSum">
      ((case when cat01 = 'B' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'B' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'B' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'B' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'B' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'B' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'B' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'B' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'B' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'B' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'B' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'B' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'B' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'B' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'B' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'B' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'B' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'B' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'B' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'B' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'B' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'B' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'B' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'B' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'B' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'B' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'B' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'B' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'B' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'B' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostEmergency as money))-(cast(insuranceEmergency as money)))
      </expression>/end B start C/<expression useboardlevelfilters="true" name="catCSum">
      ((case when cat01 = 'C' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'C' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'C' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'C' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'C' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'C' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'C' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'C' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'C' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'C' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'C' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'C' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'C' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'C' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'C' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'C' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'C' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'C' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'C' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'C' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'C' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'C' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'C' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'C' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'C' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'C' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'C' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'C' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'C' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'C' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostRoadPaved as money))-(cast(insuranceRoadPaved as money)))
      </expression>/end C start D/<expression useboardlevelfilters="true" name="catDSum">
      ((case when cat01 = 'D' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'D' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'D' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'D' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'D' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'D' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'D' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'D' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'D' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'D' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'D' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'D' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'D' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'D' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'D' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'D' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'D' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'D' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'D' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'D' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'D' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'D' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'D' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'D' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'D' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'D' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'D' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'D' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'D' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'D' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostWaterControlFacilities as money))-(cast(insuranceWaterControlFacilities as money)))
      </expression>/end D start E/<expression useboardlevelfilters="true" name="catESum">
      ((case when cat01 = 'E' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'E' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'E' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'E' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'E' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'E' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'E' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'E' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'E' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'E' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'E' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'E' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'E' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'E' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'E' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'E' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'E' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'E' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'E' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'E' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'E' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'E' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'E' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'E' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'E' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'E' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'E' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'E' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'E' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'E' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostBuildingsEquipment as money))-(cast(insuranceBuildingsEquipment as money)))
      </expression>/end E start F/<expression useboardlevelfilters="true" name="catFSum">
      ((case when cat01 = 'F' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'F' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'F' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'F' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'F' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'F' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'F' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'F' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'F' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'F' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'F' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'F' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'F' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'F' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'F' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'F' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'F' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'F' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'F' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'F' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'F' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'F' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'F' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'F' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'F' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'F' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'F' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'F' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'F' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'F' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostUtilitySystems as money))-(cast(insuranceUtilitySystems as money)))
      </expression>/end F start G/<expression useboardlevelfilters="true" name="catGSum">
      ((case when cat01 = 'G' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'G' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'G' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'G' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'G' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'G' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'G' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'G' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'G' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'G' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'G' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'G' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'G' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'G' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'G' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'G' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'G' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'G' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'G' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'G' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'G' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'G' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'G' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'G' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'G' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'G' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'G' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'G' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'G' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'G' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostOther as money))-(cast(insuranceOther as money)))
      </expression>/end G start All/<expression useboardlevelfilters="true" name="catSumTotal">
     ((case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'A' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'A' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'A' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'A' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'A' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'A' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'A' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'A' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'A' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'A' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'A' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'A' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'A' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'A' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'A' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'A' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'A' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'A' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'A' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'A' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'A' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'A' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'A' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'A' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'A' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'A' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'A' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'A' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'A' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostDebrisClearance as money))-(cast(insuranceDebrisClearance as money)))+
      ((case when cat01 = 'B' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'B' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'B' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'B' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'B' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'B' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'B' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'B' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'B' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'B' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'B' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'B' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'B' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'B' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'B' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'B' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'B' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'B' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'B' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'B' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'B' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'B' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'B' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'B' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'B' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'B' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'B' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'B' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'B' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'B' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostEmergency as money))-(cast(insuranceEmergency as money)))+
      ((case when cat01 = 'C' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'C' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'C' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'C' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'C' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'C' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'C' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'C' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'C' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'C' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'C' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'C' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'C' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'C' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'C' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'C' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'C' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'C' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'C' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'C' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'C' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'C' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'C' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'C' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'C' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'C' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'C' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'C' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'C' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'C' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostRoadPaved as money))-(cast(insuranceRoadPaved as money)))+
      ((case when cat01 = 'D' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'D' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'D' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'D' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'D' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'D' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'D' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'D' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'D' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'D' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'D' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'D' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'D' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'D' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'D' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'D' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'D' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'D' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'D' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'D' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'D' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'D' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'D' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'D' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'D' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'D' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'D' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'D' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'D' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'D' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostWaterControlFacilities as money))-(cast(insuranceWaterControlFacilities as money)))+
      ((case when cat01 = 'E' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'E' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'E' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'E' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'E' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'E' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'E' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'E' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'E' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'E' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'E' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'E' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'E' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'E' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'E' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'E' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'E' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'E' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'E' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'E' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'E' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'E' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'E' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'E' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'E' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'E' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'E' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'E' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'E' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'E' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostBuildingsEquipment as money))-(cast(insuranceBuildingsEquipment as money)))+
      ((case when cat01 = 'F' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'F' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'F' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'F' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'F' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'F' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'F' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'F' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'F' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'F' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'F' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'F' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'F' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'F' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'F' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'F' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'F' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'F' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'F' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'F' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'F' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'F' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'F' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'F' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'F' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'F' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'F' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'F' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'F' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'F' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostUtilitySystems as money))-(cast(insuranceUtilitySystems as money)))+
      ((case when cat01 = 'G' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'G' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'G' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'G' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'G' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'G' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'G' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'G' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'G' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'G' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'G' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'G' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'G' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'G' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'G' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'G' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'G' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'G' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'G' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'G' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'G' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'G' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'G' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'G' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'G' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'G' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'G' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'G' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'G' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'G' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostOther as money))-(cast(insuranceOther as money)))
      </expression></span><span id="catSumsSpanWithInsurance" style="display:none;"><expression useboardlevelfilters="true" name="catASumWithInsurance">
      ((case when cat01 = 'A' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'A' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'A' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'A' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'A' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'A' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'A' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'A' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'A' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'A' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'A' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'A' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'A' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'A' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'A' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'A' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'A' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'A' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'A' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'A' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'A' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'A' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'A' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'A' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'A' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'A' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'A' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'A' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'A' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'A' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceDebrisClearance != '' then isNull(cast(repairCostDebrisClearance as money),0) else 0 end))-(cast(insuranceDebrisClearance as money)))
      </expression>/end A start B/<expression useboardlevelfilters="true" name="catBSumWithInsurance">
      ((case when cat01 = 'B' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'B' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'B' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'B' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'B' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'B' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'B' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'B' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'B' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'B' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'B' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'B' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'B' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'B' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'B' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'B' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'B' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'B' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'B' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'B' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'B' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'B' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'B' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'B' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'B' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'B' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'B' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'B' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'B' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'B' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceEmergency != '' then isNull(cast(repairCostEmergency as money),0) else 0 end))-(cast(insuranceEmergency as money)))
      </expression>/end B start C/<expression useboardlevelfilters="true" name="catCSumWithInsurance">
      ((case when cat01 = 'C' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'C' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'C' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'C' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'C' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'C' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'C' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'C' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'C' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'C' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'C' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'C' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'C' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'C' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'C' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'C' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'C' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'C' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'C' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'C' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'C' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'C' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'C' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'C' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'C' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'C' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'C' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'C' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'C' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'C' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceRoadPaved != '' then isNull(cast(repairCostRoadPaved as money),0) else 0 end))-(cast(insuranceRoadPaved as money)))
      </expression>/end C start D/<expression useboardlevelfilters="true" name="catDSumWithInsurance">
      ((case when cat01 = 'D' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'D' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'D' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'D' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'D' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'D' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'D' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'D' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'D' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'D' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'D' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'D' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'D' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'D' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'D' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'D' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'D' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'D' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'D' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'D' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'D' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'D' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'D' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'D' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'D' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'D' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'D' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'D' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'D' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'D' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceWaterControlFacilities != '' then isNull(cast(repairCostWaterControlFacilities as money),0) else 0 end))-(cast(insuranceWaterControlFacilities as money)))
      </expression>/end D start E/<expression useboardlevelfilters="true" name="catESumWithInsurance">
      ((case when cat01 = 'E' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'E' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'E' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'E' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'E' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'E' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'E' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'E' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'E' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'E' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'E' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'E' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'E' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'E' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'E' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'E' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'E' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'E' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'E' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'E' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'E' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'E' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'E' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'E' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'E' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'E' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'E' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'E' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'E' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'E' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceBuildingsEquipment != '' then isNull(cast(repairCostBuildingsEquipment as money),0) else 0 end))-(cast(insuranceBuildingsEquipment as money)))
      </expression>/end E start F/<expression useboardlevelfilters="true" name="catFSumWithInsurance">
      ((case when cat01 = 'F' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'F' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'F' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'F' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'F' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'F' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'F' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'F' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'F' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'F' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'F' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'F' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'F' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'F' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'F' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'F' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'F' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'F' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'F' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'F' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'F' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'F' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'F' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'F' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'F' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'F' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'F' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'F' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'F' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'F' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceUtilitySystems != '' then isNull(cast(repairCostUtilitySystems as money),0) else 0 end))-(cast(insuranceUtilitySystems as money)))
      </expression>/end F start G/<expression useboardlevelfilters="true" name="catGSumWithInsurance">
      ((case when cat01 = 'G' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'G' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'G' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'G' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'G' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'G' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'G' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'G' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'G' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'G' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'G' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'G' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'G' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'G' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'G' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'G' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'G' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'G' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'G' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'G' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'G' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'G' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'G' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'G' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'G' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'G' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'G' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'G' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'G' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'G' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceOther != '' then isNull(cast(repairCostOther as money),0) else 0 end))-(cast(insuranceOther as money)))
      </expression>/end G start All/<expression useboardlevelfilters="true" name="catSumTotalWithInsurance">
     ((case when cat01 = 'A' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'A' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'A' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'A' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'A' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'A' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'A' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'A' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'A' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'A' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'A' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'A' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'A' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'A' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'A' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'A' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'A' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'A' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'A' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'A' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'A' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'A' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'A' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'A' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'A' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'A' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'A' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'A' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'A' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'A' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceDebrisClearance != '' then isNull(cast(repairCostDebrisClearance as money),0) else 0 end))-(cast(insuranceDebrisClearance as money)))+
      ((case when cat01 = 'B' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'B' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'B' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'B' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'B' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'B' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'B' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'B' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'B' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'B' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'B' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'B' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'B' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'B' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'B' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'B' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'B' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'B' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'B' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'B' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'B' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'B' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'B' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'B' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'B' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'B' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'B' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'B' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'B' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'B' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceEmergency != '' then isNull(cast(repairCostEmergency as money),0) else 0 end))-(cast(insuranceEmergency as money)))+
      ((case when cat01 = 'C' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'C' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'C' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'C' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'C' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'C' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'C' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'C' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'C' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'C' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'C' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'C' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'C' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'C' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'C' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'C' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'C' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'C' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'C' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'C' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'C' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'C' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'C' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'C' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'C' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'C' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'C' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'C' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'C' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'C' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceRoadPaved != '' then isNull(cast(repairCostRoadPaved as money),0) else 0 end))-(cast(insuranceRoadPaved as money)))+
      ((case when cat01 = 'D' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'D' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'D' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'D' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'D' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'D' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'D' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'D' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'D' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'D' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'D' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'D' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'D' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'D' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'D' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'D' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'D' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'D' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'D' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'D' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'D' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'D' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'D' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'D' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'D' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'D' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'D' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'D' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'D' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'D' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceWaterControlFacilities != '' then isNull(cast(repairCostWaterControlFacilities as money),0) else 0 end))-(cast(insuranceWaterControlFacilities as money)))+
      ((case when cat01 = 'E' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'E' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'E' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'E' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'E' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'E' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'E' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'E' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'E' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'E' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'E' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'E' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'E' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'E' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'E' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'E' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'E' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'E' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'E' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'E' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'E' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'E' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'E' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'E' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'E' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'E' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'E' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'E' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'E' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'E' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceBuildingsEquipment != '' then isNull(cast(repairCostBuildingsEquipment as money),0) else 0 end))-(cast(insuranceBuildingsEquipment as money)))+
      ((case when cat01 = 'F' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'F' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'F' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'F' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'F' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'F' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'F' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'F' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'F' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'F' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'F' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'F' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'F' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'F' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'F' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'F' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'F' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'F' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'F' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'F' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'F' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'F' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'F' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'F' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'F' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'F' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'F' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'F' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'F' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'F' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceUtilitySystems != '' then isNull(cast(repairCostUtilitySystems as money),0) else 0 end))-(cast(insuranceUtilitySystems as money)))+
      ((case when cat01 = 'G' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'G' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'G' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'G' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'G' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'G' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'G' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'G' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'G' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'G' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'G' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'G' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'G' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'G' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'G' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'G' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'G' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'G' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'G' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'G' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'G' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'G' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'G' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'G' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'G' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'G' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'G' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'G' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'G' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'G' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceOther != '' then isNull(cast(repairCostOther as money),0) else 0 end))-(cast(insuranceOther as money)))
      </expression></span><span id="masterExpression" style="display:none;"><expression name="masterTestRecPA">(case when masterDSOThisIs='masterDSO' then 1 else 0 end)</expression></span><span id="masterFields"></span><value-of select="@sortCountyOrder" />

      |<value-of select="@sortCityOrder" />

      |<div align="center"><if test="@totalJurisictionsexpressionInfra1!='0'"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionInfra1">(case when (repairCostTotals!='' and repairCostTotals!='0' and repairCostTotals!='0.00' and repairCostTotals!='0.0000') or (repairCostTotal!='' and repairCostTotal!='0' and repairCostTotal!='0.00' and repairCostTotal!='0.0000') then 1 else 0 end)</expression></if></div>
      
      |<value-of select="@jurisdictionType" />

      |<if test="@masterDSOThisIs!='masterDSO'"><viewlink name="Input (DO NOT ASSIGN)"><span style="color:#111111"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b> /
                        <value-of select="@city" /><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if><if test="@jurisdictionType='City'"><value-of select="@county" /> /
                        <b><value-of select="@city" /></b><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if></span></viewlink></if><if test="@masterDSOThisIs='masterDSO'"><viewlink name="Master Input (DO NOT ASSIGN)"><span style="color:#111111"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b> /
                        <value-of select="@city" /><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if><if test="@jurisdictionType='City'"><value-of select="@county" /> /
                        <b><value-of select="@city" /></b><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if></span></viewlink></if><!--<br/>CO: <value-of select="@sortCountyOrder"/> / CI: <value-of select="@sortCityOrder"/>-->

      |<value-of select="@county" />|<value-of select="@city" />

      |<value-of select="format-number(@catASum, '###0.00')"></value-of><space />
      

      |<value-of select="format-number(@catBSum, '###0.00')"></value-of><space />
      
      
      |<value-of select="format-number(@catCSum, '###0.00')"></value-of><space />
      
      
      |<value-of select="format-number(@catDSum, '###0.00')"></value-of><space />
      
      
      |<value-of select="format-number(@catESum, '###0.00')"></value-of><space />
      
      |<value-of select="format-number(@catFSum, '###0.00')"></value-of><space />
      
      |<value-of select="format-number(@catGSum, '###0.00')"></value-of><space />
      
      |<value-of select="format-number(@catSumTotal, '###0.00')"></value-of><space />

      |






    
        <span style="display: none;"><relatedexpression name="declarationIssuedStateTest" table="Supplemental">sum(case when declarationIssuedState='Yes' then 1 else 0 end)</relatedexpression><relatedexpression name="declarationIssuedFederalTest" table="Supplemental">sum(case when declarationIssuedFederal='Yes' then 1 else 0 end)</relatedexpression></span><if test="@declarationIssued='Yes'"><span class="greenCell">Local<br /></span></if><if test="@declarationIssuedStateTest &gt; '0'" table="Supplemental"><span class="greenCell">State</span></if><if test="@declarationIssuedFederalTest &gt; '0'" table="Supplemental"><span class="greenCell"><br />Federal</span></if>        







      |NomNom16

      |<viewlink name="DSO Audit RelatedList (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">DSO History</button></viewlink>

      |EXTRA18

      |<relatedexpression name="femaTest2" table="Supplemental">sum(case when femaCheckboxV2='Yes' then 1 else 0 end)</relatedexpression>
      |<viewlink name="Inbetween (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">Supplemental Info</button></viewlink>

      |<expression useboardlevelfilters="true" name="repairCostVSinsurance">(case when (repairCostDebrisClearance!='' and insuranceDebrisClearance='') or (repairCostEmergency!='' and insuranceEmergency='') or (repairCostRoadPaved!='' and insuranceRoadPaved='') or (repairCostWaterControlFacilities!='' and insuranceWaterControlFacilities='') or (repairCostBuildingsEquipment!='' and insuranceBuildingsEquipment='') or (repairCostUtilitySystems!='' and insuranceUtilitySystems='') or (repairCostOther!='' and insuranceOther='') or (cat01!='' and insurance01='') or (cat02!='' and insurance02='') or (cat03!='' and insurance03='') or (cat04!='' and insurance04='') or (cat05!='' and insurance05='') or (cat06!='' and insurance06='') or (cat07!='' and insurance07='') or (cat08!='' and insurance08='') or (cat09!='' and insurance09='') or (cat10!='' and insurance10='') or (cat11!='' and insurance11='') or (cat12!='' and insurance12='') or (cat13!='' and insurance13='') or (cat14!='' and insurance14='') or (cat15!='' and insurance15='') then 1 else 0 end)</expression>

      |<value-of select="format-number(@catASumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostDebrisClearance != '' and @insuranceDebrisClearance = '') or (@cat01 = 'A' and @repairCost01 != '' and @insurance01 = '') or (@cat02 = 'A' and @repairCost02 != '' and @insurance02 = '') or (@cat03 = 'A' and @repairCost03 != '' and @insurance03 = '') or (@cat04 = 'A' and @repairCost04 != '' and @insurance04 = '') or (@cat05 = 'A' and @repairCost05 != '' and @insurance05 = '') or (@cat06 = 'A' and @repairCost06 != '' and @insurance06 = '') or (@cat07 = 'A' and @repairCost07 != '' and @insurance07 = '') or (@cat08 = 'A' and @repairCost08 != '' and @insurance08 = '') or (@cat09 = 'A' and @repairCost09 != '' and @insurance09 = '') or (@cat10 = 'A' and @repairCost10 != '' and @insurance10 = '') or (@cat11 = 'A' and @repairCost11 != '' and @insurance11 = '') or (@cat12 = 'A' and @repairCost12 != '' and @insurance12 = '') or (@cat13 = 'A' and @repairCost13 != '' and @insurance13 = '') or (@cat14 = 'A' and @repairCost14 != '' and @insurance14 = '') or (@cat15 = 'A' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catBSumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostEmergency != '' and @insuranceEmergency = '') or (@cat01 ='B' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='B' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='B' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='B' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='B' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='B' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='B' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='B' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='B' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='B' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='B' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='B' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='B' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='B' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='B' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catCSumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostRoadPaved != '' and @insuranceRoadPaved = '') or (@cat01 ='C' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='C' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='C' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='C' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='C' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='C' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='C' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='C' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='C' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='C' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='C' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='C' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='C' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='C' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='C' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catDSumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostWaterControlFacilities != '' and @insuranceWaterControlFacilities = '') or (@cat01 ='D' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='D' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='D' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='D' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='D' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='D' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='D' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='D' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='D' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='D' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='D' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='D' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='D' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='D' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='D' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catESumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostBuildingsEquipment != '' and @insuranceBuildingsEquipment = '') or (@cat01 ='E' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='E' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='E' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='E' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='E' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='E' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='E' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='E' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='E' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='E' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='E' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='E' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='E' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='E' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='E' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catFSumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostUtilitySystems != '' and @insuranceUtilitySystems = '') or (@cat01 ='F' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='F' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='F' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='F' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='F' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='F' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='F' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='F' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='F' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='F' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='F' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='F' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='F' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='F' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='F' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catGSumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostOther != '' and @insuranceOther = '') or (@cat01 ='G' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='G' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='G' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='G' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='G' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='G' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='G' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='G' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='G' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='G' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='G' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='G' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='G' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='G' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='G' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catSumTotalWithInsurance, '###0.00')"></value-of>

      |30

      |<value-of select="@masterTestRecPA" />

      |<value-of select="@repairCostDebrisClearanceMasterDSO" />

      |<value-of select="@repairCostEmergencyMasterDSO" />

      |<value-of select="@repairCostRoadPavedMasterDSO" />

      |<value-of select="@repairCostWaterControlFacilitiesMasterDSO" />

      |<value-of select="@repairCostBuildingsEquipmentMasterDSO" />

      |<value-of select="@repairCostUtilitySystemsMasterDSO" />

      |<value-of select="@repairCostOtherMasterDSO" />

      |<value-of select="@repairCostTotalsMasterDSO" />

      |<value-of select="@repairCost01MasterDSO" />

      |<value-of select="@repairCost02MasterDSO" />

      |<value-of select="@repairCost03MasterDSO" />

      |<value-of select="@repairCost04MasterDSO" />

      |<value-of select="@repairCost05MasterDSO" />

      |<value-of select="@repairCost06MasterDSO" />

      |<value-of select="@repairCost07MasterDSO" />

      |<value-of select="@repairCost08MasterDSO" />

      |<value-of select="@repairCost09MasterDSO" />

      |<value-of select="@repairCost10MasterDSO" />

      |<value-of select="@repairCost11MasterDSO" />

      |<value-of select="@repairCost12MasterDSO" />

      |<value-of select="@repairCost12MasterDSO" />

      |<value-of select="@repairCost13MasterDSO" />

      |<value-of select="@repairCost14MasterDSO" />

      |<value-of select="@repairCost15MasterDSO" />
      
      |<value-of select="@repairCostTotalMasterDSO" />

      |<!--DONT write Comments here in the array spots That will stop the totals from happening!--></span><!--and this and that and this and that whole row--><!--then another--></eocrepeatallrecords></div></div><!--<embedview style="display:none" view="Bubble Letter Embed"/>--></body><script type="text/javascript">
   //this newRow adds places in the array to the table rows as they add for a regular row -- td's need to added as needed
   var newRow = function(table,position,data,rowClass){
    //console.log(data);
   var row = table.insertRow(position);
   var align='left';
    if(trim(data[3])==="City"){
align='right'
  }
  var metClass="NoClass";
  if(comma(data[16])==='Yes'){
   metClass="rowGreen";
  } else if (comma(data[16])==='No'){
    metClass="cellYellow";
  } else if (comma(data[16])==='(N/A)'){
    metClass="cellOrange";
  }
  if(data[21]=='1'){
  
   data[16]='(N/A)';
  }
  
  //row.className('agencytemplate_tableentry');//here
    row.innerHTML = '<td>'+data[0]+'</td>'+'<td align="'+align+'">'+data[4]+'</td>'+'<td>'+comma(data[7])+'</td>'+'<td>'+comma(data[8])+'</td>'+'<td>'+comma(data[9])+'</td>'+'<td>'+comma(data[10])+'</td>'+'<td>'+comma(data[11])+'</td>'+'<td>'+comma(data[12])+'</td>'+'<td>'+comma(data[13])+'</td>'+'<td>'+comma(data[14])+'</td>'+'<td>'+comma(data[15])+'</td>'+'<td class="'+metClass+'">'+comma(data[16])+'</td>'+'<td>'+comma(data[17])+'</td>'+'<td>'+comma(data[18])+'</td>'+'<td>'+comma(data[19])+'</td>'+'<td>'+comma(data[20])+'</td>'+'<td>'+comma(data[21])+'</td>'/*+'<td>'+comma(data[22])+'</td>'+'<td>'+comma(data[23])+'</td>'+'<td>'+comma(data[24])+'</td>'+'<td>'+comma(data[25])+'</td>'+'<td>'+comma(data[26])+'</td>'+'<td>'+comma(data[27])+'</td>'+'<td>'+comma(data[28])+'</td>'+'<td>'+comma(data[29])+'</td>'+'<td>'+comma(data[30])+'</td>'*/+'<td>'+comma(data[31])+'</td>';//view femaCheck total cell[20] here, Below in row array in spot masterData[i][19]in comment area "adds regular row"
    //data[31] is masterDSO 1 or 0
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowClass;
    //agencytemplate_tableroweven
}
 //threshold totals and limits
function threshold(c){
var a = [["Anderson","208110.48"],["Andrews","52638.16"],["Angelina","308904.76"],["Aransas","82442.48"],["Archer","32232.24"],["Armstrong","6767.56"],["Atascosa","159883.16"],["Austin","101164.52"],["Bailey","25507.40"],["Bandera","72926.60"],["Bastrop","264048.76"],["Baylor","13264.56"],["Bee","113425.16"],["Bell","1104436.60"],["Bexar","6104591.88"],["Blanco","37369.32"],["Borden","2281.96"],["Bosque","64834.72"],["Bowie","329531.40"],["Brazoria","1114870.96"],["Brazos","693669.56"],["Brewster","32865.92"],["Briscoe","5827.72"],["Brooks","25713.88"],["Brown","135657.36"],["Burleson","61185.72"],["Burnet","152190.00"],["Caldwell","135514.96"],["Calhoun","76116.36"],["Callahan","48216.64"],["Cameron","1446143.20"],["Camp","44147.56"],["Carson","22007.92"],["Cass","108451.84"],["Castro","28700.72"],["Chambers","124941.76"],["Cherokee","181008.20"],["Childress","25065.96"],["Clay","38277.12"],["Cochran","11132.12"],["Coke","11819.20"],["Coleman","31666.20"],["Collin","2785133.96"],["Collingsworth","10882.92"],["Colorado","74311.44"],["Comal","386160.32"],["Comanche","49747.44"],["Concho","14549.72"],["Cooke","136835.72"],["Coryell","268381.28"],["Cottle","5357.80"],["Crane","15575.00"],["Crockett","13239.64"],["Crosby","21570.04"],["Culberson","8536.88"],["Dallam","23862.68"],["Dallas","8430574.84"],["Dawson","49245.48"],["Deaf Smith","68964.32"],["Delta","18622.36"],["Denton","2358905.84"],["DeWitt","71545.32"],["Dickens","8700.64"],["Dimmit","35585.76"],["Donley","13090.12"],["Duval","41943.92"],["Eastland","66155.48"],["Ector","488182.80"],["Edwards","7127.12"],["El Paso","2850303.32"],["Ellis","532611.60"],["Erath","134888.40"],["Falls","63602.96"],["Fannin","120737.40"],["Fayette","87412.24"],["Fisher","14147.44"],["Floyd","22947.76"],["Foard","4756.16"],["Fort Bend","2083935.00"],["Franklin","37753.80"],["Freestone","70544.96"],["Frio","61292.52"],["Gaines","62392.56"],["Galveston","1037060.04"],["Garza","23001.16"],["Gillespie","88419.72"],["Glasscock","4364.56"],["Goliad","25667.60"],["Gonzales","70512.92"],["Gray","80224.60"],["Grayson","430322.12"],["Gregg","433358.80"],["Grimes","94710.24"],["Guadalupe","468257.48"],["Hale","129131.88"],["Hall","11936.68"],["Hamilton","30320.52"],["Hansford","19982.28"],["Hardeman","14734.84"],["Hardin","194500.60"],["Harris","14569154.04"],["Harrison","233646.36"],["Hartley","21580.72"],["Haskell","21000.44"],["Hays","559300.92"],["Hemphill","13552.92"],["Henderson","279573.92"],["Hidalgo","2758177.64"],["Hill","124916.84"],["Hockley","81648.60"],["Hood","182207.92"],["Hopkins","125173.16"],["Houston","84485.92"],["Howard","124642.72"],["Hudspeth","12374.56"],["Hunt","306619.24"],["Hutchinson","78854.00"],["Irion","5692.44"],["Jack","32196.64"],["Jackson","50107.00"],["Jasper","127127.60"],["Jeff Davis","8337.52"],["Jefferson","898091.88"],["Jim Hogg","18868.00"],["Jim Wells","145383.28"],["Johnson","537325.04"],["Jones","71919.12"],["Karnes","52773.44"],["Kaufman","367926.00"],["Kendall","118939.60"],["Kenedy","1480.96"],["Kent","2876.48"],["Kerr","176665"],["Kimble","16400.92"],["King","1018.16"],["Kinney","12808.88"],["Kleberg","114137.16"],["Knox","13239.64"],["La Salle","24514.16"],["Lamar","177263.08"],["Lamb","49758.12"],["Lampasas","70050.12"],["Lavaca","68576.28"],["Lee","59138.72"],["Leon","59811.56"],["Liberty","269289.08"],["Limestone","83247.04"],["Lipscomb","11755.12"],["Live Oak","41050.36"],["Llano","68711.56"],["Loving","291.92"],["Lubbock","992638.36"],["Lynn","21057.40"],["Madison","48643.84"],["Marion","37543.76"],["Martin","17084.44"],["Mason","14282.72"],["Matagorda","130659.12"],["Maverick","193158.48"],["McCulloch","29487.48"],["McLennan","836265.36"],["McMullen","2516.92"],["Medina","163781.36"],["Menard","7981.52"],["Midland","487264.32"],["Milam","88134.92"],["Mills","17572.16"],["Mitchell","33474.68"],["Montague","70199.64"],["Montgomery","1622455.76"],["Moore","77978.24"],["Morris","46045.04"],["Motley","4307.60"],["Nacogdoches","229705.44"],["Navarro","169936.60"],["Newton","51424.20"],["Nolan","54168.96"],["Nueces","1211193.88"],["Ochiltree","36393.88"],["Oldham","7305.12"],["Orange","291339.72"],["Palo Pinto","100075.16"],["Panola","84713.76"],["Parker","416260.12"],["Parmer","36557.64"],["Pecos","55204.92"],["Polk","161670.28"],["Potter","431019.88"],["Presidio","27832.08"],["Rains","38853.84"],["Randall","429781.00"],["Reagan","11986.52"],["Real","11780.04"],["Red River","45781.60"],["Reeves","49067.48"],["Refugio","26283.48"],["Roberts","3307.24"],["Robertson","59174.32"],["Rockwall","278879.72"],["Runnels","37383.56"],["Rusk","189854.80"],["Sabine","38569.04"],["San Augustine","31559.40"],["San Jacinto","93927.04"],["San Patricio","230702.24"],["San Saba","21826.36"],["Schleicher","12321.16"],["Scurry","60238.76"],["Shackelford","12025.68"],["Shelby","90594.88"],["Sherman","10801.04"],["Smith","746581.84"],["Somervell","30224.40"],["Starr","217046.08"],["Stephens","34282.80"],["Sterling","4069.08"],["Stonewall","5304.40"],["Sutton","14695.68"],["Swisher","27960.24"],["Tarrant","6440161.04"],["Taylor","468161.36"],["Terrell","3503.04"],["Terry","45037.56"],["Throckmorton","5841.96"],["Titus","115109.04"],["Tom Green","392397.44"],["Travis","3646386.96"],["Trinity","51922.60"],["Tyler","77486.96"],["Upshur","139940.04"],["Upton","11943.80"],["Uvalde","94001.80"],["Val Verde","174009.24"],["Van Zandt","187181.24"],["Victoria","308983.08"],["Walker","241585.16"],["Waller","153809.80"],["Ward","37942.48"],["Washington","120036.08"],["Webb","891082.24"],["Wharton","146956.80"],["Wheeler","19259.60"],["Wichita","468140.00"],["Wilbarger","48184.60"],["Willacy","78797.04"],["Williamson","1504737.24"],["Wilson","152788.08"],["Winkler","25311.60"],["Wise","210492.12"],["Wood","149391.84"],["Yoakum","28049.24"],["Young","66038.00"],["Zapata","49904.08"],["Zavala","41570.12"]];
for(var i = 0; i&lt;a.length;i++){
  if(c==a[i][0]){
    return a[i][1];
  }
}
return "";
}
threshold.TotalOnPage=0;

var masterData =[];


//populates the data, holding area before the table
function populateMasterData(){
var a = document.getElementsByClassName('data');
  for(var i =0; i&lt;a.length;i++){
    var b =[];
    var c = a[i].innerHTML.split('|');
    for(var k=0; k&lt;c.length;k++){
      b.push(c[k]);
    }
    masterData.push(b);
  }
}

function comma(x) {
if(isNaN(x)===true || x=="" || x==0){
  x==undefined?x='':x=x;
  return x;
}
x=parseFloat(x).toFixed(2);
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
//return x;
}
//very useful and needed in many webeoc files as most browsers do this, webeoc does not and excess spaces will change return and cause to fail
function trim(a) {
  return a.replace(/^\s+|\s+$|\&amp;nbsp;+$/g, '');
}
//this populates the table - t is main table itself, b is for the total row turning yellow
//no selected - Must Use AI
function popluateTable(){
var t = document.getElementById('mainTable');

var totalRowVar=function(i){
   var a = getTotalsFor(masterData[i][5]);
   var b = "rowYellow";
   var NaCount = parseFloat(a[12]) &gt; (0)?'Yes':'No';
   if(document.getElementById('AnticipatedInsurance1').checked==true){
    //hide total lines with N/A values
    b = "rowYellow hideValues";
  } else {
    //this will happen since no is selected
    //show or hide unvetted total lines on false
     b = a[10]===true?"rowYellow":"hideValues";
  }
  /*if(a[31]==1){
    //hide total lines with N/A values
    b = "hideValues";
  } */
      var thresholdResult = threshold(masterData[i][5]);
      var a = getTotalsFor(masterData[i][5]); //Get the total of a county
      threshold.TotalOnPage+=parseInt(thresholdResult); //totals all thresholds, not needed on page
      var Mets2 = parseFloat(a[8]) &gt;= parseFloat(thresholdResult)?'Yes':'No'; //is county total greater than or equal to county threshold
      var Mets = (NaCount=='Yes')?'(N/A)':Mets2; //are there N/As present
      var thresholdResultWithCommas = thresholdResult.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

//Below determines whether or not more is needed to reach county threshold or if reached and by how much over
      var Mets3 = "$ "+((thresholdResult-(a[8])).toFixed(2))+" MORE to REACH (CO) THRESHOLD ";
      var Mets33 = "$ "+(((a[8])-thresholdResult).toFixed(2))+" OVER the (CO) THRESHOLD ";
      var Mets4 = 0;
      //var totalsAccurate = true;
      
      if((a[8]) &gt; thresholdResult){
        Mets4 = Mets33;
      } else {
        Mets4 = Mets3;
      }

      var Mets5 = Mets4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");


  var yellowA = (a[1]).toFixed(2);
  var yellowB = (a[2]).toFixed(2);
  var yellowC = (a[3]).toFixed(2);
  var yellowD = (a[4]).toFixed(2);
  var yellowE = (a[5]).toFixed(2);
  var yellowF = (a[6]).toFixed(2);
  var yellowG = (a[7]).toFixed(2);
  var yellowAT = (a[8]).toFixed(2);
  //var MDSOnumbs = (a[31]).toFixed(2); //didnt work, table stops

  //yellow total rows
      
      newRow(t,t.rows.length,["","","","","Totals for "+masterData[i][5],"",a[0],yellowA,yellowB,yellowC,yellowD,yellowE,yellowF,yellowG,yellowAT,Mets5+"$ "+thresholdResultWithCommas,Mets2,a[15],"",a[19],"FEMAS "+a[10],"NAS "+NaCount,"","","","","","","","","","MDSO "+a[31]],b);



};



//no selected - Must Use AI

  for(var i=0; i &lt; masterData.length;i++){

  
          var wootA = masterData[i][7].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootB = masterData[i][8].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootC = masterData[i][9].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootD = masterData[i][10].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootE = masterData[i][11].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootF = masterData[i][12].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootG = masterData[i][13].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootAreaTotals = masterData[i][14].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
       /* } else {*/
          var wootAA = masterData[i][22].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootBB = masterData[i][23].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootCC = masterData[i][24].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootDD = masterData[i][25].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootEE = masterData[i][26].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootFF = masterData[i][27].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootGG = masterData[i][28].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootAreaTotals2 = masterData[i][29].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
       
    //---------------------------------------------------------------------------------------------
    //newRow below explained 
    //start of data
    //masterData[i][2] is Total Jurisdictions
    //,"","", two blanks
    //masterData[i][3] is unknown to me,
    //masterData[i][4] is county and city,
    //masterData[i][5] is unknown to me,
    //masterData[i][6] is unknown to me,
    //wootA is A, masterData[i][7] No Insurance factored
    //wootB is B, masterData[i][8] No Insurance factored
    //wootC is C, masterData[i][9] No Insurance factored
    //wootD is D, masterData[i][10] No Insurance factored
    //wootE is E, masterData[i][11] No Insurance factored
    //wootF is F, masterData[i][12] No Insurance factored
    //wootG is G, masterData[i][13] No Insurance factored
    //wootAreaTotals is Area Totals, masterData[i][14] No Insurance factored
    //"","", two blanks
    //masterData[i][15] is Local Dec,
    //masterData[i][17] is DSO History Button,
    //masterData[i][20] is Supplemental Info Button,
    //masterData[i][19] is FEMA count,
    //masterData[i][21] is 1 for Insurance NA COUNT,
    //var wootAA is A, masterData[i][22] Yes Insurance factored
    //var wootBB is B, masterData[i][23] Yes Insurance factored
    //var wootCC is C, masterData[i][24] Yes Insurance factored
    //var wootDD is D, masterData[i][25] Yes Insurance factored
    //var wootEE is E, masterData[i][26] Yes Insurance factored
    //var wootFF is F, masterData[i][27] Yes Insurance factored
    //var wootGG is G, masterData[i][28] Yes Insurance factored
    //var wootAreaTotals2 is Area Totals masterData[i][29] Yes Insurance factored
    //masterData[i][30], extra for now
    //masterData[i][31] extra for now 
    //end of data],
    //start of class
    //rrrr changes row to red if fema check is checked on supplemental, hides it with rowRegExclude or hide values
    //end of class
    //----------------------------------------------------------------------------------------------------
    //adds regular row
    //no selected - Must Use AI
    var rr = 0;

if(masterData[i][19]&gt;='1'){
 //hides rows red based on femaCheckboxV2 linked to DSO
  var rr = "rowRedExclude"; // change to rowRed to see
} else {
  var rr = "rowReg"; 
}



if(document.getElementById('AnticipatedInsurance1').checked==true){
  //hide rows with N/A values
    rrrr = "hideValues";
  } else {
    //show rows without N/A values
     rrrr = rr;
  }

  /* This works, here but screws other pages total rows
  if(masterData[i][31]&gt;='1'){
    rrrr = "rowBlue"; //makes blue - change to hideValues to hide rows with 1 in masterDSO
  } else {
    //show rows without 1 in masterDSO
     rrrr = rr;
  }*/
  
  //start of new row
  //no selected - Must Use AI

/*if(masterData[i][31]&lt;'1'){*/ //alerts, just does not hide row
    newRow(t,(t.rows.length),[masterData[i][2],"","",masterData[i][3],masterData[i][4],masterData[i][5],masterData[i][6],wootA,wootB,wootC,wootD,wootE,wootF,wootG,wootAreaTotals,"","",masterData[i][15],masterData[i][17],masterData[i][20],"FEMA "+masterData[i][19],"NA "+masterData[i][21],masterData[i][22],masterData[i][23],masterData[i][24],masterData[i][25],masterData[i][26],masterData[i][27],masterData[i][28],masterData[i][29],masterData[i][30],masterData[i][31]],rrrr);
    //19 FEMA check
    //21 NA check
    //31 MasterDSO check (MDSO)
  /*} else { alert('hide row');}*/  //alerts, just does not hide row
    if(i==masterData.length-1){//if not the last row
 
 totalRowVar(i);
 console.log("reg");
    }
    else if(i==0 &amp;&amp; masterData[i][5]!=masterData[i+1][5]){
       totalRowVar(i);
    }
//else if (( (there is an entry) and 
//((county equals county before) and (county after does not equal county) or 
//(county does not equal county before) and 
//(county after does not equal coounty)) ))
    else if((i!=0)&amp;&amp;(((masterData[i][5]===masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5]))||((masterData[i][5]!=masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5])) ))
      {
      totalRowVar(i);
      //console.log("else if");
    }
  }
  //grand totals row and class of rowGray

  //no selected - Must Use AI

  var a = getTotalsForAll();

  //This works to make 0 into 0.00 in the gray rows. Not too important...but looks nice and like other fields
  //trying to add $'s here with "$ "+a[X] makes just the commas disappear. Decimals remain
  var grayA = (a[1]).toFixed(2);
  var grayB = (a[2]).toFixed(2);
  var grayC = (a[3]).toFixed(2);
  var grayD = (a[4]).toFixed(2);
  var grayE = (a[5]).toFixed(2);
  var grayF = (a[6]).toFixed(2);
  var grayG = (a[7]).toFixed(2);
  var grayAT = (a[8]).toFixed(2);
  var grayCT = (a[9]).toFixed(2); 

  if(document.getElementById('AnticipatedInsurance1').checked==true){
    //hides grand total rows with N/A values
    g = "rowGray hideValues";
  } else {
    //shows grand total rows with N/A values
     g = "rowGray";
  }

  var stateTxThreshold = 40000000;
      //var thresholdResult = threshold(masterData[i][5]);
      //var a = getTotalsFor(masterData[i][5]); //Get the total of a county
      //threshold.TotalOnPage+=parseInt(thresholdResult); //totals all thresholds, not needed on page
      var TXMets2 = parseFloat(grayAT) &gt;= parseFloat(stateTxThreshold)?'Yes':'No'; //is county total greater than or equal to county threshold
      //var TXMets = (NaCount=='Yes')?'(N/A)':TXMets2;
      //var Mets = (NaCount=='Yes')?'(N/A)':Mets2; //are there N/As present
      var TXthresholdResultWithCommas = stateTxThreshold.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",");

//Below determines whether or not more is needed to reach county threshold or if reached and by how much over
      var TXMets3 = "$ "+((stateTxThreshold-(grayAT)).toFixed(2))+" MORE to REACH (TX) THRESHOLD ";
      var TXMets33 = "$ "+(((grayAT)-stateTxThreshold).toFixed(2))+" OVER the (TX) THRESHOLD ";
      var TXMets4 = 0;
      //var totalsAccurate = true;
      
      if((grayAT) &gt; stateTxThreshold){
        TXMets4 = TXMets33;
      } else {
        TXMets4 = TXMets3;
      }

      var TXMets5 = TXMets4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

//trying to add $'s here with "$ "+a[X] or "$ "+grayA makes the commas and decimals disappear. Boo!
      newRow(t,t.rows.length,["","","","","Unvetted Grand Totals","",a[0],grayA,grayB,grayC,grayD,grayE,grayF,grayG,grayAT,TXMets5+"$ "+TXthresholdResultWithCommas,TXMets2],g)
      newRow(t,2,["","","","","Unvetted Grand Totals","",a[0],grayA,grayB,grayC,grayD,grayE,grayF,grayG,grayAT,TXMets5+"$ "+TXthresholdResultWithCommas,TXMets2],g)
}

//no selected - Must Use AI

//this will get totals for the county totals row, for more spots, 0's nned to added to var a as well as the parseFloat statements below
function getTotalsFor(c){
  var a =[0,0,0,0,0,0,0,0,0,0,0,false,false];//13
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][5]==c){
//Below - parseFloat cuts off the first character if a number, otherwise NaN is returned ------------ the [19] spot is where the total is stored from femaCheckboxes , a[10] makes them true by counting 1's in a[19] if greater than or equal to 1 show, false ones are hidden

    if(masterData[i][19]&lt;'1'){ //this removes redRows values with femaCheckboxV2's from the total count
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11])); //5
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));
    a[9]+=parseFloat(isNull(masterData[i][19]));
    a[12]+=parseFloat(isNull(masterData[i][21]));//10 NaCount
    a[31]+=parseFloat(isNull(masterData[i][31])); // 11 MDSO Count
    } 
    if(masterData[i][19]&lt;"1"){
      a[10]=true; //12
    } else {
      a[10]=false;
    }
     
    if(masterData[i][31]&gt;="1"){
      a[31]=true;                                 //13  
    } 
    
  }
}
console.log(a);
return a;

}
/*function getTotalsFor2(c){
  var a =[0,0,0,0,0,0,0,0,0,0,false,0,0];
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][5]==c){
//parseFloat cuts off the first character if a number, otherwise NaN is returned ------------ the [19] spot is where the total is stored from femaCheckboxes
    //a[0]+=parseFloat(isNull(masterData[i][6]));
    if(masterData[i][19]&lt;'1'){ //this removes redRows and values with femaCheckboxV2's from the count
    a[1]+=parseFloat(isNull(masterData[i][22]));
    a[2]+=parseFloat(isNull(masterData[i][23]));
    a[3]+=parseFloat(isNull(masterData[i][24]));
    a[4]+=parseFloat(isNull(masterData[i][25]));
    a[5]+=parseFloat(isNull(masterData[i][26]));
    a[6]+=parseFloat(isNull(masterData[i][27]));
    a[7]+=parseFloat(isNull(masterData[i][28]));
    a[8]+=parseFloat(isNull(masterData[i][29]));
    a[9]+=parseFloat(isNull(masterData[i][19]));
    a[12]+=parseFloat(isNull(masterData[i][21]));}
    if(masterData[i][19]&lt;"1"){ //this would turn county rows red if all vetted, but rows are removed from count above in if statement
      a[10]=true;
      a[11]+=parseFloat(isNull(masterData[i][20]));
      
    }
    
    //a[10]+=parseFloat(isNull(masterData[i][19]));
  }
}
console.log(a);
return a;

}*/
//Grand totals
//no selected - Must Use AI 
function getTotalsForAll(){
  var a =[0,0,0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
    //a[0]+=parseFloat(isNull(masterData[i][6]));
    if(masterData[i][19]&lt;'1'){ //this removes redRows values with femaCheckboxV2's from the grand total count
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));}
   
}
 a[9]=parseFloat(threshold.TotalOnPage); //this should be A-G totals vs State threshold
console.log(a);
return a;

}

//------Start of popluateTable2 for Insurance--------------------------------------------------------------------------
//see above function popluateTable for breakdown of everything, same fields and JS just reversed to hide/show values with NAs
//yes selected - Must Use AI
function popluateTable2(){
var t = document.getElementById('mainTable');

var totalRowVar2=function(i){
   var a = getTotalsFor2(masterData[i][5]);
   var b = "rowYellow";
   var NaCount = parseFloat(a[12]) &gt; (0)?'Yes':'No';

   if(document.getElementById('AnticipatedInsurance1').checked==true){
    b = a[10]===true?"rowYellow":"hideValues";
  } else {
     b = "hideValuesNoInsurance";
  }

  /*if(a[31]==1){
    //hide total lines with N/A values
    b = "rowBlue";
  } */


      var thresholdResult = threshold(masterData[i][5]);
      var a = getTotalsFor2(masterData[i][5]);
      threshold.TotalOnPage+=parseInt(thresholdResult);
      var Mets2 = parseFloat(a[8]) &gt;= parseFloat(thresholdResult)?'Yes':'No';
      var Mets = (NaCount=='Yes')?'(N/A)':Mets2;
      //var thresholdResultWithDecimals = ((thresholdResult).toFixed(2));
      var thresholdResultWithCommas = thresholdResult.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

      var Mets3 = "$ "+((thresholdResult-(a[8])).toFixed(2))+" MORE to REACH (CO) THRESHOLD ";
      var Mets33 = "$ "+(((a[8])-thresholdResult).toFixed(2))+" OVER the (CO) THRESHOLD ";
      var Mets4 = 0;
      //var totalsAccurate = true;
      
      if((a[8]) &gt; thresholdResult){
        Mets4 = Mets33;
      } else {
        Mets4 = Mets3;
      }

      var Mets5 = Mets4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");


      if(Mets=='(N/A)'){
  
   Mets5='(Anticipated Insurance Needed) ';

  }

  var yellowA = (a[1]).toFixed(2);
  var yellowB = (a[2]).toFixed(2);
  var yellowC = (a[3]).toFixed(2);
  var yellowD = (a[4]).toFixed(2);
  var yellowE = (a[5]).toFixed(2);
  var yellowF = (a[6]).toFixed(2);
  var yellowG = (a[7]).toFixed(2);
  var yellowAT = (a[8]).toFixed(2);

  //define 
  
    
      //yellow total rows
      //yes selected - Must Use AI
      newRow(t,t.rows.length,["","","","","Must use AI - Totals for "+masterData[i][5],"",a[0],yellowA,yellowB,yellowC,yellowD,yellowE,yellowF,yellowG,a[8],Mets5+"$ "+thresholdResultWithCommas,Mets,a[15],"",a[19],"FEMAS ","NAS "+NaCount],b);
};
  for(var i=0; i &lt; masterData.length;i++){


          var wootA = masterData[i][7].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootB = masterData[i][8].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootC = masterData[i][9].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootD = masterData[i][10].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootE = masterData[i][11].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootF = masterData[i][12].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootG = masterData[i][13].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootAreaTotals = masterData[i][14].replace(/\B(?=(\d{3})+(?!\d))/g, ",");

          var wootAA = masterData[i][22].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootBB = masterData[i][23].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootCC = masterData[i][24].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootDD = masterData[i][25].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootEE = masterData[i][26].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootFF = masterData[i][27].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootGG = masterData[i][28].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootAreaTotals2 = masterData[i][29].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
       
    
    //adds regular row
var rgr = 0;

if(masterData[i][19]&gt;='1'){
  var rgr = "rowRedExclude";
} else {
  var rgr = "rowReg";
}
//masterData[i][19]=='1'?"rowRed":"rowReg"


if(document.getElementById('AnticipatedInsurance1').checked==true){

    rrr = rgr;
  } else {

     rrr = "hideValuesNoInsurance";
  }

    newRow(t,(t.rows.length),[masterData[i][2],"","",masterData[i][3],masterData[i][4],masterData[i][5],masterData[i][6],wootAA,wootBB,wootCC,wootDD,wootEE,wootFF,wootGG,wootAreaTotals2,"","",masterData[i][15],masterData[i][17],masterData[i][20],"FEMA "+masterData[i][19],"NA "+masterData[i][21],"22 "+masterData[i][22],masterData[i][23],masterData[i][24],masterData[i][25],masterData[i][26],masterData[i][27],masterData[i][28],masterData[i][29],masterData[i][30],"MDSO "+masterData[i][31]],rrr);
    //19 FEMA check
    //21 NA check
    //31 MasterDSO check (MDSO)
    if(i==masterData.length-1){//if not the last row
 totalRowVar2(i);
 console.log("reg");
    }
    else if(i==0 &amp;&amp; masterData[i][5]!=masterData[i+1][5]){
       totalRowVar2(i);
    }
//else if (( (there is an entry) and 
//((county equals county before) and (county after does not equal county) or 
//(county does not equal county before) and 
//(county after does not equal coounty)) ))
    else if((i!=0)&amp;&amp;(((masterData[i][5]===masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5]))||((masterData[i][5]!=masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5])) ))
      {
      totalRowVar2(i);
      //console.log("else if");
    }
  }
  //grand totals row and class of rowGray

  //yes selected - Must Use AI

  var a = getTotalsFor2All();

  //This works to make 0 into 0.00 in the gray rows. Not too important...but looks nice and like other fields
  //trying to add $'s here with "$ "+a[X] makes just the commas disappear. Decimals remain
  var grayA = (a[1]).toFixed(2);
  var grayB = (a[2]).toFixed(2);
  var grayC = (a[3]).toFixed(2);
  var grayD = (a[4]).toFixed(2);
  var grayE = (a[5]).toFixed(2);
  var grayF = (a[6]).toFixed(2);
  var grayG = (a[7]).toFixed(2);
  var grayAT = (a[8]).toFixed(2);
  var grayCT = (a[9]).toFixed(2); 

  var g = "rowGray";
  if(document.getElementById('AnticipatedInsurance1').checked==true){
    g = "rowGray";
  } else {
     g = "rowGray hideValuesNoInsurance";
  }
   
   var stateTxThreshold = 40000000;
      //var thresholdResult = threshold(masterData[i][5]);
      //var a = getTotalsFor(masterData[i][5]); //Get the total of a county
      //threshold.TotalOnPage+=parseInt(thresholdResult); //totals all thresholds, not needed on page
      var TXMets2 = parseFloat(grayAT) &gt;= parseFloat(stateTxThreshold)?'Yes':'No'; //is county total greater than or equal to county threshold
      //var TXMets = (NaCount=='Yes')?'(N/A)':TXMets2;
      //var Mets = (NaCount=='Yes')?'(N/A)':Mets2; //are there N/As present
      var TXthresholdResultWithCommas = stateTxThreshold.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",");

//Below determines whether or not more is needed to reach county threshold or if reached and by how much over
      var TXMets3 = "$ "+((stateTxThreshold-(grayAT)).toFixed(2))+" MORE to REACH (TX) THRESHOLD ";
      var TXMets33 = "$ "+(((grayAT)-stateTxThreshold).toFixed(2))+" OVER the (TX) THRESHOLD ";
      var TXMets4 = 0;
      //var totalsAccurate = true;
      
      if((grayAT) &gt; stateTxThreshold){
        TXMets4 = TXMets33;
      } else {
        TXMets4 = TXMets3;
      }

      var TXMets5 = TXMets4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

//trying to add $'s here with "$ "+a[X] or "$ "+grayA makes the commas and decimals disappear. Boo!
      newRow(t,t.rows.length,["","","","","Unvetted Must use AI Grand Totals","",a[0],grayA,grayB,grayC,grayD,grayE,grayF,grayG,grayAT,TXMets5+"$ "+TXthresholdResultWithCommas,TXMets2],g)
      newRow(t,2,["","","","","Unvetted Must use AI Grand Totals","",a[0],grayA,grayB,grayC,grayD,grayE,grayF,grayG,grayAT,TXMets5+"$ "+TXthresholdResultWithCommas,TXMets2],g)
}

//this will get totals for the county totals row, for more spots, O's nned to added to var a as well as the parseFloat statements below

//yes selected - Must Use AI

function getTotalsFor2(c){
  var a =[0,0,0,0,0,0,0,0,0,0,false,0,0];
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][5]==c){
//parseFloat cuts off the first character if a number, otherwise NaN is returned ------------ the [19] spot is where the total is stored from femaCheckboxes
    //a[0]+=parseFloat(isNull(masterData[i][6]));
    if(masterData[i][19]&lt;'1'){ //this removes redRows and values with femaCheckboxV2's from the count
    a[1]+=parseFloat(isNull(masterData[i][22]));
    a[2]+=parseFloat(isNull(masterData[i][23]));
    a[3]+=parseFloat(isNull(masterData[i][24]));
    a[4]+=parseFloat(isNull(masterData[i][25]));
    a[5]+=parseFloat(isNull(masterData[i][26]));
    a[6]+=parseFloat(isNull(masterData[i][27]));
    a[7]+=parseFloat(isNull(masterData[i][28]));
    a[8]+=parseFloat(isNull(masterData[i][29]));
    a[9]+=parseFloat(isNull(masterData[i][19]));
    a[12]+=parseFloat(isNull(masterData[i][21]));}
    if(masterData[i][19]&lt;"1"){ //this would turn county rows red if all vetted, but rows are removed from count above in if statement
      a[10]=true;
      a[11]+=parseFloat(isNull(masterData[i][20]));
      
    }
    
    //a[10]+=parseFloat(isNull(masterData[i][19]));
  }
}
console.log(a);
return a;

}
//Grand totals 

//yes selected - Must Use AI
function getTotalsFor2All(){
  var a =[0,0,0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
    //a[0]+=parseFloat(isNull(masterData[i][6]));
    if(masterData[i][19]&lt;'1'){
    a[1]+=parseFloat(isNull(masterData[i][22]));
    a[2]+=parseFloat(isNull(masterData[i][23]));
    a[3]+=parseFloat(isNull(masterData[i][24]));
    a[4]+=parseFloat(isNull(masterData[i][25]));
    a[5]+=parseFloat(isNull(masterData[i][26]));
    a[6]+=parseFloat(isNull(masterData[i][27]));
    a[7]+=parseFloat(isNull(masterData[i][28]));
    a[8]+=parseFloat(isNull(masterData[i][29]));}
   
}
 a[9]=parseFloat(threshold.TotalOnPage);
console.log(a);
return a;

}

//-------------------------------------------------end of AI functions-----------------------------

 function reloadPage() {
  location.reload(true/false);
  //$("#AnticipatedInsurance2").prop("checked", true);
  //alert("Loading trying to check no");
 }

var dsoPageHelper={


    //startOf: identifying what filter is on
    filterSet: function(arg1,arg2) {
      if($(arg1).html()==='on'){$(arg2).css('font-weight', 'Bold').css('text-decoration', 'underline');}
    },
    
    //startOf: styling search field
    styleSearchField: function() {
        var searchFld=document.getElementById('searchDIV').getElementsByTagName('input');
        for(var j=0; j &lt; searchFld.length; j++) {
            if($(searchFld[j]).val()=='Search' || $(searchFld[j]).val()=='Clear Search'){$(searchFld[j]).addClass('btn btn-default');}
            if(searchFld[j].id.search('searchfield')&gt;=0){$(searchFld[j]).addClass('form-control').prop('placeholder', 'Search');}
        }     
    },
    checkAnticpatedInsuranceValue : function(){
        $("#AnticipatedInsurance1").click(function() {
            window.parent.anticpatedInsuranceValuePlaceHolder = "Yes";
            reloadPage();
        });
        $("#AnticipatedInsurance2").click(function() {
            window.parent.anticpatedInsuranceValuePlaceHolder = "No";
            reloadPage();
        });
        if(window.parent.anticpatedInsuranceValuePlaceHolder === "Yes" || window.parent.anticpatedInsuranceValuePlaceHolder === "") {
            $("#AnticipatedInsurance1").prop("checked", true);
        } else if(!window.parent.anticpatedInsuranceValuePlaceHolder === "No" || !window.parent.anticpatedInsuranceValuePlaceHolder === "Yes") {

        } else if(window.parent.anticpatedInsuranceValuePlaceHolder === "No") {
            $("#AnticipatedInsurance2").prop("checked", true);
        }
    }
};

var incSelList=document.getElementById('webeocIncident');
var loopAllInputs=document.getElementsByTagName('input');
var incVar;

//startOf: filter by incident process method
var filterByIncident={
 clearIncidentListSelection: function() {
   var incSearch=document.getElementById('incidentNameSearchSPAN').getElementsByTagName('input');
   for(var i=0; i &lt; incSearch.length; i++) {
     if(incSearch[i].value==='') {
       window.parent.window.parent.selectedIncident='';
     } else {
       $('#webeocIncident').val(window.parent.window.parent.selectedIncident);
     //  console.log(window.parent.window.parent.selectedIncident);
     }      
   }
 },
 searchFieldVariableSet: function() {
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].id &amp;&amp; loopAllInputs[i].getAttribute('id').indexOf('searchfield')&gt; -1){incVar=loopAllInputs[i];}
   }
 },
 incidentListOptionsBuild: function() {
   <for-each select="/data/allincidentlist/incidents">
     incSelList.options[incSelList.options.length]=new Option('<value-of select="@name" />','<value-of select="@name" />',false,false);
   </for-each>
   incSelList.options.selectedIndex=0;
 },
 incidentListActionOnChange: function() {
   incSelList.options[incSelList.options.length]=new Option('','',false,false);
   incVar.value=incSelList.options[incSelList.options.selectedIndex].text;
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].getAttribute('value')=='Search'){$(loopAllInputs[i]).click();}
   }
   window.parent.window.parent.selectedIncident=(incSelList.options[incSelList.options.selectedIndex]).text;
 }
};

function checkTheRadioAIY(){
  if(document.getElementById('AnticipatedInsurance2').checked==true){
$("#AnticipatedInsurance2").prop("checked", true);
  } else {
    $("#AnticipatedInsurance1").prop("checked", true);
  }

//reloadTableYesIns();

}

$(document).ready(function(){
    //checkTheRadioAIY();

$("#AnticipatedInsurance1").prop("checked", true);

    dsoPageHelper.checkAnticpatedInsuranceValue();
console.log(window.parent.anticpatedInsuranceValuePlaceHolder)

    populateMasterData();
    popluateTable();
    popluateTable2();
    dsoPageHelper.styleSearchField();

    //var countyFilter=document.getElementById('countyFilter').getElementsByTagName('select')[0];
    //$(countyFilter).addClass('form-control');
    filterByIncident.incidentListOptionsBuild();
    filterByIncident.searchFieldVariableSet();
    filterByIncident.clearIncidentListSelection();
    //filterByIncident.incidentListActionOnChange();
    
   /* var ddcFilter=document.getElementById('ddcFilter').getElementsByTagName('select')[0];
    $(ddcFilter).addClass('form-control');*/
    var a = document.getElementsByClassName('greenCell');
for(var i=0; i&lt;a.length;i++){a[i].parentElement.style.backgroundColor="#00e673";}/*Local Dec*/
  var b = document.getElementsByClassName('yellowCell');
for(var i=0; i&lt;b.length;i++){b[i].parentElement.style.backgroundColor="#ffff00";}
   //totalGrandRowVar();
 //checkTheRadioAIY();




  });

  
</script></html></view><view tablename="Core" name="Inbetween (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="5accea19-1fc9-4371-98de-066dfb8fa6e6" assignable="1"><html><head><title>Inbetween</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/etn/etn.js" /><script type="text/javascript" src="../boards/board_lib.js" /><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em;width:99%;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}

  .fieldsetButtons { 
    display:inline-block;

   }
legend {
   font-size: 10pt;
}
.tableWords {
  font-size: 10pt;
}

</style></head><body><div class="container"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><incidentname /></td><!--<td align="right">
                     <returnbutton type="button" class="btn btn-warning">Back</returnbutton>
                  </td>--></tr><tr><td style="display:none" id="tdBoard" colSpan="2"><boardname /></td></tr><tr><td id="tdBoard" colSpan="3" selected="false" align="center">Supplemental Info<hr /><span style="float:left"><button type="button" class="btn btn-danger btn" data-toggle="modal" data-target="#myModal">Legend</button><space /><span id="pdfButtons" class="hide"><pdflink type="button" class="btn btn-warning" orientation="landscape">PDF</pdflink></span></span></td></tr><tr><td align="right"><returnbutton type="button" class="btn btn-warning">Back</returnbutton></td></tr></tbody></table><div class="container"><!-- Trigger the modal with a button --><!-- Modal --><div class="modal fade" id="myModal" role="dialog"><div class="modal-dialog"><!-- Modal content--><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">x</button><h4 class="modal-title">Legend / Information</h4></div><div class="modal-body"><!--<table id="smallTable" class="table display">
          <tr><td><div style="text-align:center;" class="rowYellow"><span style="text-align:center;font-size:12pt">County / City Totals</span></div></td><td><div style="text-align:center;" class="rowGray"><span style="text-align:center;font-size:12pt">Grand Totals</span></div></td><td><div style="text-align:center;" class="rowRed"><span style="text-align:center;font-size:12pt">FEMA Vetting</span></div></td><td><div style="text-align:center;" class="rowGreen"><span style="text-align:center;font-size:12pt">Yes</span></div></td><td><div style="text-align:center;" class="cellYellow"><span style="font-size:12pt">No</span></div></td><td><div style="text-align:center;" class="cellOrange"><span style="text-align:center;font-size:12pt">N/A</span></div></td></tr>

        </table>--><table><tr><h5><!--<br/>-->xxxxx</h5><hr /><h5>xxxxxx</h5></tr></table></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div></div></div></div></div><div class="content"><!--<h2>Supplemental Info</h2>--><div class="table-responsive" style=""><table class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" rowSpan="1">Jurisdiction Type</td><td selected="false" colSpan="1" rowSpan="1">County / City</td><td selected="false" colSpan="1" rowSpan="1">IA FEMA Vetting</td><td selected="false" colSpan="1" width="" rowSpan="1">IA Comments</td><td selected="false" colSpan="1" rowSpan="1">PA FEMA Vetting</td><td selected="false" colSpan="1" width="" rowSpan="1">PA Comments</td><td selected="false" colSpan="1" rowSpan="1">FEMA Declaration</td><td selected="false" colSpan="1" width="" rowSpan="1">IA FEMA Declaration Comments</td><td selected="false" colSpan="1" width="" rowSpan="1">PA FEMA Declaration Comments</td><td selected="false" colSpan="1" rowSpan="1">SBA Declaration</td><td selected="false" colSpan="1" width="" rowSpan="1">SBA Declaration Comments</td><td selected="false" colSpan="1" width="" rowSpan="1">Edit</td></tr><eocrepeatallrecords rowcount="0"><relatedlist table="Supplemental"><!--<if test="@type='Milage'" table="Supplemental">--><if test="1=0"><eocfield table="Supplemental" type="rl" name="jurisdictionType" /><eocfield table="Supplemental" type="rl" name="county" /><eocfield table="Supplemental" type="rl" name="city" /><eocfield table="Supplemental" type="rl" name="otherValue" /><eocfield table="Supplemental" type="rl" name="femaCheckboxV1" /><eocfield table="Supplemental" type="rl" name="IAComments" /><eocfield table="Supplemental" type="rl" name="femaCheckboxV2" /><eocfield table="Supplemental" type="rl" name="PAComments" /><eocfield table="Supplemental" type="rl" name="femaDeclaration" /><eocfield table="Supplemental" type="rl" name="femaDeclarationComments" /><eocfield table="Supplemental" type="rl" name="femaDeclarationComments2" /><eocfield table="Supplemental" type="rl" name="sbaDeclaration" /><eocfield table="Supplemental" type="rl" name="sbaDeclarationComments" /></if><!--<if test="@hidden='No'" table="Supplemental">--><tr class="agencytemplate_tableentry"><td selected="" colSpan="1" rowSpan="1"><value-of table="Supplemental" type="rl" select="@jurisdictionType" /></td><td selected="" colSpan="1"><value-of table="Supplemental" type="rl" select="@county" /> / <value-of table="Supplemental" type="rl" select="@city" /><!--<if test="@otherValue!=''">--> / <value-of table="Supplemental" type="rl" select="@otherValue" /><!--</if>--></td><td selected="" colSpan="1" rowSpan="1"><value-of table="Supplemental" type="rl" select="@femaCheckboxV1" /></td><td selected="" colSpan="1" width="" rowSpan="1"><value-of table="Supplemental" type="rl" select="@IAComments" /></td><td selected="" colSpan="1" rowSpan="1"><value-of table="Supplemental" type="rl" select="@femaCheckboxV2" /><br /></td><td selected="" colSpan="1" width="" rowSpan="1"><value-of table="Supplemental" type="rl" select="@PAComments" /></td><td selected="" colSpan="1" rowSpan="1"><value-of table="Supplemental" type="rl" select="@femaDeclaration" /></td><td selected="" colSpan="1" width="" rowSpan="1"><value-of table="Supplemental" type="rl" select="@femaDeclarationComments" /></td><td selected="" colSpan="1" width="" rowSpan="1"><value-of table="Supplemental" type="rl" select="@femaDeclarationComments2" /></td><td selected="" colSpan="1" rowSpan="1"><value-of table="Supplemental" type="rl" select="@sbaDeclaration" /></td><td selected="" colSpan="1" width="" rowSpan="1"><value-of table="Supplemental" type="rl" select="@sbaDeclarationComments" /></td><td selected="" colSpan="1" width="" rowSpan="1"><!--<viewlink name="Vetting Input IA (DO NOT ASSIGN)" type="button">Vetting Input IA EDIT</viewlink>--><viewlink name="Vetting Input IA (DO NOT ASSIGN)" type="button">IA EDIT</viewlink><space /><viewlink name="Vetting Input PA (DO NOT ASSIGN)" type="button">PA EDIT</viewlink></td></tr><!--</if>--><!--</if>--></relatedlist></eocrepeatallrecords></tbody></table></div></div></div></body></html></view><view tablename="Supplemental" name="!Summary(DEFAULT)_PDF" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="3cefd570-23ec-4d75-92cf-04fd9f94b8c9" assignable="1"><html><head><title>Summary</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/etn/etn.js" /><script type="text/javascript" src="../boards/board_lib.js" /><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" /><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.5em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em;width:99%;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:70%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
  .rowYellow {background-color:#ffffb3;}
  .rowBlue {background-color:#ccebff;}
  .rowRed {background-color:#FF9999;}
  .lightRowRed {background-color:#FFb3b3;}
  .rowGray {background-color: #b7bfc8;}
.rowReg {}
.rowGreen{background-color:#00e673;}
.cellYellow{background-color:#ffff00;}
.textYellow {color:#ffff99;}
.cellOrange {background-color:#ff751a;}
  .fieldsetButtons { 
    display:inline-block;

   }
legend {
   font-size: 10pt;
}

.tJ {font-size:8pt;background-color:#BDFFFF;color:black; 
}
.smallHeaders {
  font-size: 10pt;
}

.tableWords {
  font-size: 8pt;
}
.smallestWords {
  font-size: 6pt;
}
.PDFhide{ 
display:none; 
}
/*.tableFontSize {
    font-size: 6pt;
}*/

</style></head><body><div class="container"><div class="container agencytemplate_boardbackground"><table class="PDFhide table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><span id="incidentNameSpan"><incidentname /></span></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false" align="center">Recovery Summary
                     
                     
                     <br /><h3>(Bubble Inputs)</h3><hr /><span style="float:left"><button type="button" class="btn btn-danger btn" data-toggle="modal" data-target="#myModal">Legend</button><space /><pdflink id="pdfButton" type="button" class="btn btn-warning" orientation="landscape">PDF</pdflink><space /><button id="fakePdfButton" class="btn btn-danger" orientation="landscape" onclick="pdfFontChangeSize()">Small</button><space /><button id="fakePdfButton2" class="btn btn-danger" orientation="landscape" onclick="pdfFontChangeSize2()">Large</button></span></td></tr></tbody></table><div class="container"><!-- Trigger the modal with a button --><!-- Modal --><div class="modal fade" id="myModal" role="dialog"><div class="modal-dialog"><!-- Modal content--><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">x</button><h4 class="modal-title">Legend / Information</h4></div><div class="modal-body"><!--<table id="smallTable" class="table display">
          <tr><td><div style="text-align:center;" class="rowYellow"><span style="text-align:center;font-size:12pt">County / City Totals</span></div></td><td><div style="text-align:center;" class="rowGray"><span style="text-align:center;font-size:12pt">Grand Totals</span></div></td><td><div style="text-align:center;" class="rowRed"><span style="text-align:center;font-size:12pt">FEMA Vetting</span></div></td><td><div style="text-align:center;" class="rowGreen"><span style="text-align:center;font-size:12pt">Yes</span></div></td><td><div style="text-align:center;" class="cellYellow"><span style="font-size:12pt">No</span></div></td><td><div style="text-align:center;" class="cellOrange"><span style="text-align:center;font-size:12pt">N/A</span></div></td></tr>

        </table>--><table><tr><h5><!--<br/>-->This page shows only Supplemental Inputs (Bubble Inputs)</h5><hr /><h5>Total Jurisdictions are determined if a yes value is entered for Disaster Declaration, if a date is entered into Acknowledgement Letters Sent 1 or 2 or a date is entered into Date Impacted Counties DSO Rec'd.</h5></tr></table></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div></div></div></div></div><div class="content"><div id="buttonsFiltersSearch"><!--<button type="button" class="btn active">View Recovery Summary</button>--><div class="PDFhide"><fieldset class="fieldsetButtons"><legend>Operations</legend><space /><space /><viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink><space /><space /><button type="button" class="btn active">View Recovery Summary</button><!--<viewlink class="btn btn-info" type="button" name="!Summary(DEFAULT)">View Recovery Summary</viewlink>--><space /><space /><viewlink class="btn btn-info" type="button" name="Housing (DO NOT ASSIGN)">View Housing / IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Infrastructure (DO NOT ASSIGN)">View Infrastructure / PA</viewlink><space /><space /><space /><space /><viewlink class="btn btn-success" type="button" name="Bubble Input (DO NOT ASSIGN)">+ New Bubble Input</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>Recovery</legend><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery IA (DO NOT ASSIGN)">View Recovery IA</viewlink><space /><space /><!--<button type="button" class="btn active">View Recovery PA</button>--><viewlink class="btn btn-info" type="button" name="Recovery PA (DO NOT ASSIGN)">View Recovery PA</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>DSO</legend><space /><space /><viewlink class="btn btn-success" type="button" name="Input (DO NOT ASSIGN)">+ New DSO for Testing</viewlink></fieldset></div><hr /><h2>Recovery Summary</h2><div><viewlink class="btn btn-info" type="button" name="!Summary(DEFAULT)">Back</viewlink><space /><pdflink id="pdfButton" type="button" class="btn btn-warning" orientation="landscape">PDF</pdflink></div><hr /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><filterlistdropdown field="county" list="Counties - Texas" defaulttext="All Counties" class="form-control" /><space /><space /><space /><space /><space /><space /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><label for="incidentList" class=""><h4><sub>Incidents:</sub></h4></label><space /><select name="incidentList" id="incidentList" class="form-control" onchange="filterByIncident.incidentListActionOnChange();" /></div><space /><space /><space /><space /><space /><space /><span id="searchDIV"><search exact="false" range="false" rangetext="false"><field name="county" /><field name="city" /></search><clearsearchbutton /><span style="display: none;" id="incidentNameSearchSPAN"><search field="incidentName" clearsearch="true" /></span></span></div></div><div /><br /><div class="table-responsive" style=""><table id="sumTable" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" rowSpan="1" width="" align="center"><span class="tableWords">Total Jurisdictions</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">County / City</span><br /><span class="tableWords">(Click to Edit)</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">Incident Period</span></td><!--<td selected="false" colSpan="1" width="" rowSpan="2" align="center">Disaster Dec
                        
                        
                        <br />(X)
                     
                     
                     </td>--><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">Dec Rec'd Date<br />Local<br />State<br />Fed</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">ACK Letters Sent 1 Date</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">Asst Req'd Date</span></td><!--<td selected="false" colSpan="1" width="" rowSpan="2" align="center">DSO</td>--><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">DSO / Rec'd Date</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">ACK Letters Sent 2 Date</span></td><td selected="false" colSpan="2" width="" rowSpan="1" align="center"><span class="tableWords">IA Dates</span></td><td selected="false" colSpan="2" width="" rowSpan="1" align="center"><span class="tableWords">PA Dates</span></td><!--<td selected="false" colSpan="1" width="" rowSpan="2" align="center">IA PDA FEMA</td>
              <td selected="false" colSpan="1" width="" rowSpan="2" align="center">PA PDA FEMA</td>--></tr><tr class="agencytemplate_tableheader"><td selected="false" align="center" top-align="center" rowSpan="1"><span class="tableWords"><expression useboardlevelfilters="true" name="totalJurisictionsexpression2">sum(isnull(totalJurisdictions,0))</expression></span></td><!--<td selected="false" colSpan="1" width="" rowSpan="1" align="center" style="font-weight: normal; font-size: 10pt;">PDA Requested</td>--><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">PDA SCHED</span></td><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">PDA CMPL</span></td><!--<td selected="false" colSpan="1" width="" rowSpan="1" align="center" style="font-weight: normal; font-size: 10pt;">PDA Requested</td>--><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">PDA SCHED</span></td><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">PDA CMPL</span></td></tr><eocrepeatallrecords rowcount="0" sort=" cast(sortCountyOrder as int) asc, cast(sortCityOrder as int) asc"><if test="1=0"><eocfield name="totalJurisdictions" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /></if><tr class="agencytemplate_tableentry"><td colSpan="1" selected="false" align="center"><if test="@totalJurisdictions!='0'"><div><value-of select="@totalJurisdictions" /></div></if></td><td colSpan="1" selected="false" width=""><viewlink name="Bubble Input (DO NOT ASSIGN)"><span class="tableWords" style="color:#111111"><if test="@jurisdictionType='County'"><div style="text-align:left"><b><value-of select="@county" /></b> / <value-of select="@city" /></div></if><if test="@jurisdictionType='City'"><div style="text-align:right"><value-of select="@county" /> / <b><value-of select="@city" /></b></div></if></span></viewlink></td><td colSpan="1" selected="false" width="" align="center"><!--<eocfield name="incidentPeriod" />--><span class="tableWords"><eocfield table="Core" name="dateOfDisaster1" />- 
                           <eocfield table="Core" name="dateOfDisaster2" /></span></td><!--<td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="declarationIssued" />
                </td>--><td colSpan="1" selected="false" width="" align="center"><span class="tableWords">L <eocfield name="dateDecRec" /><br />S <eocfield name="dateDecRecState" /><br />F <eocfield name="dateDecRecFederal" /></span></td><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="ack1" /></span></td><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="assistanceRequestedDate" /></span></td><!--<td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="dsoYesNo" />
                </td>--><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="dsoYesNo" /> / <eocfield name="impactedCountiesDSO" /></span></td><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="ack2" /></span></td><!--<td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="iaPdaRequested" />
                </td>--><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="iaPDAScheduled" /></span></td><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="iaPDAComplete" /></span></td><!--<td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="paPdaRequested" />
                </td>--><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="paPDAScheduled" /></span></td><td colSpan="1" selected="false" width="" align="center"><span class="tableWords"><eocfield name="paPDAComplete" /></span></td><!--<td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="femaCheckboxV1" />
                </td>
                <td colSpan="1" selected="false" width="" align="center">
                  <eocfield name="femaCheckboxV2" />
                </td>--></tr></eocrepeatallrecords></tbody></table></div></div></div></div></body><script type="text/javascript">

//SCRIPT works at bottom of page, not the top
//document.getElementById("pdfButton").onclick = function() {pdfFontChangeSize()};
//document.getElementById("fakePdfButton").onclick = document.getElementById("pdfButton").click;

function pdfFontChangeSize() {
  alert("resizing");
  //document.getElementsByClassName("tableWords").removeClass("smallestWords");
  $(".tableWords").addClass("smallestWords");
    //document.getElementsByClassName("tableWords").addClass("smallestWords");
}

function pdfFontChangeSize2() {
  alert("resizing");
  //document.getElementsByClassName("tableWords").removeClass("smallestWords");
  $(".tableWords").removeClass("smallestWords");
    //document.getElementsByClassName("tableWords").addClass("smallestWords");
}
 
var dsoPageHelper={


    //startOf: identifying what filter is on
    filterSet: function(arg1,arg2) {
      if($(arg1).html()==='on'){$(arg2).css('font-weight', 'Bold').css('text-decoration', 'underline');}
    },
    
    
    //startOf: styling search field
      styleSearchField: function() {
         var searchFld=document.getElementById('searchDIV').getElementsByTagName('input');
         for(var j=0; j &lt; searchFld.length; j++) {
            if($(searchFld[j]).val()=='Search' || $(searchFld[j]).val()=='Clear Search'){$(searchFld[j]).addClass('btn btn-default');}
          if(searchFld[j].id.search('searchfield')&gt;=0){$(searchFld[j]).addClass('form-control').prop('placeholder', 'Search');}
        }     
      }
  };
   
var incSelList=document.getElementById('incidentList');
var loopAllInputs=document.getElementsByTagName('input');
var incVar;

//startOf: filter by incident process method
var filterByIncident={
 clearIncidentListSelection: function() {
   var incSearch=document.getElementById('incidentNameSearchSPAN').getElementsByTagName('input');
   for(var i=0; i &lt; incSearch.length; i++) {
     if(incSearch[i].value==='') {
       window.parent.window.parent.selectedIncident='';
     } else {
       $('#incidentList').val(window.parent.window.parent.selectedIncident);
     //  console.log(window.parent.window.parent.selectedIncident);
     }      
   }
 },
 searchFieldVariableSet: function() {
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].id &amp;&amp; loopAllInputs[i].getAttribute('id').indexOf('searchfield')&gt; -1){incVar=loopAllInputs[i];}
   }
 },
 incidentListOptionsBuild: function() {
   <for-each select="/data/allincidentlist/incidents">
     incSelList.options[incSelList.options.length]=new Option('<value-of select="@name" />','<value-of select="@name" />',false,false);
  </for-each>
   incSelList.options.selectedIndex=0;
 },
 incidentListActionOnChange: function() {
   incSelList.options[incSelList.options.length]=new Option('','',false,false);
   incVar.value=incSelList.options[incSelList.options.selectedIndex].text;
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].getAttribute('value')=='Search'){$(loopAllInputs[i]).click();}
   }
   window.parent.window.parent.selectedIncident=(incSelList.options[incSelList.options.selectedIndex]).text;
 }
};


$(document).ready(function(){
  
    dsoPageHelper.styleSearchField();
    var countyFilter=document.getElementById('countyFilter').getElementsByTagName('select')[0];
    $(countyFilter).addClass('form-control');
    filterByIncident.incidentListOptionsBuild();
    filterByIncident.searchFieldVariableSet();
    filterByIncident.clearIncidentListSelection();
    
  });


//window.onload = start;

</script></html></view><view tablename="Core" name="Vetted Recovery PA (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="3d6ab0ae-9e89-4783-b5a5-0922f325e817" assignable="1"><html><head><title>Vetted - Local Estimate of Damage to Public Property By Category</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><link href="https://olympus.soc.texas.gov/services/DSO/Scripts/bootstrap-dialog.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/etn/etn.js" /><script type="text/javascript" src="../boards/board_lib.js" /><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" /><script type="text/javascript">


//window.onload=start;

</script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em; width:99%;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
  .rowYellow {background-color:#ffffb3;}
  .rowBlue {background-color:#ccebff;}
  .rowRed {background-color:#FFCCCC;}
  .rowRedTotal {background-color:#FF8C8C;}
  .lightRowRed {background-color:#FFb3b3;}
  .rowGray {background-color: #b7bfc8;}
.rowReg {}
.rowRegExclude{display: none;}
.rowGreen{background-color:#00e673;}
.cellYellow{background-color:#ffff66;}
.textYellow {color:#ffff99;}
.cellOrange {background-color:#ff751a;}
.hideValues {display: none;}
.hideValuesRed {display: none;}
.hideValuesNotVetted {display: none;}
.hideValuesNoInsurance {display: none;}
.fieldsetButtons { 
    display:inline-block;

   }
legend{
   font-size: 10pt;
}
.tableWords {
  font-size: 10pt;
}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><span id="incidentNameSpan"><incidentname /></span></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false"><strong><i>VETTED</i></strong> - Local Estimate of Damage to Public Property By Category - <strong><i>VETTED</i></strong><br /><h3>Infrastructure PDAs have been completed and numbers have been vetted between PA and FEMA</h3><br /><h4><i>TESTING - County total rows' colors not quite there yet -TESTING</i></h4><hr /><span style="float:left"><button type="button" class="btn btn-danger btn" data-toggle="modal" data-target="#myModal">Legend</button><space /><span id="pdfButtons" class="hide"><pdflink type="button" class="btn btn-warning" orientation="landscape">PDF</pdflink><space /></span><span id="dataManRecPA"><dataexport type="button" filename="Recovery PA" class="btn btn-warning"><field name="incidentName" header="Incident Name"></field><field name="totalJurisictionsexpressionInfra2" header="Grand Total Jurisdictions"></field><field name="totalJurisictionsexpressionInfra1" header="Total Jurisdictions"></field><field name="jurisdictionType" header="Jurisdiction Type"></field><field name="county" header="County"></field><field name="city" header="City"></field><field name="catASum" header="Debris Removal Ignore Anticipated Insurance if not entered for Totals"></field><field name="catASumWithInsurance" header="Debris Removal Must Enter Anticipated Insurance for Totals or will be Zero"></field></dataexport></span></span></td></tr></tbody></table><div class="container"><!-- Trigger the modal with a button --><!-- Modal --><div class="modal fade" id="myModal" role="dialog"><div class="modal-dialog"><!-- Modal content--><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">x</button><h4 class="modal-title">Legend / Information</h4></div><div class="modal-body"><table id="smallTable" class="table display"><tr><td><div style="text-align:center;" class="rowYellow"><span style="text-align:center;font-size:12pt">County / City Totals</span></div></td><td><div style="text-align:center;" class="rowGray"><span style="text-align:center;font-size:12pt">Grand Totals</span></div></td><td><div style="text-align:center;" class="rowRed"><span style="text-align:center;font-size:12pt">FEMA Vetting</span></div></td><td><div style="text-align:center;" class="rowGreen"><span style="text-align:center;font-size:12pt">Yes</span></div></td><td><div style="text-align:center;" class="cellYellow"><span style="font-size:12pt">No</span></div></td><td><div style="text-align:center;" class="cellOrange"><span style="text-align:center;font-size:12pt">N/A</span></div></td></tr></table><table><tr><h5><br /><strong>Must Use Anticipated Insurance for Totals: Yes</strong><br />The values with N/A are not factored into the totals. Once all the N/A's are gone, the totals can be considered accurate.</h5><hr /><h5><strong>Must Use Anticipated Insurance for Totals: No</strong><br />The values are factored into the totals, regardless if Anticipated Insurance is entered or not. If Anticipated Insurance is entered, it is subtracted.<br /><br /><span style="color:#c61aff;">NOTE: Use it, if there, if not, don't.(PA Question: Is this the way it should be displayed or take out AI entirely for this choice?)</span></h5><hr /><h5>The RED row indicates that the Infrastructure PDAs have been completed and that the numbers have been vetted between PA and FEMA.</h5></tr></table></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div></div></div></div></div><div class="content"><div><fieldset class="fieldsetButtons"><legend>Operations</legend><space /><space /><viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink><!--<button type="button" class="btn active">View DSO List</button>--><space /><space /><viewlink class="btn btn-info" type="button" name="!Summary(DEFAULT)">View Recovery Summary</viewlink><!--<viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink>--><space /><space /><viewlink class="btn btn-info" type="button" name="Housing (DO NOT ASSIGN)">View Housing / IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Infrastructure (DO NOT ASSIGN)">View Infrastructure / PA</viewlink><space /><space /><space /><space /><viewlink class="btn btn-success" type="button" name="Bubble Input (DO NOT ASSIGN)">+ New Bubble Input</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>Recovery</legend><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery IA (DO NOT ASSIGN)">View Recovery IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery PA (DO NOT ASSIGN)">View Recovery PA</viewlink><space /><space /><button type="button" class="btn active">View Vetted Recovery PA</button></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>DSO</legend><space /><space /><viewlink class="btn btn-success" type="button" name="Input (DO NOT ASSIGN)">+ New DSO for Testing</viewlink><space /><space /><viewlink class="btn btn-warning" type="button" name="Master Input (DO NOT ASSIGN)">+ Master County Totals</viewlink></fieldset></div><hr /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><filterlistdropdown field="county" list="Counties - Texas" defaulttext="All Counties" class="form-control" /><space /><space /><space /><space /><space /><space /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><label for="webeocIncident" class=""><h4><sub>Incidents:</sub></h4></label><space /><select name="webeocIncident" id="webeocIncident" class="form-control" onchange="filterByIncident.incidentListActionOnChange();" /></div><space /><space /><space /><space /><space /><space /><span id="searchDIV"><search exact="false" range="false" rangetext="false"><field name="county" /><field name="city" /><field name="otherValue" /></search><clearsearchbutton /><span style="display: none;" id="incidentNameSearchSPAN"><search field="webeocIncident" clearsearch="true" /></span></span></div><div /><br /><table id="mainTable" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" width="" rowSpan="1" align="center"><span class="tableWords">Total JDX</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span class="tableWords">County / City
                        <br />(Click to Edit DSO)</span></td><td selected="false" colSpan="8" width="" rowSpan="1" align="center" top-align="center" style="background-color:#003366;"><div class="form-inline" id="AnticipatedInsuranceRadios" name="AnticipatedInsuranceRadios" style="background-color:#003366;"><label id="AnticipatedInsuranceLabel" class="control-label" for="AnticipatedInsurance"><h4 style="font-weight: bold;">Must Use Anticipated Insurance for Totals:</h4></label><space /><space /><space /><space /><br /><span style="vertical-align:-12%;"><strong>Yes</strong><space /><input id="AnticipatedInsurance1" type="radio" name="AnticipatedInsurance" value="Yes" /><space /><space /><space /><strong>No</strong><space /><input id="AnticipatedInsurance2" type="radio" name="AnticipatedInsurance" value="No" /></span><!--<input id="AnticipatedInsurance2" type="radio" name="AnticipatedInsurance" value="No" onclick="reloadPage()"/>--></div></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span style="color:#E8E8E8"><span class="tableWords">$$'s towards State Threshold in gray</span><br />--------------<br /><span style="color:white"><span class="tableWords">$$'s towards County Threshold in yellow or red</span></span></span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span class="tableWords">Met?</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span class="tableWords">Disaster Dec</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span class="tableWords">DSO Audit Log</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center" top-align="center"><span class="tableWords">Related Info</span></td></tr><tr class="agencytemplate_tableheader"><td selected="false" align="center" top-align="center" style="font-weight: normal; font-size: 14pt; background-color:#BDFFFF; color:black" rowSpan="1"><span class="tableWords"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionInfra2">sum(case when repairCostTotals!='' and repairCostTotals!='0' and repairCostTotals!='0.00' and repairCostTotals!='0.0000' then 1 else 0 end)</expression></span></td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">A</strong><br />Debris Removal</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">B</strong><br />Police / EMS</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">C</strong><br />Roads &amp; Bridges</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">D</strong><br />Water Facilites</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">E</strong><br />Buildings</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">F</strong><br />Public Utility Systems</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">G</strong><br />Other</td><td selected="false" colSpan="1" width="" rowSpan="1" align="center" top-align="center" style="font-size: 10pt;"><strong style="font-size: 12pt;">A - G</strong><br />Totals</td></tr></tbody></table><eocrepeatallrecords rowcount="0" sort="cast(sortCountyOrder as int) asc, cast(sortCityOrder as int) asc"><if test="1=0"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="otherValue" /><eocfield name="dsoSelected" /><eocfield name="repairCostDebrisClearance" /><eocfield name="insuranceDebrisClearance" /><eocfield name="repairCostEmergency" /><eocfield name="insuranceEmergency" /><eocfield name="repairCostRoadPaved" /><eocfield name="insuranceRoadPaved" /><eocfield name="repairCostWaterControlFacilities" /><eocfield name="insuranceWaterControlFacilities" /><eocfield name="repairCostBuildingsEquipment" /><eocfield name="insuranceBuildingsEquipment" /><eocfield name="repairCostUtilitySystems" /><eocfield name="insuranceUtilitySystems" /><eocfield name="repairCostOther" /><eocfield name="insuranceOther" /><eocfield name="repairCostTotals" /><eocfield name="cat01" /><eocfield name="cat02" /><eocfield name="cat03" /><eocfield name="cat04" /><eocfield name="cat05" /><eocfield name="cat06" /><eocfield name="cat07" /><eocfield name="cat08" /><eocfield name="cat09" /><eocfield name="cat10" /><eocfield name="cat11" /><eocfield name="cat12" /><eocfield name="cat13" /><eocfield name="cat14" /><eocfield name="cat15" /><eocfield name="repairCost01" /><eocfield name="repairCost02" /><eocfield name="repairCost03" /><eocfield name="repairCost04" /><eocfield name="repairCost05" /><eocfield name="repairCost06" /><eocfield name="repairCost07" /><eocfield name="repairCost08" /><eocfield name="repairCost09" /><eocfield name="repairCost10" /><eocfield name="repairCost11" /><eocfield name="repairCost12" /><eocfield name="repairCost13" /><eocfield name="repairCost14" /><eocfield name="repairCost15" /><eocfield name="insurance01" /><eocfield name="insurance02" /><eocfield name="insurance03" /><eocfield name="insurance04" /><eocfield name="insurance05" /><eocfield name="insurance06" /><eocfield name="insurance07" /><eocfield name="insurance08" /><eocfield name="insurance09" /><eocfield name="insurance10" /><eocfield name="insurance11" /><eocfield name="insurance12" /><eocfield name="insurance13" /><eocfield name="insurance14" /><eocfield name="insurance15" /><eocfield name="declarationIssued" /><eocfield name="stateThreshold" /></if><relatedlist table="Supplemental"><if test="1=0"><eocfield table="Supplemental" type="rl" name="dateDecRecState" /><eocfield table="Supplemental" type="rl" name="dateDecRecFederal" /><eocfield table="Supplemental" type="rl" name="declarationIssuedFederal" /><eocfield table="Supplemental" type="rl" name="declarationIssuedState" /></if></relatedlist><span style="display:none;font-weight: normal; font-size: 10pt;" class="data" name="data" id="data"><span id="catSumsSpan" style="display:none;"><expression useboardlevelfilters="true" name="catASum">
      ((case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'A' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'A' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'A' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'A' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'A' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'A' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'A' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'A' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'A' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'A' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'A' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'A' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'A' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'A' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'A' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'A' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'A' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'A' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'A' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'A' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'A' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'A' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'A' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'A' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'A' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'A' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'A' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'A' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'A' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostDebrisClearance as money))-(cast(insuranceDebrisClearance as money)))
      </expression>/end A start B/<expression useboardlevelfilters="true" name="catBSum">
      ((case when cat01 = 'B' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'B' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'B' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'B' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'B' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'B' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'B' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'B' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'B' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'B' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'B' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'B' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'B' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'B' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'B' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'B' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'B' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'B' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'B' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'B' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'B' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'B' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'B' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'B' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'B' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'B' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'B' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'B' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'B' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'B' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostEmergency as money))-(cast(insuranceEmergency as money)))
      </expression>/end B start C/<expression useboardlevelfilters="true" name="catCSum">
      ((case when cat01 = 'C' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'C' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'C' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'C' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'C' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'C' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'C' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'C' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'C' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'C' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'C' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'C' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'C' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'C' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'C' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'C' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'C' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'C' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'C' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'C' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'C' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'C' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'C' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'C' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'C' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'C' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'C' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'C' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'C' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'C' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostRoadPaved as money))-(cast(insuranceRoadPaved as money)))
      </expression>/end C start D/<expression useboardlevelfilters="true" name="catDSum">
      ((case when cat01 = 'D' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'D' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'D' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'D' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'D' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'D' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'D' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'D' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'D' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'D' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'D' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'D' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'D' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'D' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'D' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'D' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'D' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'D' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'D' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'D' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'D' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'D' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'D' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'D' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'D' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'D' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'D' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'D' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'D' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'D' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostWaterControlFacilities as money))-(cast(insuranceWaterControlFacilities as money)))
      </expression>/end D start E/<expression useboardlevelfilters="true" name="catESum">
      ((case when cat01 = 'E' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'E' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'E' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'E' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'E' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'E' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'E' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'E' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'E' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'E' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'E' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'E' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'E' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'E' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'E' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'E' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'E' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'E' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'E' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'E' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'E' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'E' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'E' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'E' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'E' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'E' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'E' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'E' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'E' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'E' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostBuildingsEquipment as money))-(cast(insuranceBuildingsEquipment as money)))
      </expression>/end E start F/<expression useboardlevelfilters="true" name="catFSum">
      ((case when cat01 = 'F' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'F' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'F' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'F' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'F' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'F' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'F' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'F' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'F' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'F' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'F' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'F' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'F' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'F' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'F' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'F' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'F' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'F' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'F' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'F' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'F' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'F' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'F' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'F' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'F' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'F' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'F' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'F' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'F' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'F' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostUtilitySystems as money))-(cast(insuranceUtilitySystems as money)))
      </expression>/end F start G/<expression useboardlevelfilters="true" name="catGSum">
      ((case when cat01 = 'G' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'G' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'G' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'G' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'G' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'G' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'G' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'G' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'G' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'G' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'G' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'G' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'G' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'G' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'G' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'G' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'G' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'G' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'G' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'G' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'G' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'G' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'G' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'G' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'G' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'G' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'G' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'G' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'G' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'G' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostOther as money))-(cast(insuranceOther as money)))
      </expression>/end G start All/<expression useboardlevelfilters="true" name="catSumTotal">
     ((case when cat01 = 'A' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'A' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'A' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'A' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'A' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'A' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'A' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'A' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'A' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'A' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'A' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'A' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'A' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'A' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'A' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'A' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'A' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'A' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'A' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'A' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'A' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'A' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'A' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'A' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'A' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'A' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'A' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'A' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'A' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'A' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostDebrisClearance as money))-(cast(insuranceDebrisClearance as money)))+
      ((case when cat01 = 'B' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'B' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'B' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'B' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'B' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'B' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'B' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'B' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'B' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'B' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'B' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'B' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'B' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'B' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'B' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'B' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'B' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'B' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'B' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'B' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'B' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'B' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'B' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'B' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'B' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'B' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'B' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'B' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'B' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'B' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostEmergency as money))-(cast(insuranceEmergency as money)))+
      ((case when cat01 = 'C' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'C' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'C' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'C' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'C' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'C' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'C' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'C' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'C' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'C' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'C' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'C' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'C' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'C' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'C' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'C' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'C' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'C' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'C' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'C' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'C' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'C' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'C' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'C' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'C' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'C' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'C' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'C' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'C' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'C' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostRoadPaved as money))-(cast(insuranceRoadPaved as money)))+
      ((case when cat01 = 'D' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'D' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'D' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'D' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'D' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'D' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'D' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'D' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'D' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'D' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'D' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'D' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'D' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'D' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'D' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'D' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'D' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'D' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'D' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'D' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'D' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'D' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'D' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'D' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'D' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'D' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'D' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'D' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'D' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'D' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostWaterControlFacilities as money))-(cast(insuranceWaterControlFacilities as money)))+
      ((case when cat01 = 'E' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'E' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'E' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'E' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'E' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'E' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'E' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'E' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'E' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'E' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'E' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'E' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'E' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'E' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'E' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'E' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'E' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'E' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'E' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'E' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'E' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'E' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'E' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'E' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'E' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'E' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'E' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'E' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'E' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'E' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostBuildingsEquipment as money))-(cast(insuranceBuildingsEquipment as money)))+
      ((case when cat01 = 'F' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'F' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'F' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'F' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'F' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'F' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'F' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'F' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'F' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'F' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'F' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'F' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'F' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'F' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'F' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'F' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'F' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'F' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'F' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'F' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'F' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'F' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'F' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'F' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'F' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'F' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'F' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'F' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'F' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'F' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostUtilitySystems as money))-(cast(insuranceUtilitySystems as money)))+
      ((case when cat01 = 'G' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'G' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'G' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'G' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'G' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'G' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'G' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'G' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'G' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'G' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'G' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'G' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'G' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'G' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'G' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'G' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'G' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'G' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'G' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'G' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'G' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'G' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'G' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'G' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'G' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'G' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'G' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'G' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'G' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'G' then isNull(cast(insurance15 as money),0) else 0 end))+
      ((cast(repairCostOther as money))-(cast(insuranceOther as money)))
      </expression></span><span id="catSumsSpanWithInsurance" style="display:none;"><expression useboardlevelfilters="true" name="catASumWithInsurance">
      ((case when cat01 = 'A' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'A' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'A' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'A' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'A' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'A' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'A' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'A' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'A' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'A' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'A' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'A' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'A' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'A' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'A' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'A' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'A' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'A' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'A' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'A' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'A' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'A' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'A' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'A' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'A' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'A' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'A' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'A' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'A' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'A' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceDebrisClearance != '' then isNull(cast(repairCostDebrisClearance as money),0) else 0 end))-(cast(insuranceDebrisClearance as money)))
      </expression>/end A start B/<expression useboardlevelfilters="true" name="catBSumWithInsurance">
      ((case when cat01 = 'B' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'B' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'B' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'B' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'B' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'B' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'B' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'B' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'B' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'B' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'B' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'B' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'B' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'B' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'B' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'B' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'B' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'B' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'B' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'B' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'B' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'B' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'B' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'B' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'B' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'B' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'B' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'B' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'B' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'B' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceEmergency != '' then isNull(cast(repairCostEmergency as money),0) else 0 end))-(cast(insuranceEmergency as money)))
      </expression>/end B start C/<expression useboardlevelfilters="true" name="catCSumWithInsurance">
      ((case when cat01 = 'C' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'C' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'C' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'C' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'C' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'C' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'C' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'C' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'C' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'C' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'C' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'C' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'C' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'C' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'C' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'C' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'C' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'C' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'C' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'C' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'C' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'C' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'C' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'C' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'C' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'C' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'C' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'C' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'C' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'C' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceRoadPaved != '' then isNull(cast(repairCostRoadPaved as money),0) else 0 end))-(cast(insuranceRoadPaved as money)))
      </expression>/end C start D/<expression useboardlevelfilters="true" name="catDSumWithInsurance">
      ((case when cat01 = 'D' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'D' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'D' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'D' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'D' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'D' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'D' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'D' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'D' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'D' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'D' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'D' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'D' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'D' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'D' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'D' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'D' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'D' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'D' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'D' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'D' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'D' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'D' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'D' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'D' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'D' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'D' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'D' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'D' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'D' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceWaterControlFacilities != '' then isNull(cast(repairCostWaterControlFacilities as money),0) else 0 end))-(cast(insuranceWaterControlFacilities as money)))
      </expression>/end D start E/<expression useboardlevelfilters="true" name="catESumWithInsurance">
      ((case when cat01 = 'E' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'E' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'E' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'E' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'E' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'E' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'E' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'E' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'E' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'E' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'E' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'E' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'E' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'E' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'E' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'E' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'E' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'E' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'E' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'E' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'E' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'E' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'E' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'E' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'E' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'E' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'E' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'E' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'E' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'E' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceBuildingsEquipment != '' then isNull(cast(repairCostBuildingsEquipment as money),0) else 0 end))-(cast(insuranceBuildingsEquipment as money)))
      </expression>/end E start F/<expression useboardlevelfilters="true" name="catFSumWithInsurance">
      ((case when cat01 = 'F' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'F' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'F' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'F' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'F' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'F' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'F' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'F' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'F' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'F' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'F' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'F' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'F' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'F' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'F' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'F' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'F' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'F' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'F' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'F' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'F' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'F' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'F' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'F' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'F' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'F' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'F' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'F' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'F' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'F' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceUtilitySystems != '' then isNull(cast(repairCostUtilitySystems as money),0) else 0 end))-(cast(insuranceUtilitySystems as money)))
      </expression>/end F start G/<expression useboardlevelfilters="true" name="catGSumWithInsurance">
      ((case when cat01 = 'G' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'G' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'G' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'G' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'G' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'G' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'G' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'G' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'G' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'G' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'G' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'G' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'G' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'G' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'G' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'G' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'G' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'G' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'G' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'G' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'G' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'G' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'G' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'G' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'G' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'G' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'G' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'G' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'G' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'G' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceOther != '' then isNull(cast(repairCostOther as money),0) else 0 end))-(cast(insuranceOther as money)))
      </expression>/end G start All/<expression useboardlevelfilters="true" name="catSumTotalWithInsurance">
     ((case when cat01 = 'A' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'A' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'A' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'A' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'A' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'A' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'A' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'A' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'A' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'A' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'A' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'A' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'A' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'A' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'A' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'A' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'A' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'A' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'A' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'A' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'A' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'A' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'A' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'A' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'A' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'A' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'A' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'A' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'A' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'A' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceDebrisClearance != '' then isNull(cast(repairCostDebrisClearance as money),0) else 0 end))-(cast(insuranceDebrisClearance as money)))+
      ((case when cat01 = 'B' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'B' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'B' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'B' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'B' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'B' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'B' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'B' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'B' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'B' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'B' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'B' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'B' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'B' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'B' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'B' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'B' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'B' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'B' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'B' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'B' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'B' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'B' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'B' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'B' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'B' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'B' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'B' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'B' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'B' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceEmergency != '' then isNull(cast(repairCostEmergency as money),0) else 0 end))-(cast(insuranceEmergency as money)))+
      ((case when cat01 = 'C' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'C' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'C' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'C' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'C' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'C' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'C' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'C' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'C' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'C' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'C' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'C' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'C' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'C' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'C' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'C' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'C' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'C' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'C' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'C' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'C' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'C' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'C' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'C' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'C' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'C' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'C' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'C' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'C' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'C' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceRoadPaved != '' then isNull(cast(repairCostRoadPaved as money),0) else 0 end))-(cast(insuranceRoadPaved as money)))+
      ((case when cat01 = 'D' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'D' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'D' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'D' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'D' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'D' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'D' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'D' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'D' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'D' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'D' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'D' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'D' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'D' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'D' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'D' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'D' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'D' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'D' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'D' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'D' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'D' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'D' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'D' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'D' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'D' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'D' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'D' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'D' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'D' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceWaterControlFacilities != '' then isNull(cast(repairCostWaterControlFacilities as money),0) else 0 end))-(cast(insuranceWaterControlFacilities as money)))+
      ((case when cat01 = 'E' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'E' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'E' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'E' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'E' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'E' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'E' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'E' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'E' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'E' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'E' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'E' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'E' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'E' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'E' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'E' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'E' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'E' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'E' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'E' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'E' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'E' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'E' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'E' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'E' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'E' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'E' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'E' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'E' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'E' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceBuildingsEquipment != '' then isNull(cast(repairCostBuildingsEquipment as money),0) else 0 end))-(cast(insuranceBuildingsEquipment as money)))+
      ((case when cat01 = 'F' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'F' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'F' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'F' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'F' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'F' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'F' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'F' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'F' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'F' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'F' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'F' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'F' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'F' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'F' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'F' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'F' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'F' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'F' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'F' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'F' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'F' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'F' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'F' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'F' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'F' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'F' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'F' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'F' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'F' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceUtilitySystems != '' then isNull(cast(repairCostUtilitySystems as money),0) else 0 end))-(cast(insuranceUtilitySystems as money)))+
      ((case when cat01 = 'G' and insurance01 != '' then isNull(cast(repairCost01 as money),0) else 0 end)-(case when cat01 = 'G' then isNull(cast(insurance01 as money),0) else 0 end))+
      ((case when cat02 = 'G' and insurance02 != '' then isNull(cast(repairCost02 as money),0) else 0 end)-(case when cat02 = 'G' then isNull(cast(insurance02 as money),0) else 0 end))+
      ((case when cat03 = 'G' and insurance03 != '' then isNull(cast(repairCost03 as money),0) else 0 end)-(case when cat03 = 'G' then isNull(cast(insurance03 as money),0) else 0 end))+
      ((case when cat04 = 'G' and insurance04 != '' then isNull(cast(repairCost04 as money),0) else 0 end)-(case when cat04 = 'G' then isNull(cast(insurance04 as money),0) else 0 end))+
      ((case when cat05 = 'G' and insurance05 != '' then isNull(cast(repairCost05 as money),0) else 0 end)-(case when cat05 = 'G' then isNull(cast(insurance05 as money),0) else 0 end))+
      ((case when cat06 = 'G' and insurance06 != '' then isNull(cast(repairCost06 as money),0) else 0 end)-(case when cat06 = 'G' then isNull(cast(insurance06 as money),0) else 0 end))+
      ((case when cat07 = 'G' and insurance07 != '' then isNull(cast(repairCost07 as money),0) else 0 end)-(case when cat07 = 'G' then isNull(cast(insurance07 as money),0) else 0 end))+
      ((case when cat08 = 'G' and insurance08 != '' then isNull(cast(repairCost08 as money),0) else 0 end)-(case when cat08 = 'G' then isNull(cast(insurance08 as money),0) else 0 end))+
      ((case when cat09 = 'G' and insurance09 != '' then isNull(cast(repairCost09 as money),0) else 0 end)-(case when cat09 = 'G' then isNull(cast(insurance09 as money),0) else 0 end))+
      ((case when cat10 = 'G' and insurance10 != '' then isNull(cast(repairCost10 as money),0) else 0 end)-(case when cat10 = 'G' then isNull(cast(insurance10 as money),0) else 0 end))+
      ((case when cat11 = 'G' and insurance11 != '' then isNull(cast(repairCost11 as money),0) else 0 end)-(case when cat11 = 'G' then isNull(cast(insurance11 as money),0) else 0 end))+
      ((case when cat12 = 'G' and insurance12 != '' then isNull(cast(repairCost12 as money),0) else 0 end)-(case when cat12 = 'G' then isNull(cast(insurance12 as money),0) else 0 end))+
      ((case when cat13 = 'G' and insurance13 != '' then isNull(cast(repairCost13 as money),0) else 0 end)-(case when cat13 = 'G' then isNull(cast(insurance13 as money),0) else 0 end))+
      ((case when cat14 = 'G' and insurance14 != '' then isNull(cast(repairCost14 as money),0) else 0 end)-(case when cat14 = 'G' then isNull(cast(insurance14 as money),0) else 0 end))+
      ((case when cat15 = 'G' and insurance15 != '' then isNull(cast(repairCost15 as money),0) else 0 end)-(case when cat15 = 'G' then isNull(cast(insurance15 as money),0) else 0 end))+
      (((case when insuranceOther != '' then isNull(cast(repairCostOther as money),0) else 0 end))-(cast(insuranceOther as money)))
      </expression></span><value-of select="@sortCountyOrder" />

      |<value-of select="@sortCityOrder" />

      |<div align="center"><if test="@totalJurisictionsexpressionInfra1!='0'"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionInfra1">(case when (repairCostTotals!='' and repairCostTotals!='0' and repairCostTotals!='0.00' and repairCostTotals!='0.0000') or (repairCostTotal!='' and repairCostTotal!='0' and repairCostTotal!='0.00' and repairCostTotal!='0.0000') then 1 else 0 end)</expression></if></div>
      
      |<value-of select="@jurisdictionType" />

      |<viewlink name="Input (DO NOT ASSIGN)"><span style="color:#111111"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b> /
                        <value-of select="@city" /><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if><if test="@jurisdictionType='City'"><value-of select="@county" /> /
                        <b><value-of select="@city" /></b><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if></span></viewlink><space />

      |<value-of select="@county" />|<value-of select="@city" />

      |<value-of select="format-number(@catASum, '###0.00')"></value-of><space />
      

      |<value-of select="format-number(@catBSum, '###0.00')"></value-of><space />
      
      
      |<value-of select="format-number(@catCSum, '###0.00')"></value-of><space />
      
      
      |<value-of select="format-number(@catDSum, '###0.00')"></value-of><space />
      
      
      |<value-of select="format-number(@catESum, '###0.00')"></value-of><space />
      
      |<value-of select="format-number(@catFSum, '###0.00')"></value-of><space />
      
      |<value-of select="format-number(@catGSum, '###0.00')"></value-of><space />
      
      |<value-of select="format-number(@catSumTotal, '###0.00')"></value-of><space />

      |






    
        <span style="display: none;"><relatedexpression name="declarationIssuedStateTest" table="Supplemental">sum(case when declarationIssuedState='Yes' then 1 else 0 end)</relatedexpression><relatedexpression name="declarationIssuedFederalTest" table="Supplemental">sum(case when declarationIssuedFederal='Yes' then 1 else 0 end)</relatedexpression></span><if test="@declarationIssued='Yes'"><span class="greenCell">Local<br /></span></if><if test="@declarationIssuedStateTest &gt; '0'" table="Supplemental"><span class="greenCell">State</span></if><if test="@declarationIssuedFederalTest &gt; '0'" table="Supplemental"><span class="greenCell"><br />Federal</span></if>        







      |NomNom17

      |<viewlink name="DSO Audit RelatedList (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">DSO History</button></viewlink>

      |

      |<relatedexpression name="femaTest2" table="Supplemental">sum(case when femaCheckboxV2='Yes' then 1 else 0 end)</relatedexpression>
      |<viewlink name="Inbetween (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">Supplemental Info</button></viewlink>

      |<expression useboardlevelfilters="true" name="repairCostVSinsurance">(case when (repairCostDebrisClearance!='' and insuranceDebrisClearance='') or (repairCostEmergency!='' and insuranceEmergency='') or (repairCostRoadPaved!='' and insuranceRoadPaved='') or (repairCostWaterControlFacilities!='' and insuranceWaterControlFacilities='') or (repairCostBuildingsEquipment!='' and insuranceBuildingsEquipment='') or (repairCostUtilitySystems!='' and insuranceUtilitySystems='') or (repairCostOther!='' and insuranceOther='') or (cat01!='' and insurance01='') or (cat02!='' and insurance02='') or (cat03!='' and insurance03='') or (cat04!='' and insurance04='') or (cat05!='' and insurance05='') or (cat06!='' and insurance06='') or (cat07!='' and insurance07='') or (cat08!='' and insurance08='') or (cat09!='' and insurance09='') or (cat10!='' and insurance10='') or (cat11!='' and insurance11='') or (cat12!='' and insurance12='') or (cat13!='' and insurance13='') or (cat14!='' and insurance14='') or (cat15!='' and insurance15='') then 1 else 0 end)</expression>

      |<value-of select="format-number(@catASumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostDebrisClearance != '' and @insuranceDebrisClearance = '') or (@cat01 = 'A' and @repairCost01 != '' and @insurance01 = '') or (@cat02 = 'A' and @repairCost02 != '' and @insurance02 = '') or (@cat03 = 'A' and @repairCost03 != '' and @insurance03 = '') or (@cat04 = 'A' and @repairCost04 != '' and @insurance04 = '') or (@cat05 = 'A' and @repairCost05 != '' and @insurance05 = '') or (@cat06 = 'A' and @repairCost06 != '' and @insurance06 = '') or (@cat07 = 'A' and @repairCost07 != '' and @insurance07 = '') or (@cat08 = 'A' and @repairCost08 != '' and @insurance08 = '') or (@cat09 = 'A' and @repairCost09 != '' and @insurance09 = '') or (@cat10 = 'A' and @repairCost10 != '' and @insurance10 = '') or (@cat11 = 'A' and @repairCost11 != '' and @insurance11 = '') or (@cat12 = 'A' and @repairCost12 != '' and @insurance12 = '') or (@cat13 = 'A' and @repairCost13 != '' and @insurance13 = '') or (@cat14 = 'A' and @repairCost14 != '' and @insurance14 = '') or (@cat15 = 'A' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catBSumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostEmergency != '' and @insuranceEmergency = '') or (@cat01 ='B' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='B' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='B' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='B' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='B' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='B' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='B' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='B' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='B' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='B' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='B' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='B' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='B' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='B' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='B' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catCSumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostRoadPaved != '' and @insuranceRoadPaved = '') or (@cat01 ='C' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='C' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='C' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='C' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='C' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='C' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='C' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='C' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='C' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='C' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='C' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='C' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='C' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='C' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='C' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catDSumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostWaterControlFacilities != '' and @insuranceWaterControlFacilities = '') or (@cat01 ='D' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='D' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='D' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='D' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='D' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='D' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='D' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='D' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='D' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='D' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='D' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='D' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='D' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='D' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='D' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catESumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostBuildingsEquipment != '' and @insuranceBuildingsEquipment = '') or (@cat01 ='E' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='E' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='E' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='E' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='E' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='E' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='E' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='E' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='E' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='E' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='E' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='E' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='E' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='E' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='E' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catFSumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostUtilitySystems != '' and @insuranceUtilitySystems = '') or (@cat01 ='F' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='F' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='F' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='F' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='F' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='F' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='F' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='F' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='F' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='F' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='F' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='F' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='F' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='F' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='F' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catGSumWithInsurance, '###0.00')"></value-of><space /><if test="(@repairCostOther != '' and @insuranceOther = '') or (@cat01 ='G' and @repairCost01 != '' and @insurance01 = '') or (@cat02 ='G' and @repairCost02 != '' and @insurance02 = '') or (@cat03 ='G' and @repairCost03 != '' and @insurance03 = '') or (@cat04 ='G' and @repairCost04 != '' and @insurance04 = '') or (@cat05 ='G' and @repairCost05 != '' and @insurance05 = '') or (@cat06 ='G' and @repairCost06 != '' and @insurance06 = '') or (@cat07 ='G' and @repairCost07 != '' and @insurance07 = '') or (@cat08 ='G' and @repairCost08 != '' and @insurance08 = '') or (@cat09 ='G' and @repairCost09 != '' and @insurance09 = '') or (@cat10 ='G' and @repairCost10 != '' and @insurance10 = '') or (@cat11 ='G' and @repairCost11 != '' and @insurance11 = '') or (@cat12 ='G' and @repairCost12 != '' and @insurance12 = '') or (@cat13 ='G' and @repairCost13 != '' and @insurance13 = '') or (@cat14 ='G' and @repairCost14 != '' and @insurance14 = '') or (@cat15 ='G' and @repairCost15 != '' and @insurance15 = '')">(N/A)</if>

      |<value-of select="format-number(@catSumTotalWithInsurance, '###0.00')"></value-of>

      |30x<br /><externalexpression name="totalCountyCount" table="Core">sum(case when county='Anderson' then 1 else 0 end)</externalexpression>

      |31

      |32

      |33

      |

      |<!--DONT write Comments here in the array spots That will stop the totals from happening! - DELETE these comments if you intend to use an expression here--></span><!--and this and that and this and that whole row--><!--then another--></eocrepeatallrecords></div></div><!--<embedview style="display:none" view="Bubble Letter Embed"/>--></body><script type="text/javascript">
   //this newRow adds places in the array to the table rows as they add for a regular row -- td's need to added as needed
   var newRow = function(table,position,data,rowClass){
    //console.log(data);
   var row = table.insertRow(position);
   var align='left';
    if(trim(data[3])==="City"){
align='right'
  }
  var metClass="NoClass";
  if(comma(data[16])==='Yes'){
   metClass="rowGreen";
  } else if (comma(data[16])==='No'){
    metClass="cellYellow";
  } else if (comma(data[16])==='(N/A)'){
    metClass="cellOrange";
  }
  if(data[21]=='1'){
  
   data[16]='(N/A)';
  }
  
  //row.className('agencytemplate_tableentry');
    row.innerHTML = '<td>'+data[0]+'</td>'+'<td align="'+align+'">'+data[4]+'</td>'+'<td>'+comma(data[7])+'</td>'+'<td>'+comma(data[8])+'</td>'+'<td>'+comma(data[9])+'</td>'+'<td>'+comma(data[10])+'</td>'+'<td>'+comma(data[11])+'</td>'+'<td>'+comma(data[12])+'</td>'+'<td>'+comma(data[13])+'</td>'+'<td>'+comma(data[14])+'</td>'+'<td>'+comma(data[15])+'</td>'+'<td class="'+metClass+'">'+comma(data[16])+'</td>'+'<td>'+comma(data[17])+'</td>'+'<td>'+comma(data[18])+'</td>'+'<td>'+comma(data[19])+'</td>'+'<td>'+comma(data[20])+'</td>'+'<td>'+comma(data[21])+'</td>'+'<td>'+comma(data[22])+'</td>'+'<td>'+comma(data[23])+'</td>'+'<td>'+comma(data[24])+'</td>'+'<td>'+comma(data[25])+'</td>'+'<td>'+comma(data[26])+'</td>'+'<td>'+comma(data[27])+'</td>'+'<td>'+comma(data[28])+'</td>'+'<td>'+comma(data[29])+'</td>'+'<td>'+comma(data[30])+'</td>'+'<td>'+comma(data[31])+'</td>';//view femaCheck total cell[20] here, [21] here is for NA 1 or 0, Below in row array in spot masterData[i][19] is FEMA in comment area "adds regular row"
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowClass;
    //agencytemplate_tableroweven
}
 //threshold totals and limits
function threshold(c){
var a = [["Anderson","208110.48"],["Andrews","52638.16"],["Angelina","308904.76"],["Aransas","82442.48"],["Archer","32232.24"],["Armstrong","6767.56"],["Atascosa","159883.16"],["Austin","101164.52"],["Bailey","25507.40"],["Bandera","72926.60"],["Bastrop","264048.76"],["Baylor","13264.56"],["Bee","113425.16"],["Bell","1104436.60"],["Bexar","6104591.88"],["Blanco","37369.32"],["Borden","2281.96"],["Bosque","64834.72"],["Bowie","329531.40"],["Brazoria","1114870.96"],["Brazos","693669.56"],["Brewster","32865.92"],["Briscoe","5827.72"],["Brooks","25713.88"],["Brown","135657.36"],["Burleson","61185.72"],["Burnet","152190.00"],["Caldwell","135514.96"],["Calhoun","76116.36"],["Callahan","48216.64"],["Cameron","1446143.20"],["Camp","44147.56"],["Carson","22007.92"],["Cass","108451.84"],["Castro","28700.72"],["Chambers","124941.76"],["Cherokee","181008.20"],["Childress","25065.96"],["Clay","38277.12"],["Cochran","11132.12"],["Coke","11819.20"],["Coleman","31666.20"],["Collin","2785133.96"],["Collingsworth","10882.92"],["Colorado","74311.44"],["Comal","386160.32"],["Comanche","49747.44"],["Concho","14549.72"],["Cooke","136835.72"],["Coryell","268381.28"],["Cottle","5357.80"],["Crane","15575.00"],["Crockett","13239.64"],["Crosby","21570.04"],["Culberson","8536.88"],["Dallam","23862.68"],["Dallas","8430574.84"],["Dawson","49245.48"],["Deaf Smith","68964.32"],["Delta","18622.36"],["Denton","2358905.84"],["DeWitt","71545.32"],["Dickens","8700.64"],["Dimmit","35585.76"],["Donley","13090.12"],["Duval","41943.92"],["Eastland","66155.48"],["Ector","488182.80"],["Edwards","7127.12"],["El Paso","2850303.32"],["Ellis","532611.60"],["Erath","134888.40"],["Falls","63602.96"],["Fannin","120737.40"],["Fayette","87412.24"],["Fisher","14147.44"],["Floyd","22947.76"],["Foard","4756.16"],["Fort Bend","2083935.00"],["Franklin","37753.80"],["Freestone","70544.96"],["Frio","61292.52"],["Gaines","62392.56"],["Galveston","1037060.04"],["Garza","23001.16"],["Gillespie","88419.72"],["Glasscock","4364.56"],["Goliad","25667.60"],["Gonzales","70512.92"],["Gray","80224.60"],["Grayson","430322.12"],["Gregg","433358.80"],["Grimes","94710.24"],["Guadalupe","468257.48"],["Hale","129131.88"],["Hall","11936.68"],["Hamilton","30320.52"],["Hansford","19982.28"],["Hardeman","14734.84"],["Hardin","194500.60"],["Harris","14569154.04"],["Harrison","233646.36"],["Hartley","21580.72"],["Haskell","21000.44"],["Hays","559300.92"],["Hemphill","13552.92"],["Henderson","279573.92"],["Hidalgo","2758177.64"],["Hill","124916.84"],["Hockley","81648.60"],["Hood","182207.92"],["Hopkins","125173.16"],["Houston","84485.92"],["Howard","124642.72"],["Hudspeth","12374.56"],["Hunt","306619.24"],["Hutchinson","78854.00"],["Irion","5692.44"],["Jack","32196.64"],["Jackson","50107.00"],["Jasper","127127.60"],["Jeff Davis","8337.52"],["Jefferson","898091.88"],["Jim Hogg","18868.00"],["Jim Wells","145383.28"],["Johnson","537325.04"],["Jones","71919.12"],["Karnes","52773.44"],["Kaufman","367926.00"],["Kendall","118939.60"],["Kenedy","1480.96"],["Kent","2876.48"],["Kerr","176665"],["Kimble","16400.92"],["King","1018.16"],["Kinney","12808.88"],["Kleberg","114137.16"],["Knox","13239.64"],["La Salle","24514.16"],["Lamar","177263.08"],["Lamb","49758.12"],["Lampasas","70050.12"],["Lavaca","68576.28"],["Lee","59138.72"],["Leon","59811.56"],["Liberty","269289.08"],["Limestone","83247.04"],["Lipscomb","11755.12"],["Live Oak","41050.36"],["Llano","68711.56"],["Loving","291.92"],["Lubbock","992638.36"],["Lynn","21057.40"],["Madison","48643.84"],["Marion","37543.76"],["Martin","17084.44"],["Mason","14282.72"],["Matagorda","130659.12"],["Maverick","193158.48"],["McCulloch","29487.48"],["McLennan","836265.36"],["McMullen","2516.92"],["Medina","163781.36"],["Menard","7981.52"],["Midland","487264.32"],["Milam","88134.92"],["Mills","17572.16"],["Mitchell","33474.68"],["Montague","70199.64"],["Montgomery","1622455.76"],["Moore","77978.24"],["Morris","46045.04"],["Motley","4307.60"],["Nacogdoches","229705.44"],["Navarro","169936.60"],["Newton","51424.20"],["Nolan","54168.96"],["Nueces","1211193.88"],["Ochiltree","36393.88"],["Oldham","7305.12"],["Orange","291339.72"],["Palo Pinto","100075.16"],["Panola","84713.76"],["Parker","416260.12"],["Parmer","36557.64"],["Pecos","55204.92"],["Polk","161670.28"],["Potter","431019.88"],["Presidio","27832.08"],["Rains","38853.84"],["Randall","429781.00"],["Reagan","11986.52"],["Real","11780.04"],["Red River","45781.60"],["Reeves","49067.48"],["Refugio","26283.48"],["Roberts","3307.24"],["Robertson","59174.32"],["Rockwall","278879.72"],["Runnels","37383.56"],["Rusk","189854.80"],["Sabine","38569.04"],["San Augustine","31559.40"],["San Jacinto","93927.04"],["San Patricio","230702.24"],["San Saba","21826.36"],["Schleicher","12321.16"],["Scurry","60238.76"],["Shackelford","12025.68"],["Shelby","90594.88"],["Sherman","10801.04"],["Smith","746581.84"],["Somervell","30224.40"],["Starr","217046.08"],["Stephens","34282.80"],["Sterling","4069.08"],["Stonewall","5304.40"],["Sutton","14695.68"],["Swisher","27960.24"],["Tarrant","6440161.04"],["Taylor","468161.36"],["Terrell","3503.04"],["Terry","45037.56"],["Throckmorton","5841.96"],["Titus","115109.04"],["Tom Green","392397.44"],["Travis","3646386.96"],["Trinity","51922.60"],["Tyler","77486.96"],["Upshur","139940.04"],["Upton","11943.80"],["Uvalde","94001.80"],["Val Verde","174009.24"],["Van Zandt","187181.24"],["Victoria","308983.08"],["Walker","241585.16"],["Waller","153809.80"],["Ward","37942.48"],["Washington","120036.08"],["Webb","891082.24"],["Wharton","146956.80"],["Wheeler","19259.60"],["Wichita","468140.00"],["Wilbarger","48184.60"],["Willacy","78797.04"],["Williamson","1504737.24"],["Wilson","152788.08"],["Winkler","25311.60"],["Wise","210492.12"],["Wood","149391.84"],["Yoakum","28049.24"],["Young","66038.00"],["Zapata","49904.08"],["Zavala","41570.12"]];
for(var i = 0; i&lt;a.length;i++){
  if(c==a[i][0]){
    return a[i][1];
  }
}
return "";
}
threshold.TotalOnPage=0;

var masterData =[];


//populates the data, holding area before the table
function populateMasterData(){
var a = document.getElementsByClassName('data');
  for(var i =0; i&lt;a.length;i++){
    var b =[];
    var c = a[i].innerHTML.split('|');
    for(var k=0; k&lt;c.length;k++){
      b.push(c[k]);
    }
    masterData.push(b);
  }
}

function comma(x) {
if(isNaN(x)===true || x=="" || x==0){
  x==undefined?x='':x=x;
  return x;
}
x=parseFloat(x).toFixed(2);
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
//return x;
}

// trim - very useful and needed in many webeoc files as most browsers do this, webeoc does not and excess spaces will change return and cause to fail
function trim(a) {
  return a.replace(/^\s+|\s+$|\&amp;nbsp;+$/g, '');
}

//this populates the table - t is main table itself, b is for the total row class change
function popluateTable(){
var t = document.getElementById('mainTable');

var totalRowVar=function(i){
   var a = getTotalsFor(masterData[i][5]);
   var b = "rowYellow";
   var NaCount = parseFloat(a[12]) &gt; (0)?'Yes':'No';
   if(document.getElementById('AnticipatedInsurance1').checked==true){
    //hide total lines with N/A values
    b = "rowYellow hideValues";
  } else {
    //show or hide unvetted total lines on false
     b = a[10]===true?"rowRedTotal":"hideValues"; // femaCounty or will be rowRedTotal if all from county are vetted
  }


      var thresholdResult = threshold(masterData[i][5]); 
      var a = getTotalsFor(masterData[i][5]); //Get the total of a county
      threshold.TotalOnPage+=parseInt(thresholdResult); //totals all thresholds, not needed on page
      var Mets2 = parseFloat(a[8]) &gt;= parseFloat(thresholdResult)?'Yes':'No'; //is county total greater than or equal to county threshold
      var Mets = (NaCount=='Yes')?'(N/A)':Mets2; //are there N/As present
      var thresholdResultWithCommas = thresholdResult.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

//Below determines whether or not more is needed to reach county threshold or if reached and by how much over
      var Mets3 = "$ "+((thresholdResult-(a[8])).toFixed(2))+" MORE to REACH (CO) THRESHOLD ";
      var Mets33 = "$ "+(((a[8])-thresholdResult).toFixed(2))+" OVER the (CO) THRESHOLD ";
      var Mets4 = 0;
      
      if((a[8]) &gt; thresholdResult){
        Mets4 = Mets33;
      } else {
        Mets4 = Mets3;
      }

      var Mets5 = Mets4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","); //makes a nice decimal number


  var yellowA = (a[1]).toFixed(2);
  var yellowB = (a[2]).toFixed(2);
  var yellowC = (a[3]).toFixed(2);
  var yellowD = (a[4]).toFixed(2);
  var yellowE = (a[5]).toFixed(2);
  var yellowF = (a[6]).toFixed(2);
  var yellowG = (a[7]).toFixed(2);
  var yellowAT = (a[8]).toFixed(2); //makes nice decimal numbers
    
      //yellow total rows
      //masterData[5] is county
      //a[0] is blank, unknown or possibly unneeded
      // var yellowA is A for county
      // var yellowB is B for county
      // var yellowC is C for county
      // var yellowD is D for county
      // var yellowE is E for county
      // var yellowF is F for county
      // var yellowG is G for county
      // var yellowAT is A-G totals for county
      // Mets5 is amount needed or over
      // thresholdResultWithCommas is county threshold with commas
      // Mets2 is if threshold is met or contains NA
      // a[15], "", a[19] are blank and possibly unneeded or can be replaced as needed
      //"FEMA "+a[10] counts if any femaCheckboxV2's are checked in linked bubble inputs
      //NaCount sees if a NA is present in all of the county
      // b is class and will hide depending on AnticipatedInsurance and as well as unvetted record (no femaCheckboxv2)

      newRow(t,t.rows.length,["","","","","Vetted Totals for "+masterData[i][5],"",a[0],yellowA,yellowB,yellowC,yellowD,yellowE,yellowF,yellowG,yellowAT,Mets5+"$ "+thresholdResultWithCommas,Mets2,a[15],"",a[19],"FEMA "+a[10],NaCount,a[18]],b);
};
  for(var i=0; i &lt; masterData.length;i++){

          var wootA = masterData[i][7].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootB = masterData[i][8].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootC = masterData[i][9].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootD = masterData[i][10].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootE = masterData[i][11].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootF = masterData[i][12].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootG = masterData[i][13].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootAreaTotals = masterData[i][14].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
       
          var wootAA = masterData[i][22].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootBB = masterData[i][23].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootCC = masterData[i][24].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootDD = masterData[i][25].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootEE = masterData[i][26].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootFF = masterData[i][27].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootGG = masterData[i][28].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootAreaTotals2 = masterData[i][29].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
       
    //---------------------------------------------------------------------------------------------
    //newRow below explained 
    //start of data
    //masterData[i][2] is Total Jurisdictions
    //,"","", two blanks
    //masterData[i][3] is unknown to me,
    //masterData[i][4] is county and city,
    //masterData[i][5] is unknown to me,
    //masterData[i][6] is unknown to me,
    //wootA is A, masterData[i][7] No Insurance factored
    //wootB is B, masterData[i][8] No Insurance factored
    //wootC is C, masterData[i][9] No Insurance factored
    //wootD is D, masterData[i][10] No Insurance factored
    //wootE is E, masterData[i][11] No Insurance factored
    //wootF is F, masterData[i][12] No Insurance factored
    //wootG is G, masterData[i][13] No Insurance factored
    //wootAreaTotals is Area Totals, masterData[i][14] No Insurance factored
    //"","", two blanks
    //masterData[i][15] is Local Dec,
    //masterData[i][17] is DSO History Button,
    //masterData[i][20] is Supplemental Info Button,
    //masterData[i][19] is FEMA count,
    //masterData[i][21] is 1 for Insurance NA COUNT,
    //var wootAA is A, masterData[i][22] Yes Insurance factored
    //var wootBB is B, masterData[i][23] Yes Insurance factored
    //var wootCC is C, masterData[i][24] Yes Insurance factored
    //var wootDD is D, masterData[i][25] Yes Insurance factored
    //var wootEE is E, masterData[i][26] Yes Insurance factored
    //var wootFF is F, masterData[i][27] Yes Insurance factored
    //var wootGG is G, masterData[i][28] Yes Insurance factored
    //var wootAreaTotals2 is Area Totals masterData[i][29] Yes Insurance factored
    //masterData[i][30], extra for now
    //masterData[i][31] extra for now 
    //end of data],
    //start of class
    //rrrr changes row to red if fema check is checked on supplemental, hides it with rowRegExclude or hide values
    //end of class
    //----------------------------------------------------------------------------------------------------
    //adds regular row
    var rr = 0;

if(masterData[i][19]&gt;='1'){
  //turns rows red based on femaCheckboxV2 linked to DSO
  var rr = "rowRed";
} else {
  var rr = "rowRegExclude"; // change to rowReg to see
}


if(document.getElementById('AnticipatedInsurance1').checked==true){
  //hide rows with N/A values
    rrrr = "hideValues";
  } else {
    //show rows without N/A values
     rrrr = rr;
  }
  
    //start of new row
        newRow(t,(t.rows.length),[masterData[i][2],"","",masterData[i][3],masterData[i][4],masterData[i][5],masterData[i][6],wootA,wootB,wootC,wootD,wootE,wootF,wootG,wootAreaTotals,"","",masterData[i][15],masterData[i][17],masterData[i][20],"fema[19] "+masterData[i][19],masterData[i][21],masterData[i][22],masterData[i][23],masterData[i][24],masterData[i][25],masterData[i][26],masterData[i][27],masterData[i][28],masterData[i][29],masterData[i][30],masterData[i][31]],rrrr);
    if(i==masterData.length-1){//if not the last row
 totalRowVar(i);
 console.log("reg");
    }
    else if(i==0 &amp;&amp; masterData[i][5]!=masterData[i+1][5]){
       totalRowVar(i);
    }
//else if (( (there is an entry) and 
//((county equals county before) and (county after does not equal county) or 
//(county does not equal county before) and 
//(county after does not equal coounty)) ))
    else if((i!=0)&amp;&amp;(((masterData[i][5]===masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5]))||((masterData[i][5]!=masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5])) ))
      {
      totalRowVar(i);
      //console.log("else if");
    }
  }
  //grand totals row and class of rowGray

  var a = getTotalsForAll();

  //This works to make 0 into 0.00 in the gray rows. Not too important...but looks nice and like other fields
  //trying to add $'s here with "$ "+a[X] makes just the commas disappear. decimals remain
  var grayA = (a[1]).toFixed(2); //Grand Total A
  var grayB = (a[2]).toFixed(2); //Grand Total B
  var grayC = (a[3]).toFixed(2); //Grand Total C
  var grayD = (a[4]).toFixed(2); //Grand Total D
  var grayE = (a[5]).toFixed(2); //Grand Total E
  var grayF = (a[6]).toFixed(2); //Grand Total F
  var grayG = (a[7]).toFixed(2); //Grand Total G
  var grayAT = (a[8]).toFixed(2); //Grand Total A-G
  var grayCT = (a[9]).toFixed(2); //this should be A-G totals vs State threshold not there yet!

  if(document.getElementById('AnticipatedInsurance1').checked==true){
    //hides grand total rows with N/A values
    g = "rowGray hideValues";
  } else {
    //shows grand total rows with N/A values
     g = "rowGray";
  }



      var stateTxThreshold = 40000000;
      //var thresholdResult = threshold(masterData[i][5]);
      //var a = getTotalsFor(masterData[i][5]); //Get the total of a county
      //threshold.TotalOnPage+=parseInt(thresholdResult); //totals all thresholds, not needed on page
      var TXMets2 = parseFloat(grayAT) &gt;= parseFloat(stateTxThreshold)?'Yes':'No'; //is county total greater than or equal to county threshold
      //var TXMets = (NaCount=='Yes')?'(N/A)':TXMets2;
      //var Mets = (NaCount=='Yes')?'(N/A)':Mets2; //are there N/As present
      var TXthresholdResultWithCommas = stateTxThreshold.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",");

//Below determines whether or not more is needed to reach county threshold or if reached and by how much over
      var TXMets3 = "$ "+((stateTxThreshold-(grayAT)).toFixed(2))+" MORE to REACH (TX) THRESHOLD ";
      var TXMets33 = "$ "+(((grayAT)-stateTxThreshold).toFixed(2))+" OVER the (TX) THRESHOLD ";
      var TXMets4 = 0;
      //var totalsAccurate = true;
      
      if((grayAT) &gt; stateTxThreshold){
        TXMets4 = TXMets33;
      } else {
        TXMets4 = TXMets3;
      }

      var TXMets5 = TXMets4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");



   
//trying to add $'s here with "$ "+a[X] or "$ "+grayA makes the commas and decimals disappear. Boo!
      newRow(t,t.rows.length,["","","","","Vetted Grand Totals","",a[0],grayA,grayB,grayC,grayD,grayE,grayF,grayG,grayAT,TXMets5+"$ "+TXthresholdResultWithCommas,TXMets2],g)
      newRow(t,2,["","","","","Vetted Grand Totals","",a[0],grayA,grayB,grayC,grayD,grayE,grayF,grayG,grayAT,TXMets5+"$ "+TXthresholdResultWithCommas,TXMets2],g)
}

//this will get totals for the county totals row, for more spots, 0's need to added to var a as well as the parseFloat statements below

function getTotalsFor(c){
  var a =[0,0,0,0,0,0,0,0,0,0,false];
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][5]==c){
//Below - parseFloat cuts off the first character if a number, otherwise NaN is returned ------------ the [19] spot is where the total is stored from femaCheckboxes , a[10] makes them true by counting 1's in a[19] if greater than or equal to 1 show, false ones are hidden
    
    if(masterData[i][19]&gt;='1'){ //this removes regRows and values without femaCheckboxV2's from the count
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));
    a[9]+=parseFloat(isNull(masterData[i][19]));
    a[12]+=parseFloat(isNull(masterData[i][21]));}
    if(masterData[i][19]&gt;="1"){
      a[10]=true;
      //this determines whether or not a true is put here in a[10] and all falses (total rows) are hidden with above JS
      
    }
    
    
  }
}
console.log(a);
return a;

}
//Grand totals 
function getTotalsForAll(){
  var a =[0,0,0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
    //a[0]+=parseFloat(isNull(masterData[i][6]));
    if(masterData[i][19]&gt;='1'){ //this removes total rows without femaCheckboxV2's from the count
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));}
   
}
 a[9]=parseFloat(threshold.TotalOnPage); //this should be A-G totals vs State threshold
console.log(a);
return a;

}
//------Start of popluateTable2 for Insurance------------------------------------------------------------------------
//see above function popluateTable for breakdown of everything, same fields and JS just reversed to hide/show values with NAs


function popluateTable2(){
var t = document.getElementById('mainTable');

var totalRowVar2=function(i){
   var a = getTotalsFor2(masterData[i][5]);
   var b = "rowYellow";
   var NaCount = parseFloat(a[12]) &gt; (0)?'Yes':'No';

   if(document.getElementById('AnticipatedInsurance1').checked==true){
    b = a[10]===true?"rowRedTotal":"hideValues"; //all records of same county and on this display are turned red with this (1 of 2)
    // femaCounty or will be rowRedTotal if all from county are vetted
  } else {
     b = "hideValuesNoInsurance";
  }

// b = a[10]===true?"rowRedTotal":"hideValues";
      var thresholdResult = threshold(masterData[i][5]);
      var a = getTotalsFor2(masterData[i][5]);
      threshold.TotalOnPage+=parseInt(thresholdResult);
      var Mets2 = parseFloat(a[8]) &gt;= parseFloat(thresholdResult)?'Yes':'No';
      var Mets = (NaCount=='Yes')?'(N/A)':Mets2;
      var thresholdResultWithCommas = thresholdResult.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

      var Mets3 = "$ "+((thresholdResult-(a[8])).toFixed(2))+" MORE to REACH THRESHOLD ";
      var Mets33 = "$ "+(((a[8])-thresholdResult).toFixed(2))+" OVER the THRESHOLD ";
      var Mets4 = 0;
      
      if((a[8]) &gt; thresholdResult){
        Mets4 = Mets33;
      } else {
        Mets4 = Mets3;
      }

      var Mets5 = Mets4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");


      if(Mets=='(N/A)'){

   Mets5='(Anticipated Insurance Needed) ';
  
  }

  var yellowA = (a[1]).toFixed(2);
  var yellowB = (a[2]).toFixed(2);
  var yellowC = (a[3]).toFixed(2);
  var yellowD = (a[4]).toFixed(2);
  var yellowE = (a[5]).toFixed(2);
  var yellowF = (a[6]).toFixed(2);
  var yellowG = (a[7]).toFixed(2);
  var yellowAT = (a[8]).toFixed(2);


      //yellow total rows
      newRow(t,t.rows.length,["","","","","Vetted Totals for "+masterData[i][5],"",a[0],yellowA,yellowB,yellowC,yellowD,yellowE,yellowF,yellowG,a[8],Mets5+"$ "+thresholdResultWithCommas,Mets,a[15],"",a[19],"FEMA "+a[10],NaCount,a[18]],b);
};
  for(var i=0; i &lt; masterData.length;i++){

  
          var wootA = masterData[i][7].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootB = masterData[i][8].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootC = masterData[i][9].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootD = masterData[i][10].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootE = masterData[i][11].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootF = masterData[i][12].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootG = masterData[i][13].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootAreaTotals = masterData[i][14].replace(/\B(?=(\d{3})+(?!\d))/g, ",");

          var wootAA = masterData[i][22].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootBB = masterData[i][23].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootCC = masterData[i][24].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootDD = masterData[i][25].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootEE = masterData[i][26].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootFF = masterData[i][27].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootGG = masterData[i][28].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          var wootAreaTotals2 = masterData[i][29].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
       
    
    //adds regular row
var rgr = 0;
/*Below - if femaCheckboxV2 is checked, turn row red, if not hide row from view, counts will still total - look for code that stops the totalling of hidden rows*/
if(masterData[i][19]&gt;='1'){
  var rgr = "rowRed";
} else {
  var rgr = "rowRegExclude"; //this hides all non red rows
}


if(document.getElementById('AnticipatedInsurance1').checked==true){

    rrr = rgr;
  } else {

     rrr = "hideValuesNoInsurance";
  }

  
      newRow(t,(t.rows.length),[masterData[i][2],"","",masterData[i][3],masterData[i][4],masterData[i][5],masterData[i][6],wootAA,wootBB,wootCC,wootDD,wootEE,wootFF,wootGG,wootAreaTotals2,"","",masterData[i][15],masterData[i][17],masterData[i][20],masterData[i][19],masterData[i][21],masterData[i][22],masterData[i][23],masterData[i][24],masterData[i][25],masterData[i][26],masterData[i][27],masterData[i][28],masterData[i][29],masterData[i][30],masterData[i][31]],rrr);
    if(i==masterData.length-1){//if not the last row
 totalRowVar2(i);

 console.log("reg");
    }
    else if(i==0 &amp;&amp; masterData[i][5]!=masterData[i+1][5]){
       totalRowVar2(i);
    }
//else if (( (there is an entry) and 
//((county equals county before) and (county after does not equal county) or 
//(county does not equal county before) and 
//(county after does not equal coounty)) ))
    else if((i!=0)&amp;&amp;(((masterData[i][5]===masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5]))||((masterData[i][5]!=masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5])) ))
      {
      totalRowVar2(i);
      //console.log("else if");
    }
  }
  //grand totals row and class of rowGray

  var a = getTotalsFor2All();

  //This works to make 0 into 0.00 in the gray rows. Not too important...but looks nice and like other fields
  //trying to add $'s here with "$ "+a[X] makes just the commas disappear. Decimals remain
  var grayA = (a[1]).toFixed(2);
  var grayB = (a[2]).toFixed(2);
  var grayC = (a[3]).toFixed(2);
  var grayD = (a[4]).toFixed(2);
  var grayE = (a[5]).toFixed(2);
  var grayF = (a[6]).toFixed(2);
  var grayG = (a[7]).toFixed(2);
  var grayAT = (a[8]).toFixed(2);
  var grayCT = (a[9]).toFixed(2); 

  var g = "rowGray";
  if(document.getElementById('AnticipatedInsurance1').checked==true){
    g = "rowGray";
  } else {
     g = "rowGray hideValuesNoInsurance";
  }

  var stateTxThreshold = 40000000;
      //var thresholdResult = threshold(masterData[i][5]);
      //var a = getTotalsFor(masterData[i][5]); //Get the total of a county
      //threshold.TotalOnPage+=parseInt(thresholdResult); //totals all thresholds, not needed on page
      var TXMets2 = parseFloat(grayAT) &gt;= parseFloat(stateTxThreshold)?'Yes':'No'; //is county total greater than or equal to county threshold
      //var TXMets = (NaCount=='Yes')?'(N/A)':TXMets2;
      //var Mets = (NaCount=='Yes')?'(N/A)':Mets2; //are there N/As present
      var TXthresholdResultWithCommas = stateTxThreshold.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",");

//Below determines whether or not more is needed to reach county threshold or if reached and by how much over
      var TXMets3 = "$ "+((stateTxThreshold-(grayAT)).toFixed(2))+" MORE to REACH (TX) THRESHOLD ";
      var TXMets33 = "$ "+(((grayAT)-stateTxThreshold).toFixed(2))+" OVER the (TX) THRESHOLD ";
      var TXMets4 = 0;
      //var totalsAccurate = true;
      
      if((grayAT) &gt; stateTxThreshold){
        TXMets4 = TXMets33;
      } else {
        TXMets4 = TXMets3;
      }

      var TXMets5 = TXMets4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");



   
//trying to add $'s here with "$ "+a[X] or "$ "+grayA makes the commas and decimals disappear. Boo!
      newRow(t,t.rows.length,["","","","","Vetted Grand Totals","",a[0],grayA,grayB,grayC,grayD,grayE,grayF,grayG,grayAT,TXMets5+"$ "+TXthresholdResultWithCommas,TXMets2],g)
      newRow(t,2,["","","","","Vetted Grand Totals","",a[0],grayA,grayB,grayC,grayD,grayE,grayF,grayG,grayAT,TXMets5+"$ "+TXthresholdResultWithCommas,TXMets2],g)
}
   
//trying to add $'s here with "$ "+a[X] or "$ "+grayA makes the commas and decimals disappear. Boo!
     /* newRow(t,t.rows.length,["","","","","Vetted Grand Totals","",a[0],grayA,grayB,grayC,grayD,grayE,grayF,grayG,grayAT,grayCT],g)
      newRow(t,2,["","","","","Vetted Grand Totals","",a[0],grayA,grayB,grayC,grayD,grayE,grayF,grayG,grayAT,grayCT],g)
}*/

//this will get totals for the county totals row, for more spots, O's nned to added to var a as well as the parseFloat statements below
function getTotalsFor2(c){
  var a =[0,0,0,0,0,0,0,0,0,0,false,0,0];
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][5]==c){
//parseFloat cuts off the first character if a number, otherwise NaN is returned ------------ the [19] spot is where the total is stored from femaCheckboxes
    //a[0]+=parseFloat(isNull(masterData[i][6]));
    if(masterData[i][19]&gt;='1'){ //this removes hidden regRows from the count
    a[1]+=parseFloat(isNull(masterData[i][22]));
    a[2]+=parseFloat(isNull(masterData[i][23]));
    a[3]+=parseFloat(isNull(masterData[i][24]));
    a[4]+=parseFloat(isNull(masterData[i][25]));
    a[5]+=parseFloat(isNull(masterData[i][26]));
    a[6]+=parseFloat(isNull(masterData[i][27]));
    a[7]+=parseFloat(isNull(masterData[i][28]));
    a[8]+=parseFloat(isNull(masterData[i][29]));
    a[9]+=parseFloat(isNull(masterData[i][19]));
    a[12]+=parseFloat(isNull(masterData[i][21]));}
    if(masterData[i][19]&gt;="1"){ //all records of same county and on this display are turned red with this (2 of 2)
      a[10]=true;
      a[11]+=parseFloat(isNull(masterData[i][20])); // I dont think this is needed anymore
      
    }
    
    //a[10]+=parseFloat(isNull(masterData[i][19])); // I dont think this is needed anymore
  }
}
console.log(a);
return a;

}
//Grand totals 
function getTotalsFor2All(){
  var a =[0,0,0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' ' ||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
    //a[0]+=parseFloat(isNull(masterData[i][6]));
    if(masterData[i][19]&gt;='1'){ //this removes hidden regRows from the count
    a[1]+=parseFloat(isNull(masterData[i][22]));
    a[2]+=parseFloat(isNull(masterData[i][23]));
    a[3]+=parseFloat(isNull(masterData[i][24]));
    a[4]+=parseFloat(isNull(masterData[i][25]));
    a[5]+=parseFloat(isNull(masterData[i][26]));
    a[6]+=parseFloat(isNull(masterData[i][27]));
    a[7]+=parseFloat(isNull(masterData[i][28]));
    a[8]+=parseFloat(isNull(masterData[i][29]));
  }
   
}
 a[9]=parseFloat(threshold.TotalOnPage);
console.log(a);
return a;

}


 function reloadPage() {
  location.reload(true/false);
  //$("#AnticipatedInsurance2").prop("checked", true);
  //alert("Loading trying to check no");
 }

var dsoPageHelper={


    //startOf: identifying what filter is on
    filterSet: function(arg1,arg2) {
      if($(arg1).html()==='on'){$(arg2).css('font-weight', 'Bold').css('text-decoration', 'underline');}
    },
    
    //startOf: styling search field
    styleSearchField: function() {
        var searchFld=document.getElementById('searchDIV').getElementsByTagName('input');
        for(var j=0; j &lt; searchFld.length; j++) {
            if($(searchFld[j]).val()=='Search' || $(searchFld[j]).val()=='Clear Search'){$(searchFld[j]).addClass('btn btn-default');}
            if(searchFld[j].id.search('searchfield')&gt;=0){$(searchFld[j]).addClass('form-control').prop('placeholder', 'Search');}
        }     
    },
    checkAnticpatedInsuranceValue : function(){
        $("#AnticipatedInsurance1").click(function() {
            window.parent.anticpatedInsuranceValuePlaceHolder = "Yes";
            reloadPage();
        });
        $("#AnticipatedInsurance2").click(function() {
            window.parent.anticpatedInsuranceValuePlaceHolder = "No";
            reloadPage();
        });
        if(window.parent.anticpatedInsuranceValuePlaceHolder === "Yes" || window.parent.anticpatedInsuranceValuePlaceHolder === "") {
            $("#AnticipatedInsurance1").prop("checked", true);
        } else if(!window.parent.anticpatedInsuranceValuePlaceHolder === "No" || !window.parent.anticpatedInsuranceValuePlaceHolder === "Yes") {

        } else if(window.parent.anticpatedInsuranceValuePlaceHolder === "No") {
            $("#AnticipatedInsurance2").prop("checked", true);
        }
    }
};

var incSelList=document.getElementById('webeocIncident');
var loopAllInputs=document.getElementsByTagName('input');
var incVar;

//startOf: filter by incident process method
var filterByIncident={
 clearIncidentListSelection: function() {
   var incSearch=document.getElementById('incidentNameSearchSPAN').getElementsByTagName('input');
   for(var i=0; i &lt; incSearch.length; i++) {
     if(incSearch[i].value==='') {
       window.parent.window.parent.selectedIncident='';
     } else {
       $('#webeocIncident').val(window.parent.window.parent.selectedIncident);

     }      
   }
 },
 searchFieldVariableSet: function() {
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].id &amp;&amp; loopAllInputs[i].getAttribute('id').indexOf('searchfield')&gt; -1){incVar=loopAllInputs[i];}
   }
 },
 incidentListOptionsBuild: function() {
   <for-each select="/data/allincidentlist/incidents">
     incSelList.options[incSelList.options.length]=new Option('<value-of select="@name" />','<value-of select="@name" />',false,false);
   </for-each>
   incSelList.options.selectedIndex=0;
 },
 incidentListActionOnChange: function() {
   incSelList.options[incSelList.options.length]=new Option('','',false,false);
   incVar.value=incSelList.options[incSelList.options.selectedIndex].text;
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].getAttribute('value')=='Search'){$(loopAllInputs[i]).click();}
   }
   window.parent.window.parent.selectedIncident=(incSelList.options[incSelList.options.selectedIndex]).text;
 }
};

function checkTheRadioAIY(){
  if(document.getElementById('AnticipatedInsurance2').checked==true){
$("#AnticipatedInsurance2").prop("checked", true);
  } else {
    $("#AnticipatedInsurance1").prop("checked", true);
  }

//reloadTableYesIns();

}

$(document).ready(function(){
    //checkTheRadioAIY();

$("#AnticipatedInsurance1").prop("checked", true);

    dsoPageHelper.checkAnticpatedInsuranceValue();
console.log(window.parent.anticpatedInsuranceValuePlaceHolder)

    populateMasterData();
    popluateTable();
    popluateTable2();
    dsoPageHelper.styleSearchField();

    //var countyFilter=document.getElementById('countyFilter').getElementsByTagName('select')[0];
    //$(countyFilter).addClass('form-control');
    filterByIncident.incidentListOptionsBuild();
    filterByIncident.searchFieldVariableSet();
    filterByIncident.clearIncidentListSelection();
    //filterByIncident.incidentListActionOnChange();
    
   /* var ddcFilter=document.getElementById('ddcFilter').getElementsByTagName('select')[0];
    $(ddcFilter).addClass('form-control');*/
    var a = document.getElementsByClassName('greenCell');
for(var i=0; i&lt;a.length;i++){a[i].parentElement.style.backgroundColor="#00e673";}/*Local Dec*/
  var b = document.getElementsByClassName('yellowCell');
for(var i=0; i&lt;b.length;i++){b[i].parentElement.style.backgroundColor="#ffff00";}
   //totalGrandRowVar();
 //checkTheRadioAIY();




  });

  
</script></html></view><view tablename="Core" name="Vetted Recovery IA (DO NOT ASSIGN)" global="0" addonly="0" lockuserinput="0" lockuserview="0" type="display" lockpositionview="0" lockpositioninput="0" globalid="37f2c224-9c93-4aec-80f8-2a5f71995e18" assignable="1"><html><head><title>Local Estimates</title><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link href="https://olympus.soc.texas.gov/files/CDN/bootstrap/css/bootstrap.min.css" rel="stylesheet" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/jquery.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/bootstrap/js/bootstrap.min.js" /><script type="text/javascript" src="https://olympus.soc.texas.gov/files/CDN/etn/etn.js" /><script type="text/javascript" src="../boards/board_lib.js" /><script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" /><script type="text/javascript">
    /*add new row, builds the table, inserts rows.  rowClass is added in PA file in to below like this (table,position,data,rowClass - '<td>'+comma(data[number])+'</td>' goes to 21 here and 17 in PA File) 17 table data spots below*/



//window.onload=start;

</script><style type="text/css">
  body{background-color:#d1d2d4;color:#000;font:normal 0.9em arial;margin:1.0em;}
  div.container{border:solid 1px #0069aa; width:100%;}
  div.content{margin:1em; width:99%;}
  table.heading{border:solid 1px;border-collapse:collapse;empty-cells:show;margin:0;padding:3px;width:100%;}      table.heading td, table.heading th{padding:0.1em 0.5em 0.1em 0.5em;}
  table.heading th{text-align:center;}
  #tdFilter{text-align:right;}
  #tdBoard{text-align:center;}
  table.display{border-collapse:collapse;border:solid 1px;width:100%;border-color:#808080;background-color:#fff;empty-cells:show;margin-bottom:0.2em;}
  table.display td, table.display th{border-right:solid 1px;padding:0.1em 0.3em 0.1em 0.3em;}
  table.display td{border-top:solid 1px;border-color:#ccc;}
  .rowYellow {background-color:#ffffb3;}
  .rowBlue {background-color:#ccebff;}
  .rowRed {background-color:#FFCCCC;}
  .rowRedTotal {background-color:#FF8C8C;}
  .lightRowRed {background-color:#FFb3b3;}
  .rowGray {background-color: #b7bfc8;}
.rowReg {}
.rowGreen{background-color:#00e673;}
.cellYellow{background-color:#ffff00;}
.textYellow {color:#ffff99;}
.cellOrange {background-color:#ff751a;}
.rowReg {}
.data {
  text-align:center;
}
.fieldsetButtons { 
    display:inline-block;

   }
legend{
   font-size: 10pt;
}
.tableWords {
  font-size: 10pt;
}
</style></head><body><div class="container agencytemplate_boardbackground"><table class="table heading agencytemplate_boardheader"><tbody><tr><td id="tdIncident"><span id="incidentNameSpan"><incidentname /></span></td><td id="tdFilter"><filter /></td></tr><tr><td id="tdBoard" colSpan="2" selected="false" align="center"><strong><i>VETTED</i></strong> - Recovery IA Summary - <strong><i>VETTED</i></strong><br /><h3>(Housing / IA)<br /></h3><hr /><span style="float:left"><button type="button" class="btn btn-danger btn" data-toggle="modal" data-target="#myModal">Legend</button><space /><span id="pdfButtons" class="hide"><pdflink type="button" class="btn btn-warning" orientation="landscape">PDF</pdflink></span></span><h5>AFF = Affected<space /><space /><space /><space />|<space /><space /><space /><space />MI = Minor<space /><space /><space /><space />|<space /><space /><space /><space />MA = Major<space /><space /><space /><space />|<space /><space /><space /><space />DS = Destroyed<space /><space /><space /><space />|<space /><space /><space /><space />% IS = % Covered by Insurance</h5></td></tr></tbody></table><div class="container"><!-- Trigger the modal with a button --><!-- Modal --><div class="modal fade" id="myModal" role="dialog"><div class="modal-dialog"><!-- Modal content--><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">x</button><h4 class="modal-title">Legend / Information</h4></div><div class="modal-body"><table id="smallTable" class="table display"><tr><td><div style="text-align:center;" class="rowYellow"><span style="text-align:center;font-size:12pt">County / City Totals</span></div></td><td><div style="text-align:center;" class="rowGray"><span style="text-align:center;font-size:12pt">Grand Totals</span></div></td><td><div style="text-align:center;" class="rowRed"><span style="text-align:center;font-size:12pt">FEMA Vetting</span></div></td><td><div style="text-align:center;" class="rowGreen"><span style="text-align:center;font-size:12pt">Yes</span></div></td><td><div style="text-align:center;" class="cellYellow"><span style="font-size:12pt">No</span></div></td><td><div style="text-align:center;" class="cellOrange"><span style="text-align:center;font-size:12pt">N/A</span></div></td></tr></table><table><tr><h4>AFF = Affected<space /><space /><space /><space />|<space /><space /><space /><space />MI = Minor<space /><space /><space /><space />|<space /><space /><space /><space />MA = Major<space /><space /><space /><space />|<space /><space /><space /><space /><br />DS = Destroyed<space /><space /><space /><space />|<space /><space /><space /><space />% IS = % Covered by Insurance</h4></tr></table></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">Close</button></div></div></div></div></div><div class="content"><div><fieldset class="fieldsetButtons"><legend>Operations</legend><space /><space /><viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink><!--<button type="button" class="btn active">View DSO List</button>--><space /><space /><viewlink class="btn btn-info" type="button" name="!Summary(DEFAULT)">View Recovery Summary</viewlink><!--<viewlink class="btn btn-info" type="button" name="DSO List (DO NOT ASSIGN)">View DSO List</viewlink>--><space /><space /><viewlink class="btn btn-info" type="button" name="Housing (DO NOT ASSIGN)">View Housing / IA</viewlink><space /><space /><viewlink class="btn btn-info" type="button" name="Infrastructure (DO NOT ASSIGN)">View Infrastructure / PA</viewlink><space /><space /><space /><space /><viewlink class="btn btn-success" type="button" name="Bubble Input (DO NOT ASSIGN)">+ New Bubble Input</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>Recovery</legend><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery IA (DO NOT ASSIGN)">View Recovery IA</viewlink><space /><space /><button type="button" class="btn active">View Vetted Recovery IA</button><space /><space /><viewlink class="btn btn-info" type="button" name="Recovery PA (DO NOT ASSIGN)">View Recovery PA</viewlink></fieldset><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><space /><fieldset class="fieldsetButtons"><legend>DSO</legend><space /><space /><viewlink class="btn btn-success" type="button" name="Input (DO NOT ASSIGN)">+ New DSO for Testing</viewlink><space /><space /><viewlink class="btn btn-warning" type="button" name="Master Input (DO NOT ASSIGN)">+ Master County Totals</viewlink></fieldset></div><hr /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><filterlistdropdown field="county" list="Counties - Texas" defaulttext="All Counties" class="form-control" /><space /><space /><space /><space /><space /><space /><div class="form-inline" id="resourceFilters" style="display: inline-block;"><label for="webeocIncident" class=""><h4><sub>Incidents:</sub></h4></label><space /><select name="webeocIncident" id="webeocIncident" class="form-control" onchange="filterByIncident.incidentListActionOnChange();" /></div><space /><space /><space /><space /><space /><space /><span id="searchDIV"><search exact="false" range="false" rangetext="false"><field name="county" /><field name="city" /><field name="otherValue" /></search><clearsearchbutton /><span style="display: none;" id="incidentNameSearchSPAN"><search field="webeocIncident" clearsearch="true" /></span></span></div><div /><br /><table id="mainTable" class="table display"><tbody><tr class="agencytemplate_tableheader"><td selected="false" colSpan="1" rowSpan="1" width="" align="center"><span class="tableWords">Total JDX</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">County / City
                        
                        
                        <br />(Click to Edit)</span></td><td selected="false" colSpan="5" width="" rowSpan="1" align="center"><span class="tableWords">Single Family Homes</span></td><td selected="false" colSpan="5" width="" rowSpan="1" align="center"><span class="tableWords">Mobile Homes</span></td><td selected="false" colSpan="5" width="" rowSpan="1" align="center"><span class="tableWords">Multi-Family Homes</span></td><td selected="false" colSpan="4" width="" rowSpan="1" align="center"><span class="tableWords">Totals</span></td><td selected="false" colSpan="2" width="" rowSpan="1" align="center"><span class="tableWords">Business Loss / Economic Impact</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">DSO Audit Log</span></td><td selected="false" colSpan="1" width="" rowSpan="2" align="center"><span class="tableWords">Related Info</span></td></tr><tr class="agencytemplate_tableheader"><td selected="false" align="center" top-align="center" style="font-weight: normal; font-size: 14pt; background-color:#BDFFFF; color:black" rowSpan="1"><span class="tableWords"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionHousing2">sum(case when (totalsAffected!='' and totalsAffected!='0.00') or (totalsMinorDamage!='' and totalsMinorDamage!='0.00') or (totalsMajorDamage!='' and totalsMajorDamage!='0.00') or (totalsDestroyed!='' and totalsDestroyed!='0.00') or (numberMinorDamage!='' and numberMinorDamage!='0') or (numberMajorDamage!='' and numberMajorDamage!='0') then 1 else 0 end)</expression></span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">AFF</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MI</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MA</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">DS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">% IS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">AFF</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MI</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MA</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">DS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">% IS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">AFF</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MI</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MA</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">DS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">% IS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">AFF</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MI</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MA</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">DS</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MI</span></td><td selected="false" rowSpan="1" colSpan="1" width="" align="center"><span class="tableWords">MA</span></td></tr></tbody></table><eocrepeatallrecords rowcount="0" sort=" cast(sortCountyOrder as int) asc, cast(sortCityOrder as int) asc"><if test="1=0"><eocfield name="sortCountyOrder" /><eocfield name="sortCityOrder" /><eocfield name="jurisdictionType" /><eocfield name="county" /><eocfield name="city" /><eocfield name="otherValue" /><eocfield name="dsoSelected" /><eocfield name="dsoYesNo" /><eocfield name="sfhCovByInsurance" /><eocfield name="mhCovByInsurance" /><eocfield name="mfuCovByInsurance" /><eocfield name="sfhAffected" /><eocfield name="mhAffected" /><eocfield name="mfuAffected" /><eocfield name="sfhMinorDamage" /><eocfield name="mhMinorDamage" /><eocfield name="mfuMinorDamage" /><eocfield name="sfhMajorDamage" /><eocfield name="mhMajorDamage" /><eocfield name="mfuMajorDamage" /><eocfield name="sfhDestroyed" /><eocfield name="mhDestroyed" /><eocfield name="mfuDestroyed" /><eocfield name="totalsAffected" /><eocfield name="totalsMinorDamage" /><eocfield name="totalsMajorDamage" /><eocfield name="totalsDestroyed" /><eocfield name="numberMinorDamage" /><eocfield name="numberMajorDamage" /></if><span style="font-size:10pt;display:none" class="data" name="data"><value-of select="@sortCountyOrder" />|
          
                  <value-of select="@sortCityOrder" />|<if test="@totalJurisictionsexpressionHousing!='0'"><div align="center"><expression useboardlevelfilters="true" name="totalJurisictionsexpressionHousing">(case when ((totalsAffected!='' and totalsAffected!='0.00') or (totalsMinorDamage!='' and totalsMinorDamage!='0.00') or (totalsMajorDamage!='' and totalsMajorDamage!='0.00') or (totalsDestroyed!='' and totalsDestroyed!='0.00') or (numberMinorDamage!='' and numberMinorDamage!='0') or (numberMajorDamage!='' and numberMajorDamage!='0')) then 1 else 0 end)</expression></div></if>|
            
                  
                  <value-of select="@jurisdictionType" />|
            
                  
                  <viewlink name="Input (DO NOT ASSIGN)"><span style="color:#111111"><if test="@jurisdictionType='County'"><b><value-of select="@county" /></b> /
                        <value-of select="@city" /><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if><if test="@jurisdictionType='City'"><value-of select="@county" /> /
                        <b><value-of select="@city" /></b><br /><if test="@otherValue!=''"> / <value-of select="@otherValue" /></if><if test="@dsoSelected!=''"> / <value-of select="@dsoSelected" /></if></if></span></viewlink>|
            
                  
                  <value-of select="@county" />|
            
                  
                  <value-of select="@city" />|
            
                  
                  <value-of select="@sfhAffected" />|
            
                  
                  <value-of select="@sfhMinorDamage" />|
            
                  
                  <value-of select="@sfhMajorDamage" />|
            
                  
                  <value-of select="@sfhDestroyed" />|


                  <if test="@sfhCovByInsurance!=''"><value-of select="@sfhCovByInsurance" />%</if>|
            
                  
                  <value-of select="@mhAffected" />|
            
                  
                  <value-of select="@mhMinorDamage" />|
            
                  
                  <value-of select="@mhMajorDamage" />|
            
                  
                  <value-of select="@mhDestroyed" />|


                  <if test="@mhCovByInsurance!=''"><value-of select="@mhCovByInsurance" />%</if>|
            
                  
                  <value-of select="@mfuAffected" />|
            
                  
                  <value-of select="@mfuMinorDamage" />|
            
                  
                  <value-of select="@mfuMajorDamage" />|
            
                  
                  <value-of select="@mfuDestroyed" />|


                  <if test="@mfuCovByInsurance!=''"><value-of select="@mfuCovByInsurance" />%</if>|
            
                  
                  <value-of select="@totalsAffected" />|
            
                  
                  <value-of select="@totalsMinorDamage" />|
            
                  
                  <value-of select="@totalsMajorDamage" />|
            
                  
                  <value-of select="@totalsDestroyed" />|
            
                  
                  <value-of select="@numberMinorDamage" />|
            
                  
                  <value-of select="@numberMajorDamage" />|
            
                  
                  <viewlink name="DSO Audit RelatedList (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">DSO History</button></viewlink>|<viewlink name="Inbetween (DO NOT ASSIGN)"><button class="btn btn-warning btn-xs">Supplemental Info</button></viewlink>|<relatedexpression name="femaTest" table="Supplemental">sum(case when femaCheckboxV1='Yes' then 1 else 0 end)</relatedexpression>|28
               </span></eocrepeatallrecords></div></div></body><script type="text/javascript">
  var newRow = function(table,position,data,rowClass){
  var row = table.insertRow(position);
  var align='left';
    if(trim(data[3])==="City"){
align='right'
  }
  
  //row.className('agencytemplate_tableentry');
    row.innerHTML = '<td>'+data[2]+'</td>'+'<td align="'+align+'">'+data[4]+'</td>'+'<td>'+comma(data[7])+'</td>'+'<td>'+comma(data[8])+'</td>'+'<td>'+comma(data[9])+'</td>'+'<td>'+comma(data[10])+'</td>'+'<td>'+comma(data[11])+'</td>'+'<td>'+comma(data[12])+'</td>'+'<td>'+comma(data[13])+'</td>'+'<td>'+comma(data[14])+'</td>'+'<td>'+comma(data[15])+'</td>'+'<td>'+comma(data[16])+'</td>'+'<td>'+comma(data[17])+'</td>'+'<td>'+comma(data[18])+'</td>'+'<td>'+comma(data[19])+'</td>'+'<td>'+comma(data[20])+'</td>'+'<td>'+comma(data[21])+'</td>'+'<td>'+comma(data[22])+'</td>'+'<td>'+comma(data[23])+'</td>'+'<td>'+comma(data[24])+'</td>'+'<td>'+comma(data[25])+'</td>'+'<td>'+comma(data[26])+'</td>'+'<td>'+comma(data[27])+'</td>'+'<td>'+comma(data[28])+'</td>'+'<td>'+comma(data[29])+'</td>'/*+'<td>'+comma(data[30])+'</td>'+'<td>'+comma(data[31])+'</td>'*/;//comma(data[30]) is where the femaCheck totals are stored, uncomment if wish to see them
    //adds color to new total rows - PA file says +rowClass below instead of +rowColorClass at end of this block
    console.log(rowClass);
    var rowColorClass =''
    if (((position/2) - Math.floor(position/2)) === 0) {rowColorClass='agencytemplate_tableroweven'} else {rowColorClass='agencytemplate_tablerowodd'};

    table.rows[position].className='agencytemplate_tableentry '+rowClass;
    //agencytemplate_tableroweven
}

//array that loops through everything - this code does not run yet on this view
var masterData =[];
/*function setBubbleData(a){
 
 populateMasterData();

for(var k=0; k&lt;a.length;k++
  var match = false;
  for(var i=0; i&lt;masterData.length;i++){
    if(a[k].type==masterData[i][2] &amp;&amp;a[k].county==masterData[i][4]&amp;&amp;a[k].city==masterData[i][5]){ //if there is a match from bubble input and DSO
     masterData[i][16]=a[k].letter;
    masterData[i][17]='DSO+';
    match=true;
    }
  }
 if(match===false){ //if not associated with a DSO
masterData.push([a[k].sortCounty,a[k].sortCity,a[k].type,a[k].label,a[k].county,a[k].city,"","","","","","","","",a[k].localDec,a[k].letter,"No DSO"]);}
}


masterData = masterData.sort(function(a,b){
  if(parseInt(a[0]) &gt; parseInt(b[0])){
    return 1;
  }else if(parseInt(a[0]) &lt; parseInt(b[0])){
    return -1;
  } else if(parseInt(a[1]) &gt; parseInt(b[1])){
    return 1;
  } else if(parseInt(a[0]) &gt; parseInt(b[0])){
    return -1;
  }

});
  popluateTable();
  alert("Hello");
}*/

function start(){
//next two lines are commented out in PA (working file)
  //populateMasterData();
  //popluateTable();

}

//populates the data, maybe holding area before the table - SAME as PA file
function populateMasterData(){
var a = document.getElementsByName('data');
  for(var i =0; i&lt;a.length;i++){
    var b =[];
    var c = a[i].innerHTML.split('|');
    for(var k=0; k&lt;c.length;k++){
      b.push(c[k]);
    }
    masterData.push(b);
  }
}
//uses regEx to place commas where they need to go
  function comma(x) {
if(isNaN(x)===true || x=="" || x==0){
  x==undefined?x='':x=x;
  return x;
}
x=parseFloat(x).toFixed(2);
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
//return x;
}
function trim(a) {
  return a.replace(/^\s+|\s+$|\&amp;nbsp;+$/g, '');
}
/*populates the actual table [4] is county spot. Looks at td cells and determines if county matches the next county, add togeether andcreate  anew line. If counties does not match, do not add or create yellow row - add extra quotes and comma to add column at beginning*/
//this function will break if only one county is recorded, with two or more it will work. Jaime says put a clause in it to make sure it runs in that case
function popluateTable(){
var t = document.getElementById('mainTable');

var firstGrandTotal = getTotalsForAll();
      newRow(t,t.rows.length,["","","","","Grand Totals","",firstGrandTotal[0],firstGrandTotal[1],firstGrandTotal[2],firstGrandTotal[3],firstGrandTotal[4],"%",firstGrandTotal[6],firstGrandTotal[7],firstGrandTotal[8],firstGrandTotal[9],"%",firstGrandTotal[11],firstGrandTotal[12],firstGrandTotal[13],firstGrandTotal[14],"%",firstGrandTotal[16],firstGrandTotal[17],firstGrandTotal[18],firstGrandTotal[19],firstGrandTotal[20],firstGrandTotal[21]],"rowGray");

var totalRowVar=function(i){
   var a = getTotalsFor(masterData[i][5]);
   var b = a[23]===true?"rowRedTotal":"rowYellow";

      //alert("yellow rows");
      newRow(t,t.rows.length,["","","","","Totals for "+masterData[i][5],"",a[0],a[1],a[2],a[3],a[4],"%",a[6],a[7],a[8],a[9],"%",a[11],a[12],a[13],a[14],"%",a[16],a[17],a[18],a[19],/*MI*/a[20],/*MA*/a[21],"","",a[22],"Here"],b);//[x] is hidden and contains the femaCheck totals for the county
};
  for(var i=0; i &lt; masterData.length;i++){//alert("won!");
      if(masterData[i][30]&gt;='1'){
  //turns rows red based on femaCheckboxV1 linked to DSO
  var bb = "rowRed";
} else {
  var bb = "rowReg"; 
}
    newRow(t,(t.rows.length),["","",masterData[i][2],masterData[i][3],masterData[i][4],masterData[i][5],masterData[i][6],masterData[i][7],masterData[i][8],masterData[i][9],masterData[i][10],masterData[i][11],masterData[i][12],masterData[i][13],masterData[i][14],masterData[i][15],masterData[i][16],masterData[i][17],masterData[i][18],masterData[i][19],masterData[i][20],masterData[i][21],masterData[i][22],masterData[i][23],masterData[i][24],masterData[i][25],masterData[i][26],masterData[i][27],masterData[i][28],masterData[i][29],masterData[i][30]],bb);//alert("new row");
    if(i==masterData.length-1){//alert();
 totalRowVar(i)
    
    }
    else if(i==0 &amp;&amp; masterData[i][5]!=masterData[i+1][5]){
       totalRowVar(i);
    }

    else if(((i!=0)&amp;&amp; ((masterData[i][5]===masterData[i-1][5]) &amp;&amp;(masterData[i+1][5]!=masterData[i][5])||(masterData[i][5]!=masterData[i-1][5])&amp;&amp;(masterData[i+1][5]!=masterData[i][5]) )))
      { //Add Totals Row, This should be the yellow lines
      totalRowVar(i);
    }
  }
  
  /*Bottom Total row Grand total label and table data cells that have total of each column. PA file stops at [7], 22 total table data spots below - NEED to add 1 blank set of quotes to begining to get extra columnn and add another couple a[]'s to make wotk at end'*/
  var a = getTotalsForAll();
      newRow(t,t.rows.length,["","","","","Grand Totals","",a[0],a[1],a[2],a[3],a[4],"%",a[6],a[7],a[8],a[9],"%",a[11],a[12],a[13],a[14],"%",a[16],a[17],a[18],a[19],a[20],a[21]],"rowGray");//alert("TANK");
}
//16 0's Single Family Aff totals through Totals Destroyed plus 2

function getTotalsFor(c){
  var a =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,true]; //24 true
  var isNull = function(b){
    if(b==''||b==' '||b==0){return 0;}
    else return b;
  };
  //parseFloat cuts off the first character if a number, otherwise NaN is returned - 16 spots below - creates into decimal integer
for(var i=0; i&lt;masterData.length;i++){
  if(masterData[i][5]==c){
    a[0]+=parseFloat(isNull(masterData[i][6]));
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10])); //5
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));
    a[9]+=parseFloat(isNull(masterData[i][15])); //10
    a[10]+=parseFloat(isNull(masterData[i][16]));
    a[11]+=parseFloat(isNull(masterData[i][17]));
    a[12]+=parseFloat(isNull(masterData[i][18]));
    a[13]+=parseFloat(isNull(masterData[i][19]));
    a[14]+=parseFloat(isNull(masterData[i][20])); //15
    a[15]+=parseFloat(isNull(masterData[i][21]));
    a[16]+=parseFloat(isNull(masterData[i][22]));
    a[17]+=parseFloat(isNull(masterData[i][23]));
    a[18]+=parseFloat(isNull(masterData[i][24]));
    a[19]+=parseFloat(isNull(masterData[i][25])); //20
    a[20]+=parseFloat(isNull(masterData[i][26]));
    a[21]+=parseFloat(isNull(masterData[i][27]));
    a[22]+=parseFloat(isNull(masterData[i][30]));
    //a[23]+=parseFloat(isNull(masterData[i][30]));
    //a[24]+=parseFloat(isNull(masterData[i][30]));
    if(masterData[i][30]!="1"){                   //24
      a[23]=false;
    }    
  }
}
console.log(a);
return a;

}
//Same as PA file except for 16 0's Zeros define as interger - only 8 in second part after for - just like PA file
function getTotalsForAll(){
  var a =[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
  var isNull = function(b){
    if(b==''||b==' '||b==0){return 0;}
    else return b;
  };
for(var i=0; i&lt;masterData.length;i++){
    a[0]+=parseFloat(isNull(masterData[i][6]));
    a[1]+=parseFloat(isNull(masterData[i][7]));
    a[2]+=parseFloat(isNull(masterData[i][8]));
    a[3]+=parseFloat(isNull(masterData[i][9]));
    a[4]+=parseFloat(isNull(masterData[i][10]));
    a[5]+=parseFloat(isNull(masterData[i][11]));
    a[6]+=parseFloat(isNull(masterData[i][12]));
    a[7]+=parseFloat(isNull(masterData[i][13]));
    a[8]+=parseFloat(isNull(masterData[i][14]));
    a[9]+=parseFloat(isNull(masterData[i][15]));
    a[10]+=parseFloat(isNull(masterData[i][16]));
    a[11]+=parseFloat(isNull(masterData[i][17]));
    a[12]+=parseFloat(isNull(masterData[i][18]));
    a[13]+=parseFloat(isNull(masterData[i][19]));
    a[14]+=parseFloat(isNull(masterData[i][20]));
    a[15]+=parseFloat(isNull(masterData[i][21]));
    a[16]+=parseFloat(isNull(masterData[i][22]));
    a[17]+=parseFloat(isNull(masterData[i][23]));
    a[18]+=parseFloat(isNull(masterData[i][24]));
    a[19]+=parseFloat(isNull(masterData[i][25]));
    a[20]+=parseFloat(isNull(masterData[i][26]));
    a[21]+=parseFloat(isNull(masterData[i][27]));
}
return a;

}
  var dsoPageHelper={

    

    //startOf: identifying what filter is on
    filterSet: function(arg1,arg2) {
      if($(arg1).html()==='on'){$(arg2).css('font-weight', 'Bold').css('text-decoration', 'underline');}
    },
    
    /*showFilterButtonSelected: function() {
      
    },*/
    //startOf: styling search field
      styleSearchField: function() {
         var searchFld=document.getElementById('searchDIV').getElementsByTagName('input');
         for(var j=0; j &lt; searchFld.length; j++) {
            if($(searchFld[j]).val()=='Search' || $(searchFld[j]).val()=='Clear Search'){$(searchFld[j]).addClass('btn btn-default');}
          if(searchFld[j].id.search('searchfield')&gt;=0){$(searchFld[j]).addClass('form-control').prop('placeholder', 'Search');}
        }     
      }
  };
   
/*function totalJurisdictionsSum() {
  
  
    alert("HEEEELO");
  
}*/
var incSelList=document.getElementById('webeocIncident');
var loopAllInputs=document.getElementsByTagName('input');
var incVar;

//startOf: filter by incident process method
var filterByIncident={
 clearIncidentListSelection: function() {
   var incSearch=document.getElementById('incidentNameSearchSPAN').getElementsByTagName('input');
   for(var i=0; i &lt; incSearch.length; i++) {
     if(incSearch[i].value==='') {
       window.parent.window.parent.selectedIncident='';
     } else {
       $('#webeocIncident').val(window.parent.window.parent.selectedIncident);
     //  console.log(window.parent.window.parent.selectedIncident);
     }      
   }
 },
 searchFieldVariableSet: function() {
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].id &amp;&amp; loopAllInputs[i].getAttribute('id').indexOf('searchfield')&gt; -1){incVar=loopAllInputs[i];}
   }
 },
 incidentListOptionsBuild: function() {
   <for-each select="/data/allincidentlist/incidents">
     incSelList.options[incSelList.options.length]=new Option('<value-of select="@name" />','<value-of select="@name" />',false,false);
   </for-each>
   incSelList.options.selectedIndex=0;
 },
 incidentListActionOnChange: function() {
   incSelList.options[incSelList.options.length]=new Option('','',false,false);
   incVar.value=incSelList.options[incSelList.options.selectedIndex].text;
   for(var i=0; i &lt; loopAllInputs.length; i++) {
     if(loopAllInputs[i].getAttribute('value')=='Search'){$(loopAllInputs[i]).click();}
   }
   window.parent.window.parent.selectedIncident=(incSelList.options[incSelList.options.selectedIndex]).text;
 }
};

$(document).ready(function(){
    
    dsoPageHelper.styleSearchField();
    //var countyFilter=document.getElementById('countyFilter').getElementsByTagName('select')[0];
    //$(countyFilter).addClass('form-control');
    filterByIncident.incidentListOptionsBuild();
    filterByIncident.searchFieldVariableSet();
    filterByIncident.clearIncidentListSelection();
    populateMasterData();
    popluateTable();
    //filterByIncident.incidentListActionOnChange();
   /* var ddcFilter=document.getElementById('ddcFilter').getElementsByTagName('select')[0];
    $(ddcFilter).addClass('form-control');*/
  });
  </script></html></view><datalinktemplates><DataLinkTemplate name="Email links" srcview="50D89D3F-0019-47D4-A202-1CB3571DFDAD" destview="97605444-71AA-4228-8FD7-2C6CA223BCFF" srcviewname="Input (DO NOT ASSIGN)" destviewname="Email via SMTP (DO NOT ASSIGN)" srcboardname="DEV - DSO 13" destboardname="TWIRP (L) - Email (DO NOT ASSIGN)" bidirectional="0"><FieldMappings><FieldMapping srcfield="emailTo" destfield="emailTo"/><FieldMapping srcfield="emailSubject" destfield="emailSubject"/><FieldMapping srcfield="emailBody" destfield="emailBody"/></FieldMappings></DataLinkTemplate></datalinktemplates></board>